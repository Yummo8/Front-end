// modules are defined as an array
// [ module function, map of requires ]
//
// map of requires is short require name -> numeric require
//
// anything defined in a previous bundle is accessed via the
// orig method which is the require for previous bundles

(function (modules, entry, mainEntry, parcelRequireName, globalName) {
  /* eslint-disable no-undef */
  var globalObject =
    typeof globalThis !== 'undefined'
      ? globalThis
      : typeof self !== 'undefined'
      ? self
      : typeof window !== 'undefined'
      ? window
      : typeof global !== 'undefined'
      ? global
      : {};
  /* eslint-enable no-undef */

  // Save the require from previous bundle to this closure if any
  var previousRequire =
    typeof globalObject[parcelRequireName] === 'function' &&
    globalObject[parcelRequireName];

  var cache = previousRequire.cache || {};
  // Do not use `require` to prevent Webpack from trying to bundle this call
  var nodeRequire =
    typeof module !== 'undefined' &&
    typeof module.require === 'function' &&
    module.require.bind(module);

  function newRequire(name, jumped) {
    if (!cache[name]) {
      if (!modules[name]) {
        // if we cannot find the module within our internal map or
        // cache jump to the current global require ie. the last bundle
        // that was added to the page.
        var currentRequire =
          typeof globalObject[parcelRequireName] === 'function' &&
          globalObject[parcelRequireName];
        if (!jumped && currentRequire) {
          return currentRequire(name, true);
        }

        // If there are other bundles on this page the require from the
        // previous one is saved to 'previousRequire'. Repeat this as
        // many times as there are bundles until the module is found or
        // we exhaust the require chain.
        if (previousRequire) {
          return previousRequire(name, true);
        }

        // Try the node require function if it exists.
        if (nodeRequire && typeof name === 'string') {
          return nodeRequire(name);
        }

        var err = new Error("Cannot find module '" + name + "'");
        err.code = 'MODULE_NOT_FOUND';
        throw err;
      }

      localRequire.resolve = resolve;
      localRequire.cache = {};

      var module = (cache[name] = new newRequire.Module(name));

      modules[name][0].call(
        module.exports,
        localRequire,
        module,
        module.exports,
        this
      );
    }

    return cache[name].exports;

    function localRequire(x) {
      var res = localRequire.resolve(x);
      return res === false ? {} : newRequire(res);
    }

    function resolve(x) {
      var id = modules[name][1][x];
      return id != null ? id : x;
    }
  }

  function Module(moduleName) {
    this.id = moduleName;
    this.bundle = newRequire;
    this.exports = {};
  }

  newRequire.isParcelRequire = true;
  newRequire.Module = Module;
  newRequire.modules = modules;
  newRequire.cache = cache;
  newRequire.parent = previousRequire;
  newRequire.register = function (id, exports) {
    modules[id] = [
      function (require, module) {
        module.exports = exports;
      },
      {},
    ];
  };

  Object.defineProperty(newRequire, 'root', {
    get: function () {
      return globalObject[parcelRequireName];
    },
  });

  globalObject[parcelRequireName] = newRequire;

  for (var i = 0; i < entry.length; i++) {
    newRequire(entry[i]);
  }

  if (mainEntry) {
    // Expose entry point to Node, AMD or browser globals
    // Based on https://github.com/ForbesLindesay/umd/blob/master/template.js
    var mainExports = newRequire(mainEntry);

    // CommonJS
    if (typeof exports === 'object' && typeof module !== 'undefined') {
      module.exports = mainExports;

      // RequireJS
    } else if (typeof define === 'function' && define.amd) {
      define(function () {
        return mainExports;
      });

      // <script>
    } else if (globalName) {
      this[globalName] = mainExports;
    }
  }
})({"kn9T2":[function(require,module,exports) {
var Refresh = require('react-refresh/runtime');
Refresh.injectIntoGlobalHook(window);
window.$RefreshReg$ = function() {};
window.$RefreshSig$ = function() {
    return function(type) {
        return type;
    };
};

},{"react-refresh/runtime":"786KC"}],"1A0F0":[function(require,module,exports) {
"use strict";
var HMR_HOST = null;
var HMR_PORT = null;
var HMR_SECURE = false;
var HMR_ENV_HASH = "d6ea1d42532a7575";
module.bundle.HMR_BUNDLE_ID = "4379f493f0bac714";
function _toConsumableArray(arr) {
    return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();
}
function _nonIterableSpread() {
    throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _iterableToArray(iter) {
    if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter);
}
function _arrayWithoutHoles(arr) {
    if (Array.isArray(arr)) return _arrayLikeToArray(arr);
}
function _createForOfIteratorHelper(o, allowArrayLike) {
    var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"];
    if (!it) {
        if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") {
            if (it) o = it;
            var i = 0;
            var F = function F() {};
            return {
                s: F,
                n: function n() {
                    if (i >= o.length) return {
                        done: true
                    };
                    return {
                        done: false,
                        value: o[i++]
                    };
                },
                e: function e(_e) {
                    throw _e;
                },
                f: F
            };
        }
        throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }
    var normalCompletion = true, didErr = false, err;
    return {
        s: function s() {
            it = it.call(o);
        },
        n: function n() {
            var step = it.next();
            normalCompletion = step.done;
            return step;
        },
        e: function e(_e2) {
            didErr = true;
            err = _e2;
        },
        f: function f() {
            try {
                if (!normalCompletion && it.return != null) it.return();
            } finally{
                if (didErr) throw err;
            }
        }
    };
}
function _unsupportedIterableToArray(o, minLen) {
    if (!o) return;
    if (typeof o === "string") return _arrayLikeToArray(o, minLen);
    var n = Object.prototype.toString.call(o).slice(8, -1);
    if (n === "Object" && o.constructor) n = o.constructor.name;
    if (n === "Map" || n === "Set") return Array.from(o);
    if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);
}
function _arrayLikeToArray(arr, len) {
    if (len == null || len > arr.length) len = arr.length;
    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];
    return arr2;
}
/* global HMR_HOST, HMR_PORT, HMR_ENV_HASH, HMR_SECURE, chrome, browser */ /*::
import type {
  HMRAsset,
  HMRMessage,
} from '@parcel/reporter-dev-server/src/HMRServer.js';
interface ParcelRequire {
  (string): mixed;
  cache: {|[string]: ParcelModule|};
  hotData: mixed;
  Module: any;
  parent: ?ParcelRequire;
  isParcelRequire: true;
  modules: {|[string]: [Function, {|[string]: string|}]|};
  HMR_BUNDLE_ID: string;
  root: ParcelRequire;
}
interface ParcelModule {
  hot: {|
    data: mixed,
    accept(cb: (Function) => void): void,
    dispose(cb: (mixed) => void): void,
    // accept(deps: Array<string> | string, cb: (Function) => void): void,
    // decline(): void,
    _acceptCallbacks: Array<(Function) => void>,
    _disposeCallbacks: Array<(mixed) => void>,
  |};
}
interface ExtensionContext {
  runtime: {|
    reload(): void,
  |};
}
declare var module: {bundle: ParcelRequire, ...};
declare var HMR_HOST: string;
declare var HMR_PORT: string;
declare var HMR_ENV_HASH: string;
declare var HMR_SECURE: boolean;
declare var chrome: ExtensionContext;
declare var browser: ExtensionContext;
*/ var OVERLAY_ID = '__parcel__error__overlay__';
var OldModule = module.bundle.Module;
function Module(moduleName) {
    OldModule.call(this, moduleName);
    this.hot = {
        data: module.bundle.hotData,
        _acceptCallbacks: [],
        _disposeCallbacks: [],
        accept: function accept(fn) {
            this._acceptCallbacks.push(fn || function() {});
        },
        dispose: function dispose(fn) {
            this._disposeCallbacks.push(fn);
        }
    };
    module.bundle.hotData = undefined;
}
module.bundle.Module = Module;
var checkedAssets, acceptedAssets, assetsToAccept /*: Array<[ParcelRequire, string]> */ ;
function getHostname() {
    return HMR_HOST || (location.protocol.indexOf('http') === 0 ? location.hostname : 'localhost');
}
function getPort() {
    return HMR_PORT || location.port;
} // eslint-disable-next-line no-redeclare
var parent = module.bundle.parent;
if ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {
    var hostname = getHostname();
    var port = getPort();
    var protocol = HMR_SECURE || location.protocol == 'https:' && !/localhost|127.0.0.1|0.0.0.0/.test(hostname) ? 'wss' : 'ws';
    var ws = new WebSocket(protocol + '://' + hostname + (port ? ':' + port : '') + '/'); // $FlowFixMe
    ws.onmessage = function(event) {
        checkedAssets = {} /*: {|[string]: boolean|} */ ;
        acceptedAssets = {} /*: {|[string]: boolean|} */ ;
        assetsToAccept = [];
        var data = JSON.parse(event.data);
        if (data.type === 'update') {
            // Remove error overlay if there is one
            if (typeof document !== 'undefined') removeErrorOverlay();
            var assets = data.assets.filter(function(asset) {
                return asset.envHash === HMR_ENV_HASH;
            }); // Handle HMR Update
            var handled = assets.every(function(asset) {
                return asset.type === 'css' || asset.type === 'js' && hmrAcceptCheck(module.bundle.root, asset.id, asset.depsByBundle);
            });
            if (handled) {
                console.clear();
                assets.forEach(function(asset) {
                    hmrApply(module.bundle.root, asset);
                });
                for(var i = 0; i < assetsToAccept.length; i++){
                    var id = assetsToAccept[i][1];
                    if (!acceptedAssets[id]) hmrAcceptRun(assetsToAccept[i][0], id);
                }
            } else if ('reload' in location) location.reload();
            else {
                // Web extension context
                var ext = typeof chrome === 'undefined' ? typeof browser === 'undefined' ? null : browser : chrome;
                if (ext && ext.runtime && ext.runtime.reload) ext.runtime.reload();
            }
        }
        if (data.type === 'error') {
            // Log parcel errors to console
            var _iterator = _createForOfIteratorHelper(data.diagnostics.ansi), _step;
            try {
                for(_iterator.s(); !(_step = _iterator.n()).done;){
                    var ansiDiagnostic = _step.value;
                    var stack = ansiDiagnostic.codeframe ? ansiDiagnostic.codeframe : ansiDiagnostic.stack;
                    console.error('🚨 [parcel]: ' + ansiDiagnostic.message + '\n' + stack + '\n\n' + ansiDiagnostic.hints.join('\n'));
                }
            } catch (err) {
                _iterator.e(err);
            } finally{
                _iterator.f();
            }
            if (typeof document !== 'undefined') {
                // Render the fancy html overlay
                removeErrorOverlay();
                var overlay = createErrorOverlay(data.diagnostics.html); // $FlowFixMe
                document.body.appendChild(overlay);
            }
        }
    };
    ws.onerror = function(e) {
        console.error(e.message);
    };
    ws.onclose = function() {
        console.warn('[parcel] 🚨 Connection to the HMR server was lost');
    };
}
function removeErrorOverlay() {
    var overlay = document.getElementById(OVERLAY_ID);
    if (overlay) {
        overlay.remove();
        console.log('[parcel] ✨ Error resolved');
    }
}
function createErrorOverlay(diagnostics) {
    var overlay = document.createElement('div');
    overlay.id = OVERLAY_ID;
    var errorHTML = '<div style="background: black; opacity: 0.85; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; font-family: Menlo, Consolas, monospace; z-index: 9999;">';
    var _iterator2 = _createForOfIteratorHelper(diagnostics), _step2;
    try {
        for(_iterator2.s(); !(_step2 = _iterator2.n()).done;){
            var diagnostic = _step2.value;
            var stack = diagnostic.codeframe ? diagnostic.codeframe : diagnostic.stack;
            errorHTML += "\n      <div>\n        <div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">\n          \uD83D\uDEA8 ".concat(diagnostic.message, "\n        </div>\n        <pre>").concat(stack, "</pre>\n        <div>\n          ").concat(diagnostic.hints.map(function(hint) {
                return '<div>💡 ' + hint + '</div>';
            }).join(''), "\n        </div>\n        ").concat(diagnostic.documentation ? "<div>\uD83D\uDCDD <a style=\"color: violet\" href=\"".concat(diagnostic.documentation, "\" target=\"_blank\">Learn more</a></div>") : '', "\n      </div>\n    ");
        }
    } catch (err) {
        _iterator2.e(err);
    } finally{
        _iterator2.f();
    }
    errorHTML += '</div>';
    overlay.innerHTML = errorHTML;
    return overlay;
}
function getParents(bundle, id) /*: Array<[ParcelRequire, string]> */ {
    var modules = bundle.modules;
    if (!modules) return [];
    var parents = [];
    var k, d, dep;
    for(k in modules)for(d in modules[k][1]){
        dep = modules[k][1][d];
        if (dep === id || Array.isArray(dep) && dep[dep.length - 1] === id) parents.push([
            bundle,
            k
        ]);
    }
    if (bundle.parent) parents = parents.concat(getParents(bundle.parent, id));
    return parents;
}
function updateLink(link) {
    var newLink = link.cloneNode();
    newLink.onload = function() {
        if (link.parentNode !== null) // $FlowFixMe
        link.parentNode.removeChild(link);
    };
    newLink.setAttribute('href', link.getAttribute('href').split('?')[0] + '?' + Date.now()); // $FlowFixMe
    link.parentNode.insertBefore(newLink, link.nextSibling);
}
var cssTimeout = null;
function reloadCSS() {
    if (cssTimeout) return;
    cssTimeout = setTimeout(function() {
        var links = document.querySelectorAll('link[rel="stylesheet"]');
        for(var i = 0; i < links.length; i++){
            // $FlowFixMe[incompatible-type]
            var href = links[i].getAttribute('href');
            var hostname = getHostname();
            var servedFromHMRServer = hostname === 'localhost' ? new RegExp('^(https?:\\/\\/(0.0.0.0|127.0.0.1)|localhost):' + getPort()).test(href) : href.indexOf(hostname + ':' + getPort());
            var absolute = /^https?:\/\//i.test(href) && href.indexOf(location.origin) !== 0 && !servedFromHMRServer;
            if (!absolute) updateLink(links[i]);
        }
        cssTimeout = null;
    }, 50);
}
function hmrApply(bundle, asset) {
    var modules = bundle.modules;
    if (!modules) return;
    if (asset.type === 'css') reloadCSS();
    else if (asset.type === 'js') {
        var deps = asset.depsByBundle[bundle.HMR_BUNDLE_ID];
        if (deps) {
            if (modules[asset.id]) {
                // Remove dependencies that are removed and will become orphaned.
                // This is necessary so that if the asset is added back again, the cache is gone, and we prevent a full page reload.
                var oldDeps = modules[asset.id][1];
                for(var dep in oldDeps)if (!deps[dep] || deps[dep] !== oldDeps[dep]) {
                    var id = oldDeps[dep];
                    var parents = getParents(module.bundle.root, id);
                    if (parents.length === 1) hmrDelete(module.bundle.root, id);
                }
            }
            var fn = new Function('require', 'module', 'exports', asset.output);
            modules[asset.id] = [
                fn,
                deps
            ];
        } else if (bundle.parent) hmrApply(bundle.parent, asset);
    }
}
function hmrDelete(bundle, id1) {
    var modules = bundle.modules;
    if (!modules) return;
    if (modules[id1]) {
        // Collect dependencies that will become orphaned when this module is deleted.
        var deps = modules[id1][1];
        var orphans = [];
        for(var dep in deps){
            var parents = getParents(module.bundle.root, deps[dep]);
            if (parents.length === 1) orphans.push(deps[dep]);
        } // Delete the module. This must be done before deleting dependencies in case of circular dependencies.
        delete modules[id1];
        delete bundle.cache[id1]; // Now delete the orphans.
        orphans.forEach(function(id) {
            hmrDelete(module.bundle.root, id);
        });
    } else if (bundle.parent) hmrDelete(bundle.parent, id1);
}
function hmrAcceptCheck(bundle, id, depsByBundle) {
    if (hmrAcceptCheckOne(bundle, id, depsByBundle)) return true;
     // Traverse parents breadth first. All possible ancestries must accept the HMR update, or we'll reload.
    var parents = getParents(module.bundle.root, id);
    var accepted = false;
    while(parents.length > 0){
        var v = parents.shift();
        var a = hmrAcceptCheckOne(v[0], v[1], null);
        if (a) // If this parent accepts, stop traversing upward, but still consider siblings.
        accepted = true;
        else {
            // Otherwise, queue the parents in the next level upward.
            var p = getParents(module.bundle.root, v[1]);
            if (p.length === 0) {
                // If there are no parents, then we've reached an entry without accepting. Reload.
                accepted = false;
                break;
            }
            parents.push.apply(parents, _toConsumableArray(p));
        }
    }
    return accepted;
}
function hmrAcceptCheckOne(bundle, id, depsByBundle) {
    var modules = bundle.modules;
    if (!modules) return;
    if (depsByBundle && !depsByBundle[bundle.HMR_BUNDLE_ID]) {
        // If we reached the root bundle without finding where the asset should go,
        // there's nothing to do. Mark as "accepted" so we don't reload the page.
        if (!bundle.parent) return true;
        return hmrAcceptCheck(bundle.parent, id, depsByBundle);
    }
    if (checkedAssets[id]) return true;
    checkedAssets[id] = true;
    var cached = bundle.cache[id];
    assetsToAccept.push([
        bundle,
        id
    ]);
    if (!cached || cached.hot && cached.hot._acceptCallbacks.length) return true;
}
function hmrAcceptRun(bundle, id) {
    var cached = bundle.cache[id];
    bundle.hotData = {};
    if (cached && cached.hot) cached.hot.data = bundle.hotData;
    if (cached && cached.hot && cached.hot._disposeCallbacks.length) cached.hot._disposeCallbacks.forEach(function(cb) {
        cb(bundle.hotData);
    });
    delete bundle.cache[id];
    bundle(id);
    cached = bundle.cache[id];
    if (cached && cached.hot && cached.hot._acceptCallbacks.length) cached.hot._acceptCallbacks.forEach(function(cb) {
        var assetsToAlsoAccept = cb(function() {
            return getParents(module.bundle.root, id);
        });
        if (assetsToAlsoAccept && assetsToAccept.length) // $FlowFixMe[method-unbinding]
        assetsToAccept.push.apply(assetsToAccept, assetsToAlsoAccept);
    });
    acceptedAssets[id] = true;
}

},{}],"lt4Ct":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>_bondDefault.default
);
var _bond = require("./Bond");
var _bondDefault = parcelHelpers.interopDefault(_bond);

},{"./Bond":"itT7R","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"itT7R":[function(require,module,exports) {
var $parcel$ReactRefreshHelpers$0b5d = require("@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
$parcel$ReactRefreshHelpers$0b5d.prelude(module);

try {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _page = require("../../components/Page");
var _pageDefault = parcelHelpers.interopDefault(_page);
var _styledComponents = require("styled-components");
var _reactRouterDom = require("react-router-dom");
var _useWallet = require("use-wallet");
var _styledComponentsDefault = parcelHelpers.interopDefault(_styledComponents);
var _useBondStats = require("../../hooks/useBondStats");
var _useBondStatsDefault = parcelHelpers.interopDefault(_useBondStats);
var _useGrapeStats = require("../../hooks/useGrapeStats");
var _useGrapeStatsDefault = parcelHelpers.interopDefault(_useGrapeStats);
var _useGrapeFinance = require("../../hooks/useGrapeFinance");
var _useGrapeFinanceDefault = parcelHelpers.interopDefault(_useGrapeFinance);
var _useCashPriceInLastTWAP = require("../../hooks/useCashPriceInLastTWAP");
var _useCashPriceInLastTWAPDefault = parcelHelpers.interopDefault(_useCashPriceInLastTWAP);
var _hooks = require("../../state/transactions/hooks");
var _useBondsPurchasable = require("../../hooks/useBondsPurchasable");
var _useBondsPurchasableDefault = parcelHelpers.interopDefault(_useBondsPurchasable);
var _backgroundJpg = require("../../assets/img/background.jpg");
var _backgroundJpgDefault = parcelHelpers.interopDefault(_backgroundJpg);
var _core = require("@material-ui/core");
var _styles = require("@material-ui/core/styles");
var _s = $RefreshSig$();
const BackgroundImage = _styledComponents.createGlobalStyle`
  body {
    background: url(${_backgroundJpgDefault.default}) repeat !important;
    background-size: cover !important;
    background-color: #171923;
  }
`;
_c = BackgroundImage;
const useStyles = _styles.makeStyles((theme)=>({
        footer: {
            position: 'absolute',
            bottom: '0',
            paddingTop: '15px',
            paddingBottom: '15px',
            width: '100%',
            color: '#fff',
            backgroundColor: 'rgba(0,0,0,0)',
            textAlign: 'center',
            height: '1.3rem',
            fontFamily: 'superstar',
            [theme.breakpoints.down('xs')]: {
                display: 'none'
            }
        },
        link: {
            width: '24px',
            height: '24px',
            display: 'inline',
            marginLeft: '20px'
        },
        img: {
            width: '24px',
            height: '24px'
        }
    })
);
const Bond = ()=>{
    _s();
    const { path  } = _reactRouterDom.useRouteMatch();
    const { account  } = _useWallet.useWallet();
    const classes = useStyles();
    const grapeFinance = _useGrapeFinanceDefault.default();
    const addTransaction = _hooks.useTransactionAdder();
    const bondStat = _useBondStatsDefault.default();
    const grapeStat = _useGrapeStatsDefault.default();
    const cashPrice = _useCashPriceInLastTWAPDefault.default();
    const bondsPurchasable = _useBondsPurchasableDefault.default();
    //const bondBalance = useTokenBalance(grapeFinance?.GBOND);
    //const scalingFactor = useMemo(() => (cashPrice ? Number(cashPrice) : null), [cashPrice]);
    return /*#__PURE__*/ _reactDefault.default.createElement(_reactRouterDom.Switch, {
        __source: {
            fileName: "src/views/Roadmap/Bond.tsx",
            lineNumber: 81,
            columnNumber: 5
        },
        __self: undefined
    }, /*#__PURE__*/ _reactDefault.default.createElement(_pageDefault.default, {
        __source: {
            fileName: "src/views/Roadmap/Bond.tsx",
            lineNumber: 82,
            columnNumber: 7
        },
        __self: undefined
    }, /*#__PURE__*/ _reactDefault.default.createElement(BackgroundImage, {
        __source: {
            fileName: "src/views/Roadmap/Bond.tsx",
            lineNumber: 83,
            columnNumber: 9
        },
        __self: undefined
    }), /*#__PURE__*/ _reactDefault.default.createElement(_core.Container, {
        __source: {
            fileName: "src/views/Roadmap/Bond.tsx",
            lineNumber: 84,
            columnNumber: 9
        },
        __self: undefined
    }, /*#__PURE__*/ _reactDefault.default.createElement(_core.Grid, {
        item: true,
        xs: 12,
        md: 12,
        lg: 12,
        __source: {
            fileName: "src/views/Roadmap/Bond.tsx",
            lineNumber: 85,
            columnNumber: 11
        },
        __self: undefined
    }, /*#__PURE__*/ _reactDefault.default.createElement("h2", {
        style: {
            fontSize: '80px',
            textAlign: 'center'
        },
        __source: {
            fileName: "src/views/Roadmap/Bond.tsx",
            lineNumber: 86,
            columnNumber: 13
        },
        __self: undefined
    }, "ROADMAP"), /*#__PURE__*/ _reactDefault.default.createElement("p", {
        style: {
            fontSize: '20px',
            textAlign: 'center',
            color: '#fff'
        },
        __source: {
            fileName: "src/views/Roadmap/Bond.tsx",
            lineNumber: 88,
            columnNumber: 13
        },
        __self: undefined
    }, "It's important we build lasting utility into Grape & Wine in order to create a sustainable long term project, to do so we will be building out the platform's functionality into other areas of DeFi. As Grape is pegged to MIM it allows us to use it in ways similar to how a stablecoin would such as for payments, borrowing & lending. ", /*#__PURE__*/ _reactDefault.default.createElement("br", {
        __source: {
            fileName: "src/views/Roadmap/Bond.tsx",
            lineNumber: 92,
            columnNumber: 36
        },
        __self: undefined
    }), /*#__PURE__*/ _reactDefault.default.createElement("br", {
        __source: {
            fileName: "src/views/Roadmap/Bond.tsx",
            lineNumber: 93,
            columnNumber: 15
        },
        __self: undefined
    }), "We're first & foremost a community led project & very receptive to suggestions as well as changes should the community see it as the best course of action. Below is where we'll be headed in the next year.", ' '), /*#__PURE__*/ _reactDefault.default.createElement("h2", {
        style: {
            textAlign: 'center',
            marginTop: '60px'
        },
        __source: {
            fileName: "src/views/Roadmap/Bond.tsx",
            lineNumber: 97,
            columnNumber: 13
        },
        __self: undefined
    }, "Q1"), /*#__PURE__*/ _reactDefault.default.createElement("p", {
        style: {
            fontSize: '20px',
            textAlign: 'center',
            color: '#fff'
        },
        __source: {
            fileName: "src/views/Roadmap/Bond.tsx",
            lineNumber: 98,
            columnNumber: 13
        },
        __self: undefined
    }, "- Grape & Wine Airdrop for dedicated supporters \u2705"), /*#__PURE__*/ _reactDefault.default.createElement("p", {
        style: {
            fontSize: '20px',
            textAlign: 'center',
            color: '#fff'
        },
        __source: {
            fileName: "src/views/Roadmap/Bond.tsx",
            lineNumber: 101,
            columnNumber: 13
        },
        __self: undefined
    }, "- Renounce ownership of Grape contract \u2705"), /*#__PURE__*/ _reactDefault.default.createElement("p", {
        style: {
            fontSize: '20px',
            textAlign: 'center',
            color: '#fff'
        },
        __source: {
            fileName: "src/views/Roadmap/Bond.tsx",
            lineNumber: 104,
            columnNumber: 13
        },
        __self: undefined
    }, "- Start marketing blast & influencer partnerships \u2705"), /*#__PURE__*/ _reactDefault.default.createElement("p", {
        style: {
            fontSize: '20px',
            textAlign: 'center',
            color: '#fff'
        },
        __source: {
            fileName: "src/views/Roadmap/Bond.tsx",
            lineNumber: 107,
            columnNumber: 13
        },
        __self: undefined
    }, "- Grape staking for Wine rewards \u2705"), /*#__PURE__*/ _reactDefault.default.createElement("p", {
        style: {
            fontSize: '20px',
            textAlign: 'center',
            color: '#fff'
        },
        __source: {
            fileName: "src/views/Roadmap/Bond.tsx",
            lineNumber: 108,
            columnNumber: 13
        },
        __self: undefined
    }, "- More autocompounder providers \u2705"), /*#__PURE__*/ _reactDefault.default.createElement("p", {
        style: {
            fontSize: '20px',
            textAlign: 'center',
            color: '#fff'
        },
        __source: {
            fileName: "src/views/Roadmap/Bond.tsx",
            lineNumber: 109,
            columnNumber: 13
        },
        __self: undefined
    }, "- Implement Zap contract for LPs \u2705"), /*#__PURE__*/ _reactDefault.default.createElement("p", {
        style: {
            fontSize: '20px',
            textAlign: 'center',
            color: '#fff'
        },
        __source: {
            fileName: "src/views/Roadmap/Bond.tsx",
            lineNumber: 110,
            columnNumber: 13
        },
        __self: undefined
    }, "- Strategy guides implemented on site \u2705"), /*#__PURE__*/ _reactDefault.default.createElement("p", {
        style: {
            fontSize: '20px',
            textAlign: 'center',
            color: '#fff'
        },
        __source: {
            fileName: "src/views/Roadmap/Bond.tsx",
            lineNumber: 113,
            columnNumber: 13
        },
        __self: undefined
    }, "- User help guides in docs \u2705"), /*#__PURE__*/ _reactDefault.default.createElement("p", {
        style: {
            fontSize: '20px',
            textAlign: 'center',
            color: '#fff'
        },
        __source: {
            fileName: "src/views/Roadmap/Bond.tsx",
            lineNumber: 114,
            columnNumber: 13
        },
        __self: undefined
    }, "- Start weekly Grape burns from the DAO \u2705"), /*#__PURE__*/ _reactDefault.default.createElement("p", {
        style: {
            fontSize: '20px',
            textAlign: 'center',
            color: '#fff'
        },
        __source: {
            fileName: "src/views/Roadmap/Bond.tsx",
            lineNumber: 117,
            columnNumber: 13
        },
        __self: undefined
    }, "- Wine governance voting through snapshot \u2705"), /*#__PURE__*/ _reactDefault.default.createElement("p", {
        style: {
            fontSize: '20px',
            textAlign: 'center',
            color: '#fff'
        },
        __source: {
            fileName: "src/views/Roadmap/Bond.tsx",
            lineNumber: 120,
            columnNumber: 13
        },
        __self: undefined
    }, "- Integrate weekly Wine raffle on site \u2705"), /*#__PURE__*/ _reactDefault.default.createElement("p", {
        style: {
            fontSize: '20px',
            textAlign: 'center',
            color: '#fff'
        },
        __source: {
            fileName: "src/views/Roadmap/Bond.tsx",
            lineNumber: 123,
            columnNumber: 13
        },
        __self: undefined
    }, "- NFT drop for LPs & WINE hodlers providing exclusive access to new developments \u2705"), /*#__PURE__*/ _reactDefault.default.createElement("p", {
        style: {
            fontSize: '20px',
            textAlign: 'center',
            color: '#fff'
        },
        __source: {
            fileName: "src/views/Roadmap/Bond.tsx",
            lineNumber: 126,
            columnNumber: 13
        },
        __self: undefined
    }, "- Launchpad & partnerships with projects to give exclusive benefits for WINE holders \u2705"), /*#__PURE__*/ _reactDefault.default.createElement("h2", {
        style: {
            textAlign: 'center',
            marginTop: '60px'
        },
        __source: {
            fileName: "src/views/Roadmap/Bond.tsx",
            lineNumber: 130,
            columnNumber: 13
        },
        __self: undefined
    }, "Q2"), /*#__PURE__*/ _reactDefault.default.createElement("p", {
        style: {
            fontSize: '20px',
            textAlign: 'center',
            color: '#fff'
        },
        __source: {
            fileName: "src/views/Roadmap/Bond.tsx",
            lineNumber: 131,
            columnNumber: 13
        },
        __self: undefined
    }, "- UI/UX website revamp"), /*#__PURE__*/ _reactDefault.default.createElement("p", {
        style: {
            fontSize: '20px',
            textAlign: 'center',
            color: '#fff'
        },
        __source: {
            fileName: "src/views/Roadmap/Bond.tsx",
            lineNumber: 132,
            columnNumber: 13
        },
        __self: undefined
    }, "- Chainlink integrations"), /*#__PURE__*/ _reactDefault.default.createElement("p", {
        style: {
            fontSize: '20px',
            textAlign: 'center',
            color: '#fff'
        },
        __source: {
            fileName: "src/views/Roadmap/Bond.tsx",
            lineNumber: 133,
            columnNumber: 13
        },
        __self: undefined
    }, "- Implement bonding to secure protocol owned liquidity"), /*#__PURE__*/ _reactDefault.default.createElement("p", {
        style: {
            fontSize: '20px',
            textAlign: 'center',
            color: '#fff'
        },
        __source: {
            fileName: "src/views/Roadmap/Bond.tsx",
            lineNumber: 136,
            columnNumber: 13
        },
        __self: undefined
    }, "- Lending & borrowing of Grape & Wine on site"), /*#__PURE__*/ _reactDefault.default.createElement("p", {
        style: {
            fontSize: '20px',
            textAlign: 'center',
            color: '#fff'
        },
        __source: {
            fileName: "src/views/Roadmap/Bond.tsx",
            lineNumber: 139,
            columnNumber: 13
        },
        __self: undefined
    }, "- Auto repaying loans using yielding strategies"), /*#__PURE__*/ _reactDefault.default.createElement("p", {
        style: {
            fontSize: '20px',
            textAlign: 'center',
            color: '#fff'
        },
        __source: {
            fileName: "src/views/Roadmap/Bond.tsx",
            lineNumber: 142,
            columnNumber: 13
        },
        __self: undefined
    }, "- Leveraged positions"), /*#__PURE__*/ _reactDefault.default.createElement("p", {
        style: {
            fontSize: '20px',
            textAlign: 'center',
            color: '#fff'
        },
        __source: {
            fileName: "src/views/Roadmap/Bond.tsx",
            lineNumber: 143,
            columnNumber: 13
        },
        __self: undefined
    }, "- NFT based p2e game & staking"), /*#__PURE__*/ _reactDefault.default.createElement("h2", {
        style: {
            textAlign: 'center',
            marginTop: '60px'
        },
        __source: {
            fileName: "src/views/Roadmap/Bond.tsx",
            lineNumber: 145,
            columnNumber: 13
        },
        __self: undefined
    }, "Q3"), /*#__PURE__*/ _reactDefault.default.createElement("p", {
        style: {
            fontSize: '20px',
            textAlign: 'center',
            color: '#fff'
        },
        __source: {
            fileName: "src/views/Roadmap/Bond.tsx",
            lineNumber: 146,
            columnNumber: 13
        },
        __self: undefined
    }, "- Implement cross chain Grape liquidity"), /*#__PURE__*/ _reactDefault.default.createElement("p", {
        style: {
            fontSize: '20px',
            textAlign: 'center',
            color: '#fff'
        },
        __source: {
            fileName: "src/views/Roadmap/Bond.tsx",
            lineNumber: 149,
            columnNumber: 13
        },
        __self: undefined
    }, "- Integrate Grape on large lending platforms as a stablecoin"), /*#__PURE__*/ _reactDefault.default.createElement("p", {
        style: {
            fontSize: '20px',
            textAlign: 'center',
            color: '#fff'
        },
        __source: {
            fileName: "src/views/Roadmap/Bond.tsx",
            lineNumber: 152,
            columnNumber: 13
        },
        __self: undefined
    }, "- Yield strategies & aggregation of these integrations cross chain"), /*#__PURE__*/ _reactDefault.default.createElement("p", {
        style: {
            fontSize: '20px',
            textAlign: 'center',
            color: '#fff'
        },
        __source: {
            fileName: "src/views/Roadmap/Bond.tsx",
            lineNumber: 155,
            columnNumber: 13
        },
        __self: undefined
    }, "- Partner with various projects in the ecosystem to improve token utilization in farms, lending/borrowing & exchange"), /*#__PURE__*/ _reactDefault.default.createElement("h2", {
        style: {
            textAlign: 'center',
            marginTop: '60px'
        },
        __source: {
            fileName: "src/views/Roadmap/Bond.tsx",
            lineNumber: 160,
            columnNumber: 13
        },
        __self: undefined
    }, "Q4"), /*#__PURE__*/ _reactDefault.default.createElement("p", {
        style: {
            fontSize: '20px',
            textAlign: 'center',
            color: '#fff'
        },
        __source: {
            fileName: "src/views/Roadmap/Bond.tsx",
            lineNumber: 161,
            columnNumber: 13
        },
        __self: undefined
    }, "- Dedicated mobile app for Grape Finance"), /*#__PURE__*/ _reactDefault.default.createElement("p", {
        style: {
            fontSize: '20px',
            textAlign: 'center',
            color: '#fff'
        },
        __source: {
            fileName: "src/views/Roadmap/Bond.tsx",
            lineNumber: 164,
            columnNumber: 13
        },
        __self: undefined
    }, "- Partner with crypto payment gateways to accept Grape"), /*#__PURE__*/ _reactDefault.default.createElement("p", {
        style: {
            fontSize: '20px',
            textAlign: 'center',
            color: '#fff'
        },
        __source: {
            fileName: "src/views/Roadmap/Bond.tsx",
            lineNumber: 167,
            columnNumber: 13
        },
        __self: undefined
    }, "- Partner with card provider"), /*#__PURE__*/ _reactDefault.default.createElement("p", {
        style: {
            fontSize: '20px',
            textAlign: 'center',
            color: '#fff'
        },
        __source: {
            fileName: "src/views/Roadmap/Bond.tsx",
            lineNumber: 168,
            columnNumber: 13
        },
        __self: undefined
    }, "- Card/NFC payments using credit from collateral provided"), /*#__PURE__*/ _reactDefault.default.createElement("p", {
        style: {
            fontSize: '20px',
            textAlign: 'center',
            color: '#fff'
        },
        __source: {
            fileName: "src/views/Roadmap/Bond.tsx",
            lineNumber: 171,
            columnNumber: 13
        },
        __self: undefined
    }, "- Payment rewards & cashback system")))));
};
_s(Bond, "Tz8Tluxi9CZmykwjJK80fy9V6mg=", false, function() {
    return [
        _reactRouterDom.useRouteMatch,
        _useWallet.useWallet,
        useStyles,
        _useGrapeFinanceDefault.default,
        _hooks.useTransactionAdder,
        _useBondStatsDefault.default,
        _useGrapeStatsDefault.default,
        _useCashPriceInLastTWAPDefault.default,
        _useBondsPurchasableDefault.default
    ];
});
_c1 = Bond;
const StyledBond = _styledComponentsDefault.default.div`
  display: flex;
  @media (max-width: 768px) {
    width: 100%;
    flex-flow: column nowrap;
    align-items: center;
  }
`;
const StyledCardWrapper = _styledComponentsDefault.default.div`
  display: flex;
  flex: 1;
  flex-direction: column;
  @media (max-width: 768px) {
    width: 80%;
  }
`;
const StyledStatsWrapper = _styledComponentsDefault.default.div`
  display: flex;
  flex: 0.8;
  margin: 0 20px;
  flex-direction: column;

  @media (max-width: 768px) {
    width: 80%;
    margin: 16px 0;
  }
`;
exports.default = Bond;
var _c, _c1;
$RefreshReg$(_c, "BackgroundImage");
$RefreshReg$(_c1, "Bond");

  $parcel$ReactRefreshHelpers$0b5d.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
},{"react":"21dqq","../../components/Page":"igZUi","styled-components":"1U3k6","react-router-dom":"cHIiW","use-wallet":"7RAr5","../../hooks/useBondStats":"1Wevq","../../hooks/useGrapeStats":"9SfHf","../../hooks/useGrapeFinance":"i97FZ","../../hooks/useCashPriceInLastTWAP":"fs2OV","../../state/transactions/hooks":"998y6","../../hooks/useBondsPurchasable":"iwSdP","../../assets/img/background.jpg":"8PMyA","@material-ui/core":"kpEHc","@material-ui/core/styles":"gK9qy","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3","@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js":"km3Ru"}],"igZUi":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>_pageDefault.default
);
var _page = require("./Page");
var _pageDefault = parcelHelpers.interopDefault(_page);

},{"./Page":"8wilm","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"8wilm":[function(require,module,exports) {
var $parcel$ReactRefreshHelpers$5661 = require("@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
$parcel$ReactRefreshHelpers$5661.prelude(module);

try {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _core = require("@material-ui/core");
var _useEagerConnect = require("../../hooks/useEagerConnect");
var _useEagerConnectDefault = parcelHelpers.interopDefault(_useEagerConnect);
var _footer = require("../Footer");
var _footerDefault = parcelHelpers.interopDefault(_footer);
var _nav = require("../Nav");
var _navDefault = parcelHelpers.interopDefault(_nav);
var _s = $RefreshSig$();
const Page = ({ children  })=>{
    _s();
    _useEagerConnectDefault.default();
    return /*#__PURE__*/ _reactDefault.default.createElement("div", {
        style: {
            position: 'relative',
            minHeight: '100vh'
        },
        __source: {
            fileName: "src/components/Page/Page.tsx",
            lineNumber: 11,
            columnNumber: 5
        },
        __self: undefined
    }, /*#__PURE__*/ _reactDefault.default.createElement(_navDefault.default, {
        __source: {
            fileName: "src/components/Page/Page.tsx",
            lineNumber: 12,
            columnNumber: 7
        },
        __self: undefined
    }), /*#__PURE__*/ _reactDefault.default.createElement(_core.Container, {
        maxWidth: "lg",
        style: {
            paddingBottom: '5rem'
        },
        __source: {
            fileName: "src/components/Page/Page.tsx",
            lineNumber: 13,
            columnNumber: 7
        },
        __self: undefined
    }, children), /*#__PURE__*/ _reactDefault.default.createElement(_footerDefault.default, {
        __source: {
            fileName: "src/components/Page/Page.tsx",
            lineNumber: 16,
            columnNumber: 7
        },
        __self: undefined
    }));
};
_s(Page, "0U4jnhnvDnTKEB6FRoL4ne+pi3s=", false, function() {
    return [
        _useEagerConnectDefault.default
    ];
});
_c = Page;
exports.default = Page;
var _c;
$RefreshReg$(_c, "Page");

  $parcel$ReactRefreshHelpers$5661.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
},{"react":"21dqq","@material-ui/core":"kpEHc","../../hooks/useEagerConnect":"259Oi","../Footer":"cjGwk","../Nav":"kq9l5","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3","@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js":"km3Ru"}],"kpEHc":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "colors", ()=>_colors
);
parcelHelpers.export(exports, "Accordion", ()=>_accordionDefault.default
);
parcelHelpers.export(exports, "AccordionActions", ()=>_accordionActionsDefault.default
);
parcelHelpers.export(exports, "AccordionDetails", ()=>_accordionDetailsDefault.default
);
parcelHelpers.export(exports, "AccordionSummary", ()=>_accordionSummaryDefault.default
);
parcelHelpers.export(exports, "AppBar", ()=>_appBarDefault.default
);
parcelHelpers.export(exports, "Avatar", ()=>_avatarDefault.default
);
parcelHelpers.export(exports, "Backdrop", ()=>_backdropDefault.default
);
parcelHelpers.export(exports, "Badge", ()=>_badgeDefault.default
);
parcelHelpers.export(exports, "BottomNavigation", ()=>_bottomNavigationDefault.default
);
parcelHelpers.export(exports, "BottomNavigationAction", ()=>_bottomNavigationActionDefault.default
);
parcelHelpers.export(exports, "Box", ()=>_boxDefault.default
);
parcelHelpers.export(exports, "Breadcrumbs", ()=>_breadcrumbsDefault.default
);
parcelHelpers.export(exports, "Button", ()=>_buttonDefault.default
);
parcelHelpers.export(exports, "ButtonBase", ()=>_buttonBaseDefault.default
);
parcelHelpers.export(exports, "ButtonGroup", ()=>_buttonGroupDefault.default
);
parcelHelpers.export(exports, "Card", ()=>_cardDefault.default
);
parcelHelpers.export(exports, "CardActionArea", ()=>_cardActionAreaDefault.default
);
parcelHelpers.export(exports, "CardActions", ()=>_cardActionsDefault.default
);
parcelHelpers.export(exports, "CardContent", ()=>_cardContentDefault.default
);
parcelHelpers.export(exports, "CardHeader", ()=>_cardHeaderDefault.default
);
parcelHelpers.export(exports, "CardMedia", ()=>_cardMediaDefault.default
);
parcelHelpers.export(exports, "Checkbox", ()=>_checkboxDefault.default
);
parcelHelpers.export(exports, "Chip", ()=>_chipDefault.default
);
parcelHelpers.export(exports, "CircularProgress", ()=>_circularProgressDefault.default
);
parcelHelpers.export(exports, "ClickAwayListener", ()=>_clickAwayListenerDefault.default
);
parcelHelpers.export(exports, "Collapse", ()=>_collapseDefault.default
);
parcelHelpers.export(exports, "Container", ()=>_containerDefault.default
);
parcelHelpers.export(exports, "CssBaseline", ()=>_cssBaselineDefault.default
);
parcelHelpers.export(exports, "Dialog", ()=>_dialogDefault.default
);
parcelHelpers.export(exports, "DialogActions", ()=>_dialogActionsDefault.default
);
parcelHelpers.export(exports, "DialogContent", ()=>_dialogContentDefault.default
);
parcelHelpers.export(exports, "DialogContentText", ()=>_dialogContentTextDefault.default
);
parcelHelpers.export(exports, "DialogTitle", ()=>_dialogTitleDefault.default
);
parcelHelpers.export(exports, "Divider", ()=>_dividerDefault.default
);
parcelHelpers.export(exports, "Drawer", ()=>_drawerDefault.default
);
parcelHelpers.export(exports, "ExpansionPanel", ()=>_expansionPanelDefault.default
);
parcelHelpers.export(exports, "ExpansionPanelActions", ()=>_expansionPanelActionsDefault.default
);
parcelHelpers.export(exports, "ExpansionPanelDetails", ()=>_expansionPanelDetailsDefault.default
);
parcelHelpers.export(exports, "ExpansionPanelSummary", ()=>_expansionPanelSummaryDefault.default
);
parcelHelpers.export(exports, "Fab", ()=>_fabDefault.default
);
parcelHelpers.export(exports, "Fade", ()=>_fadeDefault.default
);
parcelHelpers.export(exports, "FilledInput", ()=>_filledInputDefault.default
);
parcelHelpers.export(exports, "FormControl", ()=>_formControlDefault.default
);
parcelHelpers.export(exports, "FormControlLabel", ()=>_formControlLabelDefault.default
);
parcelHelpers.export(exports, "FormGroup", ()=>_formGroupDefault.default
);
parcelHelpers.export(exports, "FormHelperText", ()=>_formHelperTextDefault.default
);
parcelHelpers.export(exports, "FormLabel", ()=>_formLabelDefault.default
);
parcelHelpers.export(exports, "Grid", ()=>_gridDefault.default
);
parcelHelpers.export(exports, "GridList", ()=>_gridListDefault.default
);
parcelHelpers.export(exports, "GridListTile", ()=>_gridListTileDefault.default
);
parcelHelpers.export(exports, "GridListTileBar", ()=>_gridListTileBarDefault.default
);
parcelHelpers.export(exports, "Grow", ()=>_growDefault.default
);
parcelHelpers.export(exports, "Hidden", ()=>_hiddenDefault.default
);
parcelHelpers.export(exports, "Icon", ()=>_iconDefault.default
);
parcelHelpers.export(exports, "IconButton", ()=>_iconButtonDefault.default
);
parcelHelpers.export(exports, "ImageList", ()=>_imageListDefault.default
);
parcelHelpers.export(exports, "ImageListItem", ()=>_imageListItemDefault.default
);
parcelHelpers.export(exports, "ImageListItemBar", ()=>_imageListItemBarDefault.default
);
parcelHelpers.export(exports, "Input", ()=>_inputDefault.default
);
parcelHelpers.export(exports, "InputAdornment", ()=>_inputAdornmentDefault.default
);
parcelHelpers.export(exports, "InputBase", ()=>_inputBaseDefault.default
);
parcelHelpers.export(exports, "InputLabel", ()=>_inputLabelDefault.default
);
parcelHelpers.export(exports, "LinearProgress", ()=>_linearProgressDefault.default
);
parcelHelpers.export(exports, "Link", ()=>_linkDefault.default
);
parcelHelpers.export(exports, "List", ()=>_listDefault.default
);
parcelHelpers.export(exports, "ListItem", ()=>_listItemDefault.default
);
parcelHelpers.export(exports, "ListItemAvatar", ()=>_listItemAvatarDefault.default
);
parcelHelpers.export(exports, "ListItemIcon", ()=>_listItemIconDefault.default
);
parcelHelpers.export(exports, "ListItemSecondaryAction", ()=>_listItemSecondaryActionDefault.default
);
parcelHelpers.export(exports, "ListItemText", ()=>_listItemTextDefault.default
);
parcelHelpers.export(exports, "ListSubheader", ()=>_listSubheaderDefault.default
);
parcelHelpers.export(exports, "Menu", ()=>_menuDefault.default
);
parcelHelpers.export(exports, "MenuItem", ()=>_menuItemDefault.default
);
parcelHelpers.export(exports, "MenuList", ()=>_menuListDefault.default
);
parcelHelpers.export(exports, "MobileStepper", ()=>_mobileStepperDefault.default
);
parcelHelpers.export(exports, "Modal", ()=>_modalDefault.default
);
parcelHelpers.export(exports, "NativeSelect", ()=>_nativeSelectDefault.default
);
parcelHelpers.export(exports, "NoSsr", ()=>_noSsrDefault.default
);
parcelHelpers.export(exports, "OutlinedInput", ()=>_outlinedInputDefault.default
);
parcelHelpers.export(exports, "Paper", ()=>_paperDefault.default
);
parcelHelpers.export(exports, "Popover", ()=>_popoverDefault.default
);
parcelHelpers.export(exports, "Popper", ()=>_popperDefault.default
);
parcelHelpers.export(exports, "Portal", ()=>_portalDefault.default
);
parcelHelpers.export(exports, "Radio", ()=>_radioDefault.default
);
parcelHelpers.export(exports, "RadioGroup", ()=>_radioGroupDefault.default
);
parcelHelpers.export(exports, "RootRef", ()=>_rootRefDefault.default
);
parcelHelpers.export(exports, "Select", ()=>_selectDefault.default
);
parcelHelpers.export(exports, "Slide", ()=>_slideDefault.default
);
parcelHelpers.export(exports, "Slider", ()=>_sliderDefault.default
);
parcelHelpers.export(exports, "Snackbar", ()=>_snackbarDefault.default
);
parcelHelpers.export(exports, "SnackbarContent", ()=>_snackbarContentDefault.default
);
parcelHelpers.export(exports, "Step", ()=>_stepDefault.default
);
parcelHelpers.export(exports, "StepButton", ()=>_stepButtonDefault.default
);
parcelHelpers.export(exports, "StepConnector", ()=>_stepConnectorDefault.default
);
parcelHelpers.export(exports, "StepContent", ()=>_stepContentDefault.default
);
parcelHelpers.export(exports, "StepIcon", ()=>_stepIconDefault.default
);
parcelHelpers.export(exports, "StepLabel", ()=>_stepLabelDefault.default
);
parcelHelpers.export(exports, "Stepper", ()=>_stepperDefault.default
);
parcelHelpers.export(exports, "SvgIcon", ()=>_svgIconDefault.default
);
parcelHelpers.export(exports, "SwipeableDrawer", ()=>_swipeableDrawerDefault.default
);
parcelHelpers.export(exports, "Switch", ()=>_switchDefault.default
);
parcelHelpers.export(exports, "Tab", ()=>_tabDefault.default
);
parcelHelpers.export(exports, "Table", ()=>_tableDefault.default
);
parcelHelpers.export(exports, "TableBody", ()=>_tableBodyDefault.default
);
parcelHelpers.export(exports, "TableCell", ()=>_tableCellDefault.default
);
parcelHelpers.export(exports, "TableContainer", ()=>_tableContainerDefault.default
);
parcelHelpers.export(exports, "TableFooter", ()=>_tableFooterDefault.default
);
parcelHelpers.export(exports, "TableHead", ()=>_tableHeadDefault.default
);
parcelHelpers.export(exports, "TablePagination", ()=>_tablePaginationDefault.default
);
parcelHelpers.export(exports, "TableRow", ()=>_tableRowDefault.default
);
parcelHelpers.export(exports, "TableSortLabel", ()=>_tableSortLabelDefault.default
);
parcelHelpers.export(exports, "Tabs", ()=>_tabsDefault.default
);
parcelHelpers.export(exports, "TabScrollButton", ()=>_tabScrollButtonDefault.default
);
parcelHelpers.export(exports, "TextField", ()=>_textFieldDefault.default
);
parcelHelpers.export(exports, "TextareaAutosize", ()=>_textareaAutosizeDefault.default
);
parcelHelpers.export(exports, "Toolbar", ()=>_toolbarDefault.default
);
parcelHelpers.export(exports, "Tooltip", ()=>_tooltipDefault.default
);
parcelHelpers.export(exports, "Typography", ()=>_typographyDefault.default
);
parcelHelpers.export(exports, "Unstable_TrapFocus", ()=>_unstableTrapFocusDefault.default
);
parcelHelpers.export(exports, "useMediaQuery", ()=>_useMediaQueryDefault.default
);
parcelHelpers.export(exports, "useScrollTrigger", ()=>_useScrollTriggerDefault.default
);
parcelHelpers.export(exports, "withMobileDialog", ()=>_withMobileDialogDefault.default
);
parcelHelpers.export(exports, "withWidth", ()=>_withWidthDefault.default
);
parcelHelpers.export(exports, "Zoom", ()=>_zoomDefault.default
);
/** @license Material-UI v4.12.3
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ /* eslint-disable import/export */ var _colors = require("./colors");
var _styles = require("./styles");
parcelHelpers.exportAll(_styles, exports);
var _utils = require("./utils");
parcelHelpers.exportAll(_utils, exports);
var _accordion = require("./Accordion");
var _accordionDefault = parcelHelpers.interopDefault(_accordion);
parcelHelpers.exportAll(_accordion, exports);
var _accordionActions = require("./AccordionActions");
var _accordionActionsDefault = parcelHelpers.interopDefault(_accordionActions);
parcelHelpers.exportAll(_accordionActions, exports);
var _accordionDetails = require("./AccordionDetails");
var _accordionDetailsDefault = parcelHelpers.interopDefault(_accordionDetails);
parcelHelpers.exportAll(_accordionDetails, exports);
var _accordionSummary = require("./AccordionSummary");
var _accordionSummaryDefault = parcelHelpers.interopDefault(_accordionSummary);
parcelHelpers.exportAll(_accordionSummary, exports);
var _appBar = require("./AppBar");
var _appBarDefault = parcelHelpers.interopDefault(_appBar);
parcelHelpers.exportAll(_appBar, exports);
var _avatar = require("./Avatar");
var _avatarDefault = parcelHelpers.interopDefault(_avatar);
parcelHelpers.exportAll(_avatar, exports);
var _backdrop = require("./Backdrop");
var _backdropDefault = parcelHelpers.interopDefault(_backdrop);
parcelHelpers.exportAll(_backdrop, exports);
var _badge = require("./Badge");
var _badgeDefault = parcelHelpers.interopDefault(_badge);
parcelHelpers.exportAll(_badge, exports);
var _bottomNavigation = require("./BottomNavigation");
var _bottomNavigationDefault = parcelHelpers.interopDefault(_bottomNavigation);
parcelHelpers.exportAll(_bottomNavigation, exports);
var _bottomNavigationAction = require("./BottomNavigationAction");
var _bottomNavigationActionDefault = parcelHelpers.interopDefault(_bottomNavigationAction);
parcelHelpers.exportAll(_bottomNavigationAction, exports);
var _box = require("./Box");
var _boxDefault = parcelHelpers.interopDefault(_box);
parcelHelpers.exportAll(_box, exports);
var _breadcrumbs = require("./Breadcrumbs");
var _breadcrumbsDefault = parcelHelpers.interopDefault(_breadcrumbs);
parcelHelpers.exportAll(_breadcrumbs, exports);
var _button = require("./Button");
var _buttonDefault = parcelHelpers.interopDefault(_button);
parcelHelpers.exportAll(_button, exports);
var _buttonBase = require("./ButtonBase");
var _buttonBaseDefault = parcelHelpers.interopDefault(_buttonBase);
parcelHelpers.exportAll(_buttonBase, exports);
var _buttonGroup = require("./ButtonGroup");
var _buttonGroupDefault = parcelHelpers.interopDefault(_buttonGroup);
parcelHelpers.exportAll(_buttonGroup, exports);
var _card = require("./Card");
var _cardDefault = parcelHelpers.interopDefault(_card);
parcelHelpers.exportAll(_card, exports);
var _cardActionArea = require("./CardActionArea");
var _cardActionAreaDefault = parcelHelpers.interopDefault(_cardActionArea);
parcelHelpers.exportAll(_cardActionArea, exports);
var _cardActions = require("./CardActions");
var _cardActionsDefault = parcelHelpers.interopDefault(_cardActions);
parcelHelpers.exportAll(_cardActions, exports);
var _cardContent = require("./CardContent");
var _cardContentDefault = parcelHelpers.interopDefault(_cardContent);
parcelHelpers.exportAll(_cardContent, exports);
var _cardHeader = require("./CardHeader");
var _cardHeaderDefault = parcelHelpers.interopDefault(_cardHeader);
parcelHelpers.exportAll(_cardHeader, exports);
var _cardMedia = require("./CardMedia");
var _cardMediaDefault = parcelHelpers.interopDefault(_cardMedia);
parcelHelpers.exportAll(_cardMedia, exports);
var _checkbox = require("./Checkbox");
var _checkboxDefault = parcelHelpers.interopDefault(_checkbox);
parcelHelpers.exportAll(_checkbox, exports);
var _chip = require("./Chip");
var _chipDefault = parcelHelpers.interopDefault(_chip);
parcelHelpers.exportAll(_chip, exports);
var _circularProgress = require("./CircularProgress");
var _circularProgressDefault = parcelHelpers.interopDefault(_circularProgress);
parcelHelpers.exportAll(_circularProgress, exports);
var _clickAwayListener = require("./ClickAwayListener");
var _clickAwayListenerDefault = parcelHelpers.interopDefault(_clickAwayListener);
parcelHelpers.exportAll(_clickAwayListener, exports);
var _collapse = require("./Collapse");
var _collapseDefault = parcelHelpers.interopDefault(_collapse);
parcelHelpers.exportAll(_collapse, exports);
var _container = require("./Container");
var _containerDefault = parcelHelpers.interopDefault(_container);
parcelHelpers.exportAll(_container, exports);
var _cssBaseline = require("./CssBaseline");
var _cssBaselineDefault = parcelHelpers.interopDefault(_cssBaseline);
parcelHelpers.exportAll(_cssBaseline, exports);
var _dialog = require("./Dialog");
var _dialogDefault = parcelHelpers.interopDefault(_dialog);
parcelHelpers.exportAll(_dialog, exports);
var _dialogActions = require("./DialogActions");
var _dialogActionsDefault = parcelHelpers.interopDefault(_dialogActions);
parcelHelpers.exportAll(_dialogActions, exports);
var _dialogContent = require("./DialogContent");
var _dialogContentDefault = parcelHelpers.interopDefault(_dialogContent);
parcelHelpers.exportAll(_dialogContent, exports);
var _dialogContentText = require("./DialogContentText");
var _dialogContentTextDefault = parcelHelpers.interopDefault(_dialogContentText);
parcelHelpers.exportAll(_dialogContentText, exports);
var _dialogTitle = require("./DialogTitle");
var _dialogTitleDefault = parcelHelpers.interopDefault(_dialogTitle);
parcelHelpers.exportAll(_dialogTitle, exports);
var _divider = require("./Divider");
var _dividerDefault = parcelHelpers.interopDefault(_divider);
parcelHelpers.exportAll(_divider, exports);
var _drawer = require("./Drawer");
var _drawerDefault = parcelHelpers.interopDefault(_drawer);
parcelHelpers.exportAll(_drawer, exports);
var _expansionPanel = require("./ExpansionPanel");
var _expansionPanelDefault = parcelHelpers.interopDefault(_expansionPanel);
parcelHelpers.exportAll(_expansionPanel, exports);
var _expansionPanelActions = require("./ExpansionPanelActions");
var _expansionPanelActionsDefault = parcelHelpers.interopDefault(_expansionPanelActions);
parcelHelpers.exportAll(_expansionPanelActions, exports);
var _expansionPanelDetails = require("./ExpansionPanelDetails");
var _expansionPanelDetailsDefault = parcelHelpers.interopDefault(_expansionPanelDetails);
parcelHelpers.exportAll(_expansionPanelDetails, exports);
var _expansionPanelSummary = require("./ExpansionPanelSummary");
var _expansionPanelSummaryDefault = parcelHelpers.interopDefault(_expansionPanelSummary);
parcelHelpers.exportAll(_expansionPanelSummary, exports);
var _fab = require("./Fab");
var _fabDefault = parcelHelpers.interopDefault(_fab);
parcelHelpers.exportAll(_fab, exports);
var _fade = require("./Fade");
var _fadeDefault = parcelHelpers.interopDefault(_fade);
parcelHelpers.exportAll(_fade, exports);
var _filledInput = require("./FilledInput");
var _filledInputDefault = parcelHelpers.interopDefault(_filledInput);
parcelHelpers.exportAll(_filledInput, exports);
var _formControl = require("./FormControl");
var _formControlDefault = parcelHelpers.interopDefault(_formControl);
parcelHelpers.exportAll(_formControl, exports);
var _formControlLabel = require("./FormControlLabel");
var _formControlLabelDefault = parcelHelpers.interopDefault(_formControlLabel);
parcelHelpers.exportAll(_formControlLabel, exports);
var _formGroup = require("./FormGroup");
var _formGroupDefault = parcelHelpers.interopDefault(_formGroup);
parcelHelpers.exportAll(_formGroup, exports);
var _formHelperText = require("./FormHelperText");
var _formHelperTextDefault = parcelHelpers.interopDefault(_formHelperText);
parcelHelpers.exportAll(_formHelperText, exports);
var _formLabel = require("./FormLabel");
var _formLabelDefault = parcelHelpers.interopDefault(_formLabel);
parcelHelpers.exportAll(_formLabel, exports);
var _grid = require("./Grid");
var _gridDefault = parcelHelpers.interopDefault(_grid);
parcelHelpers.exportAll(_grid, exports);
var _gridList = require("./GridList");
var _gridListDefault = parcelHelpers.interopDefault(_gridList);
parcelHelpers.exportAll(_gridList, exports);
var _gridListTile = require("./GridListTile");
var _gridListTileDefault = parcelHelpers.interopDefault(_gridListTile);
parcelHelpers.exportAll(_gridListTile, exports);
var _gridListTileBar = require("./GridListTileBar");
var _gridListTileBarDefault = parcelHelpers.interopDefault(_gridListTileBar);
parcelHelpers.exportAll(_gridListTileBar, exports);
var _grow = require("./Grow");
var _growDefault = parcelHelpers.interopDefault(_grow);
parcelHelpers.exportAll(_grow, exports);
var _hidden = require("./Hidden");
var _hiddenDefault = parcelHelpers.interopDefault(_hidden);
parcelHelpers.exportAll(_hidden, exports);
var _icon = require("./Icon");
var _iconDefault = parcelHelpers.interopDefault(_icon);
parcelHelpers.exportAll(_icon, exports);
var _iconButton = require("./IconButton");
var _iconButtonDefault = parcelHelpers.interopDefault(_iconButton);
parcelHelpers.exportAll(_iconButton, exports);
var _imageList = require("./ImageList");
var _imageListDefault = parcelHelpers.interopDefault(_imageList);
parcelHelpers.exportAll(_imageList, exports);
var _imageListItem = require("./ImageListItem");
var _imageListItemDefault = parcelHelpers.interopDefault(_imageListItem);
parcelHelpers.exportAll(_imageListItem, exports);
var _imageListItemBar = require("./ImageListItemBar");
var _imageListItemBarDefault = parcelHelpers.interopDefault(_imageListItemBar);
parcelHelpers.exportAll(_imageListItemBar, exports);
var _input = require("./Input");
var _inputDefault = parcelHelpers.interopDefault(_input);
parcelHelpers.exportAll(_input, exports);
var _inputAdornment = require("./InputAdornment");
var _inputAdornmentDefault = parcelHelpers.interopDefault(_inputAdornment);
parcelHelpers.exportAll(_inputAdornment, exports);
var _inputBase = require("./InputBase");
var _inputBaseDefault = parcelHelpers.interopDefault(_inputBase);
parcelHelpers.exportAll(_inputBase, exports);
var _inputLabel = require("./InputLabel");
var _inputLabelDefault = parcelHelpers.interopDefault(_inputLabel);
parcelHelpers.exportAll(_inputLabel, exports);
var _linearProgress = require("./LinearProgress");
var _linearProgressDefault = parcelHelpers.interopDefault(_linearProgress);
parcelHelpers.exportAll(_linearProgress, exports);
var _link = require("./Link");
var _linkDefault = parcelHelpers.interopDefault(_link);
parcelHelpers.exportAll(_link, exports);
var _list = require("./List");
var _listDefault = parcelHelpers.interopDefault(_list);
parcelHelpers.exportAll(_list, exports);
var _listItem = require("./ListItem");
var _listItemDefault = parcelHelpers.interopDefault(_listItem);
parcelHelpers.exportAll(_listItem, exports);
var _listItemAvatar = require("./ListItemAvatar");
var _listItemAvatarDefault = parcelHelpers.interopDefault(_listItemAvatar);
parcelHelpers.exportAll(_listItemAvatar, exports);
var _listItemIcon = require("./ListItemIcon");
var _listItemIconDefault = parcelHelpers.interopDefault(_listItemIcon);
parcelHelpers.exportAll(_listItemIcon, exports);
var _listItemSecondaryAction = require("./ListItemSecondaryAction");
var _listItemSecondaryActionDefault = parcelHelpers.interopDefault(_listItemSecondaryAction);
parcelHelpers.exportAll(_listItemSecondaryAction, exports);
var _listItemText = require("./ListItemText");
var _listItemTextDefault = parcelHelpers.interopDefault(_listItemText);
parcelHelpers.exportAll(_listItemText, exports);
var _listSubheader = require("./ListSubheader");
var _listSubheaderDefault = parcelHelpers.interopDefault(_listSubheader);
parcelHelpers.exportAll(_listSubheader, exports);
var _menu = require("./Menu");
var _menuDefault = parcelHelpers.interopDefault(_menu);
parcelHelpers.exportAll(_menu, exports);
var _menuItem = require("./MenuItem");
var _menuItemDefault = parcelHelpers.interopDefault(_menuItem);
parcelHelpers.exportAll(_menuItem, exports);
var _menuList = require("./MenuList");
var _menuListDefault = parcelHelpers.interopDefault(_menuList);
parcelHelpers.exportAll(_menuList, exports);
var _mobileStepper = require("./MobileStepper");
var _mobileStepperDefault = parcelHelpers.interopDefault(_mobileStepper);
parcelHelpers.exportAll(_mobileStepper, exports);
var _modal = require("./Modal");
var _modalDefault = parcelHelpers.interopDefault(_modal);
parcelHelpers.exportAll(_modal, exports);
var _nativeSelect = require("./NativeSelect");
var _nativeSelectDefault = parcelHelpers.interopDefault(_nativeSelect);
parcelHelpers.exportAll(_nativeSelect, exports);
var _noSsr = require("./NoSsr");
var _noSsrDefault = parcelHelpers.interopDefault(_noSsr);
parcelHelpers.exportAll(_noSsr, exports);
var _outlinedInput = require("./OutlinedInput");
var _outlinedInputDefault = parcelHelpers.interopDefault(_outlinedInput);
parcelHelpers.exportAll(_outlinedInput, exports);
var _paper = require("./Paper");
var _paperDefault = parcelHelpers.interopDefault(_paper);
parcelHelpers.exportAll(_paper, exports);
var _popover = require("./Popover");
var _popoverDefault = parcelHelpers.interopDefault(_popover);
parcelHelpers.exportAll(_popover, exports);
var _popper = require("./Popper");
var _popperDefault = parcelHelpers.interopDefault(_popper);
parcelHelpers.exportAll(_popper, exports);
var _portal = require("./Portal");
var _portalDefault = parcelHelpers.interopDefault(_portal);
parcelHelpers.exportAll(_portal, exports);
var _radio = require("./Radio");
var _radioDefault = parcelHelpers.interopDefault(_radio);
parcelHelpers.exportAll(_radio, exports);
var _radioGroup = require("./RadioGroup");
var _radioGroupDefault = parcelHelpers.interopDefault(_radioGroup);
parcelHelpers.exportAll(_radioGroup, exports);
var _rootRef = require("./RootRef");
var _rootRefDefault = parcelHelpers.interopDefault(_rootRef);
parcelHelpers.exportAll(_rootRef, exports);
var _select = require("./Select");
var _selectDefault = parcelHelpers.interopDefault(_select);
parcelHelpers.exportAll(_select, exports);
var _slide = require("./Slide");
var _slideDefault = parcelHelpers.interopDefault(_slide);
parcelHelpers.exportAll(_slide, exports);
var _slider = require("./Slider");
var _sliderDefault = parcelHelpers.interopDefault(_slider);
parcelHelpers.exportAll(_slider, exports);
var _snackbar = require("./Snackbar");
var _snackbarDefault = parcelHelpers.interopDefault(_snackbar);
parcelHelpers.exportAll(_snackbar, exports);
var _snackbarContent = require("./SnackbarContent");
var _snackbarContentDefault = parcelHelpers.interopDefault(_snackbarContent);
parcelHelpers.exportAll(_snackbarContent, exports);
var _step = require("./Step");
var _stepDefault = parcelHelpers.interopDefault(_step);
parcelHelpers.exportAll(_step, exports);
var _stepButton = require("./StepButton");
var _stepButtonDefault = parcelHelpers.interopDefault(_stepButton);
parcelHelpers.exportAll(_stepButton, exports);
var _stepConnector = require("./StepConnector");
var _stepConnectorDefault = parcelHelpers.interopDefault(_stepConnector);
parcelHelpers.exportAll(_stepConnector, exports);
var _stepContent = require("./StepContent");
var _stepContentDefault = parcelHelpers.interopDefault(_stepContent);
parcelHelpers.exportAll(_stepContent, exports);
var _stepIcon = require("./StepIcon");
var _stepIconDefault = parcelHelpers.interopDefault(_stepIcon);
parcelHelpers.exportAll(_stepIcon, exports);
var _stepLabel = require("./StepLabel");
var _stepLabelDefault = parcelHelpers.interopDefault(_stepLabel);
parcelHelpers.exportAll(_stepLabel, exports);
var _stepper = require("./Stepper");
var _stepperDefault = parcelHelpers.interopDefault(_stepper);
parcelHelpers.exportAll(_stepper, exports);
var _svgIcon = require("./SvgIcon");
var _svgIconDefault = parcelHelpers.interopDefault(_svgIcon);
parcelHelpers.exportAll(_svgIcon, exports);
var _swipeableDrawer = require("./SwipeableDrawer");
var _swipeableDrawerDefault = parcelHelpers.interopDefault(_swipeableDrawer);
parcelHelpers.exportAll(_swipeableDrawer, exports);
var _switch = require("./Switch");
var _switchDefault = parcelHelpers.interopDefault(_switch);
parcelHelpers.exportAll(_switch, exports);
var _tab = require("./Tab");
var _tabDefault = parcelHelpers.interopDefault(_tab);
parcelHelpers.exportAll(_tab, exports);
var _table = require("./Table");
var _tableDefault = parcelHelpers.interopDefault(_table);
parcelHelpers.exportAll(_table, exports);
var _tableBody = require("./TableBody");
var _tableBodyDefault = parcelHelpers.interopDefault(_tableBody);
parcelHelpers.exportAll(_tableBody, exports);
var _tableCell = require("./TableCell");
var _tableCellDefault = parcelHelpers.interopDefault(_tableCell);
parcelHelpers.exportAll(_tableCell, exports);
var _tableContainer = require("./TableContainer");
var _tableContainerDefault = parcelHelpers.interopDefault(_tableContainer);
parcelHelpers.exportAll(_tableContainer, exports);
var _tableFooter = require("./TableFooter");
var _tableFooterDefault = parcelHelpers.interopDefault(_tableFooter);
parcelHelpers.exportAll(_tableFooter, exports);
var _tableHead = require("./TableHead");
var _tableHeadDefault = parcelHelpers.interopDefault(_tableHead);
parcelHelpers.exportAll(_tableHead, exports);
var _tablePagination = require("./TablePagination");
var _tablePaginationDefault = parcelHelpers.interopDefault(_tablePagination);
parcelHelpers.exportAll(_tablePagination, exports);
var _tableRow = require("./TableRow");
var _tableRowDefault = parcelHelpers.interopDefault(_tableRow);
parcelHelpers.exportAll(_tableRow, exports);
var _tableSortLabel = require("./TableSortLabel");
var _tableSortLabelDefault = parcelHelpers.interopDefault(_tableSortLabel);
parcelHelpers.exportAll(_tableSortLabel, exports);
var _tabs = require("./Tabs");
var _tabsDefault = parcelHelpers.interopDefault(_tabs);
parcelHelpers.exportAll(_tabs, exports);
var _tabScrollButton = require("./TabScrollButton");
var _tabScrollButtonDefault = parcelHelpers.interopDefault(_tabScrollButton);
parcelHelpers.exportAll(_tabScrollButton, exports);
var _textField = require("./TextField");
var _textFieldDefault = parcelHelpers.interopDefault(_textField);
parcelHelpers.exportAll(_textField, exports);
var _textareaAutosize = require("./TextareaAutosize");
var _textareaAutosizeDefault = parcelHelpers.interopDefault(_textareaAutosize);
parcelHelpers.exportAll(_textareaAutosize, exports);
var _toolbar = require("./Toolbar");
var _toolbarDefault = parcelHelpers.interopDefault(_toolbar);
parcelHelpers.exportAll(_toolbar, exports);
var _tooltip = require("./Tooltip");
var _tooltipDefault = parcelHelpers.interopDefault(_tooltip);
parcelHelpers.exportAll(_tooltip, exports);
var _typography = require("./Typography");
var _typographyDefault = parcelHelpers.interopDefault(_typography);
parcelHelpers.exportAll(_typography // eslint-disable-next-line camelcase
, exports);
var _unstableTrapFocus = require("./Unstable_TrapFocus");
var _unstableTrapFocusDefault = parcelHelpers.interopDefault(_unstableTrapFocus);
parcelHelpers.exportAll(_unstableTrapFocus, exports);
var _useMediaQuery = require("./useMediaQuery");
var _useMediaQueryDefault = parcelHelpers.interopDefault(_useMediaQuery);
parcelHelpers.exportAll(_useMediaQuery, exports);
var _useScrollTrigger = require("./useScrollTrigger");
var _useScrollTriggerDefault = parcelHelpers.interopDefault(_useScrollTrigger);
parcelHelpers.exportAll(_useScrollTrigger, exports);
var _withMobileDialog = require("./withMobileDialog");
var _withMobileDialogDefault = parcelHelpers.interopDefault(_withMobileDialog);
parcelHelpers.exportAll(_withMobileDialog, exports);
var _withWidth = require("./withWidth");
var _withWidthDefault = parcelHelpers.interopDefault(_withWidth);
parcelHelpers.exportAll(_withWidth, exports);
var _zoom = require("./Zoom");
var _zoomDefault = parcelHelpers.interopDefault(_zoom);
parcelHelpers.exportAll(_zoom, exports);

},{"./colors":"e2OPO","./styles":"gK9qy","./utils":"7Laiy","./Accordion":"k5vZJ","./AccordionActions":"e8tYN","./AccordionDetails":"4CNZo","./AccordionSummary":"aMNRJ","./AppBar":"fKrzk","./Avatar":"lF8pm","./Backdrop":"2ZW6c","./Badge":"80OM9","./BottomNavigation":"epcft","./BottomNavigationAction":"86fm9","./Box":"hbABv","./Breadcrumbs":"3SCFB","./Button":"hKV2U","./ButtonBase":"2TQRV","./ButtonGroup":"fBh3y","./Card":"1E1zV","./CardActionArea":"3Nrv2","./CardActions":"jHAOC","./CardContent":"6LZ9l","./CardHeader":"gDzys","./CardMedia":"bA2G1","./Checkbox":"g9Bf9","./Chip":"6AgTi","./CircularProgress":"kXpmk","./ClickAwayListener":"e5tZw","./Collapse":"1KqGq","./Container":"4oppE","./CssBaseline":"kiVTX","./Dialog":"eyV8v","./DialogActions":"ftrMS","./DialogContent":"5oZZo","./DialogContentText":"efLol","./DialogTitle":"JwdzH","./Divider":"96ziI","./Drawer":"fqezw","./ExpansionPanel":"a494k","./ExpansionPanelActions":"l85md","./ExpansionPanelDetails":"c80QM","./ExpansionPanelSummary":"kbMkK","./Fab":"bCQL6","./Fade":"5PAzJ","./FilledInput":"clmGe","./FormControl":"6Jd3C","./FormControlLabel":"aTJOB","./FormGroup":"03BFX","./FormHelperText":"2qPWq","./FormLabel":"ggWa6","./Grid":"fqbct","./GridList":"liwfv","./GridListTile":"8zqfB","./GridListTileBar":"4RS0d","./Grow":"2tpXF","./Hidden":"223BB","./Icon":"eW0qT","./IconButton":"cer9e","./ImageList":"s32Zv","./ImageListItem":"9A3nb","./ImageListItemBar":"8Jox2","./Input":"41TRI","./InputAdornment":"btdWE","./InputBase":"4MrXd","./InputLabel":"Yuko7","./LinearProgress":"fyi8r","./Link":"iboi9","./List":"34IFw","./ListItem":"l8B5E","./ListItemAvatar":"iWFP4","./ListItemIcon":"2wu99","./ListItemSecondaryAction":"15djN","./ListItemText":"6dKGg","./ListSubheader":"c0Im2","./Menu":"923o0","./MenuItem":"4K3cN","./MenuList":"bf8L1","./MobileStepper":"g5yld","./Modal":"eA3TP","./NativeSelect":"kE3kP","./NoSsr":"yMfCC","./OutlinedInput":"kLI7K","./Paper":"j0s2L","./Popover":"h42eB","./Popper":"6FXHT","./Portal":"dBY21","./Radio":"ixjgi","./RadioGroup":"hhN1b","./RootRef":"5AvqD","./Select":"fDj29","./Slide":"daGbs","./Slider":"cxcNb","./Snackbar":"g6YeW","./SnackbarContent":"k324F","./Step":"8fSpd","./StepButton":"99EON","./StepConnector":"5PCe3","./StepContent":"86klG","./StepIcon":"hMFlL","./StepLabel":"86AUS","./Stepper":"6bqSX","./SvgIcon":"9XOde","./SwipeableDrawer":"d8qJQ","./Switch":"dcvq1","./Tab":"1eo3S","./Table":"2TREO","./TableBody":"k1sv2","./TableCell":"f4axW","./TableContainer":"v4Pab","./TableFooter":"9HKtA","./TableHead":"2ON2I","./TablePagination":"h3yDF","./TableRow":"kmN5z","./TableSortLabel":"kQzW0","./Tabs":"28EQr","./TabScrollButton":"kEAia","./TextField":"ifLFZ","./TextareaAutosize":"1Wm5T","./Toolbar":"6wX6j","./Tooltip":"5ToTR","./Typography":"6dDPF","./Unstable_TrapFocus":"7SUJW","./useMediaQuery":"hbUiL","./useScrollTrigger":"hOvep","./withMobileDialog":"jiHj6","./withWidth":"9xCeZ","./Zoom":"hHH8f","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"e2OPO":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "common", ()=>_commonDefault.default
);
parcelHelpers.export(exports, "red", ()=>_redDefault.default
);
parcelHelpers.export(exports, "pink", ()=>_pinkDefault.default
);
parcelHelpers.export(exports, "purple", ()=>_purpleDefault.default
);
parcelHelpers.export(exports, "deepPurple", ()=>_deepPurpleDefault.default
);
parcelHelpers.export(exports, "indigo", ()=>_indigoDefault.default
);
parcelHelpers.export(exports, "blue", ()=>_blueDefault.default
);
parcelHelpers.export(exports, "lightBlue", ()=>_lightBlueDefault.default
);
parcelHelpers.export(exports, "cyan", ()=>_cyanDefault.default
);
parcelHelpers.export(exports, "teal", ()=>_tealDefault.default
);
parcelHelpers.export(exports, "green", ()=>_greenDefault.default
);
parcelHelpers.export(exports, "lightGreen", ()=>_lightGreenDefault.default
);
parcelHelpers.export(exports, "lime", ()=>_limeDefault.default
);
parcelHelpers.export(exports, "yellow", ()=>_yellowDefault.default
);
parcelHelpers.export(exports, "amber", ()=>_amberDefault.default
);
parcelHelpers.export(exports, "orange", ()=>_orangeDefault.default
);
parcelHelpers.export(exports, "deepOrange", ()=>_deepOrangeDefault.default
);
parcelHelpers.export(exports, "brown", ()=>_brownDefault.default
);
parcelHelpers.export(exports, "grey", ()=>_greyDefault.default
);
parcelHelpers.export(exports, "blueGrey", ()=>_blueGreyDefault.default
);
var _common = require("./common");
var _commonDefault = parcelHelpers.interopDefault(_common);
var _red = require("./red");
var _redDefault = parcelHelpers.interopDefault(_red);
var _pink = require("./pink");
var _pinkDefault = parcelHelpers.interopDefault(_pink);
var _purple = require("./purple");
var _purpleDefault = parcelHelpers.interopDefault(_purple);
var _deepPurple = require("./deepPurple");
var _deepPurpleDefault = parcelHelpers.interopDefault(_deepPurple);
var _indigo = require("./indigo");
var _indigoDefault = parcelHelpers.interopDefault(_indigo);
var _blue = require("./blue");
var _blueDefault = parcelHelpers.interopDefault(_blue);
var _lightBlue = require("./lightBlue");
var _lightBlueDefault = parcelHelpers.interopDefault(_lightBlue);
var _cyan = require("./cyan");
var _cyanDefault = parcelHelpers.interopDefault(_cyan);
var _teal = require("./teal");
var _tealDefault = parcelHelpers.interopDefault(_teal);
var _green = require("./green");
var _greenDefault = parcelHelpers.interopDefault(_green);
var _lightGreen = require("./lightGreen");
var _lightGreenDefault = parcelHelpers.interopDefault(_lightGreen);
var _lime = require("./lime");
var _limeDefault = parcelHelpers.interopDefault(_lime);
var _yellow = require("./yellow");
var _yellowDefault = parcelHelpers.interopDefault(_yellow);
var _amber = require("./amber");
var _amberDefault = parcelHelpers.interopDefault(_amber);
var _orange = require("./orange");
var _orangeDefault = parcelHelpers.interopDefault(_orange);
var _deepOrange = require("./deepOrange");
var _deepOrangeDefault = parcelHelpers.interopDefault(_deepOrange);
var _brown = require("./brown");
var _brownDefault = parcelHelpers.interopDefault(_brown);
var _grey = require("./grey");
var _greyDefault = parcelHelpers.interopDefault(_grey);
var _blueGrey = require("./blueGrey");
var _blueGreyDefault = parcelHelpers.interopDefault(_blueGrey);

},{"./common":"glWAq","./red":"411AL","./pink":"7L1Po","./purple":"2q4Vy","./deepPurple":"emwlJ","./indigo":"3lRa5","./blue":"iN7lJ","./lightBlue":"hZMT1","./cyan":"2sYep","./teal":"3Q7yz","./green":"hOqNg","./lightGreen":"4ORYT","./lime":"da3SN","./yellow":"4N94w","./amber":"1bGHN","./orange":"5N7hw","./deepOrange":"1A1Lw","./brown":"6zTRu","./grey":"2bvyR","./blueGrey":"8ZCuI","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"2q4Vy":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var purple = {
    50: '#f3e5f5',
    100: '#e1bee7',
    200: '#ce93d8',
    300: '#ba68c8',
    400: '#ab47bc',
    500: '#9c27b0',
    600: '#8e24aa',
    700: '#7b1fa2',
    800: '#6a1b9a',
    900: '#4a148c',
    A100: '#ea80fc',
    A200: '#e040fb',
    A400: '#d500f9',
    A700: '#aa00ff'
};
exports.default = purple;

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"emwlJ":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var deepPurple = {
    50: '#ede7f6',
    100: '#d1c4e9',
    200: '#b39ddb',
    300: '#9575cd',
    400: '#7e57c2',
    500: '#673ab7',
    600: '#5e35b1',
    700: '#512da8',
    800: '#4527a0',
    900: '#311b92',
    A100: '#b388ff',
    A200: '#7c4dff',
    A400: '#651fff',
    A700: '#6200ea'
};
exports.default = deepPurple;

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"hZMT1":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var lightBlue = {
    50: '#e1f5fe',
    100: '#b3e5fc',
    200: '#81d4fa',
    300: '#4fc3f7',
    400: '#29b6f6',
    500: '#03a9f4',
    600: '#039be5',
    700: '#0288d1',
    800: '#0277bd',
    900: '#01579b',
    A100: '#80d8ff',
    A200: '#40c4ff',
    A400: '#00b0ff',
    A700: '#0091ea'
};
exports.default = lightBlue;

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"2sYep":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var cyan = {
    50: '#e0f7fa',
    100: '#b2ebf2',
    200: '#80deea',
    300: '#4dd0e1',
    400: '#26c6da',
    500: '#00bcd4',
    600: '#00acc1',
    700: '#0097a7',
    800: '#00838f',
    900: '#006064',
    A100: '#84ffff',
    A200: '#18ffff',
    A400: '#00e5ff',
    A700: '#00b8d4'
};
exports.default = cyan;

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"3Q7yz":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var teal = {
    50: '#e0f2f1',
    100: '#b2dfdb',
    200: '#80cbc4',
    300: '#4db6ac',
    400: '#26a69a',
    500: '#009688',
    600: '#00897b',
    700: '#00796b',
    800: '#00695c',
    900: '#004d40',
    A100: '#a7ffeb',
    A200: '#64ffda',
    A400: '#1de9b6',
    A700: '#00bfa5'
};
exports.default = teal;

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"4ORYT":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var lightGreen = {
    50: '#f1f8e9',
    100: '#dcedc8',
    200: '#c5e1a5',
    300: '#aed581',
    400: '#9ccc65',
    500: '#8bc34a',
    600: '#7cb342',
    700: '#689f38',
    800: '#558b2f',
    900: '#33691e',
    A100: '#ccff90',
    A200: '#b2ff59',
    A400: '#76ff03',
    A700: '#64dd17'
};
exports.default = lightGreen;

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"da3SN":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var lime = {
    50: '#f9fbe7',
    100: '#f0f4c3',
    200: '#e6ee9c',
    300: '#dce775',
    400: '#d4e157',
    500: '#cddc39',
    600: '#c0ca33',
    700: '#afb42b',
    800: '#9e9d24',
    900: '#827717',
    A100: '#f4ff81',
    A200: '#eeff41',
    A400: '#c6ff00',
    A700: '#aeea00'
};
exports.default = lime;

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"4N94w":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var yellow = {
    50: '#fffde7',
    100: '#fff9c4',
    200: '#fff59d',
    300: '#fff176',
    400: '#ffee58',
    500: '#ffeb3b',
    600: '#fdd835',
    700: '#fbc02d',
    800: '#f9a825',
    900: '#f57f17',
    A100: '#ffff8d',
    A200: '#ffff00',
    A400: '#ffea00',
    A700: '#ffd600'
};
exports.default = yellow;

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"1bGHN":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var amber = {
    50: '#fff8e1',
    100: '#ffecb3',
    200: '#ffe082',
    300: '#ffd54f',
    400: '#ffca28',
    500: '#ffc107',
    600: '#ffb300',
    700: '#ffa000',
    800: '#ff8f00',
    900: '#ff6f00',
    A100: '#ffe57f',
    A200: '#ffd740',
    A400: '#ffc400',
    A700: '#ffab00'
};
exports.default = amber;

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"1A1Lw":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var deepOrange = {
    50: '#fbe9e7',
    100: '#ffccbc',
    200: '#ffab91',
    300: '#ff8a65',
    400: '#ff7043',
    500: '#ff5722',
    600: '#f4511e',
    700: '#e64a19',
    800: '#d84315',
    900: '#bf360c',
    A100: '#ff9e80',
    A200: '#ff6e40',
    A400: '#ff3d00',
    A700: '#dd2c00'
};
exports.default = deepOrange;

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"6zTRu":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var brown = {
    50: '#efebe9',
    100: '#d7ccc8',
    200: '#bcaaa4',
    300: '#a1887f',
    400: '#8d6e63',
    500: '#795548',
    600: '#6d4c41',
    700: '#5d4037',
    800: '#4e342e',
    900: '#3e2723',
    A100: '#d7ccc8',
    A200: '#bcaaa4',
    A400: '#8d6e63',
    A700: '#5d4037'
};
exports.default = brown;

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"8ZCuI":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var blueGrey = {
    50: '#eceff1',
    100: '#cfd8dc',
    200: '#b0bec5',
    300: '#90a4ae',
    400: '#78909c',
    500: '#607d8b',
    600: '#546e7a',
    700: '#455a64',
    800: '#37474f',
    900: '#263238',
    A100: '#cfd8dc',
    A200: '#b0bec5',
    A400: '#78909c',
    A700: '#455a64'
};
exports.default = blueGrey;

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"7Laiy":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "capitalize", ()=>_capitalizeDefault.default
);
parcelHelpers.export(exports, "createChainedFunction", ()=>_createChainedFunctionDefault.default
);
parcelHelpers.export(exports, "createSvgIcon", ()=>_createSvgIconDefault.default
);
parcelHelpers.export(exports, "debounce", ()=>_debounceDefault.default
);
parcelHelpers.export(exports, "deprecatedPropType", ()=>_deprecatedPropTypeDefault.default
);
parcelHelpers.export(exports, "isMuiElement", ()=>_isMuiElementDefault.default
);
parcelHelpers.export(exports, "ownerDocument", ()=>_ownerDocumentDefault.default
);
parcelHelpers.export(exports, "ownerWindow", ()=>_ownerWindowDefault.default
);
parcelHelpers.export(exports, "requirePropFactory", ()=>_requirePropFactoryDefault.default
);
parcelHelpers.export(exports, "setRef", ()=>_setRefDefault.default
);
parcelHelpers.export(exports, "unsupportedProp", ()=>_unsupportedPropDefault.default
);
parcelHelpers.export(exports, "useControlled", ()=>_useControlledDefault.default
);
parcelHelpers.export(exports, "useEventCallback", ()=>_useEventCallbackDefault.default
);
parcelHelpers.export(exports, "useForkRef", ()=>_useForkRefDefault.default
) // eslint-disable-next-line camelcase
;
parcelHelpers.export(exports, "unstable_useId", ()=>_unstableUseIdDefault.default
);
parcelHelpers.export(exports, "useIsFocusVisible", ()=>_useIsFocusVisibleDefault.default
);
var _capitalize = require("./capitalize");
var _capitalizeDefault = parcelHelpers.interopDefault(_capitalize);
var _createChainedFunction = require("./createChainedFunction");
var _createChainedFunctionDefault = parcelHelpers.interopDefault(_createChainedFunction);
var _createSvgIcon = require("./createSvgIcon");
var _createSvgIconDefault = parcelHelpers.interopDefault(_createSvgIcon);
var _debounce = require("./debounce");
var _debounceDefault = parcelHelpers.interopDefault(_debounce);
var _deprecatedPropType = require("./deprecatedPropType");
var _deprecatedPropTypeDefault = parcelHelpers.interopDefault(_deprecatedPropType);
var _isMuiElement = require("./isMuiElement");
var _isMuiElementDefault = parcelHelpers.interopDefault(_isMuiElement);
var _ownerDocument = require("./ownerDocument");
var _ownerDocumentDefault = parcelHelpers.interopDefault(_ownerDocument);
var _ownerWindow = require("./ownerWindow");
var _ownerWindowDefault = parcelHelpers.interopDefault(_ownerWindow);
var _requirePropFactory = require("./requirePropFactory");
var _requirePropFactoryDefault = parcelHelpers.interopDefault(_requirePropFactory);
var _setRef = require("./setRef");
var _setRefDefault = parcelHelpers.interopDefault(_setRef);
var _unsupportedProp = require("./unsupportedProp");
var _unsupportedPropDefault = parcelHelpers.interopDefault(_unsupportedProp);
var _useControlled = require("./useControlled");
var _useControlledDefault = parcelHelpers.interopDefault(_useControlled);
var _useEventCallback = require("./useEventCallback");
var _useEventCallbackDefault = parcelHelpers.interopDefault(_useEventCallback);
var _useForkRef = require("./useForkRef");
var _useForkRefDefault = parcelHelpers.interopDefault(_useForkRef);
var _unstableUseId = require("./unstable_useId");
var _unstableUseIdDefault = parcelHelpers.interopDefault(_unstableUseId);
var _useIsFocusVisible = require("./useIsFocusVisible");
var _useIsFocusVisibleDefault = parcelHelpers.interopDefault(_useIsFocusVisible);

},{"./capitalize":"5AJVX","./createChainedFunction":"BNP7Q","./createSvgIcon":"lVBTd","./debounce":"fsAbo","./deprecatedPropType":"loRgF","./isMuiElement":"6dsp6","./ownerDocument":"lxJTm","./ownerWindow":"fmWv6","./requirePropFactory":"4sLw0","./setRef":"6f9nb","./unsupportedProp":"bFB4I","./useControlled":"1ORwD","./useEventCallback":"hPpih","./useForkRef":"kUpGa","./unstable_useId":"crGfn","./useIsFocusVisible":"lY4zJ","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"BNP7Q":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
function createChainedFunction() {
    for(var _len = arguments.length, funcs = new Array(_len), _key = 0; _key < _len; _key++)funcs[_key] = arguments[_key];
    return funcs.reduce(function(acc, func) {
        if (func == null) return acc;
        if (typeof func !== 'function') console.error('Material-UI: Invalid Argument Type, must only provide functions, undefined, or null.');
        return function chainedFunction() {
            for(var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++)args[_key2] = arguments[_key2];
            acc.apply(this, args);
            func.apply(this, args);
        };
    }, function() {});
}
exports.default = createChainedFunction;

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"lVBTd":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _extends = require("@babel/runtime/helpers/esm/extends");
var _extendsDefault = parcelHelpers.interopDefault(_extends);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _svgIcon = require("../SvgIcon");
var _svgIconDefault = parcelHelpers.interopDefault(_svgIcon);
function createSvgIcon(path, displayName) {
    var Component = function Component(props, ref) {
        return /*#__PURE__*/ _reactDefault.default.createElement(_svgIconDefault.default, _extendsDefault.default({
            ref: ref
        }, props), path);
    };
    // Need to set `displayName` on the inner component for React.memo.
    // React prior to 16.14 ignores `displayName` on the wrapper.
    Component.displayName = "".concat(displayName, "Icon");
    Component.muiName = _svgIconDefault.default.muiName;
    return /*#__PURE__*/ _reactDefault.default.memo(/*#__PURE__*/ _reactDefault.default.forwardRef(Component));
}
exports.default = createSvgIcon;

},{"@babel/runtime/helpers/esm/extends":"fTBFS","react":"21dqq","../SvgIcon":"9XOde","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"9XOde":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>_svgIconDefault.default
);
var _svgIcon = require("./SvgIcon");
var _svgIconDefault = parcelHelpers.interopDefault(_svgIcon);

},{"./SvgIcon":"h97Ts","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"h97Ts":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "styles", ()=>styles
);
var _extends = require("@babel/runtime/helpers/esm/extends");
var _extendsDefault = parcelHelpers.interopDefault(_extends);
var _objectWithoutProperties = require("@babel/runtime/helpers/esm/objectWithoutProperties");
var _objectWithoutPropertiesDefault = parcelHelpers.interopDefault(_objectWithoutProperties);
var _react = require("react");
var _propTypes = require("prop-types");
var _propTypesDefault = parcelHelpers.interopDefault(_propTypes);
var _clsx = require("clsx");
var _clsxDefault = parcelHelpers.interopDefault(_clsx);
var _utils = require("@material-ui/utils");
var _withStyles = require("../styles/withStyles");
var _withStylesDefault = parcelHelpers.interopDefault(_withStyles);
var _capitalize = require("../utils/capitalize");
var _capitalizeDefault = parcelHelpers.interopDefault(_capitalize);
var styles = function styles(theme) {
    return {
        /* Styles applied to the root element. */ root: {
            userSelect: 'none',
            width: '1em',
            height: '1em',
            display: 'inline-block',
            fill: 'currentColor',
            flexShrink: 0,
            fontSize: theme.typography.pxToRem(24),
            transition: theme.transitions.create('fill', {
                duration: theme.transitions.duration.shorter
            })
        },
        /* Styles applied to the root element if `color="primary"`. */ colorPrimary: {
            color: theme.palette.primary.main
        },
        /* Styles applied to the root element if `color="secondary"`. */ colorSecondary: {
            color: theme.palette.secondary.main
        },
        /* Styles applied to the root element if `color="action"`. */ colorAction: {
            color: theme.palette.action.active
        },
        /* Styles applied to the root element if `color="error"`. */ colorError: {
            color: theme.palette.error.main
        },
        /* Styles applied to the root element if `color="disabled"`. */ colorDisabled: {
            color: theme.palette.action.disabled
        },
        /* Styles applied to the root element if `fontSize="inherit"`. */ fontSizeInherit: {
            fontSize: 'inherit'
        },
        /* Styles applied to the root element if `fontSize="small"`. */ fontSizeSmall: {
            fontSize: theme.typography.pxToRem(20)
        },
        /* Styles applied to the root element if `fontSize="large"`. */ fontSizeLarge: {
            fontSize: theme.typography.pxToRem(35)
        }
    };
};
var SvgIcon = /*#__PURE__*/ _react.forwardRef(function SvgIcon(props, ref) {
    var children = props.children, classes = props.classes, className = props.className, _props$color = props.color, color = _props$color === void 0 ? 'inherit' : _props$color, _props$component = props.component, Component = _props$component === void 0 ? 'svg' : _props$component, _props$fontSize = props.fontSize, fontSize = _props$fontSize === void 0 ? 'medium' : _props$fontSize, htmlColor = props.htmlColor, titleAccess = props.titleAccess, _props$viewBox = props.viewBox, viewBox = _props$viewBox === void 0 ? '0 0 24 24' : _props$viewBox, other = _objectWithoutPropertiesDefault.default(props, [
        "children",
        "classes",
        "className",
        "color",
        "component",
        "fontSize",
        "htmlColor",
        "titleAccess",
        "viewBox"
    ]);
    return /*#__PURE__*/ _react.createElement(Component, _extendsDefault.default({
        className: _clsxDefault.default(classes.root, className, color !== 'inherit' && classes["color".concat(_capitalizeDefault.default(color))], fontSize !== 'default' && fontSize !== 'medium' && classes["fontSize".concat(_capitalizeDefault.default(fontSize))]),
        focusable: "false",
        viewBox: viewBox,
        color: htmlColor,
        "aria-hidden": titleAccess ? undefined : true,
        role: titleAccess ? 'img' : undefined,
        ref: ref
    }, other), children, titleAccess ? /*#__PURE__*/ _react.createElement("title", null, titleAccess) : null);
});
SvgIcon.propTypes = {
    // ----------------------------- Warning --------------------------------
    // | These PropTypes are generated from the TypeScript type definitions |
    // |     To update them edit the d.ts file and run "yarn proptypes"     |
    // ----------------------------------------------------------------------
    /**
   * Node passed into the SVG element.
   */ children: _propTypesDefault.default.node,
    /**
   * Override or extend the styles applied to the component.
   * See [CSS API](#css) below for more details.
   */ classes: _propTypesDefault.default.object,
    /**
   * @ignore
   */ className: _propTypesDefault.default.string,
    /**
   * The color of the component. It supports those theme colors that make sense for this component.
   * You can use the `htmlColor` prop to apply a color attribute to the SVG element.
   */ color: _propTypesDefault.default.oneOf([
        'action',
        'disabled',
        'error',
        'inherit',
        'primary',
        'secondary'
    ]),
    /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */ component: _propTypesDefault.default/* @typescript-to-proptypes-ignore */ .elementType,
    /**
   * The fontSize applied to the icon. Defaults to 24px, but can be configure to inherit font size.
   */ fontSize: _utils.chainPropTypes(_propTypesDefault.default.oneOf([
        'default',
        'inherit',
        'large',
        'medium',
        'small'
    ]), function(props) {
        var fontSize = props.fontSize;
        if (fontSize === 'default') throw new Error('Material-UI: `fontSize="default"` is deprecated. Use `fontSize="medium"` instead.');
        return null;
    }),
    /**
   * Applies a color attribute to the SVG element.
   */ htmlColor: _propTypesDefault.default.string,
    /**
   * The shape-rendering attribute. The behavior of the different options is described on the
   * [MDN Web Docs](https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/shape-rendering).
   * If you are having issues with blurry icons you should investigate this property.
   */ shapeRendering: _propTypesDefault.default.string,
    /**
   * Provides a human-readable title for the element that contains it.
   * https://www.w3.org/TR/SVG-access/#Equivalent
   */ titleAccess: _propTypesDefault.default.string,
    /**
   * Allows you to redefine what the coordinates without units mean inside an SVG element.
   * For example, if the SVG element is 500 (width) by 200 (height),
   * and you pass viewBox="0 0 50 20",
   * this means that the coordinates inside the SVG will go from the top left corner (0,0)
   * to bottom right (50,20) and each unit will be worth 10px.
   */ viewBox: _propTypesDefault.default.string
};
SvgIcon.muiName = 'SvgIcon';
exports.default = _withStylesDefault.default(styles, {
    name: 'MuiSvgIcon'
})(SvgIcon);

},{"@babel/runtime/helpers/esm/extends":"fTBFS","@babel/runtime/helpers/esm/objectWithoutProperties":"25tJ4","react":"21dqq","prop-types":"7wKI2","clsx":"83C22","@material-ui/utils":"54RkF","../styles/withStyles":"7U0iM","../utils/capitalize":"5AJVX","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"fsAbo":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
function debounce(func) {
    var wait = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 166;
    var timeout;
    function debounced() {
        for(var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++)args[_key] = arguments[_key];
        // eslint-disable-next-line consistent-this
        var that = this;
        var later = function later() {
            func.apply(that, args);
        };
        clearTimeout(timeout);
        timeout = setTimeout(later, wait);
    }
    debounced.clear = function() {
        clearTimeout(timeout);
    };
    return debounced;
}
exports.default = debounce;

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"loRgF":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
function deprecatedPropType(validator, reason) {
    return function(props, propName, componentName, location, propFullName) {
        var componentNameSafe = componentName || '<<anonymous>>';
        var propFullNameSafe = propFullName || propName;
        if (typeof props[propName] !== 'undefined') return new Error("The ".concat(location, " `").concat(propFullNameSafe, "` of ") + "`".concat(componentNameSafe, "` is deprecated. ").concat(reason));
        return null;
    };
}
exports.default = deprecatedPropType;

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"6dsp6":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _react = require("react");
function isMuiElement(element, muiNames) {
    return /*#__PURE__*/ _react.isValidElement(element) && muiNames.indexOf(element.type.muiName) !== -1;
}
exports.default = isMuiElement;

},{"react":"21dqq","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"lxJTm":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
function ownerDocument(node) {
    return node && node.ownerDocument || document;
}
exports.default = ownerDocument;

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"fmWv6":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _ownerDocument = require("./ownerDocument");
var _ownerDocumentDefault = parcelHelpers.interopDefault(_ownerDocument);
function ownerWindow(node) {
    var doc = _ownerDocumentDefault.default(node);
    return doc.defaultView || window;
}
exports.default = ownerWindow;

},{"./ownerDocument":"lxJTm","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"4sLw0":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
function requirePropFactory(componentNameInError) {
    var requireProp = function requireProp(requiredProp) {
        return function(props, propName, componentName, location, propFullName) {
            var propFullNameSafe = propFullName || propName;
            if (typeof props[propName] !== 'undefined' && !props[requiredProp]) return new Error("The prop `".concat(propFullNameSafe, "` of ") + "`".concat(componentNameInError, "` must be used on `").concat(requiredProp, "`."));
            return null;
        };
    };
    return requireProp;
}
exports.default = requirePropFactory;

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"6f9nb":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
function setRef(ref, value) {
    if (typeof ref === 'function') ref(value);
    else if (ref) ref.current = value;
}
exports.default = setRef;

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"bFB4I":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
function unsupportedProp(props, propName, componentName, location, propFullName) {
    var propFullNameSafe = propFullName || propName;
    if (typeof props[propName] !== 'undefined') return new Error("The prop `".concat(propFullNameSafe, "` is not supported. Please remove it."));
    return null;
}
exports.default = unsupportedProp;

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"1ORwD":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/* eslint-disable react-hooks/rules-of-hooks, react-hooks/exhaustive-deps */ var _react = require("react");
function useControlled(_ref) {
    var controlled = _ref.controlled, defaultProp = _ref.default, name = _ref.name, _ref$state = _ref.state, state = _ref$state === void 0 ? 'value' : _ref$state;
    var _React$useRef = _react.useRef(controlled !== undefined), isControlled = _React$useRef.current;
    var _React$useState = _react.useState(defaultProp), valueState = _React$useState[0], setValue = _React$useState[1];
    var value = isControlled ? controlled : valueState;
    _react.useEffect(function() {
        if (isControlled !== (controlled !== undefined)) console.error([
            "Material-UI: A component is changing the ".concat(isControlled ? '' : 'un', "controlled ").concat(state, " state of ").concat(name, " to be ").concat(isControlled ? 'un' : '', "controlled."),
            'Elements should not switch from uncontrolled to controlled (or vice versa).',
            "Decide between using a controlled or uncontrolled ".concat(name, " ") + 'element for the lifetime of the component.',
            "The nature of the state is determined during the first render, it's considered controlled if the value is not `undefined`.",
            'More info: https://fb.me/react-controlled-components'
        ].join('\n'));
    }, [
        controlled
    ]);
    var _React$useRef2 = _react.useRef(defaultProp), defaultValue = _React$useRef2.current;
    _react.useEffect(function() {
        if (!isControlled && defaultValue !== defaultProp) console.error([
            "Material-UI: A component is changing the default ".concat(state, " state of an uncontrolled ").concat(name, " after being initialized. ") + "To suppress this warning opt to use a controlled ".concat(name, ".")
        ].join('\n'));
    }, [
        JSON.stringify(defaultProp)
    ]);
    var setValueIfUncontrolled = _react.useCallback(function(newValue) {
        if (!isControlled) setValue(newValue);
    }, []);
    return [
        value,
        setValueIfUncontrolled
    ];
}
exports.default = useControlled;

},{"react":"21dqq","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"hPpih":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _react = require("react");
var useEnhancedEffect = typeof window !== 'undefined' ? _react.useLayoutEffect : _react.useEffect;
function useEventCallback(fn) {
    var ref = _react.useRef(fn);
    useEnhancedEffect(function() {
        ref.current = fn;
    });
    return _react.useCallback(function() {
        return (0, ref.current).apply(void 0, arguments);
    }, []);
}
exports.default = useEventCallback;

},{"react":"21dqq","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"kUpGa":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _react = require("react");
var _setRef = require("./setRef");
var _setRefDefault = parcelHelpers.interopDefault(_setRef);
function useForkRef(refA, refB) {
    /**
   * This will create a new function if the ref props change and are defined.
   * This means react will call the old forkRef with `null` and the new forkRef
   * with the ref. Cleanup naturally emerges from this behavior
   */ return _react.useMemo(function() {
        if (refA == null && refB == null) return null;
        return function(refValue) {
            _setRefDefault.default(refA, refValue);
            _setRefDefault.default(refB, refValue);
        };
    }, [
        refA,
        refB
    ]);
}
exports.default = useForkRef;

},{"react":"21dqq","./setRef":"6f9nb","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"crGfn":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _react = require("react");
function useId(idOverride) {
    var _React$useState = _react.useState(idOverride), defaultId = _React$useState[0], setDefaultId = _React$useState[1];
    var id = idOverride || defaultId;
    _react.useEffect(function() {
        if (defaultId == null) // Fallback to this default id when possible.
        // Use the random value for client-side rendering only.
        // We can't use it server-side.
        setDefaultId("mui-".concat(Math.round(Math.random() * 1e5)));
    }, [
        defaultId
    ]);
    return id;
}
exports.default = useId;

},{"react":"21dqq","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"lY4zJ":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "teardown", ()=>teardown
);
// based on https://github.com/WICG/focus-visible/blob/v4.1.5/src/focus-visible.js
var _react = require("react");
var _reactDom = require("react-dom");
var hadKeyboardEvent = true;
var hadFocusVisibleRecently = false;
var hadFocusVisibleRecentlyTimeout = null;
var inputTypesWhitelist = {
    text: true,
    search: true,
    url: true,
    tel: true,
    email: true,
    password: true,
    number: true,
    date: true,
    month: true,
    week: true,
    time: true,
    datetime: true,
    'datetime-local': true
};
/**
 * Computes whether the given element should automatically trigger the
 * `focus-visible` class being added, i.e. whether it should always match
 * `:focus-visible` when focused.
 * @param {Element} node
 * @return {boolean}
 */ function focusTriggersKeyboardModality(node) {
    var type = node.type, tagName = node.tagName;
    if (tagName === 'INPUT' && inputTypesWhitelist[type] && !node.readOnly) return true;
    if (tagName === 'TEXTAREA' && !node.readOnly) return true;
    if (node.isContentEditable) return true;
    return false;
}
/**
 * Keep track of our keyboard modality state with `hadKeyboardEvent`.
 * If the most recent user interaction was via the keyboard;
 * and the key press did not include a meta, alt/option, or control key;
 * then the modality is keyboard. Otherwise, the modality is not keyboard.
 * @param {KeyboardEvent} event
 */ function handleKeyDown(event) {
    if (event.metaKey || event.altKey || event.ctrlKey) return;
    hadKeyboardEvent = true;
}
/**
 * If at any point a user clicks with a pointing device, ensure that we change
 * the modality away from keyboard.
 * This avoids the situation where a user presses a key on an already focused
 * element, and then clicks on a different element, focusing it with a
 * pointing device, while we still think we're in keyboard modality.
 */ function handlePointerDown() {
    hadKeyboardEvent = false;
}
function handleVisibilityChange() {
    if (this.visibilityState === 'hidden') // If the tab becomes active again, the browser will handle calling focus
    // on the element (Safari actually calls it twice).
    // If this tab change caused a blur on an element with focus-visible,
    // re-apply the class when the user switches back to the tab.
    {
        if (hadFocusVisibleRecently) hadKeyboardEvent = true;
    }
}
function prepare(doc) {
    doc.addEventListener('keydown', handleKeyDown, true);
    doc.addEventListener('mousedown', handlePointerDown, true);
    doc.addEventListener('pointerdown', handlePointerDown, true);
    doc.addEventListener('touchstart', handlePointerDown, true);
    doc.addEventListener('visibilitychange', handleVisibilityChange, true);
}
function teardown(doc) {
    doc.removeEventListener('keydown', handleKeyDown, true);
    doc.removeEventListener('mousedown', handlePointerDown, true);
    doc.removeEventListener('pointerdown', handlePointerDown, true);
    doc.removeEventListener('touchstart', handlePointerDown, true);
    doc.removeEventListener('visibilitychange', handleVisibilityChange, true);
}
function isFocusVisible(event) {
    var target = event.target;
    try {
        return target.matches(':focus-visible');
    } catch (error) {} // browsers not implementing :focus-visible will throw a SyntaxError
    // we use our own heuristic for those browsers
    // rethrow might be better if it's not the expected error but do we really
    // want to crash if focus-visible malfunctioned?
    // no need for validFocusTarget check. the user does that by attaching it to
    // focusable events only
    return hadKeyboardEvent || focusTriggersKeyboardModality(target);
}
/**
 * Should be called if a blur event is fired on a focus-visible element
 */ function handleBlurVisible() {
    // To detect a tab/window switch, we look for a blur event followed
    // rapidly by a visibility change.
    // If we don't see a visibility change within 100ms, it's probably a
    // regular focus change.
    hadFocusVisibleRecently = true;
    window.clearTimeout(hadFocusVisibleRecentlyTimeout);
    hadFocusVisibleRecentlyTimeout = window.setTimeout(function() {
        hadFocusVisibleRecently = false;
    }, 100);
}
function useIsFocusVisible() {
    var ref = _react.useCallback(function(instance) {
        var node = _reactDom.findDOMNode(instance);
        if (node != null) prepare(node.ownerDocument);
    }, []);
    // eslint-disable-next-line react-hooks/rules-of-hooks
    _react.useDebugValue(isFocusVisible);
    return {
        isFocusVisible: isFocusVisible,
        onBlurVisible: handleBlurVisible,
        ref: ref
    };
}
exports.default = useIsFocusVisible;

},{"react":"21dqq","react-dom":"j6uA9","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"k5vZJ":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>_accordionDefault.default
);
var _accordion = require("./Accordion");
var _accordionDefault = parcelHelpers.interopDefault(_accordion);

},{"./Accordion":"fcmuz","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"fcmuz":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "styles", ()=>styles
);
var _extends = require("@babel/runtime/helpers/esm/extends");
var _extendsDefault = parcelHelpers.interopDefault(_extends);
var _toArray = require("@babel/runtime/helpers/esm/toArray");
var _toArrayDefault = parcelHelpers.interopDefault(_toArray);
var _slicedToArray = require("@babel/runtime/helpers/esm/slicedToArray");
var _slicedToArrayDefault = parcelHelpers.interopDefault(_slicedToArray);
var _objectWithoutProperties = require("@babel/runtime/helpers/esm/objectWithoutProperties");
var _objectWithoutPropertiesDefault = parcelHelpers.interopDefault(_objectWithoutProperties);
var _react = require("react");
var _reactIs = require("react-is");
var _propTypes = require("prop-types");
var _propTypesDefault = parcelHelpers.interopDefault(_propTypes);
var _clsx = require("clsx");
var _clsxDefault = parcelHelpers.interopDefault(_clsx);
var _utils = require("@material-ui/utils");
var _collapse = require("../Collapse");
var _collapseDefault = parcelHelpers.interopDefault(_collapse);
var _paper = require("../Paper");
var _paperDefault = parcelHelpers.interopDefault(_paper);
var _withStyles = require("../styles/withStyles");
var _withStylesDefault = parcelHelpers.interopDefault(_withStyles);
var _accordionContext = require("./AccordionContext");
var _accordionContextDefault = parcelHelpers.interopDefault(_accordionContext);
var _useControlled = require("../utils/useControlled");
var _useControlledDefault = parcelHelpers.interopDefault(_useControlled);
var styles = function styles(theme) {
    var transition = {
        duration: theme.transitions.duration.shortest
    };
    return {
        /* Styles applied to the root element. */ root: {
            position: 'relative',
            transition: theme.transitions.create([
                'margin'
            ], transition),
            '&:before': {
                position: 'absolute',
                left: 0,
                top: -1,
                right: 0,
                height: 1,
                content: '""',
                opacity: 1,
                backgroundColor: theme.palette.divider,
                transition: theme.transitions.create([
                    'opacity',
                    'background-color'
                ], transition)
            },
            '&:first-child': {
                '&:before': {
                    display: 'none'
                }
            },
            '&$expanded': {
                margin: '16px 0',
                '&:first-child': {
                    marginTop: 0
                },
                '&:last-child': {
                    marginBottom: 0
                },
                '&:before': {
                    opacity: 0
                }
            },
            '&$expanded + &': {
                '&:before': {
                    display: 'none'
                }
            },
            '&$disabled': {
                backgroundColor: theme.palette.action.disabledBackground
            }
        },
        /* Styles applied to the root element if `square={false}`. */ rounded: {
            borderRadius: 0,
            '&:first-child': {
                borderTopLeftRadius: theme.shape.borderRadius,
                borderTopRightRadius: theme.shape.borderRadius
            },
            '&:last-child': {
                borderBottomLeftRadius: theme.shape.borderRadius,
                borderBottomRightRadius: theme.shape.borderRadius,
                // Fix a rendering issue on Edge
                '@supports (-ms-ime-align: auto)': {
                    borderBottomLeftRadius: 0,
                    borderBottomRightRadius: 0
                }
            }
        },
        /* Styles applied to the root element if `expanded={true}`. */ expanded: {},
        /* Styles applied to the root element if `disabled={true}`. */ disabled: {}
    };
};
var Accordion = /*#__PURE__*/ _react.forwardRef(function Accordion(props, ref) {
    var childrenProp = props.children, classes = props.classes, className = props.className, _props$defaultExpande = props.defaultExpanded, defaultExpanded = _props$defaultExpande === void 0 ? false : _props$defaultExpande, _props$disabled = props.disabled, disabled = _props$disabled === void 0 ? false : _props$disabled, expandedProp = props.expanded, onChange = props.onChange, _props$square = props.square, square = _props$square === void 0 ? false : _props$square, _props$TransitionComp = props.TransitionComponent, TransitionComponent = _props$TransitionComp === void 0 ? _collapseDefault.default : _props$TransitionComp, TransitionProps = props.TransitionProps, other = _objectWithoutPropertiesDefault.default(props, [
        "children",
        "classes",
        "className",
        "defaultExpanded",
        "disabled",
        "expanded",
        "onChange",
        "square",
        "TransitionComponent",
        "TransitionProps"
    ]);
    var _useControlled1 = _useControlledDefault.default({
        controlled: expandedProp,
        default: defaultExpanded,
        name: 'Accordion',
        state: 'expanded'
    }), _useControlled2 = _slicedToArrayDefault.default(_useControlled1, 2), expanded = _useControlled2[0], setExpandedState = _useControlled2[1];
    var handleChange = _react.useCallback(function(event) {
        setExpandedState(!expanded);
        if (onChange) onChange(event, !expanded);
    }, [
        expanded,
        onChange,
        setExpandedState
    ]);
    var _React$Children$toArr = _react.Children.toArray(childrenProp), _React$Children$toArr2 = _toArrayDefault.default(_React$Children$toArr), summary = _React$Children$toArr2[0], children = _React$Children$toArr2.slice(1);
    var contextValue = _react.useMemo(function() {
        return {
            expanded: expanded,
            disabled: disabled,
            toggle: handleChange
        };
    }, [
        expanded,
        disabled,
        handleChange
    ]);
    return /*#__PURE__*/ _react.createElement(_paperDefault.default, _extendsDefault.default({
        className: _clsxDefault.default(classes.root, className, expanded && classes.expanded, disabled && classes.disabled, !square && classes.rounded),
        ref: ref,
        square: square
    }, other), /*#__PURE__*/ _react.createElement(_accordionContextDefault.default.Provider, {
        value: contextValue
    }, summary), /*#__PURE__*/ _react.createElement(TransitionComponent, _extendsDefault.default({
        in: expanded,
        timeout: "auto"
    }, TransitionProps), /*#__PURE__*/ _react.createElement("div", {
        "aria-labelledby": summary.props.id,
        id: summary.props['aria-controls'],
        role: "region"
    }, children)));
});
Accordion.propTypes = {
    // ----------------------------- Warning --------------------------------
    // | These PropTypes are generated from the TypeScript type definitions |
    // |     To update them edit the d.ts file and run "yarn proptypes"     |
    // ----------------------------------------------------------------------
    /**
   * The content of the accordion.
   */ children: _utils.chainPropTypes(_propTypesDefault.default.node.isRequired, function(props) {
        var summary = _react.Children.toArray(props.children)[0];
        if (_reactIs.isFragment(summary)) return new Error("Material-UI: The Accordion doesn't accept a Fragment as a child. Consider providing an array instead.");
        if (!/*#__PURE__*/ _react.isValidElement(summary)) return new Error('Material-UI: Expected the first child of Accordion to be a valid element.');
        return null;
    }),
    /**
   * Override or extend the styles applied to the component.
   * See [CSS API](#css) below for more details.
   */ classes: _propTypesDefault.default.object,
    /**
   * @ignore
   */ className: _propTypesDefault.default.string,
    /**
   * If `true`, expands the accordion by default.
   */ defaultExpanded: _propTypesDefault.default.bool,
    /**
   * If `true`, the accordion will be displayed in a disabled state.
   */ disabled: _propTypesDefault.default.bool,
    /**
   * If `true`, expands the accordion, otherwise collapse it.
   * Setting this prop enables control over the accordion.
   */ expanded: _propTypesDefault.default.bool,
    /**
   * Callback fired when the expand/collapse state is changed.
   *
   * @param {object} event The event source of the callback.
   * @param {boolean} expanded The `expanded` state of the accordion.
   */ onChange: _propTypesDefault.default.func,
    /**
   * If `true`, rounded corners are disabled.
   */ square: _propTypesDefault.default.bool,
    /**
   * The component used for the collapse effect.
   * [Follow this guide](/components/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.
   */ TransitionComponent: _propTypesDefault.default.elementType,
    /**
   * Props applied to the [`Transition`](http://reactcommunity.org/react-transition-group/transition#Transition-props) element.
   */ TransitionProps: _propTypesDefault.default.object
};
exports.default = _withStylesDefault.default(styles, {
    name: 'MuiAccordion'
})(Accordion);

},{"@babel/runtime/helpers/esm/extends":"fTBFS","@babel/runtime/helpers/esm/toArray":"cbR4G","@babel/runtime/helpers/esm/slicedToArray":"cBZWN","@babel/runtime/helpers/esm/objectWithoutProperties":"25tJ4","react":"21dqq","react-is":"63mDj","prop-types":"7wKI2","clsx":"83C22","@material-ui/utils":"54RkF","../Collapse":"1KqGq","../Paper":"j0s2L","../styles/withStyles":"7U0iM","./AccordionContext":"kkvcp","../utils/useControlled":"1ORwD","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"cbR4G":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _arrayWithHolesJs = require("./arrayWithHoles.js");
var _arrayWithHolesJsDefault = parcelHelpers.interopDefault(_arrayWithHolesJs);
var _iterableToArrayJs = require("./iterableToArray.js");
var _iterableToArrayJsDefault = parcelHelpers.interopDefault(_iterableToArrayJs);
var _unsupportedIterableToArrayJs = require("./unsupportedIterableToArray.js");
var _unsupportedIterableToArrayJsDefault = parcelHelpers.interopDefault(_unsupportedIterableToArrayJs);
var _nonIterableRestJs = require("./nonIterableRest.js");
var _nonIterableRestJsDefault = parcelHelpers.interopDefault(_nonIterableRestJs);
function _toArray(arr) {
    return _arrayWithHolesJsDefault.default(arr) || _iterableToArrayJsDefault.default(arr) || _unsupportedIterableToArrayJsDefault.default(arr) || _nonIterableRestJsDefault.default();
}
exports.default = _toArray;

},{"./arrayWithHoles.js":"jY0ns","./iterableToArray.js":"61qSr","./unsupportedIterableToArray.js":"1TZRB","./nonIterableRest.js":"cUFPt","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"63mDj":[function(require,module,exports) {
'use strict';
module.exports = require('./cjs/react-is.development.js');

},{"./cjs/react-is.development.js":"aLA7F"}],"aLA7F":[function(require,module,exports) {
/** @license React v17.0.2
 * react-is.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ 'use strict';
(function() {
    // ATTENTION
    // When adding new symbols to this file,
    // Please consider also adding to 'react-devtools-shared/src/backend/ReactSymbols'
    // The Symbol used to tag the ReactElement-like types. If there is no native Symbol
    // nor polyfill, then a plain number is used for performance.
    var REACT_ELEMENT_TYPE = 0xeac7;
    var REACT_PORTAL_TYPE = 0xeaca;
    var REACT_FRAGMENT_TYPE = 0xeacb;
    var REACT_STRICT_MODE_TYPE = 0xeacc;
    var REACT_PROFILER_TYPE = 0xead2;
    var REACT_PROVIDER_TYPE = 0xeacd;
    var REACT_CONTEXT_TYPE = 0xeace;
    var REACT_FORWARD_REF_TYPE = 0xead0;
    var REACT_SUSPENSE_TYPE = 0xead1;
    var REACT_SUSPENSE_LIST_TYPE = 0xead8;
    var REACT_MEMO_TYPE = 0xead3;
    var REACT_LAZY_TYPE = 0xead4;
    var REACT_BLOCK_TYPE = 0xead9;
    var REACT_SERVER_BLOCK_TYPE = 0xeada;
    var REACT_FUNDAMENTAL_TYPE = 0xead5;
    var REACT_SCOPE_TYPE = 0xead7;
    var REACT_OPAQUE_ID_TYPE = 0xeae0;
    var REACT_DEBUG_TRACING_MODE_TYPE = 0xeae1;
    var REACT_OFFSCREEN_TYPE = 0xeae2;
    var REACT_LEGACY_HIDDEN_TYPE = 0xeae3;
    if (typeof Symbol === 'function' && Symbol.for) {
        var symbolFor = Symbol.for;
        REACT_ELEMENT_TYPE = symbolFor('react.element');
        REACT_PORTAL_TYPE = symbolFor('react.portal');
        REACT_FRAGMENT_TYPE = symbolFor('react.fragment');
        REACT_STRICT_MODE_TYPE = symbolFor('react.strict_mode');
        REACT_PROFILER_TYPE = symbolFor('react.profiler');
        REACT_PROVIDER_TYPE = symbolFor('react.provider');
        REACT_CONTEXT_TYPE = symbolFor('react.context');
        REACT_FORWARD_REF_TYPE = symbolFor('react.forward_ref');
        REACT_SUSPENSE_TYPE = symbolFor('react.suspense');
        REACT_SUSPENSE_LIST_TYPE = symbolFor('react.suspense_list');
        REACT_MEMO_TYPE = symbolFor('react.memo');
        REACT_LAZY_TYPE = symbolFor('react.lazy');
        REACT_BLOCK_TYPE = symbolFor('react.block');
        REACT_SERVER_BLOCK_TYPE = symbolFor('react.server.block');
        REACT_FUNDAMENTAL_TYPE = symbolFor('react.fundamental');
        REACT_SCOPE_TYPE = symbolFor('react.scope');
        REACT_OPAQUE_ID_TYPE = symbolFor('react.opaque.id');
        REACT_DEBUG_TRACING_MODE_TYPE = symbolFor('react.debug_trace_mode');
        REACT_OFFSCREEN_TYPE = symbolFor('react.offscreen');
        REACT_LEGACY_HIDDEN_TYPE = symbolFor('react.legacy_hidden');
    }
    // Filter certain DOM attributes (e.g. src, href) if their values are empty strings.
    var enableScopeAPI = false; // Experimental Create Event Handle API.
    function isValidElementType(type) {
        if (typeof type === 'string' || typeof type === 'function') return true;
         // Note: typeof might be other than 'symbol' or 'number' (e.g. if it's a polyfill).
        if (type === REACT_FRAGMENT_TYPE || type === REACT_PROFILER_TYPE || type === REACT_DEBUG_TRACING_MODE_TYPE || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || type === REACT_LEGACY_HIDDEN_TYPE || enableScopeAPI) return true;
        if (typeof type === 'object' && type !== null) {
            if (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || type.$$typeof === REACT_FUNDAMENTAL_TYPE || type.$$typeof === REACT_BLOCK_TYPE || type[0] === REACT_SERVER_BLOCK_TYPE) return true;
        }
        return false;
    }
    function typeOf(object) {
        if (typeof object === 'object' && object !== null) {
            var $$typeof = object.$$typeof;
            switch($$typeof){
                case REACT_ELEMENT_TYPE:
                    var type = object.type;
                    switch(type){
                        case REACT_FRAGMENT_TYPE:
                        case REACT_PROFILER_TYPE:
                        case REACT_STRICT_MODE_TYPE:
                        case REACT_SUSPENSE_TYPE:
                        case REACT_SUSPENSE_LIST_TYPE:
                            return type;
                        default:
                            var $$typeofType = type && type.$$typeof;
                            switch($$typeofType){
                                case REACT_CONTEXT_TYPE:
                                case REACT_FORWARD_REF_TYPE:
                                case REACT_LAZY_TYPE:
                                case REACT_MEMO_TYPE:
                                case REACT_PROVIDER_TYPE:
                                    return $$typeofType;
                                default:
                                    return $$typeof;
                            }
                    }
                case REACT_PORTAL_TYPE:
                    return $$typeof;
            }
        }
        return undefined;
    }
    var ContextConsumer = REACT_CONTEXT_TYPE;
    var ContextProvider = REACT_PROVIDER_TYPE;
    var Element = REACT_ELEMENT_TYPE;
    var ForwardRef = REACT_FORWARD_REF_TYPE;
    var Fragment = REACT_FRAGMENT_TYPE;
    var Lazy = REACT_LAZY_TYPE;
    var Memo = REACT_MEMO_TYPE;
    var Portal = REACT_PORTAL_TYPE;
    var Profiler = REACT_PROFILER_TYPE;
    var StrictMode = REACT_STRICT_MODE_TYPE;
    var Suspense = REACT_SUSPENSE_TYPE;
    var hasWarnedAboutDeprecatedIsAsyncMode = false;
    var hasWarnedAboutDeprecatedIsConcurrentMode = false; // AsyncMode should be deprecated
    function isAsyncMode(object) {
        if (!hasWarnedAboutDeprecatedIsAsyncMode) {
            hasWarnedAboutDeprecatedIsAsyncMode = true; // Using console['warn'] to evade Babel and ESLint
            console['warn']("The ReactIs.isAsyncMode() alias has been deprecated, and will be removed in React 18+.");
        }
        return false;
    }
    function isConcurrentMode(object) {
        if (!hasWarnedAboutDeprecatedIsConcurrentMode) {
            hasWarnedAboutDeprecatedIsConcurrentMode = true; // Using console['warn'] to evade Babel and ESLint
            console['warn']("The ReactIs.isConcurrentMode() alias has been deprecated, and will be removed in React 18+.");
        }
        return false;
    }
    function isContextConsumer(object) {
        return typeOf(object) === REACT_CONTEXT_TYPE;
    }
    function isContextProvider(object) {
        return typeOf(object) === REACT_PROVIDER_TYPE;
    }
    function isElement(object) {
        return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
    }
    function isForwardRef(object) {
        return typeOf(object) === REACT_FORWARD_REF_TYPE;
    }
    function isFragment(object) {
        return typeOf(object) === REACT_FRAGMENT_TYPE;
    }
    function isLazy(object) {
        return typeOf(object) === REACT_LAZY_TYPE;
    }
    function isMemo(object) {
        return typeOf(object) === REACT_MEMO_TYPE;
    }
    function isPortal(object) {
        return typeOf(object) === REACT_PORTAL_TYPE;
    }
    function isProfiler(object) {
        return typeOf(object) === REACT_PROFILER_TYPE;
    }
    function isStrictMode(object) {
        return typeOf(object) === REACT_STRICT_MODE_TYPE;
    }
    function isSuspense(object) {
        return typeOf(object) === REACT_SUSPENSE_TYPE;
    }
    exports.ContextConsumer = ContextConsumer;
    exports.ContextProvider = ContextProvider;
    exports.Element = Element;
    exports.ForwardRef = ForwardRef;
    exports.Fragment = Fragment;
    exports.Lazy = Lazy;
    exports.Memo = Memo;
    exports.Portal = Portal;
    exports.Profiler = Profiler;
    exports.StrictMode = StrictMode;
    exports.Suspense = Suspense;
    exports.isAsyncMode = isAsyncMode;
    exports.isConcurrentMode = isConcurrentMode;
    exports.isContextConsumer = isContextConsumer;
    exports.isContextProvider = isContextProvider;
    exports.isElement = isElement;
    exports.isForwardRef = isForwardRef;
    exports.isFragment = isFragment;
    exports.isLazy = isLazy;
    exports.isMemo = isMemo;
    exports.isPortal = isPortal;
    exports.isProfiler = isProfiler;
    exports.isStrictMode = isStrictMode;
    exports.isSuspense = isSuspense;
    exports.isValidElementType = isValidElementType;
    exports.typeOf = typeOf;
})();

},{}],"1KqGq":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>_collapseDefault.default
);
var _collapse = require("./Collapse");
var _collapseDefault = parcelHelpers.interopDefault(_collapse);

},{"./Collapse":"1hhw5","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"1hhw5":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "styles", ()=>styles
);
var _extends = require("@babel/runtime/helpers/esm/extends");
var _extendsDefault = parcelHelpers.interopDefault(_extends);
var _slicedToArray = require("@babel/runtime/helpers/esm/slicedToArray");
var _slicedToArrayDefault = parcelHelpers.interopDefault(_slicedToArray);
var _objectWithoutProperties = require("@babel/runtime/helpers/esm/objectWithoutProperties");
var _objectWithoutPropertiesDefault = parcelHelpers.interopDefault(_objectWithoutProperties);
var _react = require("react");
var _clsx = require("clsx");
var _clsxDefault = parcelHelpers.interopDefault(_clsx);
var _propTypes = require("prop-types");
var _propTypesDefault = parcelHelpers.interopDefault(_propTypes);
var _utils = require("@material-ui/utils");
var _reactTransitionGroup = require("react-transition-group");
var _withStyles = require("../styles/withStyles");
var _withStylesDefault = parcelHelpers.interopDefault(_withStyles);
var _transitions = require("../styles/transitions");
var _deprecatedPropType = require("../utils/deprecatedPropType");
var _deprecatedPropTypeDefault = parcelHelpers.interopDefault(_deprecatedPropType);
var _utils1 = require("../transitions/utils");
var _useTheme = require("../styles/useTheme");
var _useThemeDefault = parcelHelpers.interopDefault(_useTheme);
var _utils2 = require("../utils");
var styles = function styles(theme) {
    return {
        /* Styles applied to the root element. */ root: {
            height: 0,
            overflow: 'hidden',
            transition: theme.transitions.create('height')
        },
        /* Styles applied to the root element when the transition has entered. */ entered: {
            height: 'auto',
            overflow: 'visible'
        },
        /* Styles applied to the root element when the transition has exited and `collapsedSize` != 0px. */ hidden: {
            visibility: 'hidden'
        },
        /* Styles applied to the outer wrapper element. */ wrapper: {
            // Hack to get children with a negative margin to not falsify the height computation.
            display: 'flex'
        },
        /* Styles applied to the inner wrapper element. */ wrapperInner: {
            width: '100%'
        }
    };
};
/**
 * The Collapse transition is used by the
 * [Vertical Stepper](/components/steppers/#vertical-stepper) StepContent component.
 * It uses [react-transition-group](https://github.com/reactjs/react-transition-group) internally.
 */ var Collapse = /*#__PURE__*/ _react.forwardRef(function Collapse(props, ref) {
    var children = props.children, classes = props.classes, className = props.className, collapsedHeight = props.collapsedHeight, _props$collapsedSize = props.collapsedSize, collapsedSizeProp = _props$collapsedSize === void 0 ? '0px' : _props$collapsedSize, _props$component = props.component, Component = _props$component === void 0 ? 'div' : _props$component, _props$disableStrictM = props.disableStrictModeCompat, disableStrictModeCompat = _props$disableStrictM === void 0 ? false : _props$disableStrictM, inProp = props.in, onEnter = props.onEnter, onEntered = props.onEntered, onEntering = props.onEntering, onExit = props.onExit, onExited = props.onExited, onExiting = props.onExiting, style = props.style, _props$timeout = props.timeout, timeout = _props$timeout === void 0 ? _transitions.duration.standard : _props$timeout, _props$TransitionComp = props.TransitionComponent, TransitionComponent = _props$TransitionComp === void 0 ? _reactTransitionGroup.Transition : _props$TransitionComp, other = _objectWithoutPropertiesDefault.default(props, [
        "children",
        "classes",
        "className",
        "collapsedHeight",
        "collapsedSize",
        "component",
        "disableStrictModeCompat",
        "in",
        "onEnter",
        "onEntered",
        "onEntering",
        "onExit",
        "onExited",
        "onExiting",
        "style",
        "timeout",
        "TransitionComponent"
    ]);
    var theme = _useThemeDefault.default();
    var timer = _react.useRef();
    var wrapperRef = _react.useRef(null);
    var autoTransitionDuration = _react.useRef();
    var collapsedSize = typeof (collapsedHeight || collapsedSizeProp) === 'number' ? "".concat(collapsedHeight || collapsedSizeProp, "px") : collapsedHeight || collapsedSizeProp;
    _react.useEffect(function() {
        return function() {
            clearTimeout(timer.current);
        };
    }, []);
    var enableStrictModeCompat = theme.unstable_strictMode && !disableStrictModeCompat;
    var nodeRef = _react.useRef(null);
    var handleRef = _utils2.useForkRef(ref, enableStrictModeCompat ? nodeRef : undefined);
    var normalizedTransitionCallback = function normalizedTransitionCallback(callback) {
        return function(nodeOrAppearing, maybeAppearing) {
            if (callback) {
                var _ref = enableStrictModeCompat ? [
                    nodeRef.current,
                    nodeOrAppearing
                ] : [
                    nodeOrAppearing,
                    maybeAppearing
                ], _ref2 = _slicedToArrayDefault.default(_ref, 2), node = _ref2[0], isAppearing = _ref2[1]; // onEnterXxx and onExitXxx callbacks have a different arguments.length value.
                if (isAppearing === undefined) callback(node);
                else callback(node, isAppearing);
            }
        };
    };
    var handleEnter = normalizedTransitionCallback(function(node, isAppearing) {
        node.style.height = collapsedSize;
        if (onEnter) onEnter(node, isAppearing);
    });
    var handleEntering = normalizedTransitionCallback(function(node, isAppearing) {
        var wrapperHeight = wrapperRef.current ? wrapperRef.current.clientHeight : 0;
        var _getTransitionProps = _utils1.getTransitionProps({
            style: style,
            timeout: timeout
        }, {
            mode: 'enter'
        }), transitionDuration = _getTransitionProps.duration;
        if (timeout === 'auto') {
            var duration2 = theme.transitions.getAutoHeightDuration(wrapperHeight);
            node.style.transitionDuration = "".concat(duration2, "ms");
            autoTransitionDuration.current = duration2;
        } else node.style.transitionDuration = typeof transitionDuration === 'string' ? transitionDuration : "".concat(transitionDuration, "ms");
        node.style.height = "".concat(wrapperHeight, "px");
        if (onEntering) onEntering(node, isAppearing);
    });
    var handleEntered = normalizedTransitionCallback(function(node, isAppearing) {
        node.style.height = 'auto';
        if (onEntered) onEntered(node, isAppearing);
    });
    var handleExit = normalizedTransitionCallback(function(node) {
        var wrapperHeight = wrapperRef.current ? wrapperRef.current.clientHeight : 0;
        node.style.height = "".concat(wrapperHeight, "px");
        if (onExit) onExit(node);
    });
    var handleExited = normalizedTransitionCallback(onExited);
    var handleExiting = normalizedTransitionCallback(function(node) {
        var wrapperHeight = wrapperRef.current ? wrapperRef.current.clientHeight : 0;
        var _getTransitionProps2 = _utils1.getTransitionProps({
            style: style,
            timeout: timeout
        }, {
            mode: 'exit'
        }), transitionDuration = _getTransitionProps2.duration;
        if (timeout === 'auto') {
            var duration2 = theme.transitions.getAutoHeightDuration(wrapperHeight);
            node.style.transitionDuration = "".concat(duration2, "ms");
            autoTransitionDuration.current = duration2;
        } else node.style.transitionDuration = typeof transitionDuration === 'string' ? transitionDuration : "".concat(transitionDuration, "ms");
        node.style.height = collapsedSize;
        if (onExiting) onExiting(node);
    });
    var addEndListener = function addEndListener(nodeOrNext, maybeNext) {
        var next = enableStrictModeCompat ? nodeOrNext : maybeNext;
        if (timeout === 'auto') timer.current = setTimeout(next, autoTransitionDuration.current || 0);
    };
    return /*#__PURE__*/ _react.createElement(TransitionComponent, _extendsDefault.default({
        in: inProp,
        onEnter: handleEnter,
        onEntered: handleEntered,
        onEntering: handleEntering,
        onExit: handleExit,
        onExited: handleExited,
        onExiting: handleExiting,
        addEndListener: addEndListener,
        nodeRef: enableStrictModeCompat ? nodeRef : undefined,
        timeout: timeout === 'auto' ? null : timeout
    }, other), function(state, childProps) {
        return /*#__PURE__*/ _react.createElement(Component, _extendsDefault.default({
            className: _clsxDefault.default(classes.root, classes.container, className, {
                'entered': classes.entered,
                'exited': !inProp && collapsedSize === '0px' && classes.hidden
            }[state]),
            style: _extendsDefault.default({
                minHeight: collapsedSize
            }, style),
            ref: handleRef
        }, childProps), /*#__PURE__*/ _react.createElement("div", {
            className: classes.wrapper,
            ref: wrapperRef
        }, /*#__PURE__*/ _react.createElement("div", {
            className: classes.wrapperInner
        }, children)));
    });
});
Collapse.propTypes = {
    // ----------------------------- Warning --------------------------------
    // | These PropTypes are generated from the TypeScript type definitions |
    // |     To update them edit the d.ts file and run "yarn proptypes"     |
    // ----------------------------------------------------------------------
    /**
   * The content node to be collapsed.
   */ children: _propTypesDefault.default.node,
    /**
   * Override or extend the styles applied to the component.
   * See [CSS API](#css) below for more details.
   */ classes: _utils.chainPropTypes(_propTypesDefault.default.object, function(props) {
        if (props.classes && props.classes.container) throw new Error([
            'Material-UI: the classes.container key is deprecated.',
            'Use `classes.root` instead',
            'The name of the pseudo-class was changed for consistency.'
        ].join('\n'));
        return null;
    }),
    /**
   * @ignore
   */ className: _propTypesDefault.default.string,
    /**
   * The height of the container when collapsed.
   * @deprecated The prop was renamed to support the addition of horizontal orientation, use `collapsedSize` instead.
   */ collapsedHeight: _deprecatedPropTypeDefault.default(_propTypesDefault.default.oneOfType([
        _propTypesDefault.default.number,
        _propTypesDefault.default.string
    ]), 'The prop was renamed to support the vertical orientation, use `collapsedSize` instead'),
    /**
   * The height of the container when collapsed.
   */ collapsedSize: _propTypesDefault.default.oneOfType([
        _propTypesDefault.default.number,
        _propTypesDefault.default.string
    ]),
    /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */ component: _propTypesDefault.default/* @typescript-to-proptypes-ignore */ .elementType,
    /**
   * Enable this prop if you encounter 'Function components cannot be given refs',
   * use `unstable_createStrictModeTheme`,
   * and can't forward the ref in the passed `Component`.
   */ disableStrictModeCompat: _propTypesDefault.default.bool,
    /**
   * If `true`, the component will transition in.
   */ in: _propTypesDefault.default.bool,
    /**
   * @ignore
   */ onEnter: _propTypesDefault.default.func,
    /**
   * @ignore
   */ onEntered: _propTypesDefault.default.func,
    /**
   * @ignore
   */ onEntering: _propTypesDefault.default.func,
    /**
   * @ignore
   */ onExit: _propTypesDefault.default.func,
    /**
   * @ignore
   */ onExited: _propTypesDefault.default.func,
    /**
   * @ignore
   */ onExiting: _propTypesDefault.default.func,
    /**
   * @ignore
   */ style: _propTypesDefault.default.object,
    /**
   * The duration for the transition, in milliseconds.
   * You may specify a single timeout for all transitions, or individually with an object.
   *
   * Set to 'auto' to automatically calculate transition time based on height.
   */ timeout: _propTypesDefault.default.oneOfType([
        _propTypesDefault.default.oneOf([
            'auto'
        ]),
        _propTypesDefault.default.number,
        _propTypesDefault.default.shape({
            appear: _propTypesDefault.default.number,
            enter: _propTypesDefault.default.number,
            exit: _propTypesDefault.default.number
        })
    ])
};
Collapse.muiSupportAuto = true;
exports.default = _withStylesDefault.default(styles, {
    name: 'MuiCollapse'
})(Collapse);

},{"@babel/runtime/helpers/esm/extends":"fTBFS","@babel/runtime/helpers/esm/slicedToArray":"cBZWN","@babel/runtime/helpers/esm/objectWithoutProperties":"25tJ4","react":"21dqq","clsx":"83C22","prop-types":"7wKI2","@material-ui/utils":"54RkF","react-transition-group":"fZSkB","../styles/withStyles":"7U0iM","../styles/transitions":"c5294","../utils/deprecatedPropType":"loRgF","../transitions/utils":"ixDXW","../styles/useTheme":"kWUCn","../utils":"7Laiy","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"fZSkB":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "CSSTransition", ()=>_csstransitionDefault.default
);
parcelHelpers.export(exports, "ReplaceTransition", ()=>_replaceTransitionDefault.default
);
parcelHelpers.export(exports, "SwitchTransition", ()=>_switchTransitionDefault.default
);
parcelHelpers.export(exports, "TransitionGroup", ()=>_transitionGroupDefault.default
);
parcelHelpers.export(exports, "Transition", ()=>_transitionDefault.default
);
parcelHelpers.export(exports, "config", ()=>_configDefault.default
);
var _csstransition = require("./CSSTransition");
var _csstransitionDefault = parcelHelpers.interopDefault(_csstransition);
var _replaceTransition = require("./ReplaceTransition");
var _replaceTransitionDefault = parcelHelpers.interopDefault(_replaceTransition);
var _switchTransition = require("./SwitchTransition");
var _switchTransitionDefault = parcelHelpers.interopDefault(_switchTransition);
var _transitionGroup = require("./TransitionGroup");
var _transitionGroupDefault = parcelHelpers.interopDefault(_transitionGroup);
var _transition = require("./Transition");
var _transitionDefault = parcelHelpers.interopDefault(_transition);
var _config = require("./config");
var _configDefault = parcelHelpers.interopDefault(_config);

},{"./CSSTransition":false,"./ReplaceTransition":false,"./SwitchTransition":false,"./TransitionGroup":"5mvFs","./Transition":"cKsrS","./config":"cepoZ","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"5mvFs":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _objectWithoutPropertiesLoose = require("@babel/runtime/helpers/esm/objectWithoutPropertiesLoose");
var _objectWithoutPropertiesLooseDefault = parcelHelpers.interopDefault(_objectWithoutPropertiesLoose);
var _extends = require("@babel/runtime/helpers/esm/extends");
var _extendsDefault = parcelHelpers.interopDefault(_extends);
var _assertThisInitialized = require("@babel/runtime/helpers/esm/assertThisInitialized");
var _assertThisInitializedDefault = parcelHelpers.interopDefault(_assertThisInitialized);
var _inheritsLoose = require("@babel/runtime/helpers/esm/inheritsLoose");
var _inheritsLooseDefault = parcelHelpers.interopDefault(_inheritsLoose);
var _propTypes = require("prop-types");
var _propTypesDefault = parcelHelpers.interopDefault(_propTypes);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _transitionGroupContext = require("./TransitionGroupContext");
var _transitionGroupContextDefault = parcelHelpers.interopDefault(_transitionGroupContext);
var _childMapping = require("./utils/ChildMapping");
var values = Object.values || function(obj) {
    return Object.keys(obj).map(function(k) {
        return obj[k];
    });
};
var defaultProps = {
    component: 'div',
    childFactory: function childFactory(child) {
        return child;
    }
};
/**
 * The `<TransitionGroup>` component manages a set of transition components
 * (`<Transition>` and `<CSSTransition>`) in a list. Like with the transition
 * components, `<TransitionGroup>` is a state machine for managing the mounting
 * and unmounting of components over time.
 *
 * Consider the example below. As items are removed or added to the TodoList the
 * `in` prop is toggled automatically by the `<TransitionGroup>`.
 *
 * Note that `<TransitionGroup>`  does not define any animation behavior!
 * Exactly _how_ a list item animates is up to the individual transition
 * component. This means you can mix and match animations across different list
 * items.
 */ var TransitionGroup = /*#__PURE__*/ function(_React$Component) {
    _inheritsLooseDefault.default(TransitionGroup1, _React$Component);
    function TransitionGroup1(props, context) {
        var _this;
        _this = _React$Component.call(this, props, context) || this;
        var handleExited = _this.handleExited.bind(_assertThisInitializedDefault.default(_this)); // Initial children should all be entering, dependent on appear
        _this.state = {
            contextValue: {
                isMounting: true
            },
            handleExited: handleExited,
            firstRender: true
        };
        return _this;
    }
    var _proto = TransitionGroup1.prototype;
    _proto.componentDidMount = function componentDidMount() {
        this.mounted = true;
        this.setState({
            contextValue: {
                isMounting: false
            }
        });
    };
    _proto.componentWillUnmount = function componentWillUnmount() {
        this.mounted = false;
    };
    TransitionGroup1.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps, _ref) {
        var prevChildMapping = _ref.children, handleExited = _ref.handleExited, firstRender = _ref.firstRender;
        return {
            children: firstRender ? _childMapping.getInitialChildMapping(nextProps, handleExited) : _childMapping.getNextChildMapping(nextProps, prevChildMapping, handleExited),
            firstRender: false
        };
    } // node is `undefined` when user provided `nodeRef` prop
    ;
    _proto.handleExited = function handleExited(child, node) {
        var currentChildMapping = _childMapping.getChildMapping(this.props.children);
        if (child.key in currentChildMapping) return;
        if (child.props.onExited) child.props.onExited(node);
        if (this.mounted) this.setState(function(state) {
            var children = _extendsDefault.default({}, state.children);
            delete children[child.key];
            return {
                children: children
            };
        });
    };
    _proto.render = function render() {
        var _this$props = this.props, Component = _this$props.component, childFactory = _this$props.childFactory, props = _objectWithoutPropertiesLooseDefault.default(_this$props, [
            "component",
            "childFactory"
        ]);
        var contextValue = this.state.contextValue;
        var children = values(this.state.children).map(childFactory);
        delete props.appear;
        delete props.enter;
        delete props.exit;
        if (Component === null) return /*#__PURE__*/ _reactDefault.default.createElement(_transitionGroupContextDefault.default.Provider, {
            value: contextValue
        }, children);
        return /*#__PURE__*/ _reactDefault.default.createElement(_transitionGroupContextDefault.default.Provider, {
            value: contextValue
        }, /*#__PURE__*/ _reactDefault.default.createElement(Component, props, children));
    };
    return TransitionGroup1;
}(_reactDefault.default.Component);
TransitionGroup.propTypes = {
    /**
   * `<TransitionGroup>` renders a `<div>` by default. You can change this
   * behavior by providing a `component` prop.
   * If you use React v16+ and would like to avoid a wrapping `<div>` element
   * you can pass in `component={null}`. This is useful if the wrapping div
   * borks your css styles.
   */ component: _propTypesDefault.default.any,
    /**
   * A set of `<Transition>` components, that are toggled `in` and out as they
   * leave. the `<TransitionGroup>` will inject specific transition props, so
   * remember to spread them through if you are wrapping the `<Transition>` as
   * with our `<Fade>` example.
   *
   * While this component is meant for multiple `Transition` or `CSSTransition`
   * children, sometimes you may want to have a single transition child with
   * content that you want to be transitioned out and in when you change it
   * (e.g. routes, images etc.) In that case you can change the `key` prop of
   * the transition child as you change its content, this will cause
   * `TransitionGroup` to transition the child out and back in.
   */ children: _propTypesDefault.default.node,
    /**
   * A convenience prop that enables or disables appear animations
   * for all children. Note that specifying this will override any defaults set
   * on individual children Transitions.
   */ appear: _propTypesDefault.default.bool,
    /**
   * A convenience prop that enables or disables enter animations
   * for all children. Note that specifying this will override any defaults set
   * on individual children Transitions.
   */ enter: _propTypesDefault.default.bool,
    /**
   * A convenience prop that enables or disables exit animations
   * for all children. Note that specifying this will override any defaults set
   * on individual children Transitions.
   */ exit: _propTypesDefault.default.bool,
    /**
   * You may need to apply reactive updates to a child as it is exiting.
   * This is generally done by using `cloneElement` however in the case of an exiting
   * child the element has already been removed and not accessible to the consumer.
   *
   * If you do need to update a child as it leaves you can provide a `childFactory`
   * to wrap every child, even the ones that are leaving.
   *
   * @type Function(child: ReactElement) -> ReactElement
   */ childFactory: _propTypesDefault.default.func
};
TransitionGroup.defaultProps = defaultProps;
exports.default = TransitionGroup;

},{"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose":"adHgr","@babel/runtime/helpers/esm/extends":"fTBFS","@babel/runtime/helpers/esm/assertThisInitialized":"iy3su","@babel/runtime/helpers/esm/inheritsLoose":"9u2Z8","prop-types":"7wKI2","react":"21dqq","./TransitionGroupContext":"47LXo","./utils/ChildMapping":"8k6ul","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"47LXo":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
exports.default = _reactDefault.default.createContext(null);

},{"react":"21dqq","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"8k6ul":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * Given `this.props.children`, return an object mapping key to child.
 *
 * @param {*} children `this.props.children`
 * @return {object} Mapping of key to child
 */ parcelHelpers.export(exports, "getChildMapping", ()=>getChildMapping
);
/**
 * When you're adding or removing children some may be added or removed in the
 * same render pass. We want to show *both* since we want to simultaneously
 * animate elements in and out. This function takes a previous set of keys
 * and a new set of keys and merges them with its best guess of the correct
 * ordering. In the future we may expose some of the utilities in
 * ReactMultiChild to make this easy, but for now React itself does not
 * directly have this concept of the union of prevChildren and nextChildren
 * so we implement it here.
 *
 * @param {object} prev prev children as returned from
 * `ReactTransitionChildMapping.getChildMapping()`.
 * @param {object} next next children as returned from
 * `ReactTransitionChildMapping.getChildMapping()`.
 * @return {object} a key set that contains all keys in `prev` and all keys
 * in `next` in a reasonable order.
 */ parcelHelpers.export(exports, "mergeChildMappings", ()=>mergeChildMappings
);
parcelHelpers.export(exports, "getInitialChildMapping", ()=>getInitialChildMapping
);
parcelHelpers.export(exports, "getNextChildMapping", ()=>getNextChildMapping
);
var _react = require("react");
function getChildMapping(children, mapFn) {
    var mapper = function mapper(child) {
        return mapFn && _react.isValidElement(child) ? mapFn(child) : child;
    };
    var result = Object.create(null);
    if (children) _react.Children.map(children, function(c) {
        return c;
    }).forEach(function(child) {
        // run the map function here instead so that the key is the computed one
        result[child.key] = mapper(child);
    });
    return result;
}
function mergeChildMappings(prev, next) {
    prev = prev || {};
    next = next || {};
    function getValueForKey(key) {
        return key in next ? next[key] : prev[key];
    } // For each key of `next`, the list of keys to insert before that key in
    // the combined list
    var nextKeysPending = Object.create(null);
    var pendingKeys = [];
    for(var prevKey in prev){
        if (prevKey in next) {
            if (pendingKeys.length) {
                nextKeysPending[prevKey] = pendingKeys;
                pendingKeys = [];
            }
        } else pendingKeys.push(prevKey);
    }
    var i;
    var childMapping = {};
    for(var nextKey in next){
        if (nextKeysPending[nextKey]) for(i = 0; i < nextKeysPending[nextKey].length; i++){
            var pendingNextKey = nextKeysPending[nextKey][i];
            childMapping[nextKeysPending[nextKey][i]] = getValueForKey(pendingNextKey);
        }
        childMapping[nextKey] = getValueForKey(nextKey);
    } // Finally, add the keys which didn't appear before any key in `next`
    for(i = 0; i < pendingKeys.length; i++)childMapping[pendingKeys[i]] = getValueForKey(pendingKeys[i]);
    return childMapping;
}
function getProp(child, prop, props) {
    return props[prop] != null ? props[prop] : child.props[prop];
}
function getInitialChildMapping(props, onExited) {
    return getChildMapping(props.children, function(child) {
        return _react.cloneElement(child, {
            onExited: onExited.bind(null, child),
            in: true,
            appear: getProp(child, 'appear', props),
            enter: getProp(child, 'enter', props),
            exit: getProp(child, 'exit', props)
        });
    });
}
function getNextChildMapping(nextProps, prevChildMapping, onExited) {
    var nextChildMapping = getChildMapping(nextProps.children);
    var children = mergeChildMappings(prevChildMapping, nextChildMapping);
    Object.keys(children).forEach(function(key) {
        var child = children[key];
        if (!_react.isValidElement(child)) return;
        var hasPrev = key in prevChildMapping;
        var hasNext = key in nextChildMapping;
        var prevChild = prevChildMapping[key];
        var isLeaving = _react.isValidElement(prevChild) && !prevChild.props.in; // item is new (entering)
        if (hasNext && (!hasPrev || isLeaving)) // console.log('entering', key)
        children[key] = _react.cloneElement(child, {
            onExited: onExited.bind(null, child),
            in: true,
            exit: getProp(child, 'exit', nextProps),
            enter: getProp(child, 'enter', nextProps)
        });
        else if (!hasNext && hasPrev && !isLeaving) // item is old (exiting)
        // console.log('leaving', key)
        children[key] = _react.cloneElement(child, {
            in: false
        });
        else if (hasNext && hasPrev && _react.isValidElement(prevChild)) // item hasn't changed transition states
        // copy over the last transition props;
        // console.log('unchanged', key)
        children[key] = _react.cloneElement(child, {
            onExited: onExited.bind(null, child),
            in: prevChild.props.in,
            exit: getProp(child, 'exit', nextProps),
            enter: getProp(child, 'enter', nextProps)
        });
    });
    return children;
}

},{"react":"21dqq","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"cKsrS":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "UNMOUNTED", ()=>UNMOUNTED
);
parcelHelpers.export(exports, "EXITED", ()=>EXITED
);
parcelHelpers.export(exports, "ENTERING", ()=>ENTERING
);
parcelHelpers.export(exports, "ENTERED", ()=>ENTERED
);
parcelHelpers.export(exports, "EXITING", ()=>EXITING
);
var _objectWithoutPropertiesLoose = require("@babel/runtime/helpers/esm/objectWithoutPropertiesLoose");
var _objectWithoutPropertiesLooseDefault = parcelHelpers.interopDefault(_objectWithoutPropertiesLoose);
var _inheritsLoose = require("@babel/runtime/helpers/esm/inheritsLoose");
var _inheritsLooseDefault = parcelHelpers.interopDefault(_inheritsLoose);
var _propTypes = require("prop-types");
var _propTypesDefault = parcelHelpers.interopDefault(_propTypes);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _reactDom = require("react-dom");
var _reactDomDefault = parcelHelpers.interopDefault(_reactDom);
var _config = require("./config");
var _configDefault = parcelHelpers.interopDefault(_config);
var _propTypes1 = require("./utils/PropTypes");
var _transitionGroupContext = require("./TransitionGroupContext");
var _transitionGroupContextDefault = parcelHelpers.interopDefault(_transitionGroupContext);
var UNMOUNTED = 'unmounted';
var EXITED = 'exited';
var ENTERING = 'entering';
var ENTERED = 'entered';
var EXITING = 'exiting';
/**
 * The Transition component lets you describe a transition from one component
 * state to another _over time_ with a simple declarative API. Most commonly
 * it's used to animate the mounting and unmounting of a component, but can also
 * be used to describe in-place transition states as well.
 *
 * ---
 *
 * **Note**: `Transition` is a platform-agnostic base component. If you're using
 * transitions in CSS, you'll probably want to use
 * [`CSSTransition`](https://reactcommunity.org/react-transition-group/css-transition)
 * instead. It inherits all the features of `Transition`, but contains
 * additional features necessary to play nice with CSS transitions (hence the
 * name of the component).
 *
 * ---
 *
 * By default the `Transition` component does not alter the behavior of the
 * component it renders, it only tracks "enter" and "exit" states for the
 * components. It's up to you to give meaning and effect to those states. For
 * example we can add styles to a component when it enters or exits:
 *
 * ```jsx
 * import { Transition } from 'react-transition-group';
 *
 * const duration = 300;
 *
 * const defaultStyle = {
 *   transition: `opacity ${duration}ms ease-in-out`,
 *   opacity: 0,
 * }
 *
 * const transitionStyles = {
 *   entering: { opacity: 1 },
 *   entered:  { opacity: 1 },
 *   exiting:  { opacity: 0 },
 *   exited:  { opacity: 0 },
 * };
 *
 * const Fade = ({ in: inProp }) => (
 *   <Transition in={inProp} timeout={duration}>
 *     {state => (
 *       <div style={{
 *         ...defaultStyle,
 *         ...transitionStyles[state]
 *       }}>
 *         I'm a fade Transition!
 *       </div>
 *     )}
 *   </Transition>
 * );
 * ```
 *
 * There are 4 main states a Transition can be in:
 *  - `'entering'`
 *  - `'entered'`
 *  - `'exiting'`
 *  - `'exited'`
 *
 * Transition state is toggled via the `in` prop. When `true` the component
 * begins the "Enter" stage. During this stage, the component will shift from
 * its current transition state, to `'entering'` for the duration of the
 * transition and then to the `'entered'` stage once it's complete. Let's take
 * the following example (we'll use the
 * [useState](https://reactjs.org/docs/hooks-reference.html#usestate) hook):
 *
 * ```jsx
 * function App() {
 *   const [inProp, setInProp] = useState(false);
 *   return (
 *     <div>
 *       <Transition in={inProp} timeout={500}>
 *         {state => (
 *           // ...
 *         )}
 *       </Transition>
 *       <button onClick={() => setInProp(true)}>
 *         Click to Enter
 *       </button>
 *     </div>
 *   );
 * }
 * ```
 *
 * When the button is clicked the component will shift to the `'entering'` state
 * and stay there for 500ms (the value of `timeout`) before it finally switches
 * to `'entered'`.
 *
 * When `in` is `false` the same thing happens except the state moves from
 * `'exiting'` to `'exited'`.
 */ var Transition = /*#__PURE__*/ function(_React$Component) {
    _inheritsLooseDefault.default(Transition1, _React$Component);
    function Transition1(props, context) {
        var _this;
        _this = _React$Component.call(this, props, context) || this;
        var parentGroup = context; // In the context of a TransitionGroup all enters are really appears
        var appear = parentGroup && !parentGroup.isMounting ? props.enter : props.appear;
        var initialStatus;
        _this.appearStatus = null;
        if (props.in) {
            if (appear) {
                initialStatus = EXITED;
                _this.appearStatus = ENTERING;
            } else initialStatus = ENTERED;
        } else if (props.unmountOnExit || props.mountOnEnter) initialStatus = UNMOUNTED;
        else initialStatus = EXITED;
        _this.state = {
            status: initialStatus
        };
        _this.nextCallback = null;
        return _this;
    }
    Transition1.getDerivedStateFromProps = function getDerivedStateFromProps(_ref, prevState) {
        var nextIn = _ref.in;
        if (nextIn && prevState.status === UNMOUNTED) return {
            status: EXITED
        };
        return null;
    } // getSnapshotBeforeUpdate(prevProps) {
    ;
    var _proto = Transition1.prototype;
    _proto.componentDidMount = function componentDidMount() {
        this.updateStatus(true, this.appearStatus);
    };
    _proto.componentDidUpdate = function componentDidUpdate(prevProps) {
        var nextStatus = null;
        if (prevProps !== this.props) {
            var status = this.state.status;
            if (this.props.in) {
                if (status !== ENTERING && status !== ENTERED) nextStatus = ENTERING;
            } else if (status === ENTERING || status === ENTERED) nextStatus = EXITING;
        }
        this.updateStatus(false, nextStatus);
    };
    _proto.componentWillUnmount = function componentWillUnmount() {
        this.cancelNextCallback();
    };
    _proto.getTimeouts = function getTimeouts() {
        var timeout = this.props.timeout;
        var exit, enter, appear;
        exit = enter = appear = timeout;
        if (timeout != null && typeof timeout !== 'number') {
            exit = timeout.exit;
            enter = timeout.enter; // TODO: remove fallback for next major
            appear = timeout.appear !== undefined ? timeout.appear : enter;
        }
        return {
            exit: exit,
            enter: enter,
            appear: appear
        };
    };
    _proto.updateStatus = function updateStatus(mounting, nextStatus) {
        if (mounting === void 0) mounting = false;
        if (nextStatus !== null) {
            // nextStatus will always be ENTERING or EXITING.
            this.cancelNextCallback();
            if (nextStatus === ENTERING) this.performEnter(mounting);
            else this.performExit();
        } else if (this.props.unmountOnExit && this.state.status === EXITED) this.setState({
            status: UNMOUNTED
        });
    };
    _proto.performEnter = function performEnter(mounting) {
        var _this2 = this;
        var enter = this.props.enter;
        var appearing = this.context ? this.context.isMounting : mounting;
        var _ref2 = this.props.nodeRef ? [
            appearing
        ] : [
            _reactDomDefault.default.findDOMNode(this),
            appearing
        ], maybeNode = _ref2[0], maybeAppearing = _ref2[1];
        var timeouts = this.getTimeouts();
        var enterTimeout = appearing ? timeouts.appear : timeouts.enter; // no enter animation skip right to ENTERED
        // if we are mounting and running this it means appear _must_ be set
        if (!mounting && !enter || _configDefault.default.disabled) {
            this.safeSetState({
                status: ENTERED
            }, function() {
                _this2.props.onEntered(maybeNode);
            });
            return;
        }
        this.props.onEnter(maybeNode, maybeAppearing);
        this.safeSetState({
            status: ENTERING
        }, function() {
            _this2.props.onEntering(maybeNode, maybeAppearing);
            _this2.onTransitionEnd(enterTimeout, function() {
                _this2.safeSetState({
                    status: ENTERED
                }, function() {
                    _this2.props.onEntered(maybeNode, maybeAppearing);
                });
            });
        });
    };
    _proto.performExit = function performExit() {
        var _this3 = this;
        var exit = this.props.exit;
        var timeouts = this.getTimeouts();
        var maybeNode = this.props.nodeRef ? undefined : _reactDomDefault.default.findDOMNode(this); // no exit animation skip right to EXITED
        if (!exit || _configDefault.default.disabled) {
            this.safeSetState({
                status: EXITED
            }, function() {
                _this3.props.onExited(maybeNode);
            });
            return;
        }
        this.props.onExit(maybeNode);
        this.safeSetState({
            status: EXITING
        }, function() {
            _this3.props.onExiting(maybeNode);
            _this3.onTransitionEnd(timeouts.exit, function() {
                _this3.safeSetState({
                    status: EXITED
                }, function() {
                    _this3.props.onExited(maybeNode);
                });
            });
        });
    };
    _proto.cancelNextCallback = function cancelNextCallback() {
        if (this.nextCallback !== null) {
            this.nextCallback.cancel();
            this.nextCallback = null;
        }
    };
    _proto.safeSetState = function safeSetState(nextState, callback) {
        // This shouldn't be necessary, but there are weird race conditions with
        // setState callbacks and unmounting in testing, so always make sure that
        // we can cancel any pending setState callbacks after we unmount.
        callback = this.setNextCallback(callback);
        this.setState(nextState, callback);
    };
    _proto.setNextCallback = function setNextCallback(callback) {
        var _this4 = this;
        var active = true;
        this.nextCallback = function(event) {
            if (active) {
                active = false;
                _this4.nextCallback = null;
                callback(event);
            }
        };
        this.nextCallback.cancel = function() {
            active = false;
        };
        return this.nextCallback;
    };
    _proto.onTransitionEnd = function onTransitionEnd(timeout, handler) {
        this.setNextCallback(handler);
        var node = this.props.nodeRef ? this.props.nodeRef.current : _reactDomDefault.default.findDOMNode(this);
        var doesNotHaveTimeoutOrListener = timeout == null && !this.props.addEndListener;
        if (!node || doesNotHaveTimeoutOrListener) {
            setTimeout(this.nextCallback, 0);
            return;
        }
        if (this.props.addEndListener) {
            var _ref3 = this.props.nodeRef ? [
                this.nextCallback
            ] : [
                node,
                this.nextCallback
            ], maybeNode = _ref3[0], maybeNextCallback = _ref3[1];
            this.props.addEndListener(maybeNode, maybeNextCallback);
        }
        if (timeout != null) setTimeout(this.nextCallback, timeout);
    };
    _proto.render = function render() {
        var status = this.state.status;
        if (status === UNMOUNTED) return null;
        var _this$props = this.props, children = _this$props.children, _in = _this$props.in, _mountOnEnter = _this$props.mountOnEnter, _unmountOnExit = _this$props.unmountOnExit, _appear = _this$props.appear, _enter = _this$props.enter, _exit = _this$props.exit, _timeout = _this$props.timeout, _addEndListener = _this$props.addEndListener, _onEnter = _this$props.onEnter, _onEntering = _this$props.onEntering, _onEntered = _this$props.onEntered, _onExit = _this$props.onExit, _onExiting = _this$props.onExiting, _onExited = _this$props.onExited, _nodeRef = _this$props.nodeRef, childProps = _objectWithoutPropertiesLooseDefault.default(_this$props, [
            "children",
            "in",
            "mountOnEnter",
            "unmountOnExit",
            "appear",
            "enter",
            "exit",
            "timeout",
            "addEndListener",
            "onEnter",
            "onEntering",
            "onEntered",
            "onExit",
            "onExiting",
            "onExited",
            "nodeRef"
        ]);
        return(/*#__PURE__*/ // allows for nested Transitions
        _reactDefault.default.createElement(_transitionGroupContextDefault.default.Provider, {
            value: null
        }, typeof children === 'function' ? children(status, childProps) : _reactDefault.default.cloneElement(_reactDefault.default.Children.only(children), childProps)));
    };
    return Transition1;
}(_reactDefault.default.Component);
Transition.contextType = _transitionGroupContextDefault.default;
Transition.propTypes = {
    /**
   * A React reference to DOM element that need to transition:
   * https://stackoverflow.com/a/51127130/4671932
   *
   *   - When `nodeRef` prop is used, `node` is not passed to callback functions
   *      (e.g. `onEnter`) because user already has direct access to the node.
   *   - When changing `key` prop of `Transition` in a `TransitionGroup` a new
   *     `nodeRef` need to be provided to `Transition` with changed `key` prop
   *     (see
   *     [test/CSSTransition-test.js](https://github.com/reactjs/react-transition-group/blob/13435f897b3ab71f6e19d724f145596f5910581c/test/CSSTransition-test.js#L362-L437)).
   */ nodeRef: _propTypesDefault.default.shape({
        current: typeof Element === 'undefined' ? _propTypesDefault.default.any : function(propValue, key, componentName, location, propFullName, secret) {
            var value = propValue[key];
            return _propTypesDefault.default.instanceOf(value && 'ownerDocument' in value ? value.ownerDocument.defaultView.Element : Element)(propValue, key, componentName, location, propFullName, secret);
        }
    }),
    /**
   * A `function` child can be used instead of a React element. This function is
   * called with the current transition status (`'entering'`, `'entered'`,
   * `'exiting'`, `'exited'`), which can be used to apply context
   * specific props to a component.
   *
   * ```jsx
   * <Transition in={this.state.in} timeout={150}>
   *   {state => (
   *     <MyComponent className={`fade fade-${state}`} />
   *   )}
   * </Transition>
   * ```
   */ children: _propTypesDefault.default.oneOfType([
        _propTypesDefault.default.func.isRequired,
        _propTypesDefault.default.element.isRequired
    ]).isRequired,
    /**
   * Show the component; triggers the enter or exit states
   */ in: _propTypesDefault.default.bool,
    /**
   * By default the child component is mounted immediately along with
   * the parent `Transition` component. If you want to "lazy mount" the component on the
   * first `in={true}` you can set `mountOnEnter`. After the first enter transition the component will stay
   * mounted, even on "exited", unless you also specify `unmountOnExit`.
   */ mountOnEnter: _propTypesDefault.default.bool,
    /**
   * By default the child component stays mounted after it reaches the `'exited'` state.
   * Set `unmountOnExit` if you'd prefer to unmount the component after it finishes exiting.
   */ unmountOnExit: _propTypesDefault.default.bool,
    /**
   * By default the child component does not perform the enter transition when
   * it first mounts, regardless of the value of `in`. If you want this
   * behavior, set both `appear` and `in` to `true`.
   *
   * > **Note**: there are no special appear states like `appearing`/`appeared`, this prop
   * > only adds an additional enter transition. However, in the
   * > `<CSSTransition>` component that first enter transition does result in
   * > additional `.appear-*` classes, that way you can choose to style it
   * > differently.
   */ appear: _propTypesDefault.default.bool,
    /**
   * Enable or disable enter transitions.
   */ enter: _propTypesDefault.default.bool,
    /**
   * Enable or disable exit transitions.
   */ exit: _propTypesDefault.default.bool,
    /**
   * The duration of the transition, in milliseconds.
   * Required unless `addEndListener` is provided.
   *
   * You may specify a single timeout for all transitions:
   *
   * ```jsx
   * timeout={500}
   * ```
   *
   * or individually:
   *
   * ```jsx
   * timeout={{
   *  appear: 500,
   *  enter: 300,
   *  exit: 500,
   * }}
   * ```
   *
   * - `appear` defaults to the value of `enter`
   * - `enter` defaults to `0`
   * - `exit` defaults to `0`
   *
   * @type {number | { enter?: number, exit?: number, appear?: number }}
   */ timeout: function timeout(props) {
        var pt = _propTypes1.timeoutsShape;
        if (!props.addEndListener) pt = pt.isRequired;
        for(var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++)args[_key - 1] = arguments[_key];
        return pt.apply(void 0, [
            props
        ].concat(args));
    },
    /**
   * Add a custom transition end trigger. Called with the transitioning
   * DOM node and a `done` callback. Allows for more fine grained transition end
   * logic. Timeouts are still used as a fallback if provided.
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed.
   *
   * ```jsx
   * addEndListener={(node, done) => {
   *   // use the css transitionend event to mark the finish of a transition
   *   node.addEventListener('transitionend', done, false);
   * }}
   * ```
   */ addEndListener: _propTypesDefault.default.func,
    /**
   * Callback fired before the "entering" status is applied. An extra parameter
   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed.
   *
   * @type Function(node: HtmlElement, isAppearing: bool) -> void
   */ onEnter: _propTypesDefault.default.func,
    /**
   * Callback fired after the "entering" status is applied. An extra parameter
   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed.
   *
   * @type Function(node: HtmlElement, isAppearing: bool)
   */ onEntering: _propTypesDefault.default.func,
    /**
   * Callback fired after the "entered" status is applied. An extra parameter
   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed.
   *
   * @type Function(node: HtmlElement, isAppearing: bool) -> void
   */ onEntered: _propTypesDefault.default.func,
    /**
   * Callback fired before the "exiting" status is applied.
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed.
   *
   * @type Function(node: HtmlElement) -> void
   */ onExit: _propTypesDefault.default.func,
    /**
   * Callback fired after the "exiting" status is applied.
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed.
   *
   * @type Function(node: HtmlElement) -> void
   */ onExiting: _propTypesDefault.default.func,
    /**
   * Callback fired after the "exited" status is applied.
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed
   *
   * @type Function(node: HtmlElement) -> void
   */ onExited: _propTypesDefault.default.func
}; // Name the function so it is clearer in the documentation
function noop() {}
Transition.defaultProps = {
    in: false,
    mountOnEnter: false,
    unmountOnExit: false,
    appear: false,
    enter: true,
    exit: true,
    onEnter: noop,
    onEntering: noop,
    onEntered: noop,
    onExit: noop,
    onExiting: noop,
    onExited: noop
};
Transition.UNMOUNTED = UNMOUNTED;
Transition.EXITED = EXITED;
Transition.ENTERING = ENTERING;
Transition.ENTERED = ENTERED;
Transition.EXITING = EXITING;
exports.default = Transition;

},{"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose":"adHgr","@babel/runtime/helpers/esm/inheritsLoose":"9u2Z8","prop-types":"7wKI2","react":"21dqq","react-dom":"j6uA9","./config":"cepoZ","./utils/PropTypes":"9Zqaa","./TransitionGroupContext":"47LXo","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"cepoZ":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = {
    disabled: false
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"9Zqaa":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "timeoutsShape", ()=>timeoutsShape
);
parcelHelpers.export(exports, "classNamesShape", ()=>classNamesShape
);
var _propTypes = require("prop-types");
var _propTypesDefault = parcelHelpers.interopDefault(_propTypes);
var timeoutsShape = _propTypesDefault.default.oneOfType([
    _propTypesDefault.default.number,
    _propTypesDefault.default.shape({
        enter: _propTypesDefault.default.number,
        exit: _propTypesDefault.default.number,
        appear: _propTypesDefault.default.number
    }).isRequired
]);
var classNamesShape = _propTypesDefault.default.oneOfType([
    _propTypesDefault.default.string,
    _propTypesDefault.default.shape({
        enter: _propTypesDefault.default.string,
        exit: _propTypesDefault.default.string,
        active: _propTypesDefault.default.string
    }),
    _propTypesDefault.default.shape({
        enter: _propTypesDefault.default.string,
        enterDone: _propTypesDefault.default.string,
        enterActive: _propTypesDefault.default.string,
        exit: _propTypesDefault.default.string,
        exitDone: _propTypesDefault.default.string,
        exitActive: _propTypesDefault.default.string
    })
]);

},{"prop-types":"7wKI2","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"ixDXW":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "reflow", ()=>reflow
);
parcelHelpers.export(exports, "getTransitionProps", ()=>getTransitionProps
);
var reflow = function reflow(node) {
    return node.scrollTop;
};
function getTransitionProps(props, options) {
    var timeout = props.timeout, _props$style = props.style, style = _props$style === void 0 ? {} : _props$style;
    return {
        duration: style.transitionDuration || typeof timeout === 'number' ? timeout : timeout[options.mode] || 0,
        delay: style.transitionDelay
    };
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"j0s2L":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>_paperDefault.default
);
var _paper = require("./Paper");
var _paperDefault = parcelHelpers.interopDefault(_paper);

},{"./Paper":"gjTiA","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"gjTiA":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "styles", ()=>styles
);
var _objectWithoutProperties = require("@babel/runtime/helpers/esm/objectWithoutProperties");
var _objectWithoutPropertiesDefault = parcelHelpers.interopDefault(_objectWithoutProperties);
var _extends = require("@babel/runtime/helpers/esm/extends");
var _extendsDefault = parcelHelpers.interopDefault(_extends);
var _react = require("react");
var _propTypes = require("prop-types");
var _propTypesDefault = parcelHelpers.interopDefault(_propTypes);
var _clsx = require("clsx");
var _clsxDefault = parcelHelpers.interopDefault(_clsx);
var _utils = require("@material-ui/utils");
var _withStyles = require("../styles/withStyles");
var _withStylesDefault = parcelHelpers.interopDefault(_withStyles);
var styles = function styles(theme) {
    var elevations = {};
    theme.shadows.forEach(function(shadow, index) {
        elevations["elevation".concat(index)] = {
            boxShadow: shadow
        };
    });
    return _extendsDefault.default({
        /* Styles applied to the root element. */ root: {
            backgroundColor: theme.palette.background.paper,
            color: theme.palette.text.primary,
            transition: theme.transitions.create('box-shadow')
        },
        /* Styles applied to the root element if `square={false}`. */ rounded: {
            borderRadius: theme.shape.borderRadius
        },
        /* Styles applied to the root element if `variant="outlined"`. */ outlined: {
            border: "1px solid ".concat(theme.palette.divider)
        }
    }, elevations);
};
var Paper = /*#__PURE__*/ _react.forwardRef(function Paper(props, ref) {
    var classes = props.classes, className = props.className, _props$component = props.component, Component = _props$component === void 0 ? 'div' : _props$component, _props$square = props.square, square = _props$square === void 0 ? false : _props$square, _props$elevation = props.elevation, elevation = _props$elevation === void 0 ? 1 : _props$elevation, _props$variant = props.variant, variant = _props$variant === void 0 ? 'elevation' : _props$variant, other = _objectWithoutPropertiesDefault.default(props, [
        "classes",
        "className",
        "component",
        "square",
        "elevation",
        "variant"
    ]);
    return /*#__PURE__*/ _react.createElement(Component, _extendsDefault.default({
        className: _clsxDefault.default(classes.root, className, variant === 'outlined' ? classes.outlined : classes["elevation".concat(elevation)], !square && classes.rounded),
        ref: ref
    }, other));
});
Paper.propTypes = {
    // ----------------------------- Warning --------------------------------
    // | These PropTypes are generated from the TypeScript type definitions |
    // |     To update them edit the d.ts file and run "yarn proptypes"     |
    // ----------------------------------------------------------------------
    /**
   * The content of the component.
   */ children: _propTypesDefault.default.node,
    /**
   * Override or extend the styles applied to the component.
   * See [CSS API](#css) below for more details.
   */ classes: _propTypesDefault.default.object,
    /**
   * @ignore
   */ className: _propTypesDefault.default.string,
    /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */ component: _propTypesDefault.default/* @typescript-to-proptypes-ignore */ .elementType,
    /**
   * Shadow depth, corresponds to `dp` in the spec.
   * It accepts values between 0 and 24 inclusive.
   */ elevation: _utils.chainPropTypes(_propTypesDefault.default.number, function(props) {
        var classes = props.classes, elevation = props.elevation; // in case `withStyles` fails to inject we don't need this warning
        if (classes === undefined) return null;
        if (elevation != null && classes["elevation".concat(elevation)] === undefined) return new Error("Material-UI: This elevation `".concat(elevation, "` is not implemented."));
        return null;
    }),
    /**
   * If `true`, rounded corners are disabled.
   */ square: _propTypesDefault.default.bool,
    /**
   * The variant to use.
   */ variant: _propTypesDefault.default.oneOf([
        'elevation',
        'outlined'
    ])
};
exports.default = _withStylesDefault.default(styles, {
    name: 'MuiPaper'
})(Paper);

},{"@babel/runtime/helpers/esm/objectWithoutProperties":"25tJ4","@babel/runtime/helpers/esm/extends":"fTBFS","react":"21dqq","prop-types":"7wKI2","clsx":"83C22","@material-ui/utils":"54RkF","../styles/withStyles":"7U0iM","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"kkvcp":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _react = require("react");
/**
 * @ignore - internal component.
 * @type {React.Context<{} | {expanded: boolean, disabled: boolean, toggle: () => void}>}
 */ var AccordionContext = _react.createContext({});
AccordionContext.displayName = 'AccordionContext';
exports.default = AccordionContext;

},{"react":"21dqq","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"e8tYN":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>_accordionActionsDefault.default
);
var _accordionActions = require("./AccordionActions");
var _accordionActionsDefault = parcelHelpers.interopDefault(_accordionActions);

},{"./AccordionActions":"31yVL","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"31yVL":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "styles", ()=>styles
);
var _extends = require("@babel/runtime/helpers/esm/extends");
var _extendsDefault = parcelHelpers.interopDefault(_extends);
var _objectWithoutProperties = require("@babel/runtime/helpers/esm/objectWithoutProperties");
var _objectWithoutPropertiesDefault = parcelHelpers.interopDefault(_objectWithoutProperties);
var _react = require("react");
var _propTypes = require("prop-types");
var _propTypesDefault = parcelHelpers.interopDefault(_propTypes);
var _clsx = require("clsx");
var _clsxDefault = parcelHelpers.interopDefault(_clsx);
var _withStyles = require("../styles/withStyles");
var _withStylesDefault = parcelHelpers.interopDefault(_withStyles);
var styles = {
    /* Styles applied to the root element. */ root: {
        display: 'flex',
        alignItems: 'center',
        padding: 8,
        justifyContent: 'flex-end'
    },
    /* Styles applied to the root element if `disableSpacing={false}`. */ spacing: {
        '& > :not(:first-child)': {
            marginLeft: 8
        }
    }
};
var AccordionActions = /*#__PURE__*/ _react.forwardRef(function AccordionActions(props, ref) {
    var classes = props.classes, className = props.className, _props$disableSpacing = props.disableSpacing, disableSpacing = _props$disableSpacing === void 0 ? false : _props$disableSpacing, other = _objectWithoutPropertiesDefault.default(props, [
        "classes",
        "className",
        "disableSpacing"
    ]);
    return /*#__PURE__*/ _react.createElement("div", _extendsDefault.default({
        className: _clsxDefault.default(classes.root, className, !disableSpacing && classes.spacing),
        ref: ref
    }, other));
});
AccordionActions.propTypes = {
    // ----------------------------- Warning --------------------------------
    // | These PropTypes are generated from the TypeScript type definitions |
    // |     To update them edit the d.ts file and run "yarn proptypes"     |
    // ----------------------------------------------------------------------
    /**
   * The content of the component.
   */ children: _propTypesDefault.default.node,
    /**
   * Override or extend the styles applied to the component.
   * See [CSS API](#css) below for more details.
   */ classes: _propTypesDefault.default.object,
    /**
   * @ignore
   */ className: _propTypesDefault.default.string,
    /**
   * If `true`, the actions do not have additional margin.
   */ disableSpacing: _propTypesDefault.default.bool
};
exports.default = _withStylesDefault.default(styles, {
    name: 'MuiAccordionActions'
})(AccordionActions);

},{"@babel/runtime/helpers/esm/extends":"fTBFS","@babel/runtime/helpers/esm/objectWithoutProperties":"25tJ4","react":"21dqq","prop-types":"7wKI2","clsx":"83C22","../styles/withStyles":"7U0iM","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"4CNZo":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>_accordionDetailsDefault.default
);
var _accordionDetails = require("./AccordionDetails");
var _accordionDetailsDefault = parcelHelpers.interopDefault(_accordionDetails);

},{"./AccordionDetails":"4iMZJ","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"4iMZJ":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "styles", ()=>styles
);
var _extends = require("@babel/runtime/helpers/esm/extends");
var _extendsDefault = parcelHelpers.interopDefault(_extends);
var _objectWithoutProperties = require("@babel/runtime/helpers/esm/objectWithoutProperties");
var _objectWithoutPropertiesDefault = parcelHelpers.interopDefault(_objectWithoutProperties);
var _react = require("react");
var _propTypes = require("prop-types");
var _propTypesDefault = parcelHelpers.interopDefault(_propTypes);
var _clsx = require("clsx");
var _clsxDefault = parcelHelpers.interopDefault(_clsx);
var _withStyles = require("../styles/withStyles");
var _withStylesDefault = parcelHelpers.interopDefault(_withStyles);
var styles = function styles(theme) {
    return {
        /* Styles applied to the root element. */ root: {
            display: 'flex',
            padding: theme.spacing(1, 2, 2)
        }
    };
};
var AccordionDetails = /*#__PURE__*/ _react.forwardRef(function AccordionDetails(props, ref) {
    var classes = props.classes, className = props.className, other = _objectWithoutPropertiesDefault.default(props, [
        "classes",
        "className"
    ]);
    return /*#__PURE__*/ _react.createElement("div", _extendsDefault.default({
        className: _clsxDefault.default(classes.root, className),
        ref: ref
    }, other));
});
AccordionDetails.propTypes = {
    // ----------------------------- Warning --------------------------------
    // | These PropTypes are generated from the TypeScript type definitions |
    // |     To update them edit the d.ts file and run "yarn proptypes"     |
    // ----------------------------------------------------------------------
    /**
   * The content of the accordion details.
   */ children: _propTypesDefault.default.node,
    /**
   * Override or extend the styles applied to the component.
   * See [CSS API](#css) below for more details.
   */ classes: _propTypesDefault.default.object,
    /**
   * @ignore
   */ className: _propTypesDefault.default.string
};
exports.default = _withStylesDefault.default(styles, {
    name: 'MuiAccordionDetails'
})(AccordionDetails);

},{"@babel/runtime/helpers/esm/extends":"fTBFS","@babel/runtime/helpers/esm/objectWithoutProperties":"25tJ4","react":"21dqq","prop-types":"7wKI2","clsx":"83C22","../styles/withStyles":"7U0iM","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"aMNRJ":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>_accordionSummaryDefault.default
);
var _accordionSummary = require("./AccordionSummary");
var _accordionSummaryDefault = parcelHelpers.interopDefault(_accordionSummary);

},{"./AccordionSummary":"eLBEk","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"eLBEk":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "styles", ()=>styles
);
var _extends = require("@babel/runtime/helpers/esm/extends");
var _extendsDefault = parcelHelpers.interopDefault(_extends);
var _objectWithoutProperties = require("@babel/runtime/helpers/esm/objectWithoutProperties");
var _objectWithoutPropertiesDefault = parcelHelpers.interopDefault(_objectWithoutProperties);
/* eslint-disable jsx-a11y/aria-role */ var _react = require("react");
var _propTypes = require("prop-types");
var _propTypesDefault = parcelHelpers.interopDefault(_propTypes);
var _clsx = require("clsx");
var _clsxDefault = parcelHelpers.interopDefault(_clsx);
var _utils = require("@material-ui/utils");
var _buttonBase = require("../ButtonBase");
var _buttonBaseDefault = parcelHelpers.interopDefault(_buttonBase);
var _iconButton = require("../IconButton");
var _iconButtonDefault = parcelHelpers.interopDefault(_iconButton);
var _withStyles = require("../styles/withStyles");
var _withStylesDefault = parcelHelpers.interopDefault(_withStyles);
var _accordionContext = require("../Accordion/AccordionContext");
var _accordionContextDefault = parcelHelpers.interopDefault(_accordionContext);
var styles = function styles(theme) {
    var transition = {
        duration: theme.transitions.duration.shortest
    };
    return {
        /* Styles applied to the root element. */ root: {
            display: 'flex',
            minHeight: 48,
            transition: theme.transitions.create([
                'min-height',
                'background-color'
            ], transition),
            padding: theme.spacing(0, 2),
            '&:hover:not($disabled)': {
                cursor: 'pointer'
            },
            '&$expanded': {
                minHeight: 64
            },
            '&$focused, &$focusVisible': {
                backgroundColor: theme.palette.action.focus
            },
            '&$disabled': {
                opacity: theme.palette.action.disabledOpacity
            }
        },
        /* Pseudo-class applied to the root element, children wrapper element and `IconButton` component if `expanded={true}`. */ expanded: {},
        /* Pseudo-class applied to the ButtonBase root element if the button is keyboard focused. */ focused: {},
        /* Pseudo-class applied to the ButtonBase root element if the button is keyboard focused. */ focusVisible: {},
        /* Pseudo-class applied to the root element if `disabled={true}`. */ disabled: {},
        /* Styles applied to the children wrapper element. */ content: {
            display: 'flex',
            flexGrow: 1,
            transition: theme.transitions.create([
                'margin'
            ], transition),
            margin: '12px 0',
            '&$expanded': {
                margin: '20px 0'
            }
        },
        /* Styles applied to the `IconButton` component when `expandIcon` is supplied. */ expandIcon: {
            transform: 'rotate(0deg)',
            transition: theme.transitions.create('transform', transition),
            '&:hover': {
                // Disable the hover effect for the IconButton,
                // because a hover effect should apply to the entire Expand button and
                // not only to the IconButton.
                backgroundColor: 'transparent'
            },
            '&$expanded': {
                transform: 'rotate(180deg)'
            }
        }
    };
};
var AccordionSummary = /*#__PURE__*/ _react.forwardRef(function AccordionSummary(props, ref) {
    var children = props.children, classes = props.classes, className = props.className, expandIcon = props.expandIcon, focusVisibleClassName = props.focusVisibleClassName, _props$IconButtonProp = props.IconButtonProps, IconButtonProps = _props$IconButtonProp === void 0 ? {} : _props$IconButtonProp, onClick = props.onClick, other = _objectWithoutPropertiesDefault.default(props, [
        "children",
        "classes",
        "className",
        "expandIcon",
        "focusVisibleClassName",
        "IconButtonProps",
        "onClick"
    ]);
    var _React$useContext = _react.useContext(_accordionContextDefault.default), _React$useContext$dis = _React$useContext.disabled, disabled = _React$useContext$dis === void 0 ? false : _React$useContext$dis, expanded = _React$useContext.expanded, toggle = _React$useContext.toggle;
    var handleChange = function handleChange(event) {
        if (toggle) toggle(event);
        if (onClick) onClick(event);
    };
    return /*#__PURE__*/ _react.createElement(_buttonBaseDefault.default, _extendsDefault.default({
        focusRipple: false,
        disableRipple: true,
        disabled: disabled,
        component: "div",
        "aria-expanded": expanded,
        className: _clsxDefault.default(classes.root, className, disabled && classes.disabled, expanded && classes.expanded),
        focusVisibleClassName: _clsxDefault.default(classes.focusVisible, classes.focused, focusVisibleClassName),
        onClick: handleChange,
        ref: ref
    }, other), /*#__PURE__*/ _react.createElement("div", {
        className: _clsxDefault.default(classes.content, expanded && classes.expanded)
    }, children), expandIcon && /*#__PURE__*/ _react.createElement(_iconButtonDefault.default, _extendsDefault.default({
        className: _clsxDefault.default(classes.expandIcon, expanded && classes.expanded),
        edge: "end",
        component: "div",
        tabIndex: null,
        role: null,
        "aria-hidden": true
    }, IconButtonProps), expandIcon));
});
AccordionSummary.propTypes = {
    // ----------------------------- Warning --------------------------------
    // | These PropTypes are generated from the TypeScript type definitions |
    // |     To update them edit the d.ts file and run "yarn proptypes"     |
    // ----------------------------------------------------------------------
    /**
   * The content of the accordion summary.
   */ children: _propTypesDefault.default.node,
    /**
   * Override or extend the styles applied to the component.
   * See [CSS API](#css) below for more details.
   */ classes: _utils.chainPropTypes(_propTypesDefault.default.object, function(props) {
        // Guard against when generation of classes is disabled in the stylesheets (`disableGeneration`).
        // For `disableGeneration` we don't have an accurate warning but `disableGeneration` is an advanced use case anyway.
        if (props.classes.focused !== undefined && props.classes.focused.indexOf(' ') !== -1) return new Error([
            'Material-UI: The `classes.focused` key is deprecated.',
            'Use `classes.focusVisible` instead.',
            'The name of the pseudo-class was changed for consistency.'
        ].join('\n'));
        return null;
    }),
    /**
   * @ignore
   */ className: _propTypesDefault.default.string,
    /**
   * The icon to display as the expand indicator.
   */ expandIcon: _propTypesDefault.default.node,
    /**
   * This prop can help identify which element has keyboard focus.
   * The class name will be applied when the element gains the focus through keyboard interaction.
   * It's a polyfill for the [CSS :focus-visible selector](https://drafts.csswg.org/selectors-4/#the-focus-visible-pseudo).
   * The rationale for using this feature [is explained here](https://github.com/WICG/focus-visible/blob/master/explainer.md).
   * A [polyfill can be used](https://github.com/WICG/focus-visible) to apply a `focus-visible` class to other components
   * if needed.
   */ focusVisibleClassName: _propTypesDefault.default.string,
    /**
   * Props applied to the `IconButton` element wrapping the expand icon.
   */ IconButtonProps: _propTypesDefault.default.object,
    /**
   * @ignore
   */ onClick: _propTypesDefault.default.func
};
exports.default = _withStylesDefault.default(styles, {
    name: 'MuiAccordionSummary'
})(AccordionSummary);

},{"@babel/runtime/helpers/esm/extends":"fTBFS","@babel/runtime/helpers/esm/objectWithoutProperties":"25tJ4","react":"21dqq","prop-types":"7wKI2","clsx":"83C22","@material-ui/utils":"54RkF","../ButtonBase":"2TQRV","../IconButton":"cer9e","../styles/withStyles":"7U0iM","../Accordion/AccordionContext":"kkvcp","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"2TQRV":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>_buttonBaseDefault.default
);
var _buttonBase = require("./ButtonBase");
var _buttonBaseDefault = parcelHelpers.interopDefault(_buttonBase);

},{"./ButtonBase":"13KWo","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"13KWo":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "styles", ()=>styles
);
var _extends = require("@babel/runtime/helpers/esm/extends");
var _extendsDefault = parcelHelpers.interopDefault(_extends);
var _objectWithoutProperties = require("@babel/runtime/helpers/esm/objectWithoutProperties");
var _objectWithoutPropertiesDefault = parcelHelpers.interopDefault(_objectWithoutProperties);
var _react = require("react");
var _propTypes = require("prop-types");
var _propTypesDefault = parcelHelpers.interopDefault(_propTypes);
var _reactDom = require("react-dom");
var _clsx = require("clsx");
var _clsxDefault = parcelHelpers.interopDefault(_clsx);
var _utils = require("@material-ui/utils");
var _useForkRef = require("../utils/useForkRef");
var _useForkRefDefault = parcelHelpers.interopDefault(_useForkRef);
var _useEventCallback = require("../utils/useEventCallback");
var _useEventCallbackDefault = parcelHelpers.interopDefault(_useEventCallback);
var _deprecatedPropType = require("../utils/deprecatedPropType");
var _deprecatedPropTypeDefault = parcelHelpers.interopDefault(_deprecatedPropType);
var _withStyles = require("../styles/withStyles");
var _withStylesDefault = parcelHelpers.interopDefault(_withStyles);
var _useIsFocusVisible = require("../utils/useIsFocusVisible");
var _useIsFocusVisibleDefault = parcelHelpers.interopDefault(_useIsFocusVisible);
var _touchRipple = require("./TouchRipple");
var _touchRippleDefault = parcelHelpers.interopDefault(_touchRipple);
var styles = {
    /* Styles applied to the root element. */ root: {
        display: 'inline-flex',
        alignItems: 'center',
        justifyContent: 'center',
        position: 'relative',
        WebkitTapHighlightColor: 'transparent',
        backgroundColor: 'transparent',
        // Reset default value
        // We disable the focus ring for mouse, touch and keyboard users.
        outline: 0,
        border: 0,
        margin: 0,
        // Remove the margin in Safari
        borderRadius: 0,
        padding: 0,
        // Remove the padding in Firefox
        cursor: 'pointer',
        userSelect: 'none',
        verticalAlign: 'middle',
        '-moz-appearance': 'none',
        // Reset
        '-webkit-appearance': 'none',
        // Reset
        textDecoration: 'none',
        // So we take precedent over the style of a native <a /> element.
        color: 'inherit',
        '&::-moz-focus-inner': {
            borderStyle: 'none' // Remove Firefox dotted outline.
        },
        '&$disabled': {
            pointerEvents: 'none',
            // Disable link interactions
            cursor: 'default'
        },
        '@media print': {
            colorAdjust: 'exact'
        }
    },
    /* Pseudo-class applied to the root element if `disabled={true}`. */ disabled: {},
    /* Pseudo-class applied to the root element if keyboard focused. */ focusVisible: {}
};
/**
 * `ButtonBase` contains as few styles as possible.
 * It aims to be a simple building block for creating a button.
 * It contains a load of style reset and some focus/ripple logic.
 */ var ButtonBase = /*#__PURE__*/ _react.forwardRef(function ButtonBase(props, ref) {
    var action = props.action, buttonRefProp = props.buttonRef, _props$centerRipple = props.centerRipple, centerRipple = _props$centerRipple === void 0 ? false : _props$centerRipple, children = props.children, classes = props.classes, className = props.className, _props$component = props.component, component = _props$component === void 0 ? 'button' : _props$component, _props$disabled = props.disabled, disabled = _props$disabled === void 0 ? false : _props$disabled, _props$disableRipple = props.disableRipple, disableRipple = _props$disableRipple === void 0 ? false : _props$disableRipple, _props$disableTouchRi = props.disableTouchRipple, disableTouchRipple = _props$disableTouchRi === void 0 ? false : _props$disableTouchRi, _props$focusRipple = props.focusRipple, focusRipple = _props$focusRipple === void 0 ? false : _props$focusRipple, focusVisibleClassName = props.focusVisibleClassName, onBlur = props.onBlur, onClick = props.onClick, onFocus = props.onFocus, onFocusVisible = props.onFocusVisible, onKeyDown = props.onKeyDown, onKeyUp = props.onKeyUp, onMouseDown = props.onMouseDown, onMouseLeave = props.onMouseLeave, onMouseUp = props.onMouseUp, onTouchEnd = props.onTouchEnd, onTouchMove = props.onTouchMove, onTouchStart = props.onTouchStart, onDragLeave = props.onDragLeave, _props$tabIndex = props.tabIndex, tabIndex = _props$tabIndex === void 0 ? 0 : _props$tabIndex, TouchRippleProps = props.TouchRippleProps, _props$type = props.type, type = _props$type === void 0 ? 'button' : _props$type, other = _objectWithoutPropertiesDefault.default(props, [
        "action",
        "buttonRef",
        "centerRipple",
        "children",
        "classes",
        "className",
        "component",
        "disabled",
        "disableRipple",
        "disableTouchRipple",
        "focusRipple",
        "focusVisibleClassName",
        "onBlur",
        "onClick",
        "onFocus",
        "onFocusVisible",
        "onKeyDown",
        "onKeyUp",
        "onMouseDown",
        "onMouseLeave",
        "onMouseUp",
        "onTouchEnd",
        "onTouchMove",
        "onTouchStart",
        "onDragLeave",
        "tabIndex",
        "TouchRippleProps",
        "type"
    ]);
    var buttonRef = _react.useRef(null);
    function getButtonNode() {
        // #StrictMode ready
        return _reactDom.findDOMNode(buttonRef.current);
    }
    var rippleRef = _react.useRef(null);
    var _React$useState = _react.useState(false), focusVisible = _React$useState[0], setFocusVisible = _React$useState[1];
    if (disabled && focusVisible) setFocusVisible(false);
    var _useIsFocusVisible1 = _useIsFocusVisibleDefault.default(), isFocusVisible = _useIsFocusVisible1.isFocusVisible, onBlurVisible = _useIsFocusVisible1.onBlurVisible, focusVisibleRef = _useIsFocusVisible1.ref;
    _react.useImperativeHandle(action, function() {
        return {
            focusVisible: function focusVisible() {
                setFocusVisible(true);
                buttonRef.current.focus();
            }
        };
    }, []);
    _react.useEffect(function() {
        if (focusVisible && focusRipple && !disableRipple) rippleRef.current.pulsate();
    }, [
        disableRipple,
        focusRipple,
        focusVisible
    ]);
    function useRippleHandler(rippleAction, eventCallback) {
        var skipRippleAction = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : disableTouchRipple;
        return _useEventCallbackDefault.default(function(event) {
            if (eventCallback) eventCallback(event);
            var ignore = skipRippleAction;
            if (!ignore && rippleRef.current) rippleRef.current[rippleAction](event);
            return true;
        });
    }
    var handleMouseDown = useRippleHandler('start', onMouseDown);
    var handleDragLeave = useRippleHandler('stop', onDragLeave);
    var handleMouseUp = useRippleHandler('stop', onMouseUp);
    var handleMouseLeave = useRippleHandler('stop', function(event) {
        if (focusVisible) event.preventDefault();
        if (onMouseLeave) onMouseLeave(event);
    });
    var handleTouchStart = useRippleHandler('start', onTouchStart);
    var handleTouchEnd = useRippleHandler('stop', onTouchEnd);
    var handleTouchMove = useRippleHandler('stop', onTouchMove);
    var handleBlur = useRippleHandler('stop', function(event) {
        if (focusVisible) {
            onBlurVisible(event);
            setFocusVisible(false);
        }
        if (onBlur) onBlur(event);
    }, false);
    var handleFocus = _useEventCallbackDefault.default(function(event) {
        // Fix for https://github.com/facebook/react/issues/7769
        if (!buttonRef.current) buttonRef.current = event.currentTarget;
        if (isFocusVisible(event)) {
            setFocusVisible(true);
            if (onFocusVisible) onFocusVisible(event);
        }
        if (onFocus) onFocus(event);
    });
    var isNonNativeButton = function isNonNativeButton() {
        var button = getButtonNode();
        return component && component !== 'button' && !(button.tagName === 'A' && button.href);
    };
    /**
   * IE 11 shim for https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/repeat
   */ var keydownRef = _react.useRef(false);
    var handleKeyDown = _useEventCallbackDefault.default(function(event) {
        // Check if key is already down to avoid repeats being counted as multiple activations
        if (focusRipple && !keydownRef.current && focusVisible && rippleRef.current && event.key === ' ') {
            keydownRef.current = true;
            event.persist();
            rippleRef.current.stop(event, function() {
                rippleRef.current.start(event);
            });
        }
        if (event.target === event.currentTarget && isNonNativeButton() && event.key === ' ') event.preventDefault();
        if (onKeyDown) onKeyDown(event);
         // Keyboard accessibility for non interactive elements
        if (event.target === event.currentTarget && isNonNativeButton() && event.key === 'Enter' && !disabled) {
            event.preventDefault();
            if (onClick) onClick(event);
        }
    });
    var handleKeyUp = _useEventCallbackDefault.default(function(event) {
        // calling preventDefault in keyUp on a <button> will not dispatch a click event if Space is pressed
        // https://codesandbox.io/s/button-keyup-preventdefault-dn7f0
        if (focusRipple && event.key === ' ' && rippleRef.current && focusVisible && !event.defaultPrevented) {
            keydownRef.current = false;
            event.persist();
            rippleRef.current.stop(event, function() {
                rippleRef.current.pulsate(event);
            });
        }
        if (onKeyUp) onKeyUp(event);
         // Keyboard accessibility for non interactive elements
        if (onClick && event.target === event.currentTarget && isNonNativeButton() && event.key === ' ' && !event.defaultPrevented) onClick(event);
    });
    var ComponentProp = component;
    if (ComponentProp === 'button' && other.href) ComponentProp = 'a';
    var buttonProps = {};
    if (ComponentProp === 'button') {
        buttonProps.type = type;
        buttonProps.disabled = disabled;
    } else {
        if (ComponentProp !== 'a' || !other.href) buttonProps.role = 'button';
        buttonProps['aria-disabled'] = disabled;
    }
    var handleUserRef = _useForkRefDefault.default(buttonRefProp, ref);
    var handleOwnRef = _useForkRefDefault.default(focusVisibleRef, buttonRef);
    var handleRef = _useForkRefDefault.default(handleUserRef, handleOwnRef);
    var _React$useState2 = _react.useState(false), mountedState = _React$useState2[0], setMountedState = _React$useState2[1];
    _react.useEffect(function() {
        setMountedState(true);
    }, []);
    var enableTouchRipple = mountedState && !disableRipple && !disabled;
    // eslint-disable-next-line react-hooks/rules-of-hooks
    _react.useEffect(function() {
        if (enableTouchRipple && !rippleRef.current) console.error([
            'Material-UI: The `component` prop provided to ButtonBase is invalid.',
            'Please make sure the children prop is rendered in this custom component.'
        ].join('\n'));
    }, [
        enableTouchRipple
    ]);
    return /*#__PURE__*/ _react.createElement(ComponentProp, _extendsDefault.default({
        className: _clsxDefault.default(classes.root, className, focusVisible && [
            classes.focusVisible,
            focusVisibleClassName
        ], disabled && classes.disabled),
        onBlur: handleBlur,
        onClick: onClick,
        onFocus: handleFocus,
        onKeyDown: handleKeyDown,
        onKeyUp: handleKeyUp,
        onMouseDown: handleMouseDown,
        onMouseLeave: handleMouseLeave,
        onMouseUp: handleMouseUp,
        onDragLeave: handleDragLeave,
        onTouchEnd: handleTouchEnd,
        onTouchMove: handleTouchMove,
        onTouchStart: handleTouchStart,
        ref: handleRef,
        tabIndex: disabled ? -1 : tabIndex
    }, buttonProps, other), children, enableTouchRipple ? /*#__PURE__*/ /* TouchRipple is only needed client-side, x2 boost on the server. */ _react.createElement(_touchRippleDefault.default, _extendsDefault.default({
        ref: rippleRef,
        center: centerRipple
    }, TouchRippleProps)) : null);
});
ButtonBase.propTypes = {
    // ----------------------------- Warning --------------------------------
    // | These PropTypes are generated from the TypeScript type definitions |
    // |     To update them edit the d.ts file and run "yarn proptypes"     |
    // ----------------------------------------------------------------------
    /**
   * A ref for imperative actions.
   * It currently only supports `focusVisible()` action.
   */ action: _utils.refType,
    /**
   * @ignore
   *
   * Use that prop to pass a ref to the native button component.
   * @deprecated Use `ref` instead.
   */ buttonRef: _deprecatedPropTypeDefault.default(_utils.refType, 'Use `ref` instead.'),
    /**
   * If `true`, the ripples will be centered.
   * They won't start at the cursor interaction position.
   */ centerRipple: _propTypesDefault.default.bool,
    /**
   * The content of the component.
   */ children: _propTypesDefault.default.node,
    /**
   * Override or extend the styles applied to the component.
   * See [CSS API](#css) below for more details.
   */ classes: _propTypesDefault.default.object,
    /**
   * @ignore
   */ className: _propTypesDefault.default.string,
    /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */ component: _utils.elementTypeAcceptingRef,
    /**
   * If `true`, the base button will be disabled.
   */ disabled: _propTypesDefault.default.bool,
    /**
   * If `true`, the ripple effect will be disabled.
   *
   * ⚠️ Without a ripple there is no styling for :focus-visible by default. Be sure
   * to highlight the element by applying separate styles with the `focusVisibleClassName`.
   */ disableRipple: _propTypesDefault.default.bool,
    /**
   * If `true`, the touch ripple effect will be disabled.
   */ disableTouchRipple: _propTypesDefault.default.bool,
    /**
   * If `true`, the base button will have a keyboard focus ripple.
   */ focusRipple: _propTypesDefault.default.bool,
    /**
   * This prop can help identify which element has keyboard focus.
   * The class name will be applied when the element gains the focus through keyboard interaction.
   * It's a polyfill for the [CSS :focus-visible selector](https://drafts.csswg.org/selectors-4/#the-focus-visible-pseudo).
   * The rationale for using this feature [is explained here](https://github.com/WICG/focus-visible/blob/master/explainer.md).
   * A [polyfill can be used](https://github.com/WICG/focus-visible) to apply a `focus-visible` class to other components
   * if needed.
   */ focusVisibleClassName: _propTypesDefault.default.string,
    /**
   * @ignore
   */ href: _propTypesDefault.default.string,
    /**
   * @ignore
   */ onBlur: _propTypesDefault.default.func,
    /**
   * @ignore
   */ onClick: _propTypesDefault.default.func,
    /**
   * @ignore
   */ onDragLeave: _propTypesDefault.default.func,
    /**
   * @ignore
   */ onFocus: _propTypesDefault.default.func,
    /**
   * Callback fired when the component is focused with a keyboard.
   * We trigger a `onFocus` callback too.
   */ onFocusVisible: _propTypesDefault.default.func,
    /**
   * @ignore
   */ onKeyDown: _propTypesDefault.default.func,
    /**
   * @ignore
   */ onKeyUp: _propTypesDefault.default.func,
    /**
   * @ignore
   */ onMouseDown: _propTypesDefault.default.func,
    /**
   * @ignore
   */ onMouseLeave: _propTypesDefault.default.func,
    /**
   * @ignore
   */ onMouseUp: _propTypesDefault.default.func,
    /**
   * @ignore
   */ onTouchEnd: _propTypesDefault.default.func,
    /**
   * @ignore
   */ onTouchMove: _propTypesDefault.default.func,
    /**
   * @ignore
   */ onTouchStart: _propTypesDefault.default.func,
    /**
   * @ignore
   */ tabIndex: _propTypesDefault.default.oneOfType([
        _propTypesDefault.default.number,
        _propTypesDefault.default.string
    ]),
    /**
   * Props applied to the `TouchRipple` element.
   */ TouchRippleProps: _propTypesDefault.default.object,
    /**
   * @ignore
   */ type: _propTypesDefault.default.oneOfType([
        _propTypesDefault.default.oneOf([
            'button',
            'reset',
            'submit'
        ]),
        _propTypesDefault.default.string
    ])
};
exports.default = _withStylesDefault.default(styles, {
    name: 'MuiButtonBase'
})(ButtonBase);

},{"@babel/runtime/helpers/esm/extends":"fTBFS","@babel/runtime/helpers/esm/objectWithoutProperties":"25tJ4","react":"21dqq","prop-types":"7wKI2","react-dom":"j6uA9","clsx":"83C22","@material-ui/utils":"54RkF","../utils/useForkRef":"kUpGa","../utils/useEventCallback":"hPpih","../utils/deprecatedPropType":"loRgF","../styles/withStyles":"7U0iM","../utils/useIsFocusVisible":"lY4zJ","./TouchRipple":"9nKC9","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"9nKC9":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "DELAY_RIPPLE", ()=>DELAY_RIPPLE
);
parcelHelpers.export(exports, "styles", ()=>styles
);
var _extends = require("@babel/runtime/helpers/esm/extends");
var _extendsDefault = parcelHelpers.interopDefault(_extends);
var _toConsumableArray = require("@babel/runtime/helpers/esm/toConsumableArray");
var _toConsumableArrayDefault = parcelHelpers.interopDefault(_toConsumableArray);
var _objectWithoutProperties = require("@babel/runtime/helpers/esm/objectWithoutProperties");
var _objectWithoutPropertiesDefault = parcelHelpers.interopDefault(_objectWithoutProperties);
var _react = require("react");
var _propTypes = require("prop-types");
var _propTypesDefault = parcelHelpers.interopDefault(_propTypes);
var _reactTransitionGroup = require("react-transition-group");
var _clsx = require("clsx");
var _clsxDefault = parcelHelpers.interopDefault(_clsx);
var _withStyles = require("../styles/withStyles");
var _withStylesDefault = parcelHelpers.interopDefault(_withStyles);
var _ripple = require("./Ripple");
var _rippleDefault = parcelHelpers.interopDefault(_ripple);
var DURATION = 550;
var DELAY_RIPPLE = 80;
var styles = function styles(theme) {
    return {
        /* Styles applied to the root element. */ root: {
            overflow: 'hidden',
            pointerEvents: 'none',
            position: 'absolute',
            zIndex: 0,
            top: 0,
            right: 0,
            bottom: 0,
            left: 0,
            borderRadius: 'inherit'
        },
        /* Styles applied to the internal `Ripple` components `ripple` class. */ ripple: {
            opacity: 0,
            position: 'absolute'
        },
        /* Styles applied to the internal `Ripple` components `rippleVisible` class. */ rippleVisible: {
            opacity: 0.3,
            transform: 'scale(1)',
            animation: "$enter ".concat(DURATION, "ms ").concat(theme.transitions.easing.easeInOut)
        },
        /* Styles applied to the internal `Ripple` components `ripplePulsate` class. */ ripplePulsate: {
            animationDuration: "".concat(theme.transitions.duration.shorter, "ms")
        },
        /* Styles applied to the internal `Ripple` components `child` class. */ child: {
            opacity: 1,
            display: 'block',
            width: '100%',
            height: '100%',
            borderRadius: '50%',
            backgroundColor: 'currentColor'
        },
        /* Styles applied to the internal `Ripple` components `childLeaving` class. */ childLeaving: {
            opacity: 0,
            animation: "$exit ".concat(DURATION, "ms ").concat(theme.transitions.easing.easeInOut)
        },
        /* Styles applied to the internal `Ripple` components `childPulsate` class. */ childPulsate: {
            position: 'absolute',
            left: 0,
            top: 0,
            animation: "$pulsate 2500ms ".concat(theme.transitions.easing.easeInOut, " 200ms infinite")
        },
        '@keyframes enter': {
            '0%': {
                transform: 'scale(0)',
                opacity: 0.1
            },
            '100%': {
                transform: 'scale(1)',
                opacity: 0.3
            }
        },
        '@keyframes exit': {
            '0%': {
                opacity: 1
            },
            '100%': {
                opacity: 0
            }
        },
        '@keyframes pulsate': {
            '0%': {
                transform: 'scale(1)'
            },
            '50%': {
                transform: 'scale(0.92)'
            },
            '100%': {
                transform: 'scale(1)'
            }
        }
    };
};
/**
 * @ignore - internal component.
 *
 * TODO v5: Make private
 */ var TouchRipple = /*#__PURE__*/ _react.forwardRef(function TouchRipple(props, ref) {
    var _props$center = props.center, centerProp = _props$center === void 0 ? false : _props$center, classes = props.classes, className = props.className, other = _objectWithoutPropertiesDefault.default(props, [
        "center",
        "classes",
        "className"
    ]);
    var _React$useState = _react.useState([]), ripples = _React$useState[0], setRipples = _React$useState[1];
    var nextKey = _react.useRef(0);
    var rippleCallback = _react.useRef(null);
    _react.useEffect(function() {
        if (rippleCallback.current) {
            rippleCallback.current();
            rippleCallback.current = null;
        }
    }, [
        ripples
    ]); // Used to filter out mouse emulated events on mobile.
    var ignoringMouseDown = _react.useRef(false); // We use a timer in order to only show the ripples for touch "click" like events.
    // We don't want to display the ripple for touch scroll events.
    var startTimer = _react.useRef(null); // This is the hook called once the previous timeout is ready.
    var startTimerCommit = _react.useRef(null);
    var container = _react.useRef(null);
    _react.useEffect(function() {
        return function() {
            clearTimeout(startTimer.current);
        };
    }, []);
    var startCommit = _react.useCallback(function(params) {
        var pulsate = params.pulsate, rippleX = params.rippleX, rippleY = params.rippleY, rippleSize = params.rippleSize, cb = params.cb;
        setRipples(function(oldRipples) {
            return [].concat(_toConsumableArrayDefault.default(oldRipples), [
                /*#__PURE__*/ _react.createElement(_rippleDefault.default, {
                    key: nextKey.current,
                    classes: classes,
                    timeout: DURATION,
                    pulsate: pulsate,
                    rippleX: rippleX,
                    rippleY: rippleY,
                    rippleSize: rippleSize
                })
            ]);
        });
        nextKey.current += 1;
        rippleCallback.current = cb;
    }, [
        classes
    ]);
    var start = _react.useCallback(function() {
        var event = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
        var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
        var cb = arguments.length > 2 ? arguments[2] : undefined;
        var _options$pulsate = options.pulsate, pulsate = _options$pulsate === void 0 ? false : _options$pulsate, _options$center = options.center, center = _options$center === void 0 ? centerProp || options.pulsate : _options$center, _options$fakeElement = options.fakeElement, fakeElement = _options$fakeElement === void 0 ? false : _options$fakeElement;
        if (event.type === 'mousedown' && ignoringMouseDown.current) {
            ignoringMouseDown.current = false;
            return;
        }
        if (event.type === 'touchstart') ignoringMouseDown.current = true;
        var element = fakeElement ? null : container.current;
        var rect = element ? element.getBoundingClientRect() : {
            width: 0,
            height: 0,
            left: 0,
            top: 0
        }; // Get the size of the ripple
        var rippleX;
        var rippleY;
        var rippleSize;
        if (center || event.clientX === 0 && event.clientY === 0 || !event.clientX && !event.touches) {
            rippleX = Math.round(rect.width / 2);
            rippleY = Math.round(rect.height / 2);
        } else {
            var _ref = event.touches ? event.touches[0] : event, clientX = _ref.clientX, clientY = _ref.clientY;
            rippleX = Math.round(clientX - rect.left);
            rippleY = Math.round(clientY - rect.top);
        }
        if (center) {
            rippleSize = Math.sqrt((2 * Math.pow(rect.width, 2) + Math.pow(rect.height, 2)) / 3); // For some reason the animation is broken on Mobile Chrome if the size if even.
            if (rippleSize % 2 === 0) rippleSize += 1;
        } else {
            var sizeX = Math.max(Math.abs((element ? element.clientWidth : 0) - rippleX), rippleX) * 2 + 2;
            var sizeY = Math.max(Math.abs((element ? element.clientHeight : 0) - rippleY), rippleY) * 2 + 2;
            rippleSize = Math.sqrt(Math.pow(sizeX, 2) + Math.pow(sizeY, 2));
        } // Touche devices
        if (event.touches) // check that this isn't another touchstart due to multitouch
        // otherwise we will only clear a single timer when unmounting while two
        // are running
        {
            if (startTimerCommit.current === null) {
                // Prepare the ripple effect.
                startTimerCommit.current = function() {
                    startCommit({
                        pulsate: pulsate,
                        rippleX: rippleX,
                        rippleY: rippleY,
                        rippleSize: rippleSize,
                        cb: cb
                    });
                }; // Delay the execution of the ripple effect.
                startTimer.current = setTimeout(function() {
                    if (startTimerCommit.current) {
                        startTimerCommit.current();
                        startTimerCommit.current = null;
                    }
                }, DELAY_RIPPLE); // We have to make a tradeoff with this value.
            }
        } else startCommit({
            pulsate: pulsate,
            rippleX: rippleX,
            rippleY: rippleY,
            rippleSize: rippleSize,
            cb: cb
        });
    }, [
        centerProp,
        startCommit
    ]);
    var pulsate1 = _react.useCallback(function() {
        start({}, {
            pulsate: true
        });
    }, [
        start
    ]);
    var stop = _react.useCallback(function(event, cb) {
        clearTimeout(startTimer.current); // The touch interaction occurs too quickly.
        // We still want to show ripple effect.
        if (event.type === 'touchend' && startTimerCommit.current) {
            event.persist();
            startTimerCommit.current();
            startTimerCommit.current = null;
            startTimer.current = setTimeout(function() {
                stop(event, cb);
            });
            return;
        }
        startTimerCommit.current = null;
        setRipples(function(oldRipples) {
            if (oldRipples.length > 0) return oldRipples.slice(1);
            return oldRipples;
        });
        rippleCallback.current = cb;
    }, []);
    _react.useImperativeHandle(ref, function() {
        return {
            pulsate: pulsate1,
            start: start,
            stop: stop
        };
    }, [
        pulsate1,
        start,
        stop
    ]);
    return /*#__PURE__*/ _react.createElement("span", _extendsDefault.default({
        className: _clsxDefault.default(classes.root, className),
        ref: container
    }, other), /*#__PURE__*/ _react.createElement(_reactTransitionGroup.TransitionGroup, {
        component: null,
        exit: true
    }, ripples));
});
TouchRipple.propTypes = {
    /**
   * If `true`, the ripple starts at the center of the component
   * rather than at the point of interaction.
   */ center: _propTypesDefault.default.bool,
    /**
   * Override or extend the styles applied to the component.
   * See [CSS API](#css) below for more details.
   */ classes: _propTypesDefault.default.object.isRequired,
    /**
   * @ignore
   */ className: _propTypesDefault.default.string
};
exports.default = _withStylesDefault.default(styles, {
    flip: false,
    name: 'MuiTouchRipple'
})(/*#__PURE__*/ _react.memo(TouchRipple));

},{"@babel/runtime/helpers/esm/extends":"fTBFS","@babel/runtime/helpers/esm/toConsumableArray":"bCmCj","@babel/runtime/helpers/esm/objectWithoutProperties":"25tJ4","react":"21dqq","prop-types":"7wKI2","react-transition-group":"fZSkB","clsx":"83C22","../styles/withStyles":"7U0iM","./Ripple":"bIKH6","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"bIKH6":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _react = require("react");
var _propTypes = require("prop-types");
var _propTypesDefault = parcelHelpers.interopDefault(_propTypes);
var _clsx = require("clsx");
var _clsxDefault = parcelHelpers.interopDefault(_clsx);
var _useEventCallback = require("../utils/useEventCallback");
var _useEventCallbackDefault = parcelHelpers.interopDefault(_useEventCallback);
var useEnhancedEffect = typeof window === 'undefined' ? _react.useEffect : _react.useLayoutEffect;
/**
 * @ignore - internal component.
 */ function Ripple(props) {
    var classes = props.classes, _props$pulsate = props.pulsate, pulsate = _props$pulsate === void 0 ? false : _props$pulsate, rippleX = props.rippleX, rippleY = props.rippleY, rippleSize = props.rippleSize, inProp = props.in, _props$onExited = props.onExited, onExited = _props$onExited === void 0 ? function() {} : _props$onExited, timeout = props.timeout;
    var _React$useState = _react.useState(false), leaving = _React$useState[0], setLeaving = _React$useState[1];
    var rippleClassName = _clsxDefault.default(classes.ripple, classes.rippleVisible, pulsate && classes.ripplePulsate);
    var rippleStyles = {
        width: rippleSize,
        height: rippleSize,
        top: -(rippleSize / 2) + rippleY,
        left: -(rippleSize / 2) + rippleX
    };
    var childClassName = _clsxDefault.default(classes.child, leaving && classes.childLeaving, pulsate && classes.childPulsate);
    var handleExited = _useEventCallbackDefault.default(onExited); // Ripple is used for user feedback (e.g. click or press) so we want to apply styles with the highest priority
    useEnhancedEffect(function() {
        if (!inProp) {
            // react-transition-group#onExit
            setLeaving(true); // react-transition-group#onExited
            var timeoutId = setTimeout(handleExited, timeout);
            return function() {
                clearTimeout(timeoutId);
            };
        }
        return undefined;
    }, [
        handleExited,
        inProp,
        timeout
    ]);
    return /*#__PURE__*/ _react.createElement("span", {
        className: rippleClassName,
        style: rippleStyles
    }, /*#__PURE__*/ _react.createElement("span", {
        className: childClassName
    }));
}
Ripple.propTypes = {
    /**
   * Override or extend the styles applied to the component.
   * See [CSS API](#css) below for more details.
   */ classes: _propTypesDefault.default.object.isRequired,
    /**
   * @ignore - injected from TransitionGroup
   */ in: _propTypesDefault.default.bool,
    /**
   * @ignore - injected from TransitionGroup
   */ onExited: _propTypesDefault.default.func,
    /**
   * If `true`, the ripple pulsates, typically indicating the keyboard focus state of an element.
   */ pulsate: _propTypesDefault.default.bool,
    /**
   * Diameter of the ripple.
   */ rippleSize: _propTypesDefault.default.number,
    /**
   * Horizontal position of the ripple center.
   */ rippleX: _propTypesDefault.default.number,
    /**
   * Vertical position of the ripple center.
   */ rippleY: _propTypesDefault.default.number,
    /**
   * exit delay
   */ timeout: _propTypesDefault.default.number.isRequired
};
exports.default = Ripple;

},{"react":"21dqq","prop-types":"7wKI2","clsx":"83C22","../utils/useEventCallback":"hPpih","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"cer9e":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>_iconButtonDefault.default
);
var _iconButton = require("./IconButton");
var _iconButtonDefault = parcelHelpers.interopDefault(_iconButton);

},{"./IconButton":"amVd4","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"amVd4":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "styles", ()=>styles
);
var _extends = require("@babel/runtime/helpers/esm/extends");
var _extendsDefault = parcelHelpers.interopDefault(_extends);
var _objectWithoutProperties = require("@babel/runtime/helpers/esm/objectWithoutProperties");
var _objectWithoutPropertiesDefault = parcelHelpers.interopDefault(_objectWithoutProperties);
var _react = require("react");
var _propTypes = require("prop-types");
var _propTypesDefault = parcelHelpers.interopDefault(_propTypes);
var _clsx = require("clsx");
var _clsxDefault = parcelHelpers.interopDefault(_clsx);
var _utils = require("@material-ui/utils");
var _withStyles = require("../styles/withStyles");
var _withStylesDefault = parcelHelpers.interopDefault(_withStyles);
var _colorManipulator = require("../styles/colorManipulator");
var _buttonBase = require("../ButtonBase");
var _buttonBaseDefault = parcelHelpers.interopDefault(_buttonBase);
var _capitalize = require("../utils/capitalize");
var _capitalizeDefault = parcelHelpers.interopDefault(_capitalize);
var styles = function styles(theme) {
    return {
        /* Styles applied to the root element. */ root: {
            textAlign: 'center',
            flex: '0 0 auto',
            fontSize: theme.typography.pxToRem(24),
            padding: 12,
            borderRadius: '50%',
            overflow: 'visible',
            // Explicitly set the default value to solve a bug on IE 11.
            color: theme.palette.action.active,
            transition: theme.transitions.create('background-color', {
                duration: theme.transitions.duration.shortest
            }),
            '&:hover': {
                backgroundColor: _colorManipulator.alpha(theme.palette.action.active, theme.palette.action.hoverOpacity),
                // Reset on touch devices, it doesn't add specificity
                '@media (hover: none)': {
                    backgroundColor: 'transparent'
                }
            },
            '&$disabled': {
                backgroundColor: 'transparent',
                color: theme.palette.action.disabled
            }
        },
        /* Styles applied to the root element if `edge="start"`. */ edgeStart: {
            marginLeft: -12,
            '$sizeSmall&': {
                marginLeft: -3
            }
        },
        /* Styles applied to the root element if `edge="end"`. */ edgeEnd: {
            marginRight: -12,
            '$sizeSmall&': {
                marginRight: -3
            }
        },
        /* Styles applied to the root element if `color="inherit"`. */ colorInherit: {
            color: 'inherit'
        },
        /* Styles applied to the root element if `color="primary"`. */ colorPrimary: {
            color: theme.palette.primary.main,
            '&:hover': {
                backgroundColor: _colorManipulator.alpha(theme.palette.primary.main, theme.palette.action.hoverOpacity),
                // Reset on touch devices, it doesn't add specificity
                '@media (hover: none)': {
                    backgroundColor: 'transparent'
                }
            }
        },
        /* Styles applied to the root element if `color="secondary"`. */ colorSecondary: {
            color: theme.palette.secondary.main,
            '&:hover': {
                backgroundColor: _colorManipulator.alpha(theme.palette.secondary.main, theme.palette.action.hoverOpacity),
                // Reset on touch devices, it doesn't add specificity
                '@media (hover: none)': {
                    backgroundColor: 'transparent'
                }
            }
        },
        /* Pseudo-class applied to the root element if `disabled={true}`. */ disabled: {},
        /* Styles applied to the root element if `size="small"`. */ sizeSmall: {
            padding: 3,
            fontSize: theme.typography.pxToRem(18)
        },
        /* Styles applied to the children container element. */ label: {
            width: '100%',
            display: 'flex',
            alignItems: 'inherit',
            justifyContent: 'inherit'
        }
    };
};
/**
 * Refer to the [Icons](/components/icons/) section of the documentation
 * regarding the available icon options.
 */ var IconButton = /*#__PURE__*/ _react.forwardRef(function IconButton(props, ref) {
    var _props$edge = props.edge, edge = _props$edge === void 0 ? false : _props$edge, children = props.children, classes = props.classes, className = props.className, _props$color = props.color, color = _props$color === void 0 ? 'default' : _props$color, _props$disabled = props.disabled, disabled = _props$disabled === void 0 ? false : _props$disabled, _props$disableFocusRi = props.disableFocusRipple, disableFocusRipple = _props$disableFocusRi === void 0 ? false : _props$disableFocusRi, _props$size = props.size, size = _props$size === void 0 ? 'medium' : _props$size, other = _objectWithoutPropertiesDefault.default(props, [
        "edge",
        "children",
        "classes",
        "className",
        "color",
        "disabled",
        "disableFocusRipple",
        "size"
    ]);
    return /*#__PURE__*/ _react.createElement(_buttonBaseDefault.default, _extendsDefault.default({
        className: _clsxDefault.default(classes.root, className, color !== 'default' && classes["color".concat(_capitalizeDefault.default(color))], disabled && classes.disabled, size === "small" && classes["size".concat(_capitalizeDefault.default(size))], {
            'start': classes.edgeStart,
            'end': classes.edgeEnd
        }[edge]),
        centerRipple: true,
        focusRipple: !disableFocusRipple,
        disabled: disabled,
        ref: ref
    }, other), /*#__PURE__*/ _react.createElement("span", {
        className: classes.label
    }, children));
});
IconButton.propTypes = {
    /**
   * The icon element.
   */ children: _utils.chainPropTypes(_propTypesDefault.default.node, function(props) {
        var found = _react.Children.toArray(props.children).some(function(child) {
            return /*#__PURE__*/ _react.isValidElement(child) && child.props.onClick;
        });
        if (found) return new Error([
            "Material-UI: You are providing an onClick event listener to a child of a button element.",
            'Firefox will never trigger the event.',
            'You should move the onClick listener to the parent button element.',
            'https://github.com/mui-org/material-ui/issues/13957'
        ].join('\n'));
        return null;
    }),
    /**
   * Override or extend the styles applied to the component.
   * See [CSS API](#css) below for more details.
   */ classes: _propTypesDefault.default.object.isRequired,
    /**
   * @ignore
   */ className: _propTypesDefault.default.string,
    /**
   * The color of the component. It supports those theme colors that make sense for this component.
   */ color: _propTypesDefault.default.oneOf([
        'default',
        'inherit',
        'primary',
        'secondary'
    ]),
    /**
   * If `true`, the button will be disabled.
   */ disabled: _propTypesDefault.default.bool,
    /**
   * If `true`, the  keyboard focus ripple will be disabled.
   */ disableFocusRipple: _propTypesDefault.default.bool,
    /**
   * If `true`, the ripple effect will be disabled.
   */ disableRipple: _propTypesDefault.default.bool,
    /**
   * If given, uses a negative margin to counteract the padding on one
   * side (this is often helpful for aligning the left or right
   * side of the icon with content above or below, without ruining the border
   * size and shape).
   */ edge: _propTypesDefault.default.oneOf([
        'start',
        'end',
        false
    ]),
    /**
   * The size of the button.
   * `small` is equivalent to the dense button styling.
   */ size: _propTypesDefault.default.oneOf([
        'small',
        'medium'
    ])
};
exports.default = _withStylesDefault.default(styles, {
    name: 'MuiIconButton'
})(IconButton);

},{"@babel/runtime/helpers/esm/extends":"fTBFS","@babel/runtime/helpers/esm/objectWithoutProperties":"25tJ4","react":"21dqq","prop-types":"7wKI2","clsx":"83C22","@material-ui/utils":"54RkF","../styles/withStyles":"7U0iM","../styles/colorManipulator":"iz48G","../ButtonBase":"2TQRV","../utils/capitalize":"5AJVX","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"fKrzk":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>_appBarDefault.default
);
var _appBar = require("./AppBar");
var _appBarDefault = parcelHelpers.interopDefault(_appBar);

},{"./AppBar":"33x5w","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"33x5w":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "styles", ()=>styles
);
var _extends = require("@babel/runtime/helpers/esm/extends");
var _extendsDefault = parcelHelpers.interopDefault(_extends);
var _objectWithoutProperties = require("@babel/runtime/helpers/esm/objectWithoutProperties");
var _objectWithoutPropertiesDefault = parcelHelpers.interopDefault(_objectWithoutProperties);
var _react = require("react");
var _propTypes = require("prop-types");
var _propTypesDefault = parcelHelpers.interopDefault(_propTypes);
var _clsx = require("clsx");
var _clsxDefault = parcelHelpers.interopDefault(_clsx);
var _withStyles = require("../styles/withStyles");
var _withStylesDefault = parcelHelpers.interopDefault(_withStyles);
var _capitalize = require("../utils/capitalize");
var _capitalizeDefault = parcelHelpers.interopDefault(_capitalize);
var _paper = require("../Paper");
var _paperDefault = parcelHelpers.interopDefault(_paper);
var styles = function styles(theme) {
    var backgroundColorDefault = theme.palette.type === 'light' ? theme.palette.grey[100] : theme.palette.grey[900];
    return {
        /* Styles applied to the root element. */ root: {
            display: 'flex',
            flexDirection: 'column',
            width: '100%',
            boxSizing: 'border-box',
            // Prevent padding issue with the Modal and fixed positioned AppBar.
            zIndex: theme.zIndex.appBar,
            flexShrink: 0
        },
        /* Styles applied to the root element if `position="fixed"`. */ positionFixed: {
            position: 'fixed',
            top: 0,
            left: 'auto',
            right: 0,
            '@media print': {
                // Prevent the app bar to be visible on each printed page.
                position: 'absolute'
            }
        },
        /* Styles applied to the root element if `position="absolute"`. */ positionAbsolute: {
            position: 'absolute',
            top: 0,
            left: 'auto',
            right: 0
        },
        /* Styles applied to the root element if `position="sticky"`. */ positionSticky: {
            // ⚠️ sticky is not supported by IE 11.
            position: 'sticky',
            top: 0,
            left: 'auto',
            right: 0
        },
        /* Styles applied to the root element if `position="static"`. */ positionStatic: {
            position: 'static'
        },
        /* Styles applied to the root element if `position="relative"`. */ positionRelative: {
            position: 'relative'
        },
        /* Styles applied to the root element if `color="default"`. */ colorDefault: {
            backgroundColor: backgroundColorDefault,
            color: theme.palette.getContrastText(backgroundColorDefault)
        },
        /* Styles applied to the root element if `color="primary"`. */ colorPrimary: {
            backgroundColor: theme.palette.primary.main,
            color: theme.palette.primary.contrastText
        },
        /* Styles applied to the root element if `color="secondary"`. */ colorSecondary: {
            backgroundColor: theme.palette.secondary.main,
            color: theme.palette.secondary.contrastText
        },
        /* Styles applied to the root element if `color="inherit"`. */ colorInherit: {
            color: 'inherit'
        },
        /* Styles applied to the root element if `color="transparent"`. */ colorTransparent: {
            backgroundColor: 'transparent',
            color: 'inherit'
        }
    };
};
var AppBar = /*#__PURE__*/ _react.forwardRef(function AppBar(props, ref) {
    var classes = props.classes, className = props.className, _props$color = props.color, color = _props$color === void 0 ? 'primary' : _props$color, _props$position = props.position, position = _props$position === void 0 ? 'fixed' : _props$position, other = _objectWithoutPropertiesDefault.default(props, [
        "classes",
        "className",
        "color",
        "position"
    ]);
    return /*#__PURE__*/ _react.createElement(_paperDefault.default, _extendsDefault.default({
        square: true,
        component: "header",
        elevation: 4,
        className: _clsxDefault.default(classes.root, classes["position".concat(_capitalizeDefault.default(position))], classes["color".concat(_capitalizeDefault.default(color))], className, position === 'fixed' && 'mui-fixed'),
        ref: ref
    }, other));
});
AppBar.propTypes = {
    // ----------------------------- Warning --------------------------------
    // | These PropTypes are generated from the TypeScript type definitions |
    // |     To update them edit the d.ts file and run "yarn proptypes"     |
    // ----------------------------------------------------------------------
    /**
   * The content of the component.
   */ children: _propTypesDefault.default.node,
    /**
   * Override or extend the styles applied to the component.
   * See [CSS API](#css) below for more details.
   */ classes: _propTypesDefault.default.object,
    /**
   * @ignore
   */ className: _propTypesDefault.default.string,
    /**
   * The color of the component. It supports those theme colors that make sense for this component.
   */ color: _propTypesDefault.default.oneOf([
        'default',
        'inherit',
        'primary',
        'secondary',
        'transparent'
    ]),
    /**
   * The positioning type. The behavior of the different options is described
   * [in the MDN web docs](https://developer.mozilla.org/en-US/docs/Learn/CSS/CSS_layout/Positioning).
   * Note: `sticky` is not universally supported and will fall back to `static` when unavailable.
   */ position: _propTypesDefault.default.oneOf([
        'absolute',
        'fixed',
        'relative',
        'static',
        'sticky'
    ])
};
exports.default = _withStylesDefault.default(styles, {
    name: 'MuiAppBar'
})(AppBar);

},{"@babel/runtime/helpers/esm/extends":"fTBFS","@babel/runtime/helpers/esm/objectWithoutProperties":"25tJ4","react":"21dqq","prop-types":"7wKI2","clsx":"83C22","../styles/withStyles":"7U0iM","../utils/capitalize":"5AJVX","../Paper":"j0s2L","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"lF8pm":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>_avatarDefault.default
);
var _avatar = require("./Avatar");
var _avatarDefault = parcelHelpers.interopDefault(_avatar);

},{"./Avatar":"jQVOT","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"jQVOT":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "styles", ()=>styles
);
var _extends = require("@babel/runtime/helpers/esm/extends");
var _extendsDefault = parcelHelpers.interopDefault(_extends);
var _objectWithoutProperties = require("@babel/runtime/helpers/esm/objectWithoutProperties");
var _objectWithoutPropertiesDefault = parcelHelpers.interopDefault(_objectWithoutProperties);
var _react = require("react");
var _propTypes = require("prop-types");
var _propTypesDefault = parcelHelpers.interopDefault(_propTypes);
var _clsx = require("clsx");
var _clsxDefault = parcelHelpers.interopDefault(_clsx);
var _utils = require("@material-ui/utils");
var _withStyles = require("../styles/withStyles");
var _withStylesDefault = parcelHelpers.interopDefault(_withStyles);
var _person = require("../internal/svg-icons/Person");
var _personDefault = parcelHelpers.interopDefault(_person);
var styles = function styles(theme) {
    return {
        /* Styles applied to the root element. */ root: {
            position: 'relative',
            display: 'flex',
            alignItems: 'center',
            justifyContent: 'center',
            flexShrink: 0,
            width: 40,
            height: 40,
            fontFamily: theme.typography.fontFamily,
            fontSize: theme.typography.pxToRem(20),
            lineHeight: 1,
            borderRadius: '50%',
            overflow: 'hidden',
            userSelect: 'none'
        },
        /* Styles applied to the root element if not `src` or `srcSet`. */ colorDefault: {
            color: theme.palette.background.default,
            backgroundColor: theme.palette.type === 'light' ? theme.palette.grey[400] : theme.palette.grey[600]
        },
        /* Styles applied to the root element if `variant="circle"`. */ circle: {},
        /* Styles applied to the root element if `variant="circular"`. */ circular: {},
        /* Styles applied to the root element if `variant="rounded"`. */ rounded: {
            borderRadius: theme.shape.borderRadius
        },
        /* Styles applied to the root element if `variant="square"`. */ square: {
            borderRadius: 0
        },
        /* Styles applied to the img element if either `src` or `srcSet` is defined. */ img: {
            width: '100%',
            height: '100%',
            textAlign: 'center',
            // Handle non-square image. The property isn't supported by IE 11.
            objectFit: 'cover',
            // Hide alt text.
            color: 'transparent',
            // Hide the image broken icon, only works on Chrome.
            textIndent: 10000
        },
        /* Styles applied to the fallback icon */ fallback: {
            width: '75%',
            height: '75%'
        }
    };
};
function useLoaded(_ref) {
    var src = _ref.src, srcSet = _ref.srcSet;
    var _React$useState = _react.useState(false), loaded = _React$useState[0], setLoaded = _React$useState[1];
    _react.useEffect(function() {
        if (!src && !srcSet) return undefined;
        setLoaded(false);
        var active = true;
        var image = new Image();
        image.src = src;
        image.srcSet = srcSet;
        image.onload = function() {
            if (!active) return;
            setLoaded('loaded');
        };
        image.onerror = function() {
            if (!active) return;
            setLoaded('error');
        };
        return function() {
            active = false;
        };
    }, [
        src,
        srcSet
    ]);
    return loaded;
}
var Avatar = /*#__PURE__*/ _react.forwardRef(function Avatar(props, ref) {
    var alt = props.alt, childrenProp = props.children, classes = props.classes, className = props.className, _props$component = props.component, Component = _props$component === void 0 ? 'div' : _props$component, imgProps = props.imgProps, sizes = props.sizes, src = props.src, srcSet = props.srcSet, _props$variant = props.variant, variant = _props$variant === void 0 ? 'circular' : _props$variant, other = _objectWithoutPropertiesDefault.default(props, [
        "alt",
        "children",
        "classes",
        "className",
        "component",
        "imgProps",
        "sizes",
        "src",
        "srcSet",
        "variant"
    ]);
    var children = null; // Use a hook instead of onError on the img element to support server-side rendering.
    var loaded = useLoaded({
        src: src,
        srcSet: srcSet
    });
    var hasImg = src || srcSet;
    var hasImgNotFailing = hasImg && loaded !== 'error';
    if (hasImgNotFailing) children = /*#__PURE__*/ _react.createElement("img", _extendsDefault.default({
        alt: alt,
        src: src,
        srcSet: srcSet,
        sizes: sizes,
        className: classes.img
    }, imgProps));
    else if (childrenProp != null) children = childrenProp;
    else if (hasImg && alt) children = alt[0];
    else children = /*#__PURE__*/ _react.createElement(_personDefault.default, {
        className: classes.fallback
    });
    return /*#__PURE__*/ _react.createElement(Component, _extendsDefault.default({
        className: _clsxDefault.default(classes.root, classes.system, classes[variant], className, !hasImgNotFailing && classes.colorDefault),
        ref: ref
    }, other), children);
});
Avatar.propTypes = {
    // ----------------------------- Warning --------------------------------
    // | These PropTypes are generated from the TypeScript type definitions |
    // |     To update them edit the d.ts file and run "yarn proptypes"     |
    // ----------------------------------------------------------------------
    /**
   * Used in combination with `src` or `srcSet` to
   * provide an alt attribute for the rendered `img` element.
   */ alt: _propTypesDefault.default.string,
    /**
   * Used to render icon or text elements inside the Avatar if `src` is not set.
   * This can be an element, or just a string.
   */ children: _propTypesDefault.default.node,
    /**
   * Override or extend the styles applied to the component.
   * See [CSS API](#css) below for more details.
   */ classes: _utils.chainPropTypes(_propTypesDefault.default.object, function(props) {
        var classes = props.classes;
        if (classes == null) return null;
        if (classes.circle != null && classes.circle.split(' ').length > 1) throw new Error("Material-UI: The `circle` class is deprecated. Use `circular` instead.");
        return null;
    }),
    /**
   * @ignore
   */ className: _propTypesDefault.default.string,
    /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */ component: _propTypesDefault.default/* @typescript-to-proptypes-ignore */ .elementType,
    /**
   * Attributes applied to the `img` element if the component is used to display an image.
   * It can be used to listen for the loading error event.
   */ imgProps: _propTypesDefault.default.object,
    /**
   * The `sizes` attribute for the `img` element.
   */ sizes: _propTypesDefault.default.string,
    /**
   * The `src` attribute for the `img` element.
   */ src: _propTypesDefault.default.string,
    /**
   * The `srcSet` attribute for the `img` element.
   * Use this attribute for responsive image display.
   */ srcSet: _propTypesDefault.default.string,
    /**
   * The shape of the avatar.
   */ variant: _utils.chainPropTypes(_propTypesDefault.default.oneOf([
        'circle',
        'circular',
        'rounded',
        'square'
    ]), function(props) {
        var variant = props.variant;
        if (variant === 'circle') throw new Error('Material-UI: `variant="circle"` is deprecated. Use `variant="circular"` instead.');
        return null;
    })
};
exports.default = _withStylesDefault.default(styles, {
    name: 'MuiAvatar'
})(Avatar);

},{"@babel/runtime/helpers/esm/extends":"fTBFS","@babel/runtime/helpers/esm/objectWithoutProperties":"25tJ4","react":"21dqq","prop-types":"7wKI2","clsx":"83C22","@material-ui/utils":"54RkF","../styles/withStyles":"7U0iM","../internal/svg-icons/Person":"56UYI","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"56UYI":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _react = require("react");
var _createSvgIcon = require("../../utils/createSvgIcon");
var _createSvgIconDefault = parcelHelpers.interopDefault(_createSvgIcon);
/**
 * @ignore - internal component.
 */ exports.default = _createSvgIconDefault.default(/*#__PURE__*/ _react.createElement("path", {
    d: "M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z"
}), 'Person');

},{"react":"21dqq","../../utils/createSvgIcon":"lVBTd","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"2ZW6c":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>_backdropDefault.default
);
var _backdrop = require("./Backdrop");
var _backdropDefault = parcelHelpers.interopDefault(_backdrop);

},{"./Backdrop":"1EIyl","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"1EIyl":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "styles", ()=>styles
);
var _extends = require("@babel/runtime/helpers/esm/extends");
var _extendsDefault = parcelHelpers.interopDefault(_extends);
var _objectWithoutProperties = require("@babel/runtime/helpers/esm/objectWithoutProperties");
var _objectWithoutPropertiesDefault = parcelHelpers.interopDefault(_objectWithoutProperties);
var _react = require("react");
var _propTypes = require("prop-types");
var _propTypesDefault = parcelHelpers.interopDefault(_propTypes);
var _clsx = require("clsx");
var _clsxDefault = parcelHelpers.interopDefault(_clsx);
var _withStyles = require("../styles/withStyles");
var _withStylesDefault = parcelHelpers.interopDefault(_withStyles);
var _fade = require("../Fade");
var _fadeDefault = parcelHelpers.interopDefault(_fade);
var styles = {
    /* Styles applied to the root element. */ root: {
        // Improve scrollable dialog support.
        zIndex: -1,
        position: 'fixed',
        display: 'flex',
        alignItems: 'center',
        justifyContent: 'center',
        right: 0,
        bottom: 0,
        top: 0,
        left: 0,
        backgroundColor: 'rgba(0, 0, 0, 0.5)',
        WebkitTapHighlightColor: 'transparent'
    },
    /* Styles applied to the root element if `invisible={true}`. */ invisible: {
        backgroundColor: 'transparent'
    }
};
var Backdrop = /*#__PURE__*/ _react.forwardRef(function Backdrop(props, ref) {
    var children = props.children, classes = props.classes, className = props.className, _props$invisible = props.invisible, invisible = _props$invisible === void 0 ? false : _props$invisible, open = props.open, transitionDuration = props.transitionDuration, _props$TransitionComp = props.TransitionComponent, TransitionComponent = _props$TransitionComp === void 0 ? _fadeDefault.default : _props$TransitionComp, other = _objectWithoutPropertiesDefault.default(props, [
        "children",
        "classes",
        "className",
        "invisible",
        "open",
        "transitionDuration",
        "TransitionComponent"
    ]);
    return /*#__PURE__*/ _react.createElement(TransitionComponent, _extendsDefault.default({
        in: open,
        timeout: transitionDuration
    }, other), /*#__PURE__*/ _react.createElement("div", {
        className: _clsxDefault.default(classes.root, className, invisible && classes.invisible),
        "aria-hidden": true,
        ref: ref
    }, children));
});
Backdrop.propTypes = {
    // ----------------------------- Warning --------------------------------
    // | These PropTypes are generated from the TypeScript type definitions |
    // |     To update them edit the d.ts file and run "yarn proptypes"     |
    // ----------------------------------------------------------------------
    /**
   * The content of the component.
   */ children: _propTypesDefault.default.node,
    /**
   * Override or extend the styles applied to the component.
   * See [CSS API](#css) below for more details.
   */ classes: _propTypesDefault.default.object,
    /**
   * @ignore
   */ className: _propTypesDefault.default.string,
    /**
   * If `true`, the backdrop is invisible.
   * It can be used when rendering a popover or a custom select component.
   */ invisible: _propTypesDefault.default.bool,
    /**
   * If `true`, the backdrop is open.
   */ open: _propTypesDefault.default.bool.isRequired,
    /**
   * The duration for the transition, in milliseconds.
   * You may specify a single timeout for all transitions, or individually with an object.
   */ transitionDuration: _propTypesDefault.default.oneOfType([
        _propTypesDefault.default.number,
        _propTypesDefault.default.shape({
            appear: _propTypesDefault.default.number,
            enter: _propTypesDefault.default.number,
            exit: _propTypesDefault.default.number
        })
    ])
};
exports.default = _withStylesDefault.default(styles, {
    name: 'MuiBackdrop'
})(Backdrop);

},{"@babel/runtime/helpers/esm/extends":"fTBFS","@babel/runtime/helpers/esm/objectWithoutProperties":"25tJ4","react":"21dqq","prop-types":"7wKI2","clsx":"83C22","../styles/withStyles":"7U0iM","../Fade":"5PAzJ","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"5PAzJ":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>_fadeDefault.default
);
var _fade = require("./Fade");
var _fadeDefault = parcelHelpers.interopDefault(_fade);

},{"./Fade":"7yG7s","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"7yG7s":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _extends = require("@babel/runtime/helpers/esm/extends");
var _extendsDefault = parcelHelpers.interopDefault(_extends);
var _slicedToArray = require("@babel/runtime/helpers/esm/slicedToArray");
var _slicedToArrayDefault = parcelHelpers.interopDefault(_slicedToArray);
var _objectWithoutProperties = require("@babel/runtime/helpers/esm/objectWithoutProperties");
var _objectWithoutPropertiesDefault = parcelHelpers.interopDefault(_objectWithoutProperties);
var _react = require("react");
var _propTypes = require("prop-types");
var _propTypesDefault = parcelHelpers.interopDefault(_propTypes);
var _reactTransitionGroup = require("react-transition-group");
var _transitions = require("../styles/transitions");
var _useTheme = require("../styles/useTheme");
var _useThemeDefault = parcelHelpers.interopDefault(_useTheme);
var _utils = require("../transitions/utils");
var _useForkRef = require("../utils/useForkRef");
var _useForkRefDefault = parcelHelpers.interopDefault(_useForkRef);
var styles = {
    entering: {
        opacity: 1
    },
    entered: {
        opacity: 1
    }
};
var defaultTimeout = {
    enter: _transitions.duration.enteringScreen,
    exit: _transitions.duration.leavingScreen
};
/**
 * The Fade transition is used by the [Modal](/components/modal/) component.
 * It uses [react-transition-group](https://github.com/reactjs/react-transition-group) internally.
 */ var Fade = /*#__PURE__*/ _react.forwardRef(function Fade(props, ref) {
    var children = props.children, _props$disableStrictM = props.disableStrictModeCompat, disableStrictModeCompat = _props$disableStrictM === void 0 ? false : _props$disableStrictM, inProp = props.in, onEnter = props.onEnter, onEntered = props.onEntered, onEntering = props.onEntering, onExit = props.onExit, onExited = props.onExited, onExiting = props.onExiting, style = props.style, _props$TransitionComp = props.TransitionComponent, TransitionComponent = _props$TransitionComp === void 0 ? _reactTransitionGroup.Transition : _props$TransitionComp, _props$timeout = props.timeout, timeout = _props$timeout === void 0 ? defaultTimeout : _props$timeout, other = _objectWithoutPropertiesDefault.default(props, [
        "children",
        "disableStrictModeCompat",
        "in",
        "onEnter",
        "onEntered",
        "onEntering",
        "onExit",
        "onExited",
        "onExiting",
        "style",
        "TransitionComponent",
        "timeout"
    ]);
    var theme = _useThemeDefault.default();
    var enableStrictModeCompat = theme.unstable_strictMode && !disableStrictModeCompat;
    var nodeRef = _react.useRef(null);
    var foreignRef = _useForkRefDefault.default(children.ref, ref);
    var handleRef = _useForkRefDefault.default(enableStrictModeCompat ? nodeRef : undefined, foreignRef);
    var normalizedTransitionCallback = function normalizedTransitionCallback(callback) {
        return function(nodeOrAppearing, maybeAppearing) {
            if (callback) {
                var _ref = enableStrictModeCompat ? [
                    nodeRef.current,
                    nodeOrAppearing
                ] : [
                    nodeOrAppearing,
                    maybeAppearing
                ], _ref2 = _slicedToArrayDefault.default(_ref, 2), node = _ref2[0], isAppearing = _ref2[1]; // onEnterXxx and onExitXxx callbacks have a different arguments.length value.
                if (isAppearing === undefined) callback(node);
                else callback(node, isAppearing);
            }
        };
    };
    var handleEntering = normalizedTransitionCallback(onEntering);
    var handleEnter = normalizedTransitionCallback(function(node, isAppearing) {
        _utils.reflow(node); // So the animation always start from the start.
        var transitionProps = _utils.getTransitionProps({
            style: style,
            timeout: timeout
        }, {
            mode: 'enter'
        });
        node.style.webkitTransition = theme.transitions.create('opacity', transitionProps);
        node.style.transition = theme.transitions.create('opacity', transitionProps);
        if (onEnter) onEnter(node, isAppearing);
    });
    var handleEntered = normalizedTransitionCallback(onEntered);
    var handleExiting = normalizedTransitionCallback(onExiting);
    var handleExit = normalizedTransitionCallback(function(node) {
        var transitionProps = _utils.getTransitionProps({
            style: style,
            timeout: timeout
        }, {
            mode: 'exit'
        });
        node.style.webkitTransition = theme.transitions.create('opacity', transitionProps);
        node.style.transition = theme.transitions.create('opacity', transitionProps);
        if (onExit) onExit(node);
    });
    var handleExited = normalizedTransitionCallback(onExited);
    return /*#__PURE__*/ _react.createElement(TransitionComponent, _extendsDefault.default({
        appear: true,
        in: inProp,
        nodeRef: enableStrictModeCompat ? nodeRef : undefined,
        onEnter: handleEnter,
        onEntered: handleEntered,
        onEntering: handleEntering,
        onExit: handleExit,
        onExited: handleExited,
        onExiting: handleExiting,
        timeout: timeout
    }, other), function(state, childProps) {
        return /*#__PURE__*/ _react.cloneElement(children, _extendsDefault.default({
            style: _extendsDefault.default({
                opacity: 0,
                visibility: state === 'exited' && !inProp ? 'hidden' : undefined
            }, styles[state], style, children.props.style),
            ref: handleRef
        }, childProps));
    });
});
Fade.propTypes = {
    // ----------------------------- Warning --------------------------------
    // | These PropTypes are generated from the TypeScript type definitions |
    // |     To update them edit the d.ts file and run "yarn proptypes"     |
    // ----------------------------------------------------------------------
    /**
   * A single child content element.
   */ children: _propTypesDefault.default.element,
    /**
   * Enable this prop if you encounter 'Function components cannot be given refs',
   * use `unstable_createStrictModeTheme`,
   * and can't forward the ref in the child component.
   */ disableStrictModeCompat: _propTypesDefault.default.bool,
    /**
   * If `true`, the component will transition in.
   */ in: _propTypesDefault.default.bool,
    /**
   * @ignore
   */ onEnter: _propTypesDefault.default.func,
    /**
   * @ignore
   */ onEntered: _propTypesDefault.default.func,
    /**
   * @ignore
   */ onEntering: _propTypesDefault.default.func,
    /**
   * @ignore
   */ onExit: _propTypesDefault.default.func,
    /**
   * @ignore
   */ onExited: _propTypesDefault.default.func,
    /**
   * @ignore
   */ onExiting: _propTypesDefault.default.func,
    /**
   * @ignore
   */ style: _propTypesDefault.default.object,
    /**
   * The duration for the transition, in milliseconds.
   * You may specify a single timeout for all transitions, or individually with an object.
   */ timeout: _propTypesDefault.default.oneOfType([
        _propTypesDefault.default.number,
        _propTypesDefault.default.shape({
            appear: _propTypesDefault.default.number,
            enter: _propTypesDefault.default.number,
            exit: _propTypesDefault.default.number
        })
    ])
};
exports.default = Fade;

},{"@babel/runtime/helpers/esm/extends":"fTBFS","@babel/runtime/helpers/esm/slicedToArray":"cBZWN","@babel/runtime/helpers/esm/objectWithoutProperties":"25tJ4","react":"21dqq","prop-types":"7wKI2","react-transition-group":"fZSkB","../styles/transitions":"c5294","../styles/useTheme":"kWUCn","../transitions/utils":"ixDXW","../utils/useForkRef":"kUpGa","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"80OM9":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>_badgeDefault.default
);
var _badge = require("./Badge");
var _badgeDefault = parcelHelpers.interopDefault(_badge);

},{"./Badge":"d8Cr3","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"d8Cr3":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "styles", ()=>styles
);
var _slicedToArray = require("@babel/runtime/helpers/esm/slicedToArray");
var _slicedToArrayDefault = parcelHelpers.interopDefault(_slicedToArray);
var _extends = require("@babel/runtime/helpers/esm/extends");
var _extendsDefault = parcelHelpers.interopDefault(_extends);
var _objectWithoutProperties = require("@babel/runtime/helpers/esm/objectWithoutProperties");
var _objectWithoutPropertiesDefault = parcelHelpers.interopDefault(_objectWithoutProperties);
var _react = require("react");
var _propTypes = require("prop-types");
var _propTypesDefault = parcelHelpers.interopDefault(_propTypes);
var _clsx = require("clsx");
var _clsxDefault = parcelHelpers.interopDefault(_clsx);
var _utils = require("@material-ui/utils");
var _withStyles = require("../styles/withStyles");
var _withStylesDefault = parcelHelpers.interopDefault(_withStyles);
var _capitalize = require("../utils/capitalize");
var _capitalizeDefault = parcelHelpers.interopDefault(_capitalize);
var RADIUS_STANDARD = 10;
var RADIUS_DOT = 4;
var styles = function styles(theme) {
    return {
        /* Styles applied to the root element. */ root: {
            position: 'relative',
            display: 'inline-flex',
            // For correct alignment with the text.
            verticalAlign: 'middle',
            flexShrink: 0
        },
        /* Styles applied to the badge `span` element. */ badge: {
            display: 'flex',
            flexDirection: 'row',
            flexWrap: 'wrap',
            justifyContent: 'center',
            alignContent: 'center',
            alignItems: 'center',
            position: 'absolute',
            boxSizing: 'border-box',
            fontFamily: theme.typography.fontFamily,
            fontWeight: theme.typography.fontWeightMedium,
            fontSize: theme.typography.pxToRem(12),
            minWidth: RADIUS_STANDARD * 2,
            lineHeight: 1,
            padding: '0 6px',
            height: RADIUS_STANDARD * 2,
            borderRadius: RADIUS_STANDARD,
            zIndex: 1,
            // Render the badge on top of potential ripples.
            transition: theme.transitions.create('transform', {
                easing: theme.transitions.easing.easeInOut,
                duration: theme.transitions.duration.enteringScreen
            })
        },
        /* Styles applied to the root element if `color="primary"`. */ colorPrimary: {
            backgroundColor: theme.palette.primary.main,
            color: theme.palette.primary.contrastText
        },
        /* Styles applied to the root element if `color="secondary"`. */ colorSecondary: {
            backgroundColor: theme.palette.secondary.main,
            color: theme.palette.secondary.contrastText
        },
        /* Styles applied to the root element if `color="error"`. */ colorError: {
            backgroundColor: theme.palette.error.main,
            color: theme.palette.error.contrastText
        },
        /* Styles applied to the root element if `variant="dot"`. */ dot: {
            borderRadius: RADIUS_DOT,
            height: RADIUS_DOT * 2,
            minWidth: RADIUS_DOT * 2,
            padding: 0
        },
        /* Styles applied to the root element if `anchorOrigin={{ 'top', 'right' }} overlap="rectangle"`. */ anchorOriginTopRightRectangle: {
            top: 0,
            right: 0,
            transform: 'scale(1) translate(50%, -50%)',
            transformOrigin: '100% 0%',
            '&$invisible': {
                transform: 'scale(0) translate(50%, -50%)'
            }
        },
        /* Styles applied to the root element if `anchorOrigin={{ 'top', 'right' }} overlap="rectangular"`. */ anchorOriginTopRightRectangular: {
            top: 0,
            right: 0,
            transform: 'scale(1) translate(50%, -50%)',
            transformOrigin: '100% 0%',
            '&$invisible': {
                transform: 'scale(0) translate(50%, -50%)'
            }
        },
        /* Styles applied to the root element if `anchorOrigin={{ 'bottom', 'right' }} overlap="rectangle"`. */ anchorOriginBottomRightRectangle: {
            bottom: 0,
            right: 0,
            transform: 'scale(1) translate(50%, 50%)',
            transformOrigin: '100% 100%',
            '&$invisible': {
                transform: 'scale(0) translate(50%, 50%)'
            }
        },
        /* Styles applied to the root element if `anchorOrigin={{ 'bottom', 'right' }} overlap="rectangular"`. */ anchorOriginBottomRightRectangular: {
            bottom: 0,
            right: 0,
            transform: 'scale(1) translate(50%, 50%)',
            transformOrigin: '100% 100%',
            '&$invisible': {
                transform: 'scale(0) translate(50%, 50%)'
            }
        },
        /* Styles applied to the root element if `anchorOrigin={{ 'top', 'left' }} overlap="rectangle"`. */ anchorOriginTopLeftRectangle: {
            top: 0,
            left: 0,
            transform: 'scale(1) translate(-50%, -50%)',
            transformOrigin: '0% 0%',
            '&$invisible': {
                transform: 'scale(0) translate(-50%, -50%)'
            }
        },
        /* Styles applied to the root element if `anchorOrigin={{ 'top', 'left' }} overlap="rectangular"`. */ anchorOriginTopLeftRectangular: {
            top: 0,
            left: 0,
            transform: 'scale(1) translate(-50%, -50%)',
            transformOrigin: '0% 0%',
            '&$invisible': {
                transform: 'scale(0) translate(-50%, -50%)'
            }
        },
        /* Styles applied to the root element if `anchorOrigin={{ 'bottom', 'left' }} overlap="rectangle"`. */ anchorOriginBottomLeftRectangle: {
            bottom: 0,
            left: 0,
            transform: 'scale(1) translate(-50%, 50%)',
            transformOrigin: '0% 100%',
            '&$invisible': {
                transform: 'scale(0) translate(-50%, 50%)'
            }
        },
        /* Styles applied to the root element if `anchorOrigin={{ 'bottom', 'left' }} overlap="rectangular"`. */ anchorOriginBottomLeftRectangular: {
            bottom: 0,
            left: 0,
            transform: 'scale(1) translate(-50%, 50%)',
            transformOrigin: '0% 100%',
            '&$invisible': {
                transform: 'scale(0) translate(-50%, 50%)'
            }
        },
        /* Styles applied to the root element if `anchorOrigin={{ 'top', 'right' }} overlap="circle"`. */ anchorOriginTopRightCircle: {
            top: '14%',
            right: '14%',
            transform: 'scale(1) translate(50%, -50%)',
            transformOrigin: '100% 0%',
            '&$invisible': {
                transform: 'scale(0) translate(50%, -50%)'
            }
        },
        /* Styles applied to the root element if `anchorOrigin={{ 'top', 'right' }} overlap="circular"`. */ anchorOriginTopRightCircular: {
            top: '14%',
            right: '14%',
            transform: 'scale(1) translate(50%, -50%)',
            transformOrigin: '100% 0%',
            '&$invisible': {
                transform: 'scale(0) translate(50%, -50%)'
            }
        },
        /* Styles applied to the root element if `anchorOrigin={{ 'bottom', 'right' }} overlap="circle"`. */ anchorOriginBottomRightCircle: {
            bottom: '14%',
            right: '14%',
            transform: 'scale(1) translate(50%, 50%)',
            transformOrigin: '100% 100%',
            '&$invisible': {
                transform: 'scale(0) translate(50%, 50%)'
            }
        },
        /* Styles applied to the root element if `anchorOrigin={{ 'bottom', 'right' }} overlap="circular"`. */ anchorOriginBottomRightCircular: {
            bottom: '14%',
            right: '14%',
            transform: 'scale(1) translate(50%, 50%)',
            transformOrigin: '100% 100%',
            '&$invisible': {
                transform: 'scale(0) translate(50%, 50%)'
            }
        },
        /* Styles applied to the root element if `anchorOrigin={{ 'top', 'left' }} overlap="circle"`. */ anchorOriginTopLeftCircle: {
            top: '14%',
            left: '14%',
            transform: 'scale(1) translate(-50%, -50%)',
            transformOrigin: '0% 0%',
            '&$invisible': {
                transform: 'scale(0) translate(-50%, -50%)'
            }
        },
        /* Styles applied to the root element if `anchorOrigin={{ 'top', 'left' }} overlap="circular"`. */ anchorOriginTopLeftCircular: {
            top: '14%',
            left: '14%',
            transform: 'scale(1) translate(-50%, -50%)',
            transformOrigin: '0% 0%',
            '&$invisible': {
                transform: 'scale(0) translate(-50%, -50%)'
            }
        },
        /* Styles applied to the root element if `anchorOrigin={{ 'bottom', 'left' }} overlap="circle"`. */ anchorOriginBottomLeftCircle: {
            bottom: '14%',
            left: '14%',
            transform: 'scale(1) translate(-50%, 50%)',
            transformOrigin: '0% 100%',
            '&$invisible': {
                transform: 'scale(0) translate(-50%, 50%)'
            }
        },
        /* Styles applied to the root element if `anchorOrigin={{ 'bottom', 'left' }} overlap="circular"`. */ anchorOriginBottomLeftCircular: {
            bottom: '14%',
            left: '14%',
            transform: 'scale(1) translate(-50%, 50%)',
            transformOrigin: '0% 100%',
            '&$invisible': {
                transform: 'scale(0) translate(-50%, 50%)'
            }
        },
        /* Pseudo-class to the badge `span` element if `invisible={true}`. */ invisible: {
            transition: theme.transitions.create('transform', {
                easing: theme.transitions.easing.easeInOut,
                duration: theme.transitions.duration.leavingScreen
            })
        }
    };
};
var Badge = /*#__PURE__*/ _react.forwardRef(function Badge(props, ref) {
    var _props$anchorOrigin = props.anchorOrigin, anchorOrigin = _props$anchorOrigin === void 0 ? {
        vertical: 'top',
        horizontal: 'right'
    } : _props$anchorOrigin, badgeContent = props.badgeContent, children = props.children, classes = props.classes, className = props.className, _props$color = props.color, color = _props$color === void 0 ? 'default' : _props$color, _props$component = props.component, ComponentProp = _props$component === void 0 ? 'span' : _props$component, invisibleProp = props.invisible, _props$max = props.max, max = _props$max === void 0 ? 99 : _props$max, _props$overlap = props.overlap, overlap = _props$overlap === void 0 ? 'rectangle' : _props$overlap, _props$showZero = props.showZero, showZero = _props$showZero === void 0 ? false : _props$showZero, _props$variant = props.variant, variant = _props$variant === void 0 ? 'standard' : _props$variant, other = _objectWithoutPropertiesDefault.default(props, [
        "anchorOrigin",
        "badgeContent",
        "children",
        "classes",
        "className",
        "color",
        "component",
        "invisible",
        "max",
        "overlap",
        "showZero",
        "variant"
    ]);
    var invisible = invisibleProp;
    if (invisibleProp == null && (badgeContent === 0 && !showZero || badgeContent == null && variant !== 'dot')) invisible = true;
    var displayValue = '';
    if (variant !== 'dot') displayValue = badgeContent > max ? "".concat(max, "+") : badgeContent;
    return /*#__PURE__*/ _react.createElement(ComponentProp, _extendsDefault.default({
        className: _clsxDefault.default(classes.root, className),
        ref: ref
    }, other), children, /*#__PURE__*/ _react.createElement("span", {
        className: _clsxDefault.default(classes.badge, classes["".concat(anchorOrigin.horizontal).concat(_capitalizeDefault.default(anchorOrigin.vertical), "}")], classes["anchorOrigin".concat(_capitalizeDefault.default(anchorOrigin.vertical)).concat(_capitalizeDefault.default(anchorOrigin.horizontal)).concat(_capitalizeDefault.default(overlap))], color !== 'default' && classes["color".concat(_capitalizeDefault.default(color))], invisible && classes.invisible, variant === 'dot' && classes.dot)
    }, displayValue));
});
Badge.propTypes = {
    // ----------------------------- Warning --------------------------------
    // | These PropTypes are generated from the TypeScript type definitions |
    // |     To update them edit the d.ts file and run "yarn proptypes"     |
    // ----------------------------------------------------------------------
    /**
   * The anchor of the badge.
   */ anchorOrigin: _propTypesDefault.default.shape({
        horizontal: _propTypesDefault.default.oneOf([
            'left',
            'right'
        ]).isRequired,
        vertical: _propTypesDefault.default.oneOf([
            'bottom',
            'top'
        ]).isRequired
    }),
    /**
   * The content rendered within the badge.
   */ badgeContent: _propTypesDefault.default.node,
    /**
   * The badge will be added relative to this node.
   */ children: _propTypesDefault.default.node,
    /**
   * Override or extend the styles applied to the component.
   * See [CSS API](#css) below for more details.
   */ classes: _utils.chainPropTypes(_propTypesDefault.default.object, function(props) {
        var classes = props.classes;
        if (classes == null) return null;
        [
            [
                'anchorOriginTopRightRectangle',
                'anchorOriginTopRightRectangular'
            ],
            [
                'anchorOriginBottomRightRectangle',
                'anchorOriginBottomRightRectangular'
            ],
            [
                'anchorOriginTopLeftRectangle',
                'anchorOriginTopLeftRectangular'
            ],
            [
                'anchorOriginBottomLeftRectangle',
                'anchorOriginBottomLeftRectangular'
            ],
            [
                'anchorOriginTopRightCircle',
                'anchorOriginTopRightCircular'
            ],
            [
                'anchorOriginBottomRightCircle',
                'anchorOriginBottomRightCircular'
            ],
            [
                'anchorOriginTopLeftCircle',
                'anchorOriginTopLeftCircular'
            ]
        ].forEach(function(_ref) {
            var _ref2 = _slicedToArrayDefault.default(_ref, 2), deprecatedClassKey = _ref2[0], newClassKey = _ref2[1];
            if (classes[deprecatedClassKey] != null && classes[deprecatedClassKey].split(' ').length > 1) throw new Error("Material-UI: The `".concat(deprecatedClassKey, "` class was deprecated. Use `").concat(newClassKey, "` instead."));
        });
        return null;
    }),
    /**
   * @ignore
   */ className: _propTypesDefault.default.string,
    /**
   * The color of the component. It supports those theme colors that make sense for this component.
   */ color: _propTypesDefault.default.oneOf([
        'default',
        'error',
        'primary',
        'secondary'
    ]),
    /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */ component: _propTypesDefault.default/* @typescript-to-proptypes-ignore */ .elementType,
    /**
   * If `true`, the badge will be invisible.
   */ invisible: _propTypesDefault.default.bool,
    /**
   * Max count to show.
   */ max: _propTypesDefault.default.number,
    /**
   * Wrapped shape the badge should overlap.
   */ overlap: _utils.chainPropTypes(_propTypesDefault.default.oneOf([
        'circle',
        'rectangle',
        'circular',
        'rectangular'
    ]), function(props) {
        var overlap = props.overlap;
        if (overlap === 'rectangle') throw new Error('Material-UI: `overlap="rectangle"` was deprecated. Use `overlap="rectangular"` instead.');
        if (overlap === 'circle') throw new Error('Material-UI: `overlap="circle"` was deprecated. Use `overlap="circular"` instead.');
        return null;
    }),
    /**
   * Controls whether the badge is hidden when `badgeContent` is zero.
   */ showZero: _propTypesDefault.default.bool,
    /**
   * The variant to use.
   */ variant: _propTypesDefault.default.oneOf([
        'dot',
        'standard'
    ])
};
exports.default = _withStylesDefault.default(styles, {
    name: 'MuiBadge'
})(Badge);

},{"@babel/runtime/helpers/esm/slicedToArray":"cBZWN","@babel/runtime/helpers/esm/extends":"fTBFS","@babel/runtime/helpers/esm/objectWithoutProperties":"25tJ4","react":"21dqq","prop-types":"7wKI2","clsx":"83C22","@material-ui/utils":"54RkF","../styles/withStyles":"7U0iM","../utils/capitalize":"5AJVX","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"epcft":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>_bottomNavigationDefault.default
);
var _bottomNavigation = require("./BottomNavigation");
var _bottomNavigationDefault = parcelHelpers.interopDefault(_bottomNavigation);

},{"./BottomNavigation":"8yIXK","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"8yIXK":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "styles", ()=>styles
);
var _extends = require("@babel/runtime/helpers/esm/extends");
var _extendsDefault = parcelHelpers.interopDefault(_extends);
var _objectWithoutProperties = require("@babel/runtime/helpers/esm/objectWithoutProperties");
var _objectWithoutPropertiesDefault = parcelHelpers.interopDefault(_objectWithoutProperties);
var _react = require("react");
var _reactIs = require("react-is");
var _propTypes = require("prop-types");
var _propTypesDefault = parcelHelpers.interopDefault(_propTypes);
var _clsx = require("clsx");
var _clsxDefault = parcelHelpers.interopDefault(_clsx);
var _withStyles = require("../styles/withStyles");
var _withStylesDefault = parcelHelpers.interopDefault(_withStyles);
var styles = function styles(theme) {
    return {
        /* Styles applied to the root element. */ root: {
            display: 'flex',
            justifyContent: 'center',
            height: 56,
            backgroundColor: theme.palette.background.paper
        }
    };
};
var BottomNavigation = /*#__PURE__*/ _react.forwardRef(function BottomNavigation(props, ref) {
    var children = props.children, classes = props.classes, className = props.className, _props$component = props.component, Component = _props$component === void 0 ? 'div' : _props$component, onChange = props.onChange, _props$showLabels = props.showLabels, showLabels = _props$showLabels === void 0 ? false : _props$showLabels, value = props.value, other = _objectWithoutPropertiesDefault.default(props, [
        "children",
        "classes",
        "className",
        "component",
        "onChange",
        "showLabels",
        "value"
    ]);
    return /*#__PURE__*/ _react.createElement(Component, _extendsDefault.default({
        className: _clsxDefault.default(classes.root, className),
        ref: ref
    }, other), _react.Children.map(children, function(child, childIndex) {
        if (!/*#__PURE__*/ _react.isValidElement(child)) return null;
        if (_reactIs.isFragment(child)) console.error([
            "Material-UI: The BottomNavigation component doesn't accept a Fragment as a child.",
            'Consider providing an array instead.'
        ].join('\n'));
        var childValue = child.props.value === undefined ? childIndex : child.props.value;
        return /*#__PURE__*/ _react.cloneElement(child, {
            selected: childValue === value,
            showLabel: child.props.showLabel !== undefined ? child.props.showLabel : showLabels,
            value: childValue,
            onChange: onChange
        });
    }));
});
BottomNavigation.propTypes = {
    // ----------------------------- Warning --------------------------------
    // | These PropTypes are generated from the TypeScript type definitions |
    // |     To update them edit the d.ts file and run "yarn proptypes"     |
    // ----------------------------------------------------------------------
    /**
   * The content of the component.
   */ children: _propTypesDefault.default.node,
    /**
   * Override or extend the styles applied to the component.
   * See [CSS API](#css) below for more details.
   */ classes: _propTypesDefault.default.object,
    /**
   * @ignore
   */ className: _propTypesDefault.default.string,
    /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */ component: _propTypesDefault.default/* @typescript-to-proptypes-ignore */ .elementType,
    /**
   * Callback fired when the value changes.
   *
   * @param {object} event The event source of the callback.
   * @param {any} value We default to the index of the child.
   */ onChange: _propTypesDefault.default.func,
    /**
   * If `true`, all `BottomNavigationAction`s will show their labels.
   * By default, only the selected `BottomNavigationAction` will show its label.
   */ showLabels: _propTypesDefault.default.bool,
    /**
   * The value of the currently selected `BottomNavigationAction`.
   */ value: _propTypesDefault.default.any
};
exports.default = _withStylesDefault.default(styles, {
    name: 'MuiBottomNavigation'
})(BottomNavigation);

},{"@babel/runtime/helpers/esm/extends":"fTBFS","@babel/runtime/helpers/esm/objectWithoutProperties":"25tJ4","react":"21dqq","react-is":"63mDj","prop-types":"7wKI2","clsx":"83C22","../styles/withStyles":"7U0iM","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"86fm9":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>_bottomNavigationActionDefault.default
);
var _bottomNavigationAction = require("./BottomNavigationAction");
var _bottomNavigationActionDefault = parcelHelpers.interopDefault(_bottomNavigationAction);

},{"./BottomNavigationAction":"bZhav","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"bZhav":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "styles", ()=>styles
);
var _extends = require("@babel/runtime/helpers/esm/extends");
var _extendsDefault = parcelHelpers.interopDefault(_extends);
var _objectWithoutProperties = require("@babel/runtime/helpers/esm/objectWithoutProperties");
var _objectWithoutPropertiesDefault = parcelHelpers.interopDefault(_objectWithoutProperties);
var _react = require("react");
var _propTypes = require("prop-types");
var _propTypesDefault = parcelHelpers.interopDefault(_propTypes);
var _clsx = require("clsx");
var _clsxDefault = parcelHelpers.interopDefault(_clsx);
var _withStyles = require("../styles/withStyles");
var _withStylesDefault = parcelHelpers.interopDefault(_withStyles);
var _buttonBase = require("../ButtonBase");
var _buttonBaseDefault = parcelHelpers.interopDefault(_buttonBase);
var _unsupportedProp = require("../utils/unsupportedProp");
var _unsupportedPropDefault = parcelHelpers.interopDefault(_unsupportedProp);
var styles = function styles(theme) {
    return {
        /* Styles applied to the root element. */ root: {
            transition: theme.transitions.create([
                'color',
                'padding-top'
            ], {
                duration: theme.transitions.duration.short
            }),
            padding: '6px 12px 8px',
            minWidth: 80,
            maxWidth: 168,
            color: theme.palette.text.secondary,
            flex: '1',
            '&$iconOnly': {
                paddingTop: 16
            },
            '&$selected': {
                paddingTop: 6,
                color: theme.palette.primary.main
            }
        },
        /* Pseudo-class applied to the root element if selected. */ selected: {},
        /* Pseudo-class applied to the root element if `showLabel={false}` and not selected. */ iconOnly: {},
        /* Styles applied to the span element that wraps the icon and label. */ wrapper: {
            display: 'inline-flex',
            alignItems: 'center',
            justifyContent: 'center',
            width: '100%',
            flexDirection: 'column'
        },
        /* Styles applied to the label's span element. */ label: {
            fontFamily: theme.typography.fontFamily,
            fontSize: theme.typography.pxToRem(12),
            opacity: 1,
            transition: 'font-size 0.2s, opacity 0.2s',
            transitionDelay: '0.1s',
            '&$iconOnly': {
                opacity: 0,
                transitionDelay: '0s'
            },
            '&$selected': {
                fontSize: theme.typography.pxToRem(14)
            }
        }
    };
};
var BottomNavigationAction = /*#__PURE__*/ _react.forwardRef(function BottomNavigationAction(props, ref) {
    var classes = props.classes, className = props.className, icon = props.icon, label = props.label, onChange = props.onChange, onClick = props.onClick, selected = props.selected, showLabel = props.showLabel, value = props.value, other = _objectWithoutPropertiesDefault.default(props, [
        "classes",
        "className",
        "icon",
        "label",
        "onChange",
        "onClick",
        "selected",
        "showLabel",
        "value"
    ]);
    var handleChange = function handleChange(event) {
        if (onChange) onChange(event, value);
        if (onClick) onClick(event);
    };
    return /*#__PURE__*/ _react.createElement(_buttonBaseDefault.default, _extendsDefault.default({
        ref: ref,
        className: _clsxDefault.default(classes.root, className, selected ? classes.selected : !showLabel && classes.iconOnly),
        focusRipple: true,
        onClick: handleChange
    }, other), /*#__PURE__*/ _react.createElement("span", {
        className: classes.wrapper
    }, icon, /*#__PURE__*/ _react.createElement("span", {
        className: _clsxDefault.default(classes.label, selected ? classes.selected : !showLabel && classes.iconOnly)
    }, label)));
});
BottomNavigationAction.propTypes = {
    // ----------------------------- Warning --------------------------------
    // | These PropTypes are generated from the TypeScript type definitions |
    // |     To update them edit the d.ts file and run "yarn proptypes"     |
    // ----------------------------------------------------------------------
    /**
   * This prop isn't supported.
   * Use the `component` prop if you need to change the children structure.
   */ children: _unsupportedPropDefault.default,
    /**
   * Override or extend the styles applied to the component.
   * See [CSS API](#css) below for more details.
   */ classes: _propTypesDefault.default.object,
    /**
   * @ignore
   */ className: _propTypesDefault.default.string,
    /**
   * The icon element.
   */ icon: _propTypesDefault.default.node,
    /**
   * The label element.
   */ label: _propTypesDefault.default.node,
    /**
   * @ignore
   */ onChange: _propTypesDefault.default.func,
    /**
   * @ignore
   */ onClick: _propTypesDefault.default.func,
    /**
   * @ignore
   */ selected: _propTypesDefault.default.bool,
    /**
   * If `true`, the `BottomNavigationAction` will show its label.
   * By default, only the selected `BottomNavigationAction`
   * inside `BottomNavigation` will show its label.
   */ showLabel: _propTypesDefault.default.bool,
    /**
   * You can provide your own value. Otherwise, we fallback to the child position index.
   */ value: _propTypesDefault.default.any
};
exports.default = _withStylesDefault.default(styles, {
    name: 'MuiBottomNavigationAction'
})(BottomNavigationAction);

},{"@babel/runtime/helpers/esm/extends":"fTBFS","@babel/runtime/helpers/esm/objectWithoutProperties":"25tJ4","react":"21dqq","prop-types":"7wKI2","clsx":"83C22","../styles/withStyles":"7U0iM","../ButtonBase":"2TQRV","../utils/unsupportedProp":"bFB4I","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"hbABv":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>_boxDefault.default
);
parcelHelpers.export(exports, "styleFunction", ()=>_box.styleFunction
);
var _box = require("./Box");
var _boxDefault = parcelHelpers.interopDefault(_box);

},{"./Box":"j8jXH","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"j8jXH":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "styleFunction", ()=>styleFunction
);
var _system = require("@material-ui/system");
var _styled = require("../styles/styled");
var _styledDefault = parcelHelpers.interopDefault(_styled);
var styleFunction = _system.styleFunctionSx(_system.compose(_system.borders, _system.display, _system.flexbox, _system.grid, _system.positions, _system.palette, _system.shadows, _system.sizing, _system.spacing, _system.typography));
/**
 * @ignore - do not document.
 */ var Box = _styledDefault.default('div')(styleFunction, {
    name: 'MuiBox'
});
exports.default = Box;

},{"@material-ui/system":"hE48N","../styles/styled":"fJJtv","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"3SCFB":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>_breadcrumbsDefault.default
);
var _breadcrumbs = require("./Breadcrumbs");
var _breadcrumbsDefault = parcelHelpers.interopDefault(_breadcrumbs);

},{"./Breadcrumbs":"iJjpU","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"iJjpU":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "styles", ()=>styles
);
var _extends = require("@babel/runtime/helpers/esm/extends");
var _extendsDefault = parcelHelpers.interopDefault(_extends);
var _toConsumableArray = require("@babel/runtime/helpers/esm/toConsumableArray");
var _toConsumableArrayDefault = parcelHelpers.interopDefault(_toConsumableArray);
var _objectWithoutProperties = require("@babel/runtime/helpers/esm/objectWithoutProperties");
var _objectWithoutPropertiesDefault = parcelHelpers.interopDefault(_objectWithoutProperties);
var _react = require("react");
var _reactIs = require("react-is");
var _propTypes = require("prop-types");
var _propTypesDefault = parcelHelpers.interopDefault(_propTypes);
var _clsx = require("clsx");
var _clsxDefault = parcelHelpers.interopDefault(_clsx);
var _withStyles = require("../styles/withStyles");
var _withStylesDefault = parcelHelpers.interopDefault(_withStyles);
var _typography = require("../Typography");
var _typographyDefault = parcelHelpers.interopDefault(_typography);
var _breadcrumbCollapsed = require("./BreadcrumbCollapsed");
var _breadcrumbCollapsedDefault = parcelHelpers.interopDefault(_breadcrumbCollapsed);
var styles = {
    /* Styles applied to the root element. */ root: {},
    /* Styles applied to the ol element. */ ol: {
        display: 'flex',
        flexWrap: 'wrap',
        alignItems: 'center',
        padding: 0,
        margin: 0,
        listStyle: 'none'
    },
    /* Styles applied to the li element. */ li: {},
    /* Styles applied to the separator element. */ separator: {
        display: 'flex',
        userSelect: 'none',
        marginLeft: 8,
        marginRight: 8
    }
};
function insertSeparators(items, className, separator) {
    return items.reduce(function(acc, current, index) {
        if (index < items.length - 1) acc = acc.concat(current, /*#__PURE__*/ _react.createElement("li", {
            "aria-hidden": true,
            key: "separator-".concat(index),
            className: className
        }, separator));
        else acc.push(current);
        return acc;
    }, []);
}
var Breadcrumbs = /*#__PURE__*/ _react.forwardRef(function Breadcrumbs(props, ref) {
    var children = props.children, classes = props.classes, className = props.className, _props$component = props.component, Component = _props$component === void 0 ? 'nav' : _props$component, _props$expandText = props.expandText, expandText = _props$expandText === void 0 ? 'Show path' : _props$expandText, _props$itemsAfterColl = props.itemsAfterCollapse, itemsAfterCollapse = _props$itemsAfterColl === void 0 ? 1 : _props$itemsAfterColl, _props$itemsBeforeCol = props.itemsBeforeCollapse, itemsBeforeCollapse = _props$itemsBeforeCol === void 0 ? 1 : _props$itemsBeforeCol, _props$maxItems = props.maxItems, maxItems = _props$maxItems === void 0 ? 8 : _props$maxItems, _props$separator = props.separator, separator = _props$separator === void 0 ? '/' : _props$separator, other = _objectWithoutPropertiesDefault.default(props, [
        "children",
        "classes",
        "className",
        "component",
        "expandText",
        "itemsAfterCollapse",
        "itemsBeforeCollapse",
        "maxItems",
        "separator"
    ]);
    var _React$useState = _react.useState(false), expanded = _React$useState[0], setExpanded = _React$useState[1];
    var renderItemsBeforeAndAfter = function renderItemsBeforeAndAfter(allItems) {
        var handleClickExpand = function handleClickExpand(event) {
            setExpanded(true); // The clicked element received the focus but gets removed from the DOM.
            // Let's keep the focus in the component after expanding.
            var focusable = event.currentTarget.parentNode.querySelector('a[href],button,[tabindex]');
            if (focusable) focusable.focus();
        }; // This defends against someone passing weird input, to ensure that if all
        // items would be shown anyway, we just show all items without the EllipsisItem
        if (itemsBeforeCollapse + itemsAfterCollapse >= allItems.length) {
            console.error([
                'Material-UI: You have provided an invalid combination of props to the Breadcrumbs.',
                "itemsAfterCollapse={".concat(itemsAfterCollapse, "} + itemsBeforeCollapse={").concat(itemsBeforeCollapse, "} >= maxItems={").concat(maxItems, "}")
            ].join('\n'));
            return allItems;
        }
        return [].concat(_toConsumableArrayDefault.default(allItems.slice(0, itemsBeforeCollapse)), [
            /*#__PURE__*/ _react.createElement(_breadcrumbCollapsedDefault.default, {
                "aria-label": expandText,
                key: "ellipsis",
                onClick: handleClickExpand
            })
        ], _toConsumableArrayDefault.default(allItems.slice(allItems.length - itemsAfterCollapse, allItems.length)));
    };
    var allItems1 = _react.Children.toArray(children).filter(function(child) {
        if (_reactIs.isFragment(child)) console.error([
            "Material-UI: The Breadcrumbs component doesn't accept a Fragment as a child.",
            'Consider providing an array instead.'
        ].join('\n'));
        return /*#__PURE__*/ _react.isValidElement(child);
    }).map(function(child, index) {
        return /*#__PURE__*/ _react.createElement("li", {
            className: classes.li,
            key: "child-".concat(index)
        }, child);
    });
    return /*#__PURE__*/ _react.createElement(_typographyDefault.default, _extendsDefault.default({
        ref: ref,
        component: Component,
        color: "textSecondary",
        className: _clsxDefault.default(classes.root, className)
    }, other), /*#__PURE__*/ _react.createElement("ol", {
        className: classes.ol
    }, insertSeparators(expanded || maxItems && allItems1.length <= maxItems ? allItems1 : renderItemsBeforeAndAfter(allItems1), classes.separator, separator)));
});
Breadcrumbs.propTypes = {
    // ----------------------------- Warning --------------------------------
    // | These PropTypes are generated from the TypeScript type definitions |
    // |     To update them edit the d.ts file and run "yarn proptypes"     |
    // ----------------------------------------------------------------------
    /**
   * The breadcrumb children.
   */ children: _propTypesDefault.default.node,
    /**
   * Override or extend the styles applied to the component.
   * See [CSS API](#css) below for more details.
   */ classes: _propTypesDefault.default.object,
    /**
   * @ignore
   */ className: _propTypesDefault.default.string,
    /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */ component: _propTypesDefault.default/* @typescript-to-proptypes-ignore */ .elementType,
    /**
   * Override the default label for the expand button.
   *
   * For localization purposes, you can use the provided [translations](/guides/localization/).
   */ expandText: _propTypesDefault.default.string,
    /**
   * If max items is exceeded, the number of items to show after the ellipsis.
   */ itemsAfterCollapse: _propTypesDefault.default.number,
    /**
   * If max items is exceeded, the number of items to show before the ellipsis.
   */ itemsBeforeCollapse: _propTypesDefault.default.number,
    /**
   * Specifies the maximum number of breadcrumbs to display. When there are more
   * than the maximum number, only the first `itemsBeforeCollapse` and last `itemsAfterCollapse`
   * will be shown, with an ellipsis in between.
   */ maxItems: _propTypesDefault.default.number,
    /**
   * Custom separator node.
   */ separator: _propTypesDefault.default.node
};
exports.default = _withStylesDefault.default(styles, {
    name: 'MuiBreadcrumbs'
})(Breadcrumbs);

},{"@babel/runtime/helpers/esm/extends":"fTBFS","@babel/runtime/helpers/esm/toConsumableArray":"bCmCj","@babel/runtime/helpers/esm/objectWithoutProperties":"25tJ4","react":"21dqq","react-is":"63mDj","prop-types":"7wKI2","clsx":"83C22","../styles/withStyles":"7U0iM","../Typography":"6dDPF","./BreadcrumbCollapsed":"5NVOi","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"5NVOi":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _extends = require("@babel/runtime/helpers/esm/extends");
var _extendsDefault = parcelHelpers.interopDefault(_extends);
var _objectWithoutProperties = require("@babel/runtime/helpers/esm/objectWithoutProperties");
var _objectWithoutPropertiesDefault = parcelHelpers.interopDefault(_objectWithoutProperties);
var _react = require("react");
var _propTypes = require("prop-types");
var _propTypesDefault = parcelHelpers.interopDefault(_propTypes);
var _withStyles = require("../styles/withStyles");
var _withStylesDefault = parcelHelpers.interopDefault(_withStyles);
var _colorManipulator = require("../styles/colorManipulator");
var _moreHoriz = require("../internal/svg-icons/MoreHoriz");
var _moreHorizDefault = parcelHelpers.interopDefault(_moreHoriz);
var _buttonBase = require("../ButtonBase");
var _buttonBaseDefault = parcelHelpers.interopDefault(_buttonBase);
var styles = function styles(theme) {
    return {
        root: {
            display: 'flex',
            marginLeft: theme.spacing(0.5),
            marginRight: theme.spacing(0.5),
            backgroundColor: theme.palette.grey[100],
            color: theme.palette.grey[700],
            borderRadius: 2,
            cursor: 'pointer',
            '&:hover, &:focus': {
                backgroundColor: theme.palette.grey[200]
            },
            '&:active': {
                boxShadow: theme.shadows[0],
                backgroundColor: _colorManipulator.emphasize(theme.palette.grey[200], 0.12)
            }
        },
        icon: {
            width: 24,
            height: 16
        }
    };
};
/**
 * @ignore - internal component.
 */ function BreadcrumbCollapsed(props) {
    var classes = props.classes, other = _objectWithoutPropertiesDefault.default(props, [
        "classes"
    ]);
    return /*#__PURE__*/ _react.createElement(_buttonBaseDefault.default, _extendsDefault.default({
        component: "li",
        className: classes.root,
        focusRipple: true
    }, other), /*#__PURE__*/ _react.createElement(_moreHorizDefault.default, {
        className: classes.icon
    }));
}
BreadcrumbCollapsed.propTypes = {
    /**
   * @ignore
   */ classes: _propTypesDefault.default.object.isRequired
};
exports.default = _withStylesDefault.default(styles, {
    name: 'PrivateBreadcrumbCollapsed'
})(BreadcrumbCollapsed);

},{"@babel/runtime/helpers/esm/extends":"fTBFS","@babel/runtime/helpers/esm/objectWithoutProperties":"25tJ4","react":"21dqq","prop-types":"7wKI2","../styles/withStyles":"7U0iM","../styles/colorManipulator":"iz48G","../internal/svg-icons/MoreHoriz":"bFPCM","../ButtonBase":"2TQRV","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"bFPCM":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _react = require("react");
var _createSvgIcon = require("../../utils/createSvgIcon");
var _createSvgIconDefault = parcelHelpers.interopDefault(_createSvgIcon);
/**
 * @ignore - internal component.
 */ exports.default = _createSvgIconDefault.default(/*#__PURE__*/ _react.createElement("path", {
    d: "M6 10c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm12 0c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm-6 0c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z"
}), 'MoreHoriz');

},{"react":"21dqq","../../utils/createSvgIcon":"lVBTd","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"hKV2U":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>_buttonDefault.default
);
var _button = require("./Button");
var _buttonDefault = parcelHelpers.interopDefault(_button);

},{"./Button":"9PbWH","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"9PbWH":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "styles", ()=>styles
);
var _objectWithoutProperties = require("@babel/runtime/helpers/esm/objectWithoutProperties");
var _objectWithoutPropertiesDefault = parcelHelpers.interopDefault(_objectWithoutProperties);
var _extends = require("@babel/runtime/helpers/esm/extends");
var _extendsDefault = parcelHelpers.interopDefault(_extends);
var _react = require("react");
var _propTypes = require("prop-types");
var _propTypesDefault = parcelHelpers.interopDefault(_propTypes);
var _clsx = require("clsx");
var _clsxDefault = parcelHelpers.interopDefault(_clsx);
var _withStyles = require("../styles/withStyles");
var _withStylesDefault = parcelHelpers.interopDefault(_withStyles);
var _colorManipulator = require("../styles/colorManipulator");
var _buttonBase = require("../ButtonBase");
var _buttonBaseDefault = parcelHelpers.interopDefault(_buttonBase);
var _capitalize = require("../utils/capitalize");
var _capitalizeDefault = parcelHelpers.interopDefault(_capitalize);
var styles = function styles(theme) {
    return {
        /* Styles applied to the root element. */ root: _extendsDefault.default({}, theme.typography.button, {
            boxSizing: 'border-box',
            minWidth: 64,
            padding: '6px 16px',
            borderRadius: theme.shape.borderRadius,
            color: theme.palette.text.primary,
            transition: theme.transitions.create([
                'background-color',
                'box-shadow',
                'border'
            ], {
                duration: theme.transitions.duration.short
            }),
            '&:hover': {
                textDecoration: 'none',
                backgroundColor: _colorManipulator.alpha(theme.palette.text.primary, theme.palette.action.hoverOpacity),
                // Reset on touch devices, it doesn't add specificity
                '@media (hover: none)': {
                    backgroundColor: 'transparent'
                },
                '&$disabled': {
                    backgroundColor: 'transparent'
                }
            },
            '&$disabled': {
                color: theme.palette.action.disabled
            }
        }),
        /* Styles applied to the span element that wraps the children. */ label: {
            width: '100%',
            // Ensure the correct width for iOS Safari
            display: 'inherit',
            alignItems: 'inherit',
            justifyContent: 'inherit'
        },
        /* Styles applied to the root element if `variant="text"`. */ text: {
            padding: '6px 8px'
        },
        /* Styles applied to the root element if `variant="text"` and `color="primary"`. */ textPrimary: {
            color: theme.palette.primary.main,
            '&:hover': {
                backgroundColor: _colorManipulator.alpha(theme.palette.primary.main, theme.palette.action.hoverOpacity),
                // Reset on touch devices, it doesn't add specificity
                '@media (hover: none)': {
                    backgroundColor: 'transparent'
                }
            }
        },
        /* Styles applied to the root element if `variant="text"` and `color="secondary"`. */ textSecondary: {
            color: theme.palette.secondary.main,
            '&:hover': {
                backgroundColor: _colorManipulator.alpha(theme.palette.secondary.main, theme.palette.action.hoverOpacity),
                // Reset on touch devices, it doesn't add specificity
                '@media (hover: none)': {
                    backgroundColor: 'transparent'
                }
            }
        },
        /* Styles applied to the root element if `variant="outlined"`. */ outlined: {
            padding: '5px 15px',
            border: "1px solid ".concat(theme.palette.type === 'light' ? 'rgba(0, 0, 0, 0.23)' : 'rgba(255, 255, 255, 0.23)'),
            '&$disabled': {
                border: "1px solid ".concat(theme.palette.action.disabledBackground)
            }
        },
        /* Styles applied to the root element if `variant="outlined"` and `color="primary"`. */ outlinedPrimary: {
            color: theme.palette.primary.main,
            border: "1px solid ".concat(_colorManipulator.alpha(theme.palette.primary.main, 0.5)),
            '&:hover': {
                border: "1px solid ".concat(theme.palette.primary.main),
                backgroundColor: _colorManipulator.alpha(theme.palette.primary.main, theme.palette.action.hoverOpacity),
                // Reset on touch devices, it doesn't add specificity
                '@media (hover: none)': {
                    backgroundColor: 'transparent'
                }
            }
        },
        /* Styles applied to the root element if `variant="outlined"` and `color="secondary"`. */ outlinedSecondary: {
            color: theme.palette.secondary.main,
            border: "1px solid ".concat(_colorManipulator.alpha(theme.palette.secondary.main, 0.5)),
            '&:hover': {
                border: "1px solid ".concat(theme.palette.secondary.main),
                backgroundColor: _colorManipulator.alpha(theme.palette.secondary.main, theme.palette.action.hoverOpacity),
                // Reset on touch devices, it doesn't add specificity
                '@media (hover: none)': {
                    backgroundColor: 'transparent'
                }
            },
            '&$disabled': {
                border: "1px solid ".concat(theme.palette.action.disabled)
            }
        },
        /* Styles applied to the root element if `variant="contained"`. */ contained: {
            color: theme.palette.getContrastText(theme.palette.grey[300]),
            backgroundColor: theme.palette.grey[300],
            boxShadow: theme.shadows[2],
            '&:hover': {
                backgroundColor: theme.palette.grey.A100,
                boxShadow: theme.shadows[4],
                // Reset on touch devices, it doesn't add specificity
                '@media (hover: none)': {
                    boxShadow: theme.shadows[2],
                    backgroundColor: theme.palette.grey[300]
                },
                '&$disabled': {
                    backgroundColor: theme.palette.action.disabledBackground
                }
            },
            '&$focusVisible': {
                boxShadow: theme.shadows[6]
            },
            '&:active': {
                boxShadow: theme.shadows[8]
            },
            '&$disabled': {
                color: theme.palette.action.disabled,
                boxShadow: theme.shadows[0],
                backgroundColor: theme.palette.action.disabledBackground
            }
        },
        /* Styles applied to the root element if `variant="contained"` and `color="primary"`. */ containedPrimary: {
            color: theme.palette.primary.contrastText,
            backgroundColor: theme.palette.primary.main,
            '&:hover': {
                backgroundColor: theme.palette.primary.dark,
                // Reset on touch devices, it doesn't add specificity
                '@media (hover: none)': {
                    backgroundColor: theme.palette.primary.main
                }
            }
        },
        /* Styles applied to the root element if `variant="contained"` and `color="secondary"`. */ containedSecondary: {
            color: theme.palette.secondary.contrastText,
            backgroundColor: theme.palette.secondary.main,
            '&:hover': {
                backgroundColor: theme.palette.secondary.dark,
                // Reset on touch devices, it doesn't add specificity
                '@media (hover: none)': {
                    backgroundColor: theme.palette.secondary.main
                }
            }
        },
        /* Styles applied to the root element if `disableElevation={true}`. */ disableElevation: {
            boxShadow: 'none',
            '&:hover': {
                boxShadow: 'none'
            },
            '&$focusVisible': {
                boxShadow: 'none'
            },
            '&:active': {
                boxShadow: 'none'
            },
            '&$disabled': {
                boxShadow: 'none'
            }
        },
        /* Pseudo-class applied to the ButtonBase root element if the button is keyboard focused. */ focusVisible: {},
        /* Pseudo-class applied to the root element if `disabled={true}`. */ disabled: {},
        /* Styles applied to the root element if `color="inherit"`. */ colorInherit: {
            color: 'inherit',
            borderColor: 'currentColor'
        },
        /* Styles applied to the root element if `size="small"` and `variant="text"`. */ textSizeSmall: {
            padding: '4px 5px',
            fontSize: theme.typography.pxToRem(13)
        },
        /* Styles applied to the root element if `size="large"` and `variant="text"`. */ textSizeLarge: {
            padding: '8px 11px',
            fontSize: theme.typography.pxToRem(15)
        },
        /* Styles applied to the root element if `size="small"` and `variant="outlined"`. */ outlinedSizeSmall: {
            padding: '3px 9px',
            fontSize: theme.typography.pxToRem(13)
        },
        /* Styles applied to the root element if `size="large"` and `variant="outlined"`. */ outlinedSizeLarge: {
            padding: '7px 21px',
            fontSize: theme.typography.pxToRem(15)
        },
        /* Styles applied to the root element if `size="small"` and `variant="contained"`. */ containedSizeSmall: {
            padding: '4px 10px',
            fontSize: theme.typography.pxToRem(13)
        },
        /* Styles applied to the root element if `size="large"` and `variant="contained"`. */ containedSizeLarge: {
            padding: '8px 22px',
            fontSize: theme.typography.pxToRem(15)
        },
        /* Styles applied to the root element if `size="small"`. */ sizeSmall: {},
        /* Styles applied to the root element if `size="large"`. */ sizeLarge: {},
        /* Styles applied to the root element if `fullWidth={true}`. */ fullWidth: {
            width: '100%'
        },
        /* Styles applied to the startIcon element if supplied. */ startIcon: {
            display: 'inherit',
            marginRight: 8,
            marginLeft: -4,
            '&$iconSizeSmall': {
                marginLeft: -2
            }
        },
        /* Styles applied to the endIcon element if supplied. */ endIcon: {
            display: 'inherit',
            marginRight: -4,
            marginLeft: 8,
            '&$iconSizeSmall': {
                marginRight: -2
            }
        },
        /* Styles applied to the icon element if supplied and `size="small"`. */ iconSizeSmall: {
            '& > *:first-child': {
                fontSize: 18
            }
        },
        /* Styles applied to the icon element if supplied and `size="medium"`. */ iconSizeMedium: {
            '& > *:first-child': {
                fontSize: 20
            }
        },
        /* Styles applied to the icon element if supplied and `size="large"`. */ iconSizeLarge: {
            '& > *:first-child': {
                fontSize: 22
            }
        }
    };
};
var Button = /*#__PURE__*/ _react.forwardRef(function Button(props, ref) {
    var children = props.children, classes = props.classes, className = props.className, _props$color = props.color, color = _props$color === void 0 ? 'default' : _props$color, _props$component = props.component, component = _props$component === void 0 ? 'button' : _props$component, _props$disabled = props.disabled, disabled = _props$disabled === void 0 ? false : _props$disabled, _props$disableElevati = props.disableElevation, disableElevation = _props$disableElevati === void 0 ? false : _props$disableElevati, _props$disableFocusRi = props.disableFocusRipple, disableFocusRipple = _props$disableFocusRi === void 0 ? false : _props$disableFocusRi, endIconProp = props.endIcon, focusVisibleClassName = props.focusVisibleClassName, _props$fullWidth = props.fullWidth, fullWidth = _props$fullWidth === void 0 ? false : _props$fullWidth, _props$size = props.size, size = _props$size === void 0 ? 'medium' : _props$size, startIconProp = props.startIcon, _props$type = props.type, type = _props$type === void 0 ? 'button' : _props$type, _props$variant = props.variant, variant = _props$variant === void 0 ? 'text' : _props$variant, other = _objectWithoutPropertiesDefault.default(props, [
        "children",
        "classes",
        "className",
        "color",
        "component",
        "disabled",
        "disableElevation",
        "disableFocusRipple",
        "endIcon",
        "focusVisibleClassName",
        "fullWidth",
        "size",
        "startIcon",
        "type",
        "variant"
    ]);
    var startIcon = startIconProp && /*#__PURE__*/ _react.createElement("span", {
        className: _clsxDefault.default(classes.startIcon, classes["iconSize".concat(_capitalizeDefault.default(size))])
    }, startIconProp);
    var endIcon = endIconProp && /*#__PURE__*/ _react.createElement("span", {
        className: _clsxDefault.default(classes.endIcon, classes["iconSize".concat(_capitalizeDefault.default(size))])
    }, endIconProp);
    return /*#__PURE__*/ _react.createElement(_buttonBaseDefault.default, _extendsDefault.default({
        className: _clsxDefault.default(classes.root, classes[variant], className, color === 'inherit' ? classes.colorInherit : color !== 'default' && classes["".concat(variant).concat(_capitalizeDefault.default(color))], size !== 'medium' && [
            classes["".concat(variant, "Size").concat(_capitalizeDefault.default(size))],
            classes["size".concat(_capitalizeDefault.default(size))]
        ], disableElevation && classes.disableElevation, disabled && classes.disabled, fullWidth && classes.fullWidth),
        component: component,
        disabled: disabled,
        focusRipple: !disableFocusRipple,
        focusVisibleClassName: _clsxDefault.default(classes.focusVisible, focusVisibleClassName),
        ref: ref,
        type: type
    }, other), /*#__PURE__*/ _react.createElement("span", {
        className: classes.label
    }, startIcon, children, endIcon));
});
Button.propTypes = {
    // ----------------------------- Warning --------------------------------
    // | These PropTypes are generated from the TypeScript type definitions |
    // |     To update them edit the d.ts file and run "yarn proptypes"     |
    // ----------------------------------------------------------------------
    /**
   * The content of the button.
   */ children: _propTypesDefault.default.node,
    /**
   * Override or extend the styles applied to the component.
   * See [CSS API](#css) below for more details.
   */ classes: _propTypesDefault.default.object,
    /**
   * @ignore
   */ className: _propTypesDefault.default.string,
    /**
   * The color of the component. It supports those theme colors that make sense for this component.
   */ color: _propTypesDefault.default.oneOf([
        'default',
        'inherit',
        'primary',
        'secondary'
    ]),
    /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */ component: _propTypesDefault.default/* @typescript-to-proptypes-ignore */ .elementType,
    /**
   * If `true`, the button will be disabled.
   */ disabled: _propTypesDefault.default.bool,
    /**
   * If `true`, no elevation is used.
   */ disableElevation: _propTypesDefault.default.bool,
    /**
   * If `true`, the  keyboard focus ripple will be disabled.
   */ disableFocusRipple: _propTypesDefault.default.bool,
    /**
   * If `true`, the ripple effect will be disabled.
   *
   * ⚠️ Without a ripple there is no styling for :focus-visible by default. Be sure
   * to highlight the element by applying separate styles with the `focusVisibleClassName`.
   */ disableRipple: _propTypesDefault.default.bool,
    /**
   * Element placed after the children.
   */ endIcon: _propTypesDefault.default.node,
    /**
   * @ignore
   */ focusVisibleClassName: _propTypesDefault.default.string,
    /**
   * If `true`, the button will take up the full width of its container.
   */ fullWidth: _propTypesDefault.default.bool,
    /**
   * The URL to link to when the button is clicked.
   * If defined, an `a` element will be used as the root node.
   */ href: _propTypesDefault.default.string,
    /**
   * The size of the button.
   * `small` is equivalent to the dense button styling.
   */ size: _propTypesDefault.default.oneOf([
        'large',
        'medium',
        'small'
    ]),
    /**
   * Element placed before the children.
   */ startIcon: _propTypesDefault.default.node,
    /**
   * @ignore
   */ type: _propTypesDefault.default.oneOfType([
        _propTypesDefault.default.oneOf([
            'button',
            'reset',
            'submit'
        ]),
        _propTypesDefault.default.string
    ]),
    /**
   * The variant to use.
   */ variant: _propTypesDefault.default.oneOf([
        'contained',
        'outlined',
        'text'
    ])
};
exports.default = _withStylesDefault.default(styles, {
    name: 'MuiButton'
})(Button);

},{"@babel/runtime/helpers/esm/objectWithoutProperties":"25tJ4","@babel/runtime/helpers/esm/extends":"fTBFS","react":"21dqq","prop-types":"7wKI2","clsx":"83C22","../styles/withStyles":"7U0iM","../styles/colorManipulator":"iz48G","../ButtonBase":"2TQRV","../utils/capitalize":"5AJVX","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"fBh3y":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>_buttonGroupDefault.default
);
var _buttonGroup = require("./ButtonGroup");
var _buttonGroupDefault = parcelHelpers.interopDefault(_buttonGroup);

},{"./ButtonGroup":"d0sVZ","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"d0sVZ":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "styles", ()=>styles
);
var _extends = require("@babel/runtime/helpers/esm/extends");
var _extendsDefault = parcelHelpers.interopDefault(_extends);
var _objectWithoutProperties = require("@babel/runtime/helpers/esm/objectWithoutProperties");
var _objectWithoutPropertiesDefault = parcelHelpers.interopDefault(_objectWithoutProperties);
var _react = require("react");
var _reactIs = require("react-is");
var _propTypes = require("prop-types");
var _propTypesDefault = parcelHelpers.interopDefault(_propTypes);
var _clsx = require("clsx");
var _clsxDefault = parcelHelpers.interopDefault(_clsx);
var _capitalize = require("../utils/capitalize");
var _capitalizeDefault = parcelHelpers.interopDefault(_capitalize);
var _colorManipulator = require("../styles/colorManipulator");
var _withStyles = require("../styles/withStyles");
var _withStylesDefault = parcelHelpers.interopDefault(_withStyles);
var _button = require("../Button"); // Force a side effect so we don't have any override priority issue.
var _buttonDefault = parcelHelpers.interopDefault(_button);
// eslint-disable-next-line no-unused-expressions
_buttonDefault.default.styles;
var styles = function styles(theme) {
    return {
        /* Styles applied to the root element. */ root: {
            display: 'inline-flex',
            borderRadius: theme.shape.borderRadius
        },
        /* Styles applied to the root element if `variant="contained"`. */ contained: {
            boxShadow: theme.shadows[2]
        },
        /* Styles applied to the root element if `disableElevation={true}`. */ disableElevation: {
            boxShadow: 'none'
        },
        /* Pseudo-class applied to child elements if `disabled={true}`. */ disabled: {},
        /* Styles applied to the root element if `fullWidth={true}`. */ fullWidth: {
            width: '100%'
        },
        /* Styles applied to the root element if `orientation="vertical"`. */ vertical: {
            flexDirection: 'column'
        },
        /* Styles applied to the children. */ grouped: {
            minWidth: 40
        },
        /* Styles applied to the children if `orientation="horizontal"`. */ groupedHorizontal: {
            '&:not(:first-child)': {
                borderTopLeftRadius: 0,
                borderBottomLeftRadius: 0
            },
            '&:not(:last-child)': {
                borderTopRightRadius: 0,
                borderBottomRightRadius: 0
            }
        },
        /* Styles applied to the children if `orientation="vertical"`. */ groupedVertical: {
            '&:not(:first-child)': {
                borderTopRightRadius: 0,
                borderTopLeftRadius: 0
            },
            '&:not(:last-child)': {
                borderBottomRightRadius: 0,
                borderBottomLeftRadius: 0
            }
        },
        /* Styles applied to the children if `variant="text"`. */ groupedText: {},
        /* Styles applied to the children if `variant="text"` and `orientation="horizontal"`. */ groupedTextHorizontal: {
            '&:not(:last-child)': {
                borderRight: "1px solid ".concat(theme.palette.type === 'light' ? 'rgba(0, 0, 0, 0.23)' : 'rgba(255, 255, 255, 0.23)')
            }
        },
        /* Styles applied to the children if `variant="text"` and `orientation="vertical"`. */ groupedTextVertical: {
            '&:not(:last-child)': {
                borderBottom: "1px solid ".concat(theme.palette.type === 'light' ? 'rgba(0, 0, 0, 0.23)' : 'rgba(255, 255, 255, 0.23)')
            }
        },
        /* Styles applied to the children if `variant="text"` and `color="primary"`. */ groupedTextPrimary: {
            '&:not(:last-child)': {
                borderColor: _colorManipulator.alpha(theme.palette.primary.main, 0.5)
            }
        },
        /* Styles applied to the children if `variant="text"` and `color="secondary"`. */ groupedTextSecondary: {
            '&:not(:last-child)': {
                borderColor: _colorManipulator.alpha(theme.palette.secondary.main, 0.5)
            }
        },
        /* Styles applied to the children if `variant="outlined"`. */ groupedOutlined: {},
        /* Styles applied to the children if `variant="outlined"` and `orientation="horizontal"`. */ groupedOutlinedHorizontal: {
            '&:not(:first-child)': {
                marginLeft: -1
            },
            '&:not(:last-child)': {
                borderRightColor: 'transparent'
            }
        },
        /* Styles applied to the children if `variant="outlined"` and `orientation="vertical"`. */ groupedOutlinedVertical: {
            '&:not(:first-child)': {
                marginTop: -1
            },
            '&:not(:last-child)': {
                borderBottomColor: 'transparent'
            }
        },
        /* Styles applied to the children if `variant="outlined"` and `color="primary"`. */ groupedOutlinedPrimary: {
            '&:hover': {
                borderColor: theme.palette.primary.main
            }
        },
        /* Styles applied to the children if `variant="outlined"` and `color="secondary"`. */ groupedOutlinedSecondary: {
            '&:hover': {
                borderColor: theme.palette.secondary.main
            }
        },
        /* Styles applied to the children if `variant="contained"`. */ groupedContained: {
            boxShadow: 'none'
        },
        /* Styles applied to the children if `variant="contained"` and `orientation="horizontal"`. */ groupedContainedHorizontal: {
            '&:not(:last-child)': {
                borderRight: "1px solid ".concat(theme.palette.grey[400]),
                '&$disabled': {
                    borderRight: "1px solid ".concat(theme.palette.action.disabled)
                }
            }
        },
        /* Styles applied to the children if `variant="contained"` and `orientation="vertical"`. */ groupedContainedVertical: {
            '&:not(:last-child)': {
                borderBottom: "1px solid ".concat(theme.palette.grey[400]),
                '&$disabled': {
                    borderBottom: "1px solid ".concat(theme.palette.action.disabled)
                }
            }
        },
        /* Styles applied to the children if `variant="contained"` and `color="primary"`. */ groupedContainedPrimary: {
            '&:not(:last-child)': {
                borderColor: theme.palette.primary.dark
            }
        },
        /* Styles applied to the children if `variant="contained"` and `color="secondary"`. */ groupedContainedSecondary: {
            '&:not(:last-child)': {
                borderColor: theme.palette.secondary.dark
            }
        }
    };
};
var ButtonGroup = /*#__PURE__*/ _react.forwardRef(function ButtonGroup(props, ref) {
    var children = props.children, classes = props.classes, className = props.className, _props$color = props.color, color = _props$color === void 0 ? 'default' : _props$color, _props$component = props.component, Component = _props$component === void 0 ? 'div' : _props$component, _props$disabled = props.disabled, disabled = _props$disabled === void 0 ? false : _props$disabled, _props$disableElevati = props.disableElevation, disableElevation = _props$disableElevati === void 0 ? false : _props$disableElevati, _props$disableFocusRi = props.disableFocusRipple, disableFocusRipple = _props$disableFocusRi === void 0 ? false : _props$disableFocusRi, _props$disableRipple = props.disableRipple, disableRipple = _props$disableRipple === void 0 ? false : _props$disableRipple, _props$fullWidth = props.fullWidth, fullWidth = _props$fullWidth === void 0 ? false : _props$fullWidth, _props$orientation = props.orientation, orientation = _props$orientation === void 0 ? 'horizontal' : _props$orientation, _props$size = props.size, size = _props$size === void 0 ? 'medium' : _props$size, _props$variant = props.variant, variant = _props$variant === void 0 ? 'outlined' : _props$variant, other = _objectWithoutPropertiesDefault.default(props, [
        "children",
        "classes",
        "className",
        "color",
        "component",
        "disabled",
        "disableElevation",
        "disableFocusRipple",
        "disableRipple",
        "fullWidth",
        "orientation",
        "size",
        "variant"
    ]);
    var buttonClassName = _clsxDefault.default(classes.grouped, classes["grouped".concat(_capitalizeDefault.default(orientation))], classes["grouped".concat(_capitalizeDefault.default(variant))], classes["grouped".concat(_capitalizeDefault.default(variant)).concat(_capitalizeDefault.default(orientation))], classes["grouped".concat(_capitalizeDefault.default(variant)).concat(color !== 'default' ? _capitalizeDefault.default(color) : '')], disabled && classes.disabled);
    return /*#__PURE__*/ _react.createElement(Component, _extendsDefault.default({
        role: "group",
        className: _clsxDefault.default(classes.root, className, fullWidth && classes.fullWidth, disableElevation && classes.disableElevation, variant === 'contained' && classes.contained, orientation === 'vertical' && classes.vertical),
        ref: ref
    }, other), _react.Children.map(children, function(child) {
        if (!/*#__PURE__*/ _react.isValidElement(child)) return null;
        if (_reactIs.isFragment(child)) console.error([
            "Material-UI: The ButtonGroup component doesn't accept a Fragment as a child.",
            'Consider providing an array instead.'
        ].join('\n'));
        return /*#__PURE__*/ _react.cloneElement(child, {
            className: _clsxDefault.default(buttonClassName, child.props.className),
            color: child.props.color || color,
            disabled: child.props.disabled || disabled,
            disableElevation: child.props.disableElevation || disableElevation,
            disableFocusRipple: disableFocusRipple,
            disableRipple: disableRipple,
            fullWidth: fullWidth,
            size: child.props.size || size,
            variant: child.props.variant || variant
        });
    }));
});
ButtonGroup.propTypes = {
    // ----------------------------- Warning --------------------------------
    // | These PropTypes are generated from the TypeScript type definitions |
    // |     To update them edit the d.ts file and run "yarn proptypes"     |
    // ----------------------------------------------------------------------
    /**
   * The content of the button group.
   */ children: _propTypesDefault.default.node,
    /**
   * Override or extend the styles applied to the component.
   * See [CSS API](#css) below for more details.
   */ classes: _propTypesDefault.default.object,
    /**
   * @ignore
   */ className: _propTypesDefault.default.string,
    /**
   * The color of the component. It supports those theme colors that make sense for this component.
   */ color: _propTypesDefault.default.oneOf([
        'default',
        'inherit',
        'primary',
        'secondary'
    ]),
    /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */ component: _propTypesDefault.default/* @typescript-to-proptypes-ignore */ .elementType,
    /**
   * If `true`, the buttons will be disabled.
   */ disabled: _propTypesDefault.default.bool,
    /**
   * If `true`, no elevation is used.
   */ disableElevation: _propTypesDefault.default.bool,
    /**
   * If `true`, the button keyboard focus ripple will be disabled.
   */ disableFocusRipple: _propTypesDefault.default.bool,
    /**
   * If `true`, the button ripple effect will be disabled.
   */ disableRipple: _propTypesDefault.default.bool,
    /**
   * If `true`, the buttons will take up the full width of its container.
   */ fullWidth: _propTypesDefault.default.bool,
    /**
   * The group orientation (layout flow direction).
   */ orientation: _propTypesDefault.default.oneOf([
        'horizontal',
        'vertical'
    ]),
    /**
   * The size of the button.
   * `small` is equivalent to the dense button styling.
   */ size: _propTypesDefault.default.oneOf([
        'large',
        'medium',
        'small'
    ]),
    /**
   * The variant to use.
   */ variant: _propTypesDefault.default.oneOf([
        'contained',
        'outlined',
        'text'
    ])
};
exports.default = _withStylesDefault.default(styles, {
    name: 'MuiButtonGroup'
})(ButtonGroup);

},{"@babel/runtime/helpers/esm/extends":"fTBFS","@babel/runtime/helpers/esm/objectWithoutProperties":"25tJ4","react":"21dqq","react-is":"63mDj","prop-types":"7wKI2","clsx":"83C22","../utils/capitalize":"5AJVX","../styles/colorManipulator":"iz48G","../styles/withStyles":"7U0iM","../Button":"hKV2U","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"1E1zV":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>_cardDefault.default
);
var _card = require("./Card");
var _cardDefault = parcelHelpers.interopDefault(_card);

},{"./Card":"fVdE8","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"fVdE8":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "styles", ()=>styles
);
var _extends = require("@babel/runtime/helpers/esm/extends");
var _extendsDefault = parcelHelpers.interopDefault(_extends);
var _objectWithoutProperties = require("@babel/runtime/helpers/esm/objectWithoutProperties");
var _objectWithoutPropertiesDefault = parcelHelpers.interopDefault(_objectWithoutProperties);
var _react = require("react");
var _propTypes = require("prop-types");
var _propTypesDefault = parcelHelpers.interopDefault(_propTypes);
var _clsx = require("clsx");
var _clsxDefault = parcelHelpers.interopDefault(_clsx);
var _paper = require("../Paper");
var _paperDefault = parcelHelpers.interopDefault(_paper);
var _withStyles = require("../styles/withStyles");
var _withStylesDefault = parcelHelpers.interopDefault(_withStyles);
var styles = {
    /* Styles applied to the root element. */ root: {
        overflow: 'hidden'
    }
};
var Card = /*#__PURE__*/ _react.forwardRef(function Card(props, ref) {
    var classes = props.classes, className = props.className, _props$raised = props.raised, raised = _props$raised === void 0 ? false : _props$raised, other = _objectWithoutPropertiesDefault.default(props, [
        "classes",
        "className",
        "raised"
    ]);
    return /*#__PURE__*/ _react.createElement(_paperDefault.default, _extendsDefault.default({
        className: _clsxDefault.default(classes.root, className),
        elevation: raised ? 8 : 1,
        ref: ref
    }, other));
});
Card.propTypes = {
    // ----------------------------- Warning --------------------------------
    // | These PropTypes are generated from the TypeScript type definitions |
    // |     To update them edit the d.ts file and run "yarn proptypes"     |
    // ----------------------------------------------------------------------
    /**
   * The content of the component.
   */ children: _propTypesDefault.default.node,
    /**
   * Override or extend the styles applied to the component.
   * See [CSS API](#css) below for more details.
   */ classes: _propTypesDefault.default.object,
    /**
   * @ignore
   */ className: _propTypesDefault.default.string,
    /**
   * If `true`, the card will use raised styling.
   */ raised: _propTypesDefault.default.bool
};
exports.default = _withStylesDefault.default(styles, {
    name: 'MuiCard'
})(Card);

},{"@babel/runtime/helpers/esm/extends":"fTBFS","@babel/runtime/helpers/esm/objectWithoutProperties":"25tJ4","react":"21dqq","prop-types":"7wKI2","clsx":"83C22","../Paper":"j0s2L","../styles/withStyles":"7U0iM","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"3Nrv2":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>_cardActionAreaDefault.default
);
var _cardActionArea = require("./CardActionArea");
var _cardActionAreaDefault = parcelHelpers.interopDefault(_cardActionArea);

},{"./CardActionArea":"hJMoU","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"hJMoU":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "styles", ()=>styles
);
var _extends = require("@babel/runtime/helpers/esm/extends");
var _extendsDefault = parcelHelpers.interopDefault(_extends);
var _objectWithoutProperties = require("@babel/runtime/helpers/esm/objectWithoutProperties");
var _objectWithoutPropertiesDefault = parcelHelpers.interopDefault(_objectWithoutProperties);
var _react = require("react");
var _propTypes = require("prop-types");
var _propTypesDefault = parcelHelpers.interopDefault(_propTypes);
var _clsx = require("clsx");
var _clsxDefault = parcelHelpers.interopDefault(_clsx);
var _withStyles = require("../styles/withStyles");
var _withStylesDefault = parcelHelpers.interopDefault(_withStyles);
var _buttonBase = require("../ButtonBase");
var _buttonBaseDefault = parcelHelpers.interopDefault(_buttonBase);
var styles = function styles(theme) {
    return {
        /* Styles applied to the root element. */ root: {
            display: 'block',
            textAlign: 'inherit',
            width: '100%',
            '&:hover $focusHighlight': {
                opacity: theme.palette.action.hoverOpacity
            },
            '&$focusVisible $focusHighlight': {
                opacity: 0.12
            }
        },
        /* Pseudo-class applied to the ButtonBase root element if the action area is keyboard focused. */ focusVisible: {},
        /* Styles applied to the overlay that covers the action area when it is keyboard focused. */ focusHighlight: {
            overflow: 'hidden',
            pointerEvents: 'none',
            position: 'absolute',
            top: 0,
            right: 0,
            bottom: 0,
            left: 0,
            borderRadius: 'inherit',
            opacity: 0,
            backgroundColor: 'currentcolor',
            transition: theme.transitions.create('opacity', {
                duration: theme.transitions.duration.short
            })
        }
    };
};
var CardActionArea = /*#__PURE__*/ _react.forwardRef(function CardActionArea(props, ref) {
    var children = props.children, classes = props.classes, className = props.className, focusVisibleClassName = props.focusVisibleClassName, other = _objectWithoutPropertiesDefault.default(props, [
        "children",
        "classes",
        "className",
        "focusVisibleClassName"
    ]);
    return /*#__PURE__*/ _react.createElement(_buttonBaseDefault.default, _extendsDefault.default({
        className: _clsxDefault.default(classes.root, className),
        focusVisibleClassName: _clsxDefault.default(focusVisibleClassName, classes.focusVisible),
        ref: ref
    }, other), children, /*#__PURE__*/ _react.createElement("span", {
        className: classes.focusHighlight
    }));
});
CardActionArea.propTypes = {
    // ----------------------------- Warning --------------------------------
    // | These PropTypes are generated from the TypeScript type definitions |
    // |     To update them edit the d.ts file and run "yarn proptypes"     |
    // ----------------------------------------------------------------------
    /**
   * The content of the component.
   */ children: _propTypesDefault.default.node,
    /**
   * Override or extend the styles applied to the component.
   * See [CSS API](#css) below for more details.
   */ classes: _propTypesDefault.default.object,
    /**
   * @ignore
   */ className: _propTypesDefault.default.string,
    /**
   * @ignore
   */ focusVisibleClassName: _propTypesDefault.default.string
};
exports.default = _withStylesDefault.default(styles, {
    name: 'MuiCardActionArea'
})(CardActionArea);

},{"@babel/runtime/helpers/esm/extends":"fTBFS","@babel/runtime/helpers/esm/objectWithoutProperties":"25tJ4","react":"21dqq","prop-types":"7wKI2","clsx":"83C22","../styles/withStyles":"7U0iM","../ButtonBase":"2TQRV","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"jHAOC":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>_cardActionsDefault.default
);
var _cardActions = require("./CardActions");
var _cardActionsDefault = parcelHelpers.interopDefault(_cardActions);

},{"./CardActions":"jqJqj","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"jqJqj":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "styles", ()=>styles
);
var _extends = require("@babel/runtime/helpers/esm/extends");
var _extendsDefault = parcelHelpers.interopDefault(_extends);
var _objectWithoutProperties = require("@babel/runtime/helpers/esm/objectWithoutProperties");
var _objectWithoutPropertiesDefault = parcelHelpers.interopDefault(_objectWithoutProperties);
var _react = require("react");
var _propTypes = require("prop-types");
var _propTypesDefault = parcelHelpers.interopDefault(_propTypes);
var _clsx = require("clsx");
var _clsxDefault = parcelHelpers.interopDefault(_clsx);
var _withStyles = require("../styles/withStyles");
var _withStylesDefault = parcelHelpers.interopDefault(_withStyles);
var styles = {
    /* Styles applied to the root element. */ root: {
        display: 'flex',
        alignItems: 'center',
        padding: 8
    },
    /* Styles applied to the root element if `disableSpacing={false}`. */ spacing: {
        '& > :not(:first-child)': {
            marginLeft: 8
        }
    }
};
var CardActions = /*#__PURE__*/ _react.forwardRef(function CardActions(props, ref) {
    var _props$disableSpacing = props.disableSpacing, disableSpacing = _props$disableSpacing === void 0 ? false : _props$disableSpacing, classes = props.classes, className = props.className, other = _objectWithoutPropertiesDefault.default(props, [
        "disableSpacing",
        "classes",
        "className"
    ]);
    return /*#__PURE__*/ _react.createElement("div", _extendsDefault.default({
        className: _clsxDefault.default(classes.root, className, !disableSpacing && classes.spacing),
        ref: ref
    }, other));
});
CardActions.propTypes = {
    // ----------------------------- Warning --------------------------------
    // | These PropTypes are generated from the TypeScript type definitions |
    // |     To update them edit the d.ts file and run "yarn proptypes"     |
    // ----------------------------------------------------------------------
    /**
   * The content of the component.
   */ children: _propTypesDefault.default.node,
    /**
   * Override or extend the styles applied to the component.
   * See [CSS API](#css) below for more details.
   */ classes: _propTypesDefault.default.object,
    /**
   * @ignore
   */ className: _propTypesDefault.default.string,
    /**
   * If `true`, the actions do not have additional margin.
   */ disableSpacing: _propTypesDefault.default.bool
};
exports.default = _withStylesDefault.default(styles, {
    name: 'MuiCardActions'
})(CardActions);

},{"@babel/runtime/helpers/esm/extends":"fTBFS","@babel/runtime/helpers/esm/objectWithoutProperties":"25tJ4","react":"21dqq","prop-types":"7wKI2","clsx":"83C22","../styles/withStyles":"7U0iM","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"6LZ9l":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>_cardContentDefault.default
);
var _cardContent = require("./CardContent");
var _cardContentDefault = parcelHelpers.interopDefault(_cardContent);

},{"./CardContent":"2U26z","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"2U26z":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "styles", ()=>styles
);
var _extends = require("@babel/runtime/helpers/esm/extends");
var _extendsDefault = parcelHelpers.interopDefault(_extends);
var _objectWithoutProperties = require("@babel/runtime/helpers/esm/objectWithoutProperties");
var _objectWithoutPropertiesDefault = parcelHelpers.interopDefault(_objectWithoutProperties);
var _react = require("react");
var _propTypes = require("prop-types");
var _propTypesDefault = parcelHelpers.interopDefault(_propTypes);
var _clsx = require("clsx");
var _clsxDefault = parcelHelpers.interopDefault(_clsx);
var _withStyles = require("../styles/withStyles");
var _withStylesDefault = parcelHelpers.interopDefault(_withStyles);
var styles = {
    /* Styles applied to the root element. */ root: {
        padding: 16,
        '&:last-child': {
            paddingBottom: 24
        }
    }
};
var CardContent = /*#__PURE__*/ _react.forwardRef(function CardContent(props, ref) {
    var classes = props.classes, className = props.className, _props$component = props.component, Component = _props$component === void 0 ? 'div' : _props$component, other = _objectWithoutPropertiesDefault.default(props, [
        "classes",
        "className",
        "component"
    ]);
    return /*#__PURE__*/ _react.createElement(Component, _extendsDefault.default({
        className: _clsxDefault.default(classes.root, className),
        ref: ref
    }, other));
});
CardContent.propTypes = {
    // ----------------------------- Warning --------------------------------
    // | These PropTypes are generated from the TypeScript type definitions |
    // |     To update them edit the d.ts file and run "yarn proptypes"     |
    // ----------------------------------------------------------------------
    /**
   * The content of the component.
   */ children: _propTypesDefault.default.node,
    /**
   * Override or extend the styles applied to the component.
   * See [CSS API](#css) below for more details.
   */ classes: _propTypesDefault.default.object,
    /**
   * @ignore
   */ className: _propTypesDefault.default.string,
    /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */ component: _propTypesDefault.default/* @typescript-to-proptypes-ignore */ .elementType
};
exports.default = _withStylesDefault.default(styles, {
    name: 'MuiCardContent'
})(CardContent);

},{"@babel/runtime/helpers/esm/extends":"fTBFS","@babel/runtime/helpers/esm/objectWithoutProperties":"25tJ4","react":"21dqq","prop-types":"7wKI2","clsx":"83C22","../styles/withStyles":"7U0iM","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"gDzys":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>_cardHeaderDefault.default
);
var _cardHeader = require("./CardHeader");
var _cardHeaderDefault = parcelHelpers.interopDefault(_cardHeader);

},{"./CardHeader":"cshFC","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"cshFC":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "styles", ()=>styles
);
var _extends = require("@babel/runtime/helpers/esm/extends");
var _extendsDefault = parcelHelpers.interopDefault(_extends);
var _objectWithoutProperties = require("@babel/runtime/helpers/esm/objectWithoutProperties");
var _objectWithoutPropertiesDefault = parcelHelpers.interopDefault(_objectWithoutProperties);
var _react = require("react");
var _propTypes = require("prop-types");
var _propTypesDefault = parcelHelpers.interopDefault(_propTypes);
var _clsx = require("clsx");
var _clsxDefault = parcelHelpers.interopDefault(_clsx);
var _withStyles = require("../styles/withStyles");
var _withStylesDefault = parcelHelpers.interopDefault(_withStyles);
var _typography = require("../Typography");
var _typographyDefault = parcelHelpers.interopDefault(_typography);
var styles = {
    /* Styles applied to the root element. */ root: {
        display: 'flex',
        alignItems: 'center',
        padding: 16
    },
    /* Styles applied to the avatar element. */ avatar: {
        flex: '0 0 auto',
        marginRight: 16
    },
    /* Styles applied to the action element. */ action: {
        flex: '0 0 auto',
        alignSelf: 'flex-start',
        marginTop: -8,
        marginRight: -8
    },
    /* Styles applied to the content wrapper element. */ content: {
        flex: '1 1 auto'
    },
    /* Styles applied to the title Typography element. */ title: {},
    /* Styles applied to the subheader Typography element. */ subheader: {}
};
var CardHeader = /*#__PURE__*/ _react.forwardRef(function CardHeader(props, ref) {
    var action = props.action, avatar = props.avatar, classes = props.classes, className = props.className, _props$component = props.component, Component = _props$component === void 0 ? 'div' : _props$component, _props$disableTypogra = props.disableTypography, disableTypography = _props$disableTypogra === void 0 ? false : _props$disableTypogra, subheaderProp = props.subheader, subheaderTypographyProps = props.subheaderTypographyProps, titleProp = props.title, titleTypographyProps = props.titleTypographyProps, other = _objectWithoutPropertiesDefault.default(props, [
        "action",
        "avatar",
        "classes",
        "className",
        "component",
        "disableTypography",
        "subheader",
        "subheaderTypographyProps",
        "title",
        "titleTypographyProps"
    ]);
    var title = titleProp;
    if (title != null && title.type !== _typographyDefault.default && !disableTypography) title = /*#__PURE__*/ _react.createElement(_typographyDefault.default, _extendsDefault.default({
        variant: avatar ? 'body2' : 'h5',
        className: classes.title,
        component: "span",
        display: "block"
    }, titleTypographyProps), title);
    var subheader = subheaderProp;
    if (subheader != null && subheader.type !== _typographyDefault.default && !disableTypography) subheader = /*#__PURE__*/ _react.createElement(_typographyDefault.default, _extendsDefault.default({
        variant: avatar ? 'body2' : 'body1',
        className: classes.subheader,
        color: "textSecondary",
        component: "span",
        display: "block"
    }, subheaderTypographyProps), subheader);
    return /*#__PURE__*/ _react.createElement(Component, _extendsDefault.default({
        className: _clsxDefault.default(classes.root, className),
        ref: ref
    }, other), avatar && /*#__PURE__*/ _react.createElement("div", {
        className: classes.avatar
    }, avatar), /*#__PURE__*/ _react.createElement("div", {
        className: classes.content
    }, title, subheader), action && /*#__PURE__*/ _react.createElement("div", {
        className: classes.action
    }, action));
});
CardHeader.propTypes = {
    // ----------------------------- Warning --------------------------------
    // | These PropTypes are generated from the TypeScript type definitions |
    // |     To update them edit the d.ts file and run "yarn proptypes"     |
    // ----------------------------------------------------------------------
    /**
   * The action to display in the card header.
   */ action: _propTypesDefault.default.node,
    /**
   * The Avatar for the Card Header.
   */ avatar: _propTypesDefault.default.node,
    /**
   * @ignore
   */ children: _propTypesDefault.default.node,
    /**
   * Override or extend the styles applied to the component.
   * See [CSS API](#css) below for more details.
   */ classes: _propTypesDefault.default.object,
    /**
   * @ignore
   */ className: _propTypesDefault.default.string,
    /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */ component: _propTypesDefault.default/* @typescript-to-proptypes-ignore */ .elementType,
    /**
   * If `true`, `subheader` and `title` won't be wrapped by a Typography component.
   * This can be useful to render an alternative Typography variant by wrapping
   * the `title` text, and optional `subheader` text
   * with the Typography component.
   */ disableTypography: _propTypesDefault.default.bool,
    /**
   * The content of the component.
   */ subheader: _propTypesDefault.default.node,
    /**
   * These props will be forwarded to the subheader
   * (as long as disableTypography is not `true`).
   */ subheaderTypographyProps: _propTypesDefault.default.object,
    /**
   * The content of the Card Title.
   */ title: _propTypesDefault.default.node,
    /**
   * These props will be forwarded to the title
   * (as long as disableTypography is not `true`).
   */ titleTypographyProps: _propTypesDefault.default.object
};
exports.default = _withStylesDefault.default(styles, {
    name: 'MuiCardHeader'
})(CardHeader);

},{"@babel/runtime/helpers/esm/extends":"fTBFS","@babel/runtime/helpers/esm/objectWithoutProperties":"25tJ4","react":"21dqq","prop-types":"7wKI2","clsx":"83C22","../styles/withStyles":"7U0iM","../Typography":"6dDPF","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"bA2G1":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>_cardMediaDefault.default
);
var _cardMedia = require("./CardMedia");
var _cardMediaDefault = parcelHelpers.interopDefault(_cardMedia);

},{"./CardMedia":"fac2Z","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"fac2Z":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "styles", ()=>styles
);
var _extends = require("@babel/runtime/helpers/esm/extends");
var _extendsDefault = parcelHelpers.interopDefault(_extends);
var _objectWithoutProperties = require("@babel/runtime/helpers/esm/objectWithoutProperties");
var _objectWithoutPropertiesDefault = parcelHelpers.interopDefault(_objectWithoutProperties);
var _react = require("react");
var _propTypes = require("prop-types");
var _propTypesDefault = parcelHelpers.interopDefault(_propTypes);
var _clsx = require("clsx");
var _clsxDefault = parcelHelpers.interopDefault(_clsx);
var _withStyles = require("../styles/withStyles");
var _withStylesDefault = parcelHelpers.interopDefault(_withStyles);
var _utils = require("@material-ui/utils");
var styles = {
    /* Styles applied to the root element. */ root: {
        display: 'block',
        backgroundSize: 'cover',
        backgroundRepeat: 'no-repeat',
        backgroundPosition: 'center'
    },
    /* Styles applied to the root element if `component="video, audio, picture, iframe, or img"`. */ media: {
        width: '100%'
    },
    /* Styles applied to the root element if `component="picture or img"`. */ img: {
        // ⚠️ object-fit is not supported by IE 11.
        objectFit: 'cover'
    }
};
var MEDIA_COMPONENTS = [
    'video',
    'audio',
    'picture',
    'iframe',
    'img'
];
var CardMedia = /*#__PURE__*/ _react.forwardRef(function CardMedia(props, ref) {
    var children = props.children, classes = props.classes, className = props.className, _props$component = props.component, Component = _props$component === void 0 ? 'div' : _props$component, image = props.image, src = props.src, style = props.style, other = _objectWithoutPropertiesDefault.default(props, [
        "children",
        "classes",
        "className",
        "component",
        "image",
        "src",
        "style"
    ]);
    var isMediaComponent = MEDIA_COMPONENTS.indexOf(Component) !== -1;
    var composedStyle = !isMediaComponent && image ? _extendsDefault.default({
        backgroundImage: "url(\"".concat(image, "\")")
    }, style) : style;
    return /*#__PURE__*/ _react.createElement(Component, _extendsDefault.default({
        className: _clsxDefault.default(classes.root, className, isMediaComponent && classes.media, "picture img".indexOf(Component) !== -1 && classes.img),
        ref: ref,
        style: composedStyle,
        src: isMediaComponent ? image || src : undefined
    }, other), children);
});
CardMedia.propTypes = {
    // ----------------------------- Warning --------------------------------
    // | These PropTypes are generated from the TypeScript type definitions |
    // |     To update them edit the d.ts file and run "yarn proptypes"     |
    // ----------------------------------------------------------------------
    /**
   * The content of the component.
   */ children: _utils.chainPropTypes(_propTypesDefault.default.node, function(props) {
        if (!props.children && !props.image && !props.src && !props.component) return new Error('Material-UI: Either `children`, `image`, `src` or `component` prop must be specified.');
        return null;
    }),
    /**
   * Override or extend the styles applied to the component.
   * See [CSS API](#css) below for more details.
   */ classes: _propTypesDefault.default.object,
    /**
   * @ignore
   */ className: _propTypesDefault.default.string,
    /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */ component: _propTypesDefault.default/* @typescript-to-proptypes-ignore */ .elementType,
    /**
   * Image to be displayed as a background image.
   * Either `image` or `src` prop must be specified.
   * Note that caller must specify height otherwise the image will not be visible.
   */ image: _propTypesDefault.default.string,
    /**
   * An alias for `image` property.
   * Available only with media components.
   * Media components: `video`, `audio`, `picture`, `iframe`, `img`.
   */ src: _propTypesDefault.default.string,
    /**
   * @ignore
   */ style: _propTypesDefault.default.object
};
exports.default = _withStylesDefault.default(styles, {
    name: 'MuiCardMedia'
})(CardMedia);

},{"@babel/runtime/helpers/esm/extends":"fTBFS","@babel/runtime/helpers/esm/objectWithoutProperties":"25tJ4","react":"21dqq","prop-types":"7wKI2","clsx":"83C22","../styles/withStyles":"7U0iM","@material-ui/utils":"54RkF","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"g9Bf9":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>_checkboxDefault.default
);
var _checkbox = require("./Checkbox");
var _checkboxDefault = parcelHelpers.interopDefault(_checkbox);

},{"./Checkbox":"5XJ4A","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"5XJ4A":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "styles", ()=>styles
);
var _extends = require("@babel/runtime/helpers/esm/extends");
var _extendsDefault = parcelHelpers.interopDefault(_extends);
var _objectWithoutProperties = require("@babel/runtime/helpers/esm/objectWithoutProperties");
var _objectWithoutPropertiesDefault = parcelHelpers.interopDefault(_objectWithoutProperties);
var _react = require("react");
var _propTypes = require("prop-types");
var _propTypesDefault = parcelHelpers.interopDefault(_propTypes);
var _clsx = require("clsx");
var _clsxDefault = parcelHelpers.interopDefault(_clsx);
var _utils = require("@material-ui/utils");
var _switchBase = require("../internal/SwitchBase");
var _switchBaseDefault = parcelHelpers.interopDefault(_switchBase);
var _checkBoxOutlineBlank = require("../internal/svg-icons/CheckBoxOutlineBlank");
var _checkBoxOutlineBlankDefault = parcelHelpers.interopDefault(_checkBoxOutlineBlank);
var _checkBox = require("../internal/svg-icons/CheckBox");
var _checkBoxDefault = parcelHelpers.interopDefault(_checkBox);
var _colorManipulator = require("../styles/colorManipulator");
var _indeterminateCheckBox = require("../internal/svg-icons/IndeterminateCheckBox");
var _indeterminateCheckBoxDefault = parcelHelpers.interopDefault(_indeterminateCheckBox);
var _capitalize = require("../utils/capitalize");
var _capitalizeDefault = parcelHelpers.interopDefault(_capitalize);
var _withStyles = require("../styles/withStyles");
var _withStylesDefault = parcelHelpers.interopDefault(_withStyles);
var styles = function styles(theme) {
    return {
        /* Styles applied to the root element. */ root: {
            color: theme.palette.text.secondary
        },
        /* Pseudo-class applied to the root element if `checked={true}`. */ checked: {},
        /* Pseudo-class applied to the root element if `disabled={true}`. */ disabled: {},
        /* Pseudo-class applied to the root element if `indeterminate={true}`. */ indeterminate: {},
        /* Styles applied to the root element if `color="primary"`. */ colorPrimary: {
            '&$checked': {
                color: theme.palette.primary.main,
                '&:hover': {
                    backgroundColor: _colorManipulator.alpha(theme.palette.primary.main, theme.palette.action.hoverOpacity),
                    // Reset on touch devices, it doesn't add specificity
                    '@media (hover: none)': {
                        backgroundColor: 'transparent'
                    }
                }
            },
            '&$disabled': {
                color: theme.palette.action.disabled
            }
        },
        /* Styles applied to the root element if `color="secondary"`. */ colorSecondary: {
            '&$checked': {
                color: theme.palette.secondary.main,
                '&:hover': {
                    backgroundColor: _colorManipulator.alpha(theme.palette.secondary.main, theme.palette.action.hoverOpacity),
                    // Reset on touch devices, it doesn't add specificity
                    '@media (hover: none)': {
                        backgroundColor: 'transparent'
                    }
                }
            },
            '&$disabled': {
                color: theme.palette.action.disabled
            }
        }
    };
};
var defaultCheckedIcon = /*#__PURE__*/ _react.createElement(_checkBoxDefault.default, null);
var defaultIcon = /*#__PURE__*/ _react.createElement(_checkBoxOutlineBlankDefault.default, null);
var defaultIndeterminateIcon = /*#__PURE__*/ _react.createElement(_indeterminateCheckBoxDefault.default, null);
var Checkbox = /*#__PURE__*/ _react.forwardRef(function Checkbox(props, ref) {
    var _props$checkedIcon = props.checkedIcon, checkedIcon = _props$checkedIcon === void 0 ? defaultCheckedIcon : _props$checkedIcon, classes = props.classes, _props$color = props.color, color = _props$color === void 0 ? 'secondary' : _props$color, _props$icon = props.icon, iconProp = _props$icon === void 0 ? defaultIcon : _props$icon, _props$indeterminate = props.indeterminate, indeterminate = _props$indeterminate === void 0 ? false : _props$indeterminate, _props$indeterminateI = props.indeterminateIcon, indeterminateIconProp = _props$indeterminateI === void 0 ? defaultIndeterminateIcon : _props$indeterminateI, inputProps = props.inputProps, _props$size = props.size, size = _props$size === void 0 ? 'medium' : _props$size, other = _objectWithoutPropertiesDefault.default(props, [
        "checkedIcon",
        "classes",
        "color",
        "icon",
        "indeterminate",
        "indeterminateIcon",
        "inputProps",
        "size"
    ]);
    var icon = indeterminate ? indeterminateIconProp : iconProp;
    var indeterminateIcon = indeterminate ? indeterminateIconProp : checkedIcon;
    return /*#__PURE__*/ _react.createElement(_switchBaseDefault.default, _extendsDefault.default({
        type: "checkbox",
        classes: {
            root: _clsxDefault.default(classes.root, classes["color".concat(_capitalizeDefault.default(color))], indeterminate && classes.indeterminate),
            checked: classes.checked,
            disabled: classes.disabled
        },
        color: color,
        inputProps: _extendsDefault.default({
            'data-indeterminate': indeterminate
        }, inputProps),
        icon: /*#__PURE__*/ _react.cloneElement(icon, {
            fontSize: icon.props.fontSize === undefined && size === "small" ? size : icon.props.fontSize
        }),
        checkedIcon: /*#__PURE__*/ _react.cloneElement(indeterminateIcon, {
            fontSize: indeterminateIcon.props.fontSize === undefined && size === "small" ? size : indeterminateIcon.props.fontSize
        }),
        ref: ref
    }, other));
});
Checkbox.propTypes = {
    // ----------------------------- Warning --------------------------------
    // | These PropTypes are generated from the TypeScript type definitions |
    // |     To update them edit the d.ts file and run "yarn proptypes"     |
    // ----------------------------------------------------------------------
    /**
   * If `true`, the component is checked.
   */ checked: _propTypesDefault.default.bool,
    /**
   * The icon to display when the component is checked.
   */ checkedIcon: _propTypesDefault.default.node,
    /**
   * Override or extend the styles applied to the component.
   * See [CSS API](#css) below for more details.
   */ classes: _propTypesDefault.default.object,
    /**
   * The color of the component. It supports those theme colors that make sense for this component.
   */ color: _propTypesDefault.default.oneOf([
        'default',
        'primary',
        'secondary'
    ]),
    /**
   * If `true`, the checkbox will be disabled.
   */ disabled: _propTypesDefault.default.bool,
    /**
   * If `true`, the ripple effect will be disabled.
   */ disableRipple: _propTypesDefault.default.bool,
    /**
   * The icon to display when the component is unchecked.
   */ icon: _propTypesDefault.default.node,
    /**
   * The id of the `input` element.
   */ id: _propTypesDefault.default.string,
    /**
   * If `true`, the component appears indeterminate.
   * This does not set the native input element to indeterminate due
   * to inconsistent behavior across browsers.
   * However, we set a `data-indeterminate` attribute on the input.
   */ indeterminate: _propTypesDefault.default.bool,
    /**
   * The icon to display when the component is indeterminate.
   */ indeterminateIcon: _propTypesDefault.default.node,
    /**
   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.
   */ inputProps: _propTypesDefault.default.object,
    /**
   * Pass a ref to the `input` element.
   */ inputRef: _utils.refType,
    /**
   * Callback fired when the state is changed.
   *
   * @param {object} event The event source of the callback.
   * You can pull out the new checked state by accessing `event.target.checked` (boolean).
   */ onChange: _propTypesDefault.default.func,
    /**
   * If `true`, the `input` element will be required.
   */ required: _propTypesDefault.default.bool,
    /**
   * The size of the checkbox.
   * `small` is equivalent to the dense checkbox styling.
   */ size: _propTypesDefault.default.oneOf([
        'medium',
        'small'
    ]),
    /**
   * The value of the component. The DOM API casts this to a string.
   * The browser uses "on" as the default value.
   */ value: _propTypesDefault.default.any
};
exports.default = _withStylesDefault.default(styles, {
    name: 'MuiCheckbox'
})(Checkbox);

},{"@babel/runtime/helpers/esm/extends":"fTBFS","@babel/runtime/helpers/esm/objectWithoutProperties":"25tJ4","react":"21dqq","prop-types":"7wKI2","clsx":"83C22","@material-ui/utils":"54RkF","../internal/SwitchBase":"bONuw","../internal/svg-icons/CheckBoxOutlineBlank":"lPbHK","../internal/svg-icons/CheckBox":"kwmqc","../styles/colorManipulator":"iz48G","../internal/svg-icons/IndeterminateCheckBox":"1xVSt","../utils/capitalize":"5AJVX","../styles/withStyles":"7U0iM","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"bONuw":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "styles", ()=>styles
);
var _extends = require("@babel/runtime/helpers/esm/extends");
var _extendsDefault = parcelHelpers.interopDefault(_extends);
var _slicedToArray = require("@babel/runtime/helpers/esm/slicedToArray");
var _slicedToArrayDefault = parcelHelpers.interopDefault(_slicedToArray);
var _objectWithoutProperties = require("@babel/runtime/helpers/esm/objectWithoutProperties");
var _objectWithoutPropertiesDefault = parcelHelpers.interopDefault(_objectWithoutProperties);
var _react = require("react");
var _propTypes = require("prop-types");
var _propTypesDefault = parcelHelpers.interopDefault(_propTypes);
var _clsx = require("clsx");
var _clsxDefault = parcelHelpers.interopDefault(_clsx);
var _utils = require("@material-ui/utils");
var _useControlled = require("../utils/useControlled");
var _useControlledDefault = parcelHelpers.interopDefault(_useControlled);
var _useFormControl = require("../FormControl/useFormControl");
var _useFormControlDefault = parcelHelpers.interopDefault(_useFormControl);
var _withStyles = require("../styles/withStyles");
var _withStylesDefault = parcelHelpers.interopDefault(_withStyles);
var _iconButton = require("../IconButton");
var _iconButtonDefault = parcelHelpers.interopDefault(_iconButton);
var styles = {
    root: {
        padding: 9
    },
    checked: {},
    disabled: {},
    input: {
        cursor: 'inherit',
        position: 'absolute',
        opacity: 0,
        width: '100%',
        height: '100%',
        top: 0,
        left: 0,
        margin: 0,
        padding: 0,
        zIndex: 1
    }
};
/**
 * @ignore - internal component.
 */ var SwitchBase = /*#__PURE__*/ _react.forwardRef(function SwitchBase(props, ref) {
    var autoFocus = props.autoFocus, checkedProp = props.checked, checkedIcon = props.checkedIcon, classes = props.classes, className = props.className, defaultChecked = props.defaultChecked, disabledProp = props.disabled, icon = props.icon, id = props.id, inputProps = props.inputProps, inputRef = props.inputRef, name = props.name, onBlur = props.onBlur, onChange = props.onChange, onFocus = props.onFocus, readOnly = props.readOnly, required = props.required, tabIndex = props.tabIndex, type = props.type, value = props.value, other = _objectWithoutPropertiesDefault.default(props, [
        "autoFocus",
        "checked",
        "checkedIcon",
        "classes",
        "className",
        "defaultChecked",
        "disabled",
        "icon",
        "id",
        "inputProps",
        "inputRef",
        "name",
        "onBlur",
        "onChange",
        "onFocus",
        "readOnly",
        "required",
        "tabIndex",
        "type",
        "value"
    ]);
    var _useControlled1 = _useControlledDefault.default({
        controlled: checkedProp,
        default: Boolean(defaultChecked),
        name: 'SwitchBase',
        state: 'checked'
    }), _useControlled2 = _slicedToArrayDefault.default(_useControlled1, 2), checked = _useControlled2[0], setCheckedState = _useControlled2[1];
    var muiFormControl = _useFormControlDefault.default();
    var handleFocus = function handleFocus(event) {
        if (onFocus) onFocus(event);
        if (muiFormControl && muiFormControl.onFocus) muiFormControl.onFocus(event);
    };
    var handleBlur = function handleBlur(event) {
        if (onBlur) onBlur(event);
        if (muiFormControl && muiFormControl.onBlur) muiFormControl.onBlur(event);
    };
    var handleInputChange = function handleInputChange(event) {
        var newChecked = event.target.checked;
        setCheckedState(newChecked);
        if (onChange) // TODO v5: remove the second argument.
        onChange(event, newChecked);
    };
    var disabled = disabledProp;
    if (muiFormControl) {
        if (typeof disabled === 'undefined') disabled = muiFormControl.disabled;
    }
    var hasLabelFor = type === 'checkbox' || type === 'radio';
    return /*#__PURE__*/ _react.createElement(_iconButtonDefault.default, _extendsDefault.default({
        component: "span",
        className: _clsxDefault.default(classes.root, className, checked && classes.checked, disabled && classes.disabled),
        disabled: disabled,
        tabIndex: null,
        role: undefined,
        onFocus: handleFocus,
        onBlur: handleBlur,
        ref: ref
    }, other), /*#__PURE__*/ _react.createElement("input", _extendsDefault.default({
        autoFocus: autoFocus,
        checked: checkedProp,
        defaultChecked: defaultChecked,
        className: classes.input,
        disabled: disabled,
        id: hasLabelFor && id,
        name: name,
        onChange: handleInputChange,
        readOnly: readOnly,
        ref: inputRef,
        required: required,
        tabIndex: tabIndex,
        type: type,
        value: value
    }, inputProps)), checked ? checkedIcon : icon);
}); // NB: If changed, please update Checkbox, Switch and Radio
// so that the API documentation is updated.
SwitchBase.propTypes = {
    /**
   * If `true`, the `input` element will be focused during the first mount.
   */ autoFocus: _propTypesDefault.default.bool,
    /**
   * If `true`, the component is checked.
   */ checked: _propTypesDefault.default.bool,
    /**
   * The icon to display when the component is checked.
   */ checkedIcon: _propTypesDefault.default.node.isRequired,
    /**
   * Override or extend the styles applied to the component.
   * See [CSS API](#css) below for more details.
   */ classes: _propTypesDefault.default.object.isRequired,
    /**
   * @ignore
   */ className: _propTypesDefault.default.string,
    /**
   * @ignore
   */ defaultChecked: _propTypesDefault.default.bool,
    /**
   * If `true`, the switch will be disabled.
   */ disabled: _propTypesDefault.default.bool,
    /**
   * The icon to display when the component is unchecked.
   */ icon: _propTypesDefault.default.node.isRequired,
    /**
   * The id of the `input` element.
   */ id: _propTypesDefault.default.string,
    /**
   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.
   */ inputProps: _propTypesDefault.default.object,
    /**
   * Pass a ref to the `input` element.
   */ inputRef: _utils.refType,
    /*
   * @ignore
   */ name: _propTypesDefault.default.string,
    /**
   * @ignore
   */ onBlur: _propTypesDefault.default.func,
    /**
   * Callback fired when the state is changed.
   *
   * @param {object} event The event source of the callback.
   * You can pull out the new checked state by accessing `event.target.checked` (boolean).
   */ onChange: _propTypesDefault.default.func,
    /**
   * @ignore
   */ onFocus: _propTypesDefault.default.func,
    /**
   * It prevents the user from changing the value of the field
   * (not from interacting with the field).
   */ readOnly: _propTypesDefault.default.bool,
    /**
   * If `true`, the `input` element will be required.
   */ required: _propTypesDefault.default.bool,
    /**
   * @ignore
   */ tabIndex: _propTypesDefault.default.oneOfType([
        _propTypesDefault.default.number,
        _propTypesDefault.default.string
    ]),
    /**
   * The input component prop `type`.
   */ type: _propTypesDefault.default.string.isRequired,
    /**
   * The value of the component.
   */ value: _propTypesDefault.default.any
};
exports.default = _withStylesDefault.default(styles, {
    name: 'PrivateSwitchBase'
})(SwitchBase);

},{"@babel/runtime/helpers/esm/extends":"fTBFS","@babel/runtime/helpers/esm/slicedToArray":"cBZWN","@babel/runtime/helpers/esm/objectWithoutProperties":"25tJ4","react":"21dqq","prop-types":"7wKI2","clsx":"83C22","@material-ui/utils":"54RkF","../utils/useControlled":"1ORwD","../FormControl/useFormControl":"eKmPJ","../styles/withStyles":"7U0iM","../IconButton":"cer9e","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"eKmPJ":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _react = require("react");
var _formControlContext = require("./FormControlContext");
var _formControlContextDefault = parcelHelpers.interopDefault(_formControlContext);
function useFormControl() {
    return _react.useContext(_formControlContextDefault.default);
}
exports.default = useFormControl;

},{"react":"21dqq","./FormControlContext":"50ngn","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"50ngn":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "useFormControl", ()=>useFormControl
);
var _react = require("react");
/**
 * @ignore - internal component.
 */ var FormControlContext = _react.createContext();
FormControlContext.displayName = 'FormControlContext';
function useFormControl() {
    return _react.useContext(FormControlContext);
}
exports.default = FormControlContext;

},{"react":"21dqq","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"lPbHK":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _react = require("react");
var _createSvgIcon = require("../../utils/createSvgIcon");
var _createSvgIconDefault = parcelHelpers.interopDefault(_createSvgIcon);
/**
 * @ignore - internal component.
 */ exports.default = _createSvgIconDefault.default(/*#__PURE__*/ _react.createElement("path", {
    d: "M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
}), 'CheckBoxOutlineBlank');

},{"react":"21dqq","../../utils/createSvgIcon":"lVBTd","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"kwmqc":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _react = require("react");
var _createSvgIcon = require("../../utils/createSvgIcon");
var _createSvgIconDefault = parcelHelpers.interopDefault(_createSvgIcon);
/**
 * @ignore - internal component.
 */ exports.default = _createSvgIconDefault.default(/*#__PURE__*/ _react.createElement("path", {
    d: "M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z"
}), 'CheckBox');

},{"react":"21dqq","../../utils/createSvgIcon":"lVBTd","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"1xVSt":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _react = require("react");
var _createSvgIcon = require("../../utils/createSvgIcon");
var _createSvgIconDefault = parcelHelpers.interopDefault(_createSvgIcon);
/**
 * @ignore - internal component.
 */ exports.default = _createSvgIconDefault.default(/*#__PURE__*/ _react.createElement("path", {
    d: "M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-2 10H7v-2h10v2z"
}), 'IndeterminateCheckBox');

},{"react":"21dqq","../../utils/createSvgIcon":"lVBTd","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"6AgTi":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>_chipDefault.default
);
var _chip = require("./Chip");
var _chipDefault = parcelHelpers.interopDefault(_chip);

},{"./Chip":"7R8EX","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"7R8EX":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "styles", ()=>styles
);
var _extends = require("@babel/runtime/helpers/esm/extends");
var _extendsDefault = parcelHelpers.interopDefault(_extends);
var _objectWithoutProperties = require("@babel/runtime/helpers/esm/objectWithoutProperties");
var _objectWithoutPropertiesDefault = parcelHelpers.interopDefault(_objectWithoutProperties);
var _react = require("react");
var _propTypes = require("prop-types");
var _propTypesDefault = parcelHelpers.interopDefault(_propTypes);
var _clsx = require("clsx");
var _clsxDefault = parcelHelpers.interopDefault(_clsx);
var _cancel = require("../internal/svg-icons/Cancel");
var _cancelDefault = parcelHelpers.interopDefault(_cancel);
var _withStyles = require("../styles/withStyles");
var _withStylesDefault = parcelHelpers.interopDefault(_withStyles);
var _colorManipulator = require("../styles/colorManipulator");
var _useForkRef = require("../utils/useForkRef");
var _useForkRefDefault = parcelHelpers.interopDefault(_useForkRef);
var _unsupportedProp = require("../utils/unsupportedProp");
var _unsupportedPropDefault = parcelHelpers.interopDefault(_unsupportedProp);
var _capitalize = require("../utils/capitalize");
var _capitalizeDefault = parcelHelpers.interopDefault(_capitalize);
var _buttonBase = require("../ButtonBase");
var _buttonBaseDefault = parcelHelpers.interopDefault(_buttonBase);
var styles = function styles(theme) {
    var backgroundColor = theme.palette.type === 'light' ? theme.palette.grey[300] : theme.palette.grey[700];
    var deleteIconColor = _colorManipulator.alpha(theme.palette.text.primary, 0.26);
    return {
        /* Styles applied to the root element. */ root: {
            fontFamily: theme.typography.fontFamily,
            fontSize: theme.typography.pxToRem(13),
            display: 'inline-flex',
            alignItems: 'center',
            justifyContent: 'center',
            height: 32,
            color: theme.palette.getContrastText(backgroundColor),
            backgroundColor: backgroundColor,
            borderRadius: 16,
            whiteSpace: 'nowrap',
            transition: theme.transitions.create([
                'background-color',
                'box-shadow'
            ]),
            // label will inherit this from root, then `clickable` class overrides this for both
            cursor: 'default',
            // We disable the focus ring for mouse, touch and keyboard users.
            outline: 0,
            textDecoration: 'none',
            border: 'none',
            // Remove `button` border
            padding: 0,
            // Remove `button` padding
            verticalAlign: 'middle',
            boxSizing: 'border-box',
            '&$disabled': {
                opacity: 0.5,
                pointerEvents: 'none'
            },
            '& $avatar': {
                marginLeft: 5,
                marginRight: -6,
                width: 24,
                height: 24,
                color: theme.palette.type === 'light' ? theme.palette.grey[700] : theme.palette.grey[300],
                fontSize: theme.typography.pxToRem(12)
            },
            '& $avatarColorPrimary': {
                color: theme.palette.primary.contrastText,
                backgroundColor: theme.palette.primary.dark
            },
            '& $avatarColorSecondary': {
                color: theme.palette.secondary.contrastText,
                backgroundColor: theme.palette.secondary.dark
            },
            '& $avatarSmall': {
                marginLeft: 4,
                marginRight: -4,
                width: 18,
                height: 18,
                fontSize: theme.typography.pxToRem(10)
            }
        },
        /* Styles applied to the root element if `size="small"`. */ sizeSmall: {
            height: 24
        },
        /* Styles applied to the root element if `color="primary"`. */ colorPrimary: {
            backgroundColor: theme.palette.primary.main,
            color: theme.palette.primary.contrastText
        },
        /* Styles applied to the root element if `color="secondary"`. */ colorSecondary: {
            backgroundColor: theme.palette.secondary.main,
            color: theme.palette.secondary.contrastText
        },
        /* Pseudo-class applied to the root element if `disabled={true}`. */ disabled: {},
        /* Styles applied to the root element if `onClick` is defined or `clickable={true}`. */ clickable: {
            userSelect: 'none',
            WebkitTapHighlightColor: 'transparent',
            cursor: 'pointer',
            '&:hover, &:focus': {
                backgroundColor: _colorManipulator.emphasize(backgroundColor, 0.08)
            },
            '&:active': {
                boxShadow: theme.shadows[1]
            }
        },
        /* Styles applied to the root element if `onClick` and `color="primary"` is defined or `clickable={true}`. */ clickableColorPrimary: {
            '&:hover, &:focus': {
                backgroundColor: _colorManipulator.emphasize(theme.palette.primary.main, 0.08)
            }
        },
        /* Styles applied to the root element if `onClick` and `color="secondary"` is defined or `clickable={true}`. */ clickableColorSecondary: {
            '&:hover, &:focus': {
                backgroundColor: _colorManipulator.emphasize(theme.palette.secondary.main, 0.08)
            }
        },
        /* Styles applied to the root element if `onDelete` is defined. */ deletable: {
            '&:focus': {
                backgroundColor: _colorManipulator.emphasize(backgroundColor, 0.08)
            }
        },
        /* Styles applied to the root element if `onDelete` and `color="primary"` is defined. */ deletableColorPrimary: {
            '&:focus': {
                backgroundColor: _colorManipulator.emphasize(theme.palette.primary.main, 0.2)
            }
        },
        /* Styles applied to the root element if `onDelete` and `color="secondary"` is defined. */ deletableColorSecondary: {
            '&:focus': {
                backgroundColor: _colorManipulator.emphasize(theme.palette.secondary.main, 0.2)
            }
        },
        /* Styles applied to the root element if `variant="outlined"`. */ outlined: {
            backgroundColor: 'transparent',
            border: "1px solid ".concat(theme.palette.type === 'light' ? 'rgba(0, 0, 0, 0.23)' : 'rgba(255, 255, 255, 0.23)'),
            '$clickable&:hover, $clickable&:focus, $deletable&:focus': {
                backgroundColor: _colorManipulator.alpha(theme.palette.text.primary, theme.palette.action.hoverOpacity)
            },
            '& $avatar': {
                marginLeft: 4
            },
            '& $avatarSmall': {
                marginLeft: 2
            },
            '& $icon': {
                marginLeft: 4
            },
            '& $iconSmall': {
                marginLeft: 2
            },
            '& $deleteIcon': {
                marginRight: 5
            },
            '& $deleteIconSmall': {
                marginRight: 3
            }
        },
        /* Styles applied to the root element if `variant="outlined"` and `color="primary"`. */ outlinedPrimary: {
            color: theme.palette.primary.main,
            border: "1px solid ".concat(theme.palette.primary.main),
            '$clickable&:hover, $clickable&:focus, $deletable&:focus': {
                backgroundColor: _colorManipulator.alpha(theme.palette.primary.main, theme.palette.action.hoverOpacity)
            }
        },
        /* Styles applied to the root element if `variant="outlined"` and `color="secondary"`. */ outlinedSecondary: {
            color: theme.palette.secondary.main,
            border: "1px solid ".concat(theme.palette.secondary.main),
            '$clickable&:hover, $clickable&:focus, $deletable&:focus': {
                backgroundColor: _colorManipulator.alpha(theme.palette.secondary.main, theme.palette.action.hoverOpacity)
            }
        },
        // TODO v5: remove
        /* Styles applied to the `avatar` element. */ avatar: {},
        /* Styles applied to the `avatar` element if `size="small"`. */ avatarSmall: {},
        /* Styles applied to the `avatar` element if `color="primary"`. */ avatarColorPrimary: {},
        /* Styles applied to the `avatar` element if `color="secondary"`. */ avatarColorSecondary: {},
        /* Styles applied to the `icon` element. */ icon: {
            color: theme.palette.type === 'light' ? theme.palette.grey[700] : theme.palette.grey[300],
            marginLeft: 5,
            marginRight: -6
        },
        /* Styles applied to the `icon` element if `size="small"`. */ iconSmall: {
            width: 18,
            height: 18,
            marginLeft: 4,
            marginRight: -4
        },
        /* Styles applied to the `icon` element if `color="primary"`. */ iconColorPrimary: {
            color: 'inherit'
        },
        /* Styles applied to the `icon` element if `color="secondary"`. */ iconColorSecondary: {
            color: 'inherit'
        },
        /* Styles applied to the label `span` element. */ label: {
            overflow: 'hidden',
            textOverflow: 'ellipsis',
            paddingLeft: 12,
            paddingRight: 12,
            whiteSpace: 'nowrap'
        },
        /* Styles applied to the label `span` element if `size="small"`. */ labelSmall: {
            paddingLeft: 8,
            paddingRight: 8
        },
        /* Styles applied to the `deleteIcon` element. */ deleteIcon: {
            WebkitTapHighlightColor: 'transparent',
            color: deleteIconColor,
            height: 22,
            width: 22,
            cursor: 'pointer',
            margin: '0 5px 0 -6px',
            '&:hover': {
                color: _colorManipulator.alpha(deleteIconColor, 0.4)
            }
        },
        /* Styles applied to the `deleteIcon` element if `size="small"`. */ deleteIconSmall: {
            height: 16,
            width: 16,
            marginRight: 4,
            marginLeft: -4
        },
        /* Styles applied to the deleteIcon element if `color="primary"` and `variant="default"`. */ deleteIconColorPrimary: {
            color: _colorManipulator.alpha(theme.palette.primary.contrastText, 0.7),
            '&:hover, &:active': {
                color: theme.palette.primary.contrastText
            }
        },
        /* Styles applied to the deleteIcon element if `color="secondary"` and `variant="default"`. */ deleteIconColorSecondary: {
            color: _colorManipulator.alpha(theme.palette.secondary.contrastText, 0.7),
            '&:hover, &:active': {
                color: theme.palette.secondary.contrastText
            }
        },
        /* Styles applied to the deleteIcon element if `color="primary"` and `variant="outlined"`. */ deleteIconOutlinedColorPrimary: {
            color: _colorManipulator.alpha(theme.palette.primary.main, 0.7),
            '&:hover, &:active': {
                color: theme.palette.primary.main
            }
        },
        /* Styles applied to the deleteIcon element if `color="secondary"` and `variant="outlined"`. */ deleteIconOutlinedColorSecondary: {
            color: _colorManipulator.alpha(theme.palette.secondary.main, 0.7),
            '&:hover, &:active': {
                color: theme.palette.secondary.main
            }
        }
    };
};
function isDeleteKeyboardEvent(keyboardEvent) {
    return keyboardEvent.key === 'Backspace' || keyboardEvent.key === 'Delete';
}
/**
 * Chips represent complex entities in small blocks, such as a contact.
 */ var Chip = /*#__PURE__*/ _react.forwardRef(function Chip(props, ref) {
    var avatarProp = props.avatar, classes = props.classes, className = props.className, clickableProp = props.clickable, _props$color = props.color, color = _props$color === void 0 ? 'default' : _props$color, ComponentProp = props.component, deleteIconProp = props.deleteIcon, _props$disabled = props.disabled, disabled = _props$disabled === void 0 ? false : _props$disabled, iconProp = props.icon, label = props.label, onClick = props.onClick, onDelete = props.onDelete, onKeyDown = props.onKeyDown, onKeyUp = props.onKeyUp, _props$size = props.size, size = _props$size === void 0 ? 'medium' : _props$size, _props$variant = props.variant, variant = _props$variant === void 0 ? 'default' : _props$variant, other = _objectWithoutPropertiesDefault.default(props, [
        "avatar",
        "classes",
        "className",
        "clickable",
        "color",
        "component",
        "deleteIcon",
        "disabled",
        "icon",
        "label",
        "onClick",
        "onDelete",
        "onKeyDown",
        "onKeyUp",
        "size",
        "variant"
    ]);
    var chipRef = _react.useRef(null);
    var handleRef = _useForkRefDefault.default(chipRef, ref);
    var handleDeleteIconClick = function handleDeleteIconClick(event) {
        // Stop the event from bubbling up to the `Chip`
        event.stopPropagation();
        if (onDelete) onDelete(event);
    };
    var handleKeyDown = function handleKeyDown(event) {
        // Ignore events from children of `Chip`.
        if (event.currentTarget === event.target && isDeleteKeyboardEvent(event)) // will be handled in keyUp, otherwise some browsers
        // might init navigation
        event.preventDefault();
        if (onKeyDown) onKeyDown(event);
    };
    var handleKeyUp = function handleKeyUp(event) {
        // Ignore events from children of `Chip`.
        if (event.currentTarget === event.target) {
            if (onDelete && isDeleteKeyboardEvent(event)) onDelete(event);
            else if (event.key === 'Escape' && chipRef.current) chipRef.current.blur();
        }
        if (onKeyUp) onKeyUp(event);
    };
    var clickable = clickableProp !== false && onClick ? true : clickableProp;
    var small = size === 'small';
    var Component = ComponentProp || (clickable ? _buttonBaseDefault.default : 'div');
    var moreProps = Component === _buttonBaseDefault.default ? {
        component: 'div'
    } : {};
    var deleteIcon = null;
    if (onDelete) {
        var customClasses = _clsxDefault.default(color !== 'default' && (variant === "default" ? classes["deleteIconColor".concat(_capitalizeDefault.default(color))] : classes["deleteIconOutlinedColor".concat(_capitalizeDefault.default(color))]), small && classes.deleteIconSmall);
        deleteIcon = deleteIconProp && /*#__PURE__*/ _react.isValidElement(deleteIconProp) ? /*#__PURE__*/ _react.cloneElement(deleteIconProp, {
            className: _clsxDefault.default(deleteIconProp.props.className, classes.deleteIcon, customClasses),
            onClick: handleDeleteIconClick
        }) : /*#__PURE__*/ _react.createElement(_cancelDefault.default, {
            className: _clsxDefault.default(classes.deleteIcon, customClasses),
            onClick: handleDeleteIconClick
        });
    }
    var avatar = null;
    if (avatarProp && /*#__PURE__*/ _react.isValidElement(avatarProp)) avatar = /*#__PURE__*/ _react.cloneElement(avatarProp, {
        className: _clsxDefault.default(classes.avatar, avatarProp.props.className, small && classes.avatarSmall, color !== 'default' && classes["avatarColor".concat(_capitalizeDefault.default(color))])
    });
    var icon = null;
    if (iconProp && /*#__PURE__*/ _react.isValidElement(iconProp)) icon = /*#__PURE__*/ _react.cloneElement(iconProp, {
        className: _clsxDefault.default(classes.icon, iconProp.props.className, small && classes.iconSmall, color !== 'default' && classes["iconColor".concat(_capitalizeDefault.default(color))])
    });
    if (avatar && icon) console.error("Material-UI: The Chip component can not handle the avatar and the icon prop at the same time. Pick one.");
    return /*#__PURE__*/ _react.createElement(Component, _extendsDefault.default({
        role: clickable || onDelete ? 'button' : undefined,
        className: _clsxDefault.default(classes.root, className, color !== 'default' && [
            classes["color".concat(_capitalizeDefault.default(color))],
            clickable && classes["clickableColor".concat(_capitalizeDefault.default(color))],
            onDelete && classes["deletableColor".concat(_capitalizeDefault.default(color))]
        ], variant !== "default" && [
            classes.outlined,
            {
                'primary': classes.outlinedPrimary,
                'secondary': classes.outlinedSecondary
            }[color]
        ], disabled && classes.disabled, small && classes.sizeSmall, clickable && classes.clickable, onDelete && classes.deletable),
        "aria-disabled": disabled ? true : undefined,
        tabIndex: clickable || onDelete ? 0 : undefined,
        onClick: onClick,
        onKeyDown: handleKeyDown,
        onKeyUp: handleKeyUp,
        ref: handleRef
    }, moreProps, other), avatar || icon, /*#__PURE__*/ _react.createElement("span", {
        className: _clsxDefault.default(classes.label, small && classes.labelSmall)
    }, label), deleteIcon);
});
Chip.propTypes = {
    // ----------------------------- Warning --------------------------------
    // | These PropTypes are generated from the TypeScript type definitions |
    // |     To update them edit the d.ts file and run "yarn proptypes"     |
    // ----------------------------------------------------------------------
    /**
   * Avatar element.
   */ avatar: _propTypesDefault.default.element,
    /**
   * This prop isn't supported.
   * Use the `component` prop if you need to change the children structure.
   */ children: _unsupportedPropDefault.default,
    /**
   * Override or extend the styles applied to the component.
   * See [CSS API](#css) below for more details.
   */ classes: _propTypesDefault.default.object,
    /**
   * @ignore
   */ className: _propTypesDefault.default.string,
    /**
   * If `true`, the chip will appear clickable, and will raise when pressed,
   * even if the onClick prop is not defined.
   * If false, the chip will not be clickable, even if onClick prop is defined.
   * This can be used, for example,
   * along with the component prop to indicate an anchor Chip is clickable.
   */ clickable: _propTypesDefault.default.bool,
    /**
   * The color of the component. It supports those theme colors that make sense for this component.
   */ color: _propTypesDefault.default.oneOf([
        'default',
        'primary',
        'secondary'
    ]),
    /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */ component: _propTypesDefault.default/* @typescript-to-proptypes-ignore */ .elementType,
    /**
   * Override the default delete icon element. Shown only if `onDelete` is set.
   */ deleteIcon: _propTypesDefault.default.element,
    /**
   * If `true`, the chip should be displayed in a disabled state.
   */ disabled: _propTypesDefault.default.bool,
    /**
   * Icon element.
   */ icon: _propTypesDefault.default.element,
    /**
   * The content of the label.
   */ label: _propTypesDefault.default.node,
    /**
   * @ignore
   */ onClick: _propTypesDefault.default.func,
    /**
   * Callback function fired when the delete icon is clicked.
   * If set, the delete icon will be shown.
   */ onDelete: _propTypesDefault.default.func,
    /**
   * @ignore
   */ onKeyDown: _propTypesDefault.default.func,
    /**
   * @ignore
   */ onKeyUp: _propTypesDefault.default.func,
    /**
   * The size of the chip.
   */ size: _propTypesDefault.default.oneOf([
        'medium',
        'small'
    ]),
    /**
   * The variant to use.
   */ variant: _propTypesDefault.default.oneOf([
        'default',
        'outlined'
    ])
};
exports.default = _withStylesDefault.default(styles, {
    name: 'MuiChip'
})(Chip);

},{"@babel/runtime/helpers/esm/extends":"fTBFS","@babel/runtime/helpers/esm/objectWithoutProperties":"25tJ4","react":"21dqq","prop-types":"7wKI2","clsx":"83C22","../internal/svg-icons/Cancel":"2Mkxf","../styles/withStyles":"7U0iM","../styles/colorManipulator":"iz48G","../utils/useForkRef":"kUpGa","../utils/unsupportedProp":"bFB4I","../utils/capitalize":"5AJVX","../ButtonBase":"2TQRV","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"2Mkxf":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _react = require("react");
var _createSvgIcon = require("../../utils/createSvgIcon");
var _createSvgIconDefault = parcelHelpers.interopDefault(_createSvgIcon);
/**
 * @ignore - internal component.
 */ exports.default = _createSvgIconDefault.default(/*#__PURE__*/ _react.createElement("path", {
    d: "M12 2C6.47 2 2 6.47 2 12s4.47 10 10 10 10-4.47 10-10S17.53 2 12 2zm5 13.59L15.59 17 12 13.41 8.41 17 7 15.59 10.59 12 7 8.41 8.41 7 12 10.59 15.59 7 17 8.41 13.41 12 17 15.59z"
}), 'Cancel');

},{"react":"21dqq","../../utils/createSvgIcon":"lVBTd","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"kXpmk":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>_circularProgressDefault.default
);
var _circularProgress = require("./CircularProgress");
var _circularProgressDefault = parcelHelpers.interopDefault(_circularProgress);

},{"./CircularProgress":"9ONEz","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"9ONEz":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "styles", ()=>styles
);
var _extends = require("@babel/runtime/helpers/esm/extends");
var _extendsDefault = parcelHelpers.interopDefault(_extends);
var _objectWithoutProperties = require("@babel/runtime/helpers/esm/objectWithoutProperties");
var _objectWithoutPropertiesDefault = parcelHelpers.interopDefault(_objectWithoutProperties);
var _react = require("react");
var _propTypes = require("prop-types");
var _propTypesDefault = parcelHelpers.interopDefault(_propTypes);
var _clsx = require("clsx");
var _clsxDefault = parcelHelpers.interopDefault(_clsx);
var _utils = require("@material-ui/utils");
var _withStyles = require("../styles/withStyles");
var _withStylesDefault = parcelHelpers.interopDefault(_withStyles);
var _capitalize = require("../utils/capitalize");
var _capitalizeDefault = parcelHelpers.interopDefault(_capitalize);
var SIZE = 44;
var styles = function styles(theme) {
    return {
        /* Styles applied to the root element. */ root: {
            display: 'inline-block'
        },
        /* Styles applied to the root element if `variant="static"`. */ static: {
            transition: theme.transitions.create('transform')
        },
        /* Styles applied to the root element if `variant="indeterminate"`. */ indeterminate: {
            animation: '$circular-rotate 1.4s linear infinite'
        },
        /* Styles applied to the root element if `variant="determinate"`. */ determinate: {
            transition: theme.transitions.create('transform')
        },
        /* Styles applied to the root element if `color="primary"`. */ colorPrimary: {
            color: theme.palette.primary.main
        },
        /* Styles applied to the root element if `color="secondary"`. */ colorSecondary: {
            color: theme.palette.secondary.main
        },
        /* Styles applied to the `svg` element. */ svg: {
            display: 'block' // Keeps the progress centered
        },
        /* Styles applied to the `circle` svg path. */ circle: {
            stroke: 'currentColor' // Use butt to follow the specification, by chance, it's already the default CSS value.
        },
        /* Styles applied to the `circle` svg path if `variant="static"`. */ circleStatic: {
            transition: theme.transitions.create('stroke-dashoffset')
        },
        /* Styles applied to the `circle` svg path if `variant="indeterminate"`. */ circleIndeterminate: {
            animation: '$circular-dash 1.4s ease-in-out infinite',
            // Some default value that looks fine waiting for the animation to kicks in.
            strokeDasharray: '80px, 200px',
            strokeDashoffset: '0px' // Add the unit to fix a Edge 16 and below bug.
        },
        /* Styles applied to the `circle` svg path if `variant="determinate"`. */ circleDeterminate: {
            transition: theme.transitions.create('stroke-dashoffset')
        },
        '@keyframes circular-rotate': {
            '0%': {
                // Fix IE 11 wobbly
                transformOrigin: '50% 50%'
            },
            '100%': {
                transform: 'rotate(360deg)'
            }
        },
        '@keyframes circular-dash': {
            '0%': {
                strokeDasharray: '1px, 200px',
                strokeDashoffset: '0px'
            },
            '50%': {
                strokeDasharray: '100px, 200px',
                strokeDashoffset: '-15px'
            },
            '100%': {
                strokeDasharray: '100px, 200px',
                strokeDashoffset: '-125px'
            }
        },
        /* Styles applied to the `circle` svg path if `disableShrink={true}`. */ circleDisableShrink: {
            animation: 'none'
        }
    };
};
/**
 * ## ARIA
 *
 * If the progress bar is describing the loading progress of a particular region of a page,
 * you should use `aria-describedby` to point to the progress bar, and set the `aria-busy`
 * attribute to `true` on that region until it has finished loading.
 */ var CircularProgress = /*#__PURE__*/ _react.forwardRef(function CircularProgress(props, ref) {
    var classes = props.classes, className = props.className, _props$color = props.color, color = _props$color === void 0 ? 'primary' : _props$color, _props$disableShrink = props.disableShrink, disableShrink = _props$disableShrink === void 0 ? false : _props$disableShrink, _props$size = props.size, size = _props$size === void 0 ? 40 : _props$size, style = props.style, _props$thickness = props.thickness, thickness = _props$thickness === void 0 ? 3.6 : _props$thickness, _props$value = props.value, value = _props$value === void 0 ? 0 : _props$value, _props$variant = props.variant, variant = _props$variant === void 0 ? 'indeterminate' : _props$variant, other = _objectWithoutPropertiesDefault.default(props, [
        "classes",
        "className",
        "color",
        "disableShrink",
        "size",
        "style",
        "thickness",
        "value",
        "variant"
    ]);
    var circleStyle = {};
    var rootStyle = {};
    var rootProps = {};
    if (variant === 'determinate' || variant === 'static') {
        var circumference = 2 * Math.PI * ((SIZE - thickness) / 2);
        circleStyle.strokeDasharray = circumference.toFixed(3);
        rootProps['aria-valuenow'] = Math.round(value);
        circleStyle.strokeDashoffset = "".concat(((100 - value) / 100 * circumference).toFixed(3), "px");
        rootStyle.transform = 'rotate(-90deg)';
    }
    return /*#__PURE__*/ _react.createElement("div", _extendsDefault.default({
        className: _clsxDefault.default(classes.root, className, color !== 'inherit' && classes["color".concat(_capitalizeDefault.default(color))], {
            'determinate': classes.determinate,
            'indeterminate': classes.indeterminate,
            'static': classes.static
        }[variant]),
        style: _extendsDefault.default({
            width: size,
            height: size
        }, rootStyle, style),
        ref: ref,
        role: "progressbar"
    }, rootProps, other), /*#__PURE__*/ _react.createElement("svg", {
        className: classes.svg,
        viewBox: "".concat(SIZE / 2, " ").concat(SIZE / 2, " ").concat(SIZE, " ").concat(SIZE)
    }, /*#__PURE__*/ _react.createElement("circle", {
        className: _clsxDefault.default(classes.circle, disableShrink && classes.circleDisableShrink, {
            'determinate': classes.circleDeterminate,
            'indeterminate': classes.circleIndeterminate,
            'static': classes.circleStatic
        }[variant]),
        style: circleStyle,
        cx: SIZE,
        cy: SIZE,
        r: (SIZE - thickness) / 2,
        fill: "none",
        strokeWidth: thickness
    })));
});
CircularProgress.propTypes = {
    // ----------------------------- Warning --------------------------------
    // | These PropTypes are generated from the TypeScript type definitions |
    // |     To update them edit the d.ts file and run "yarn proptypes"     |
    // ----------------------------------------------------------------------
    /**
   * Override or extend the styles applied to the component.
   * See [CSS API](#css) below for more details.
   */ classes: _propTypesDefault.default.object,
    /**
   * @ignore
   */ className: _propTypesDefault.default.string,
    /**
   * The color of the component. It supports those theme colors that make sense for this component.
   */ color: _propTypesDefault.default.oneOf([
        'inherit',
        'primary',
        'secondary'
    ]),
    /**
   * If `true`, the shrink animation is disabled.
   * This only works if variant is `indeterminate`.
   */ disableShrink: _utils.chainPropTypes(_propTypesDefault.default.bool, function(props) {
        if (props.disableShrink && props.variant && props.variant !== 'indeterminate') return new Error("Material-UI: You have provided the `disableShrink` prop with a variant other than `indeterminate`. This will have no effect.");
        return null;
    }),
    /**
   * The size of the circle.
   * If using a number, the pixel unit is assumed.
   * If using a string, you need to provide the CSS unit, e.g '3rem'.
   */ size: _propTypesDefault.default.oneOfType([
        _propTypesDefault.default.number,
        _propTypesDefault.default.string
    ]),
    /**
   * @ignore
   */ style: _propTypesDefault.default.object,
    /**
   * The thickness of the circle.
   */ thickness: _propTypesDefault.default.number,
    /**
   * The value of the progress indicator for the determinate variant.
   * Value between 0 and 100.
   */ value: _propTypesDefault.default.number,
    /**
   * The variant to use.
   * Use indeterminate when there is no progress value.
   */ variant: _utils.chainPropTypes(_propTypesDefault.default.oneOf([
        'determinate',
        'indeterminate',
        'static'
    ]), function(props) {
        var variant = props.variant;
        if (variant === 'static') throw new Error('Material-UI: `variant="static"` was deprecated. Use `variant="determinate"` instead.');
        return null;
    })
};
exports.default = _withStylesDefault.default(styles, {
    name: 'MuiCircularProgress',
    flip: false
})(CircularProgress);

},{"@babel/runtime/helpers/esm/extends":"fTBFS","@babel/runtime/helpers/esm/objectWithoutProperties":"25tJ4","react":"21dqq","prop-types":"7wKI2","clsx":"83C22","@material-ui/utils":"54RkF","../styles/withStyles":"7U0iM","../utils/capitalize":"5AJVX","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"e5tZw":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>_clickAwayListenerDefault.default
);
var _clickAwayListener = require("./ClickAwayListener");
var _clickAwayListenerDefault = parcelHelpers.interopDefault(_clickAwayListener);

},{"./ClickAwayListener":"gsYZO","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"gsYZO":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _react = require("react");
var _reactDom = require("react-dom");
var _propTypes = require("prop-types");
var _propTypesDefault = parcelHelpers.interopDefault(_propTypes);
var _ownerDocument = require("../utils/ownerDocument");
var _ownerDocumentDefault = parcelHelpers.interopDefault(_ownerDocument);
var _useForkRef = require("../utils/useForkRef");
var _useForkRefDefault = parcelHelpers.interopDefault(_useForkRef);
var _useEventCallback = require("../utils/useEventCallback");
var _useEventCallbackDefault = parcelHelpers.interopDefault(_useEventCallback);
var _utils = require("@material-ui/utils");
function mapEventPropToEvent(eventProp) {
    return eventProp.substring(2).toLowerCase();
}
function clickedRootScrollbar(event) {
    return document.documentElement.clientWidth < event.clientX || document.documentElement.clientHeight < event.clientY;
}
/**
 * Listen for click events that occur somewhere in the document, outside of the element itself.
 * For instance, if you need to hide a menu when people click anywhere else on your page.
 */ function ClickAwayListener(props) {
    var children = props.children, _props$disableReactTr = props.disableReactTree, disableReactTree = _props$disableReactTr === void 0 ? false : _props$disableReactTr, _props$mouseEvent = props.mouseEvent, mouseEvent = _props$mouseEvent === void 0 ? 'onClick' : _props$mouseEvent, onClickAway = props.onClickAway, _props$touchEvent = props.touchEvent, touchEvent = _props$touchEvent === void 0 ? 'onTouchEnd' : _props$touchEvent;
    var movedRef = _react.useRef(false);
    var nodeRef = _react.useRef(null);
    var activatedRef = _react.useRef(false);
    var syntheticEventRef = _react.useRef(false);
    _react.useEffect(function() {
        // Ensure that this component is not "activated" synchronously.
        // https://github.com/facebook/react/issues/20074
        setTimeout(function() {
            activatedRef.current = true;
        }, 0);
        return function() {
            activatedRef.current = false;
        };
    }, []); // can be removed once we drop support for non ref forwarding class components
    var handleOwnRef = _react.useCallback(function(instance) {
        // #StrictMode ready
        nodeRef.current = _reactDom.findDOMNode(instance);
    }, []);
    var handleRef = _useForkRefDefault.default(children.ref, handleOwnRef); // The handler doesn't take event.defaultPrevented into account:
    //
    // event.preventDefault() is meant to stop default behaviours like
    // clicking a checkbox to check it, hitting a button to submit a form,
    // and hitting left arrow to move the cursor in a text input etc.
    // Only special HTML elements have these default behaviors.
    var handleClickAway = _useEventCallbackDefault.default(function(event) {
        // Given developers can stop the propagation of the synthetic event,
        // we can only be confident with a positive value.
        var insideReactTree = syntheticEventRef.current;
        syntheticEventRef.current = false; // 1. IE 11 support, which trigger the handleClickAway even after the unbind
        // 2. The child might render null.
        // 3. Behave like a blur listener.
        if (!activatedRef.current || !nodeRef.current || clickedRootScrollbar(event)) return;
         // Do not act if user performed touchmove
        if (movedRef.current) {
            movedRef.current = false;
            return;
        }
        var insideDOM; // If not enough, can use https://github.com/DieterHolvoet/event-propagation-path/blob/master/propagationPath.js
        if (event.composedPath) insideDOM = event.composedPath().indexOf(nodeRef.current) > -1;
        else {
            // TODO v6 remove dead logic https://caniuse.com/#search=composedPath.
            var doc = _ownerDocumentDefault.default(nodeRef.current);
            insideDOM = !doc.documentElement.contains(event.target) || nodeRef.current.contains(event.target);
        }
        if (!insideDOM && (disableReactTree || !insideReactTree)) onClickAway(event);
    }); // Keep track of mouse/touch events that bubbled up through the portal.
    var createHandleSynthetic = function createHandleSynthetic(handlerName) {
        return function(event) {
            syntheticEventRef.current = true;
            var childrenPropsHandler = children.props[handlerName];
            if (childrenPropsHandler) childrenPropsHandler(event);
        };
    };
    var childrenProps = {
        ref: handleRef
    };
    if (touchEvent !== false) childrenProps[touchEvent] = createHandleSynthetic(touchEvent);
    _react.useEffect(function() {
        if (touchEvent !== false) {
            var mappedTouchEvent = mapEventPropToEvent(touchEvent);
            var doc = _ownerDocumentDefault.default(nodeRef.current);
            var handleTouchMove = function handleTouchMove() {
                movedRef.current = true;
            };
            doc.addEventListener(mappedTouchEvent, handleClickAway);
            doc.addEventListener('touchmove', handleTouchMove);
            return function() {
                doc.removeEventListener(mappedTouchEvent, handleClickAway);
                doc.removeEventListener('touchmove', handleTouchMove);
            };
        }
        return undefined;
    }, [
        handleClickAway,
        touchEvent
    ]);
    if (mouseEvent !== false) childrenProps[mouseEvent] = createHandleSynthetic(mouseEvent);
    _react.useEffect(function() {
        if (mouseEvent !== false) {
            var mappedMouseEvent = mapEventPropToEvent(mouseEvent);
            var doc = _ownerDocumentDefault.default(nodeRef.current);
            doc.addEventListener(mappedMouseEvent, handleClickAway);
            return function() {
                doc.removeEventListener(mappedMouseEvent, handleClickAway);
            };
        }
        return undefined;
    }, [
        handleClickAway,
        mouseEvent
    ]);
    return /*#__PURE__*/ _react.createElement(_react.Fragment, null, /*#__PURE__*/ _react.cloneElement(children, childrenProps));
}
ClickAwayListener.propTypes = {
    // ----------------------------- Warning --------------------------------
    // | These PropTypes are generated from the TypeScript type definitions |
    // |     To update them edit the d.ts file and run "yarn proptypes"     |
    // ----------------------------------------------------------------------
    /**
   * The wrapped element.
   */ children: _utils.elementAcceptingRef.isRequired,
    /**
   * If `true`, the React tree is ignored and only the DOM tree is considered.
   * This prop changes how portaled elements are handled.
   */ disableReactTree: _propTypesDefault.default.bool,
    /**
   * The mouse event to listen to. You can disable the listener by providing `false`.
   */ mouseEvent: _propTypesDefault.default.oneOf([
        'onClick',
        'onMouseDown',
        'onMouseUp',
        false
    ]),
    /**
   * Callback fired when a "click away" event is detected.
   */ onClickAway: _propTypesDefault.default.func.isRequired,
    /**
   * The touch event to listen to. You can disable the listener by providing `false`.
   */ touchEvent: _propTypesDefault.default.oneOf([
        'onTouchEnd',
        'onTouchStart',
        false
    ])
};
// eslint-disable-next-line
ClickAwayListener["propTypes"] = _utils.exactProp(ClickAwayListener.propTypes);
exports.default = ClickAwayListener;

},{"react":"21dqq","react-dom":"j6uA9","prop-types":"7wKI2","../utils/ownerDocument":"lxJTm","../utils/useForkRef":"kUpGa","../utils/useEventCallback":"hPpih","@material-ui/utils":"54RkF","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"4oppE":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>_containerDefault.default
);
var _container = require("./Container");
var _containerDefault = parcelHelpers.interopDefault(_container);

},{"./Container":"5N8Ey","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"5N8Ey":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "styles", ()=>styles
);
var _extends = require("@babel/runtime/helpers/esm/extends");
var _extendsDefault = parcelHelpers.interopDefault(_extends);
var _objectWithoutProperties = require("@babel/runtime/helpers/esm/objectWithoutProperties");
var _objectWithoutPropertiesDefault = parcelHelpers.interopDefault(_objectWithoutProperties);
var _defineProperty = require("@babel/runtime/helpers/esm/defineProperty");
var _definePropertyDefault = parcelHelpers.interopDefault(_defineProperty);
var _react = require("react");
var _propTypes = require("prop-types");
var _propTypesDefault = parcelHelpers.interopDefault(_propTypes);
var _clsx = require("clsx");
var _clsxDefault = parcelHelpers.interopDefault(_clsx);
var _withStyles = require("../styles/withStyles");
var _withStylesDefault = parcelHelpers.interopDefault(_withStyles);
var _capitalize = require("../utils/capitalize");
var _capitalizeDefault = parcelHelpers.interopDefault(_capitalize);
var styles = function styles(theme) {
    return {
        /* Styles applied to the root element. */ root: _definePropertyDefault.default({
            width: '100%',
            marginLeft: 'auto',
            boxSizing: 'border-box',
            marginRight: 'auto',
            paddingLeft: theme.spacing(2),
            paddingRight: theme.spacing(2),
            display: 'block'
        }, theme.breakpoints.up('sm'), {
            paddingLeft: theme.spacing(3),
            paddingRight: theme.spacing(3)
        }),
        /* Styles applied to the root element if `disableGutters={true}`. */ disableGutters: {
            paddingLeft: 0,
            paddingRight: 0
        },
        /* Styles applied to the root element if `fixed={true}`. */ fixed: Object.keys(theme.breakpoints.values).reduce(function(acc, breakpoint) {
            var value = theme.breakpoints.values[breakpoint];
            if (value !== 0) acc[theme.breakpoints.up(breakpoint)] = {
                maxWidth: value
            };
            return acc;
        }, {}),
        /* Styles applied to the root element if `maxWidth="xs"`. */ maxWidthXs: _definePropertyDefault.default({}, theme.breakpoints.up('xs'), {
            maxWidth: Math.max(theme.breakpoints.values.xs, 444)
        }),
        /* Styles applied to the root element if `maxWidth="sm"`. */ maxWidthSm: _definePropertyDefault.default({}, theme.breakpoints.up('sm'), {
            maxWidth: theme.breakpoints.values.sm
        }),
        /* Styles applied to the root element if `maxWidth="md"`. */ maxWidthMd: _definePropertyDefault.default({}, theme.breakpoints.up('md'), {
            maxWidth: theme.breakpoints.values.md
        }),
        /* Styles applied to the root element if `maxWidth="lg"`. */ maxWidthLg: _definePropertyDefault.default({}, theme.breakpoints.up('lg'), {
            maxWidth: theme.breakpoints.values.lg
        }),
        /* Styles applied to the root element if `maxWidth="xl"`. */ maxWidthXl: _definePropertyDefault.default({}, theme.breakpoints.up('xl'), {
            maxWidth: theme.breakpoints.values.xl
        })
    };
};
var Container = /*#__PURE__*/ _react.forwardRef(function Container(props, ref) {
    var classes = props.classes, className = props.className, _props$component = props.component, Component = _props$component === void 0 ? 'div' : _props$component, _props$disableGutters = props.disableGutters, disableGutters = _props$disableGutters === void 0 ? false : _props$disableGutters, _props$fixed = props.fixed, fixed = _props$fixed === void 0 ? false : _props$fixed, _props$maxWidth = props.maxWidth, maxWidth = _props$maxWidth === void 0 ? 'lg' : _props$maxWidth, other = _objectWithoutPropertiesDefault.default(props, [
        "classes",
        "className",
        "component",
        "disableGutters",
        "fixed",
        "maxWidth"
    ]);
    return /*#__PURE__*/ _react.createElement(Component, _extendsDefault.default({
        className: _clsxDefault.default(classes.root, className, fixed && classes.fixed, disableGutters && classes.disableGutters, maxWidth !== false && classes["maxWidth".concat(_capitalizeDefault.default(String(maxWidth)))]),
        ref: ref
    }, other));
});
Container.propTypes = {
    // ----------------------------- Warning --------------------------------
    // | These PropTypes are generated from the TypeScript type definitions |
    // |     To update them edit the d.ts file and run "yarn proptypes"     |
    // ----------------------------------------------------------------------
    /**
   * @ignore
   */ children: _propTypesDefault.default/* @typescript-to-proptypes-ignore */ .node.isRequired,
    /**
   * Override or extend the styles applied to the component.
   * See [CSS API](#css) below for more details.
   */ classes: _propTypesDefault.default.object,
    /**
   * @ignore
   */ className: _propTypesDefault.default.string,
    /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */ component: _propTypesDefault.default/* @typescript-to-proptypes-ignore */ .elementType,
    /**
   * If `true`, the left and right padding is removed.
   */ disableGutters: _propTypesDefault.default.bool,
    /**
   * Set the max-width to match the min-width of the current breakpoint.
   * This is useful if you'd prefer to design for a fixed set of sizes
   * instead of trying to accommodate a fully fluid viewport.
   * It's fluid by default.
   */ fixed: _propTypesDefault.default.bool,
    /**
   * Determine the max-width of the container.
   * The container width grows with the size of the screen.
   * Set to `false` to disable `maxWidth`.
   */ maxWidth: _propTypesDefault.default.oneOf([
        'lg',
        'md',
        'sm',
        'xl',
        'xs',
        false
    ])
};
exports.default = _withStylesDefault.default(styles, {
    name: 'MuiContainer'
})(Container);

},{"@babel/runtime/helpers/esm/extends":"fTBFS","@babel/runtime/helpers/esm/objectWithoutProperties":"25tJ4","@babel/runtime/helpers/esm/defineProperty":"hbmCA","react":"21dqq","prop-types":"7wKI2","clsx":"83C22","../styles/withStyles":"7U0iM","../utils/capitalize":"5AJVX","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"kiVTX":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>_cssBaselineDefault.default
);
var _cssBaseline = require("./CssBaseline");
var _cssBaselineDefault = parcelHelpers.interopDefault(_cssBaseline);

},{"./CssBaseline":"klme6","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"klme6":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "html", ()=>html
);
parcelHelpers.export(exports, "body", ()=>body
);
parcelHelpers.export(exports, "styles", ()=>styles
);
var _extends = require("@babel/runtime/helpers/esm/extends");
var _extendsDefault = parcelHelpers.interopDefault(_extends);
var _react = require("react");
var _propTypes = require("prop-types");
var _propTypesDefault = parcelHelpers.interopDefault(_propTypes);
var _withStyles = require("../styles/withStyles");
var _withStylesDefault = parcelHelpers.interopDefault(_withStyles);
var _utils = require("@material-ui/utils");
var html = {
    WebkitFontSmoothing: 'antialiased',
    // Antialiasing.
    MozOsxFontSmoothing: 'grayscale',
    // Antialiasing.
    // Change from `box-sizing: content-box` so that `width`
    // is not affected by `padding` or `border`.
    boxSizing: 'border-box'
};
var body = function body(theme) {
    return _extendsDefault.default({
        color: theme.palette.text.primary
    }, theme.typography.body2, {
        backgroundColor: theme.palette.background.default,
        '@media print': {
            // Save printer ink.
            backgroundColor: theme.palette.common.white
        }
    });
};
var styles = function styles(theme) {
    return {
        '@global': {
            html: html,
            '*, *::before, *::after': {
                boxSizing: 'inherit'
            },
            'strong, b': {
                fontWeight: theme.typography.fontWeightBold
            },
            body: _extendsDefault.default({
                margin: 0
            }, body(theme), {
                // Add support for document.body.requestFullScreen().
                // Other elements, if background transparent, are not supported.
                '&::backdrop': {
                    backgroundColor: theme.palette.background.default
                }
            })
        }
    };
};
/**
 * Kickstart an elegant, consistent, and simple baseline to build upon.
 */ function CssBaseline(props) {
    /* eslint-disable no-unused-vars */ var _props$children = props.children, children = _props$children === void 0 ? null : _props$children, classes = props.classes;
    /* eslint-enable no-unused-vars */ return /*#__PURE__*/ _react.createElement(_react.Fragment, null, children);
}
CssBaseline.propTypes = {
    // ----------------------------- Warning --------------------------------
    // | These PropTypes are generated from the TypeScript type definitions |
    // |     To update them edit the d.ts file and run "yarn proptypes"     |
    // ----------------------------------------------------------------------
    /**
   * You can wrap a node.
   */ children: _propTypesDefault.default.node,
    /**
   * Override or extend the styles applied to the component.
   * See [CSS API](#css) below for more details.
   */ classes: _propTypesDefault.default.object
};
// eslint-disable-next-line
CssBaseline["propTypes"] = _utils.exactProp(CssBaseline.propTypes);
exports.default = _withStylesDefault.default(styles, {
    name: 'MuiCssBaseline'
})(CssBaseline);

},{"@babel/runtime/helpers/esm/extends":"fTBFS","react":"21dqq","prop-types":"7wKI2","../styles/withStyles":"7U0iM","@material-ui/utils":"54RkF","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"eyV8v":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>_dialogDefault.default
);
var _dialog = require("./Dialog");
var _dialogDefault = parcelHelpers.interopDefault(_dialog);

},{"./Dialog":"2mtSg","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"2mtSg":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "styles", ()=>styles
);
var _extends = require("@babel/runtime/helpers/esm/extends");
var _extendsDefault = parcelHelpers.interopDefault(_extends);
var _objectWithoutProperties = require("@babel/runtime/helpers/esm/objectWithoutProperties");
var _objectWithoutPropertiesDefault = parcelHelpers.interopDefault(_objectWithoutProperties);
var _defineProperty = require("@babel/runtime/helpers/esm/defineProperty");
var _definePropertyDefault = parcelHelpers.interopDefault(_defineProperty);
var _react = require("react");
var _propTypes = require("prop-types");
var _propTypesDefault = parcelHelpers.interopDefault(_propTypes);
var _clsx = require("clsx");
var _clsxDefault = parcelHelpers.interopDefault(_clsx);
var _withStyles = require("../styles/withStyles");
var _withStylesDefault = parcelHelpers.interopDefault(_withStyles);
var _capitalize = require("../utils/capitalize");
var _capitalizeDefault = parcelHelpers.interopDefault(_capitalize);
var _deprecatedPropType = require("../utils/deprecatedPropType");
var _deprecatedPropTypeDefault = parcelHelpers.interopDefault(_deprecatedPropType);
var _modal = require("../Modal");
var _modalDefault = parcelHelpers.interopDefault(_modal);
var _backdrop = require("../Backdrop");
var _backdropDefault = parcelHelpers.interopDefault(_backdrop);
var _fade = require("../Fade");
var _fadeDefault = parcelHelpers.interopDefault(_fade);
var _transitions = require("../styles/transitions");
var _paper = require("../Paper");
var _paperDefault = parcelHelpers.interopDefault(_paper);
var styles = function styles(theme) {
    return {
        /* Styles applied to the root element. */ root: {
            '@media print': {
                // Use !important to override the Modal inline-style.
                position: 'absolute !important'
            }
        },
        /* Styles applied to the container element if `scroll="paper"`. */ scrollPaper: {
            display: 'flex',
            justifyContent: 'center',
            alignItems: 'center'
        },
        /* Styles applied to the container element if `scroll="body"`. */ scrollBody: {
            overflowY: 'auto',
            overflowX: 'hidden',
            textAlign: 'center',
            '&:after': {
                content: '""',
                display: 'inline-block',
                verticalAlign: 'middle',
                height: '100%',
                width: '0'
            }
        },
        /* Styles applied to the container element. */ container: {
            height: '100%',
            '@media print': {
                height: 'auto'
            },
            // We disable the focus ring for mouse, touch and keyboard users.
            outline: 0
        },
        /* Styles applied to the `Paper` component. */ paper: {
            margin: 32,
            position: 'relative',
            overflowY: 'auto',
            // Fix IE 11 issue, to remove at some point.
            '@media print': {
                overflowY: 'visible',
                boxShadow: 'none'
            }
        },
        /* Styles applied to the `Paper` component if `scroll="paper"`. */ paperScrollPaper: {
            display: 'flex',
            flexDirection: 'column',
            maxHeight: 'calc(100% - 64px)'
        },
        /* Styles applied to the `Paper` component if `scroll="body"`. */ paperScrollBody: {
            display: 'inline-block',
            verticalAlign: 'middle',
            textAlign: 'left' // 'initial' doesn't work on IE 11
        },
        /* Styles applied to the `Paper` component if `maxWidth=false`. */ paperWidthFalse: {
            maxWidth: 'calc(100% - 64px)'
        },
        /* Styles applied to the `Paper` component if `maxWidth="xs"`. */ paperWidthXs: {
            maxWidth: Math.max(theme.breakpoints.values.xs, 444),
            '&$paperScrollBody': _definePropertyDefault.default({}, theme.breakpoints.down(Math.max(theme.breakpoints.values.xs, 444) + 64), {
                maxWidth: 'calc(100% - 64px)'
            })
        },
        /* Styles applied to the `Paper` component if `maxWidth="sm"`. */ paperWidthSm: {
            maxWidth: theme.breakpoints.values.sm,
            '&$paperScrollBody': _definePropertyDefault.default({}, theme.breakpoints.down(theme.breakpoints.values.sm + 64), {
                maxWidth: 'calc(100% - 64px)'
            })
        },
        /* Styles applied to the `Paper` component if `maxWidth="md"`. */ paperWidthMd: {
            maxWidth: theme.breakpoints.values.md,
            '&$paperScrollBody': _definePropertyDefault.default({}, theme.breakpoints.down(theme.breakpoints.values.md + 64), {
                maxWidth: 'calc(100% - 64px)'
            })
        },
        /* Styles applied to the `Paper` component if `maxWidth="lg"`. */ paperWidthLg: {
            maxWidth: theme.breakpoints.values.lg,
            '&$paperScrollBody': _definePropertyDefault.default({}, theme.breakpoints.down(theme.breakpoints.values.lg + 64), {
                maxWidth: 'calc(100% - 64px)'
            })
        },
        /* Styles applied to the `Paper` component if `maxWidth="xl"`. */ paperWidthXl: {
            maxWidth: theme.breakpoints.values.xl,
            '&$paperScrollBody': _definePropertyDefault.default({}, theme.breakpoints.down(theme.breakpoints.values.xl + 64), {
                maxWidth: 'calc(100% - 64px)'
            })
        },
        /* Styles applied to the `Paper` component if `fullWidth={true}`. */ paperFullWidth: {
            width: 'calc(100% - 64px)'
        },
        /* Styles applied to the `Paper` component if `fullScreen={true}`. */ paperFullScreen: {
            margin: 0,
            width: '100%',
            maxWidth: '100%',
            height: '100%',
            maxHeight: 'none',
            borderRadius: 0,
            '&$paperScrollBody': {
                margin: 0,
                maxWidth: '100%'
            }
        }
    };
};
var defaultTransitionDuration = {
    enter: _transitions.duration.enteringScreen,
    exit: _transitions.duration.leavingScreen
};
/**
 * Dialogs are overlaid modal paper based components with a backdrop.
 */ var Dialog = /*#__PURE__*/ _react.forwardRef(function Dialog(props, ref) {
    var BackdropProps = props.BackdropProps, children = props.children, classes = props.classes, className = props.className, _props$disableBackdro = props.disableBackdropClick, disableBackdropClick = _props$disableBackdro === void 0 ? false : _props$disableBackdro, _props$disableEscapeK = props.disableEscapeKeyDown, disableEscapeKeyDown = _props$disableEscapeK === void 0 ? false : _props$disableEscapeK, _props$fullScreen = props.fullScreen, fullScreen = _props$fullScreen === void 0 ? false : _props$fullScreen, _props$fullWidth = props.fullWidth, fullWidth = _props$fullWidth === void 0 ? false : _props$fullWidth, _props$maxWidth = props.maxWidth, maxWidth = _props$maxWidth === void 0 ? 'sm' : _props$maxWidth, onBackdropClick = props.onBackdropClick, onClose = props.onClose, onEnter = props.onEnter, onEntered = props.onEntered, onEntering = props.onEntering, onEscapeKeyDown = props.onEscapeKeyDown, onExit = props.onExit, onExited = props.onExited, onExiting = props.onExiting, open = props.open, _props$PaperComponent = props.PaperComponent, PaperComponent = _props$PaperComponent === void 0 ? _paperDefault.default : _props$PaperComponent, _props$PaperProps = props.PaperProps, PaperProps = _props$PaperProps === void 0 ? {} : _props$PaperProps, _props$scroll = props.scroll, scroll = _props$scroll === void 0 ? 'paper' : _props$scroll, _props$TransitionComp = props.TransitionComponent, TransitionComponent = _props$TransitionComp === void 0 ? _fadeDefault.default : _props$TransitionComp, _props$transitionDura = props.transitionDuration, transitionDuration = _props$transitionDura === void 0 ? defaultTransitionDuration : _props$transitionDura, TransitionProps = props.TransitionProps, ariaDescribedby = props['aria-describedby'], ariaLabelledby = props['aria-labelledby'], other = _objectWithoutPropertiesDefault.default(props, [
        "BackdropProps",
        "children",
        "classes",
        "className",
        "disableBackdropClick",
        "disableEscapeKeyDown",
        "fullScreen",
        "fullWidth",
        "maxWidth",
        "onBackdropClick",
        "onClose",
        "onEnter",
        "onEntered",
        "onEntering",
        "onEscapeKeyDown",
        "onExit",
        "onExited",
        "onExiting",
        "open",
        "PaperComponent",
        "PaperProps",
        "scroll",
        "TransitionComponent",
        "transitionDuration",
        "TransitionProps",
        "aria-describedby",
        "aria-labelledby"
    ]);
    var mouseDownTarget = _react.useRef();
    var handleMouseDown = function handleMouseDown(event) {
        mouseDownTarget.current = event.target;
    };
    var handleBackdropClick = function handleBackdropClick(event) {
        // Ignore the events not coming from the "backdrop"
        // We don't want to close the dialog when clicking the dialog content.
        if (event.target !== event.currentTarget) return;
         // Make sure the event starts and ends on the same DOM element.
        if (event.target !== mouseDownTarget.current) return;
        mouseDownTarget.current = null;
        if (onBackdropClick) onBackdropClick(event);
        if (!disableBackdropClick && onClose) onClose(event, 'backdropClick');
    };
    return /*#__PURE__*/ _react.createElement(_modalDefault.default, _extendsDefault.default({
        className: _clsxDefault.default(classes.root, className),
        BackdropComponent: _backdropDefault.default,
        BackdropProps: _extendsDefault.default({
            transitionDuration: transitionDuration
        }, BackdropProps),
        closeAfterTransition: true
    }, disableBackdropClick ? {
        disableBackdropClick: disableBackdropClick
    } : {}, {
        disableEscapeKeyDown: disableEscapeKeyDown,
        onEscapeKeyDown: onEscapeKeyDown,
        onClose: onClose,
        open: open,
        ref: ref
    }, other), /*#__PURE__*/ _react.createElement(TransitionComponent, _extendsDefault.default({
        appear: true,
        in: open,
        timeout: transitionDuration,
        onEnter: onEnter,
        onEntering: onEntering,
        onEntered: onEntered,
        onExit: onExit,
        onExiting: onExiting,
        onExited: onExited,
        role: "none presentation"
    }, TransitionProps), /*#__PURE__*/ _react.createElement("div", {
        className: _clsxDefault.default(classes.container, classes["scroll".concat(_capitalizeDefault.default(scroll))]),
        onMouseUp: handleBackdropClick,
        onMouseDown: handleMouseDown
    }, /*#__PURE__*/ _react.createElement(PaperComponent, _extendsDefault.default({
        elevation: 24,
        role: "dialog",
        "aria-describedby": ariaDescribedby,
        "aria-labelledby": ariaLabelledby
    }, PaperProps, {
        className: _clsxDefault.default(classes.paper, classes["paperScroll".concat(_capitalizeDefault.default(scroll))], classes["paperWidth".concat(_capitalizeDefault.default(String(maxWidth)))], PaperProps.className, fullScreen && classes.paperFullScreen, fullWidth && classes.paperFullWidth)
    }), children))));
});
Dialog.propTypes = {
    // ----------------------------- Warning --------------------------------
    // | These PropTypes are generated from the TypeScript type definitions |
    // |     To update them edit the d.ts file and run "yarn proptypes"     |
    // ----------------------------------------------------------------------
    /**
   * The id(s) of the element(s) that describe the dialog.
   */ 'aria-describedby': _propTypesDefault.default.string,
    /**
   * The id(s) of the element(s) that label the dialog.
   */ 'aria-labelledby': _propTypesDefault.default.string,
    /**
   * @ignore
   */ BackdropProps: _propTypesDefault.default.object,
    /**
   * Dialog children, usually the included sub-components.
   */ children: _propTypesDefault.default.node,
    /**
   * Override or extend the styles applied to the component.
   * See [CSS API](#css) below for more details.
   */ classes: _propTypesDefault.default.object,
    /**
   * @ignore
   */ className: _propTypesDefault.default.string,
    /**
   * If `true`, clicking the backdrop will not fire the `onClose` callback.
   * @deprecated Use the onClose prop with the `reason` argument to filter the `backdropClick` events.
   */ disableBackdropClick: _deprecatedPropTypeDefault.default(_propTypesDefault.default.bool, 'Use the onClose prop with the `reason` argument to filter the `backdropClick` events.'),
    /**
   * If `true`, hitting escape will not fire the `onClose` callback.
   */ disableEscapeKeyDown: _propTypesDefault.default.bool,
    /**
   * If `true`, the dialog will be full-screen
   */ fullScreen: _propTypesDefault.default.bool,
    /**
   * If `true`, the dialog stretches to `maxWidth`.
   *
   * Notice that the dialog width grow is limited by the default margin.
   */ fullWidth: _propTypesDefault.default.bool,
    /**
   * Determine the max-width of the dialog.
   * The dialog width grows with the size of the screen.
   * Set to `false` to disable `maxWidth`.
   */ maxWidth: _propTypesDefault.default.oneOf([
        'lg',
        'md',
        'sm',
        'xl',
        'xs',
        false
    ]),
    /**
   * Callback fired when the backdrop is clicked.
   * @deprecated Use the onClose prop with the `reason` argument to handle the `backdropClick` events.
   */ onBackdropClick: _deprecatedPropTypeDefault.default(_propTypesDefault.default.func, 'Use the onClose prop with the `reason` argument to handle the `backdropClick` events.'),
    /**
   * Callback fired when the component requests to be closed.
   *
   * @param {object} event The event source of the callback.
   * @param {string} reason Can be: `"escapeKeyDown"`, `"backdropClick"`.
   */ onClose: _propTypesDefault.default.func,
    /**
   * Callback fired before the dialog enters.
   * @deprecated Use the `TransitionProps` prop instead.
   */ onEnter: _deprecatedPropTypeDefault.default(_propTypesDefault.default.func, 'Use the `TransitionProps` prop instead.'),
    /**
   * Callback fired when the dialog has entered.
   * @deprecated Use the `TransitionProps` prop instead.
   */ onEntered: _deprecatedPropTypeDefault.default(_propTypesDefault.default.func, 'Use the `TransitionProps` prop instead.'),
    /**
   * Callback fired when the dialog is entering.
   * @deprecated Use the `TransitionProps` prop instead.
   */ onEntering: _deprecatedPropTypeDefault.default(_propTypesDefault.default.func, 'Use the `TransitionProps` prop instead.'),
    /**
   * Callback fired when the escape key is pressed,
   * `disableKeyboard` is false and the modal is in focus.
   * @deprecated Use the onClose prop with the `reason` argument to handle the `escapeKeyDown` events.
   */ onEscapeKeyDown: _deprecatedPropTypeDefault.default(_propTypesDefault.default.func, 'Use the onClose prop with the `reason` argument to handle the `escapeKeyDown` events.'),
    /**
   * Callback fired before the dialog exits.
   * @deprecated Use the `TransitionProps` prop instead.
   */ onExit: _deprecatedPropTypeDefault.default(_propTypesDefault.default.func, 'Use the `TransitionProps` prop instead.'),
    /**
   * Callback fired when the dialog has exited.
   * @deprecated Use the `TransitionProps` prop instead.
   */ onExited: _deprecatedPropTypeDefault.default(_propTypesDefault.default.func, 'Use the `TransitionProps` prop instead.'),
    /**
   * Callback fired when the dialog is exiting.
   * @deprecated Use the `TransitionProps` prop instead.
   */ onExiting: _deprecatedPropTypeDefault.default(_propTypesDefault.default.func, 'Use the `TransitionProps` prop instead.'),
    /**
   * If `true`, the Dialog is open.
   */ open: _propTypesDefault.default.bool.isRequired,
    /**
   * The component used to render the body of the dialog.
   */ PaperComponent: _propTypesDefault.default.elementType,
    /**
   * Props applied to the [`Paper`](/api/paper/) element.
   */ PaperProps: _propTypesDefault.default.object,
    /**
   * Determine the container for scrolling the dialog.
   */ scroll: _propTypesDefault.default.oneOf([
        'body',
        'paper'
    ]),
    /**
   * The component used for the transition.
   * [Follow this guide](/components/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.
   */ TransitionComponent: _propTypesDefault.default.elementType,
    /**
   * The duration for the transition, in milliseconds.
   * You may specify a single timeout for all transitions, or individually with an object.
   */ transitionDuration: _propTypesDefault.default.oneOfType([
        _propTypesDefault.default.number,
        _propTypesDefault.default.shape({
            appear: _propTypesDefault.default.number,
            enter: _propTypesDefault.default.number,
            exit: _propTypesDefault.default.number
        })
    ]),
    /**
   * Props applied to the [`Transition`](http://reactcommunity.org/react-transition-group/transition#Transition-props) element.
   */ TransitionProps: _propTypesDefault.default.object
};
exports.default = _withStylesDefault.default(styles, {
    name: 'MuiDialog'
})(Dialog);

},{"@babel/runtime/helpers/esm/extends":"fTBFS","@babel/runtime/helpers/esm/objectWithoutProperties":"25tJ4","@babel/runtime/helpers/esm/defineProperty":"hbmCA","react":"21dqq","prop-types":"7wKI2","clsx":"83C22","../styles/withStyles":"7U0iM","../utils/capitalize":"5AJVX","../utils/deprecatedPropType":"loRgF","../Modal":"eA3TP","../Backdrop":"2ZW6c","../Fade":"5PAzJ","../styles/transitions":"c5294","../Paper":"j0s2L","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"eA3TP":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>_modalDefault.default
);
parcelHelpers.export(exports, "ModalManager", ()=>_modalManagerDefault.default
);
var _modal = require("./Modal");
var _modalDefault = parcelHelpers.interopDefault(_modal);
var _modalManager = require("./ModalManager");
var _modalManagerDefault = parcelHelpers.interopDefault(_modalManager);

},{"./Modal":"icZ9T","./ModalManager":"g7KfJ","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"icZ9T":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "styles", ()=>styles
);
var _objectWithoutProperties = require("@babel/runtime/helpers/esm/objectWithoutProperties");
var _objectWithoutPropertiesDefault = parcelHelpers.interopDefault(_objectWithoutProperties);
var _extends = require("@babel/runtime/helpers/esm/extends");
var _extendsDefault = parcelHelpers.interopDefault(_extends);
var _react = require("react");
var _reactDom = require("react-dom");
var _propTypes = require("prop-types");
var _propTypesDefault = parcelHelpers.interopDefault(_propTypes);
var _styles = require("@material-ui/styles");
var _utils = require("@material-ui/utils");
var _deprecatedPropType = require("../utils/deprecatedPropType");
var _deprecatedPropTypeDefault = parcelHelpers.interopDefault(_deprecatedPropType);
var _ownerDocument = require("../utils/ownerDocument");
var _ownerDocumentDefault = parcelHelpers.interopDefault(_ownerDocument);
var _portal = require("../Portal");
var _portalDefault = parcelHelpers.interopDefault(_portal);
var _createChainedFunction = require("../utils/createChainedFunction");
var _createChainedFunctionDefault = parcelHelpers.interopDefault(_createChainedFunction);
var _useForkRef = require("../utils/useForkRef");
var _useForkRefDefault = parcelHelpers.interopDefault(_useForkRef);
var _useEventCallback = require("../utils/useEventCallback");
var _useEventCallbackDefault = parcelHelpers.interopDefault(_useEventCallback);
var _zIndex = require("../styles/zIndex");
var _zIndexDefault = parcelHelpers.interopDefault(_zIndex);
var _modalManager = require("./ModalManager");
var _modalManagerDefault = parcelHelpers.interopDefault(_modalManager);
var _unstableTrapFocus = require("../Unstable_TrapFocus");
var _unstableTrapFocusDefault = parcelHelpers.interopDefault(_unstableTrapFocus);
var _simpleBackdrop = require("./SimpleBackdrop");
var _simpleBackdropDefault = parcelHelpers.interopDefault(_simpleBackdrop);
function getContainer(container) {
    container = typeof container === 'function' ? container() : container;
    return _reactDom.findDOMNode(container);
}
function getHasTransition(props) {
    return props.children ? props.children.props.hasOwnProperty('in') : false;
} // A modal manager used to track and manage the state of open Modals.
// Modals don't open on the server so this won't conflict with concurrent requests.
var defaultManager = new _modalManagerDefault.default();
var styles = function styles(theme) {
    return {
        /* Styles applied to the root element. */ root: {
            position: 'fixed',
            zIndex: theme.zIndex.modal,
            right: 0,
            bottom: 0,
            top: 0,
            left: 0
        },
        /* Styles applied to the root element if the `Modal` has exited. */ hidden: {
            visibility: 'hidden'
        }
    };
};
/**
 * Modal is a lower-level construct that is leveraged by the following components:
 *
 * - [Dialog](/api/dialog/)
 * - [Drawer](/api/drawer/)
 * - [Menu](/api/menu/)
 * - [Popover](/api/popover/)
 *
 * If you are creating a modal dialog, you probably want to use the [Dialog](/api/dialog/) component
 * rather than directly using Modal.
 *
 * This component shares many concepts with [react-overlays](https://react-bootstrap.github.io/react-overlays/#modals).
 */ var Modal = /*#__PURE__*/ _react.forwardRef(function Modal(inProps, ref) {
    var theme = _styles.useTheme();
    var props = _styles.getThemeProps({
        name: 'MuiModal',
        props: _extendsDefault.default({}, inProps),
        theme: theme
    });
    var _props$BackdropCompon = props.BackdropComponent, BackdropComponent = _props$BackdropCompon === void 0 ? _simpleBackdropDefault.default : _props$BackdropCompon, BackdropProps = props.BackdropProps, children = props.children, _props$closeAfterTran = props.closeAfterTransition, closeAfterTransition = _props$closeAfterTran === void 0 ? false : _props$closeAfterTran, container = props.container, _props$disableAutoFoc = props.disableAutoFocus, disableAutoFocus = _props$disableAutoFoc === void 0 ? false : _props$disableAutoFoc, _props$disableBackdro = props.disableBackdropClick, disableBackdropClick = _props$disableBackdro === void 0 ? false : _props$disableBackdro, _props$disableEnforce = props.disableEnforceFocus, disableEnforceFocus = _props$disableEnforce === void 0 ? false : _props$disableEnforce, _props$disableEscapeK = props.disableEscapeKeyDown, disableEscapeKeyDown = _props$disableEscapeK === void 0 ? false : _props$disableEscapeK, _props$disablePortal = props.disablePortal, disablePortal = _props$disablePortal === void 0 ? false : _props$disablePortal, _props$disableRestore = props.disableRestoreFocus, disableRestoreFocus = _props$disableRestore === void 0 ? false : _props$disableRestore, _props$disableScrollL = props.disableScrollLock, disableScrollLock = _props$disableScrollL === void 0 ? false : _props$disableScrollL, _props$hideBackdrop = props.hideBackdrop, hideBackdrop = _props$hideBackdrop === void 0 ? false : _props$hideBackdrop, _props$keepMounted = props.keepMounted, keepMounted = _props$keepMounted === void 0 ? false : _props$keepMounted, _props$manager = props.manager, manager = _props$manager === void 0 ? defaultManager : _props$manager, onBackdropClick = props.onBackdropClick, onClose = props.onClose, onEscapeKeyDown = props.onEscapeKeyDown, onRendered = props.onRendered, open = props.open, other = _objectWithoutPropertiesDefault.default(props, [
        "BackdropComponent",
        "BackdropProps",
        "children",
        "closeAfterTransition",
        "container",
        "disableAutoFocus",
        "disableBackdropClick",
        "disableEnforceFocus",
        "disableEscapeKeyDown",
        "disablePortal",
        "disableRestoreFocus",
        "disableScrollLock",
        "hideBackdrop",
        "keepMounted",
        "manager",
        "onBackdropClick",
        "onClose",
        "onEscapeKeyDown",
        "onRendered",
        "open"
    ]);
    var _React$useState = _react.useState(true), exited = _React$useState[0], setExited = _React$useState[1];
    var modal = _react.useRef({});
    var mountNodeRef = _react.useRef(null);
    var modalRef = _react.useRef(null);
    var handleRef = _useForkRefDefault.default(modalRef, ref);
    var hasTransition = getHasTransition(props);
    var getDoc = function getDoc() {
        return _ownerDocumentDefault.default(mountNodeRef.current);
    };
    var getModal = function getModal() {
        modal.current.modalRef = modalRef.current;
        modal.current.mountNode = mountNodeRef.current;
        return modal.current;
    };
    var handleMounted = function handleMounted() {
        manager.mount(getModal(), {
            disableScrollLock: disableScrollLock
        }); // Fix a bug on Chrome where the scroll isn't initially 0.
        modalRef.current.scrollTop = 0;
    };
    var handleOpen = _useEventCallbackDefault.default(function() {
        var resolvedContainer = getContainer(container) || getDoc().body;
        manager.add(getModal(), resolvedContainer); // The element was already mounted.
        if (modalRef.current) handleMounted();
    });
    var isTopModal = _react.useCallback(function() {
        return manager.isTopModal(getModal());
    }, [
        manager
    ]);
    var handlePortalRef = _useEventCallbackDefault.default(function(node) {
        mountNodeRef.current = node;
        if (!node) return;
        if (onRendered) onRendered();
        if (open && isTopModal()) handleMounted();
        else _modalManager.ariaHidden(modalRef.current, true);
    });
    var handleClose = _react.useCallback(function() {
        manager.remove(getModal());
    }, [
        manager
    ]);
    _react.useEffect(function() {
        return function() {
            handleClose();
        };
    }, [
        handleClose
    ]);
    _react.useEffect(function() {
        if (open) handleOpen();
        else if (!hasTransition || !closeAfterTransition) handleClose();
    }, [
        open,
        handleClose,
        hasTransition,
        closeAfterTransition,
        handleOpen
    ]);
    if (!keepMounted && !open && (!hasTransition || exited)) return null;
    var handleEnter = function handleEnter() {
        setExited(false);
    };
    var handleExited = function handleExited() {
        setExited(true);
        if (closeAfterTransition) handleClose();
    };
    var handleBackdropClick = function handleBackdropClick(event) {
        if (event.target !== event.currentTarget) return;
        if (onBackdropClick) onBackdropClick(event);
        if (!disableBackdropClick && onClose) onClose(event, 'backdropClick');
    };
    var handleKeyDown = function handleKeyDown(event) {
        // The handler doesn't take event.defaultPrevented into account:
        //
        // event.preventDefault() is meant to stop default behaviours like
        // clicking a checkbox to check it, hitting a button to submit a form,
        // and hitting left arrow to move the cursor in a text input etc.
        // Only special HTML elements have these default behaviors.
        if (event.key !== 'Escape' || !isTopModal()) return;
        if (onEscapeKeyDown) onEscapeKeyDown(event);
        if (!disableEscapeKeyDown) {
            // Swallow the event, in case someone is listening for the escape key on the body.
            event.stopPropagation();
            if (onClose) onClose(event, 'escapeKeyDown');
        }
    };
    var inlineStyle = styles(theme || {
        zIndex: _zIndexDefault.default
    });
    var childProps = {};
    if (children.props.tabIndex === undefined) childProps.tabIndex = children.props.tabIndex || '-1';
     // It's a Transition like component
    if (hasTransition) {
        childProps.onEnter = _createChainedFunctionDefault.default(handleEnter, children.props.onEnter);
        childProps.onExited = _createChainedFunctionDefault.default(handleExited, children.props.onExited);
    }
    return /*#__PURE__*/ _react.createElement(_portalDefault.default, {
        ref: handlePortalRef,
        container: container,
        disablePortal: disablePortal
    }, /*#__PURE__*/ _react.createElement("div", _extendsDefault.default({
        ref: handleRef,
        onKeyDown: handleKeyDown,
        role: "presentation"
    }, other, {
        style: _extendsDefault.default({}, inlineStyle.root, !open && exited ? inlineStyle.hidden : {}, other.style)
    }), hideBackdrop ? null : /*#__PURE__*/ _react.createElement(BackdropComponent, _extendsDefault.default({
        open: open,
        onClick: handleBackdropClick
    }, BackdropProps)), /*#__PURE__*/ _react.createElement(_unstableTrapFocusDefault.default, {
        disableEnforceFocus: disableEnforceFocus,
        disableAutoFocus: disableAutoFocus,
        disableRestoreFocus: disableRestoreFocus,
        getDoc: getDoc,
        isEnabled: isTopModal,
        open: open
    }, /*#__PURE__*/ _react.cloneElement(children, childProps))));
});
Modal.propTypes = {
    /**
   * A backdrop component. This prop enables custom backdrop rendering.
   */ BackdropComponent: _propTypesDefault.default.elementType,
    /**
   * Props applied to the [`Backdrop`](/api/backdrop/) element.
   */ BackdropProps: _propTypesDefault.default.object,
    /**
   * A single child content element.
   */ children: _utils.elementAcceptingRef.isRequired,
    /**
   * When set to true the Modal waits until a nested Transition is completed before closing.
   */ closeAfterTransition: _propTypesDefault.default.bool,
    /**
   * A HTML element, component instance, or function that returns either.
   * The `container` will have the portal children appended to it.
   *
   * By default, it uses the body of the top-level document object,
   * so it's simply `document.body` most of the time.
   */ container: _propTypesDefault.default/* @typescript-to-proptypes-ignore */ .oneOfType([
        _utils.HTMLElementType,
        _propTypesDefault.default.instanceOf(_react.Component),
        _propTypesDefault.default.func
    ]),
    /**
   * If `true`, the modal will not automatically shift focus to itself when it opens, and
   * replace it to the last focused element when it closes.
   * This also works correctly with any modal children that have the `disableAutoFocus` prop.
   *
   * Generally this should never be set to `true` as it makes the modal less
   * accessible to assistive technologies, like screen readers.
   */ disableAutoFocus: _propTypesDefault.default.bool,
    /**
   * If `true`, clicking the backdrop will not fire `onClose`.
   */ disableBackdropClick: _deprecatedPropTypeDefault.default(_propTypesDefault.default.bool, 'Use the onClose prop with the `reason` argument to filter the `backdropClick` events.'),
    /**
   * If `true`, the modal will not prevent focus from leaving the modal while open.
   *
   * Generally this should never be set to `true` as it makes the modal less
   * accessible to assistive technologies, like screen readers.
   */ disableEnforceFocus: _propTypesDefault.default.bool,
    /**
   * If `true`, hitting escape will not fire `onClose`.
   */ disableEscapeKeyDown: _propTypesDefault.default.bool,
    /**
   * Disable the portal behavior.
   * The children stay within it's parent DOM hierarchy.
   */ disablePortal: _propTypesDefault.default.bool,
    /**
   * If `true`, the modal will not restore focus to previously focused element once
   * modal is hidden.
   */ disableRestoreFocus: _propTypesDefault.default.bool,
    /**
   * Disable the scroll lock behavior.
   */ disableScrollLock: _propTypesDefault.default.bool,
    /**
   * If `true`, the backdrop is not rendered.
   */ hideBackdrop: _propTypesDefault.default.bool,
    /**
   * Always keep the children in the DOM.
   * This prop can be useful in SEO situation or
   * when you want to maximize the responsiveness of the Modal.
   */ keepMounted: _propTypesDefault.default.bool,
    /**
   * @ignore
   */ manager: _propTypesDefault.default.object,
    /**
   * Callback fired when the backdrop is clicked.
   */ onBackdropClick: _deprecatedPropTypeDefault.default(_propTypesDefault.default.func, 'Use the onClose prop with the `reason` argument to handle the `backdropClick` events.'),
    /**
   * Callback fired when the component requests to be closed.
   * The `reason` parameter can optionally be used to control the response to `onClose`.
   *
   * @param {object} event The event source of the callback.
   * @param {string} reason Can be: `"escapeKeyDown"`, `"backdropClick"`.
   */ onClose: _propTypesDefault.default.func,
    /**
   * Callback fired when the escape key is pressed,
   * `disableEscapeKeyDown` is false and the modal is in focus.
   */ onEscapeKeyDown: _deprecatedPropTypeDefault.default(_propTypesDefault.default.func, 'Use the onClose prop with the `reason` argument to handle the `escapeKeyDown` events.'),
    /**
   * Callback fired once the children has been mounted into the `container`.
   * It signals that the `open={true}` prop took effect.
   *
   * This prop will be removed in v5, the ref can be used instead.
   */ onRendered: _deprecatedPropTypeDefault.default(_propTypesDefault.default.func, 'Use the ref instead.'),
    /**
   * If `true`, the modal is open.
   */ open: _propTypesDefault.default.bool.isRequired
};
exports.default = Modal;

},{"@babel/runtime/helpers/esm/objectWithoutProperties":"25tJ4","@babel/runtime/helpers/esm/extends":"fTBFS","react":"21dqq","react-dom":"j6uA9","prop-types":"7wKI2","@material-ui/styles":"1TOv0","@material-ui/utils":"54RkF","../utils/deprecatedPropType":"loRgF","../utils/ownerDocument":"lxJTm","../Portal":"dBY21","../utils/createChainedFunction":"BNP7Q","../utils/useForkRef":"kUpGa","../utils/useEventCallback":"hPpih","../styles/zIndex":"3zosT","./ModalManager":"g7KfJ","../Unstable_TrapFocus":"7SUJW","./SimpleBackdrop":"5ckZe","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"dBY21":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>_portalDefault.default
);
var _portal = require("./Portal");
var _portalDefault = parcelHelpers.interopDefault(_portal);

},{"./Portal":"2QLd4","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"2QLd4":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _react = require("react");
var _reactDom = require("react-dom");
var _propTypes = require("prop-types");
var _propTypesDefault = parcelHelpers.interopDefault(_propTypes);
var _utils = require("@material-ui/utils");
var _deprecatedPropType = require("../utils/deprecatedPropType");
var _deprecatedPropTypeDefault = parcelHelpers.interopDefault(_deprecatedPropType);
var _setRef = require("../utils/setRef");
var _setRefDefault = parcelHelpers.interopDefault(_setRef);
var _useForkRef = require("../utils/useForkRef");
var _useForkRefDefault = parcelHelpers.interopDefault(_useForkRef);
function getContainer(container) {
    container = typeof container === 'function' ? container() : container; // #StrictMode ready
    return _reactDom.findDOMNode(container);
}
var useEnhancedEffect = typeof window !== 'undefined' ? _react.useLayoutEffect : _react.useEffect;
/**
 * Portals provide a first-class way to render children into a DOM node
 * that exists outside the DOM hierarchy of the parent component.
 */ var Portal = /*#__PURE__*/ _react.forwardRef(function Portal(props, ref) {
    var children = props.children, container = props.container, _props$disablePortal = props.disablePortal, disablePortal = _props$disablePortal === void 0 ? false : _props$disablePortal, onRendered = props.onRendered;
    var _React$useState = _react.useState(null), mountNode = _React$useState[0], setMountNode = _React$useState[1];
    var handleRef = _useForkRefDefault.default(/*#__PURE__*/ _react.isValidElement(children) ? children.ref : null, ref);
    useEnhancedEffect(function() {
        if (!disablePortal) setMountNode(getContainer(container) || document.body);
    }, [
        container,
        disablePortal
    ]);
    useEnhancedEffect(function() {
        if (mountNode && !disablePortal) {
            _setRefDefault.default(ref, mountNode);
            return function() {
                _setRefDefault.default(ref, null);
            };
        }
        return undefined;
    }, [
        ref,
        mountNode,
        disablePortal
    ]);
    useEnhancedEffect(function() {
        if (onRendered && (mountNode || disablePortal)) onRendered();
    }, [
        onRendered,
        mountNode,
        disablePortal
    ]);
    if (disablePortal) {
        if (/*#__PURE__*/ _react.isValidElement(children)) return /*#__PURE__*/ _react.cloneElement(children, {
            ref: handleRef
        });
        return children;
    }
    return mountNode ? /*#__PURE__*/ _reactDom.createPortal(children, mountNode) : mountNode;
});
Portal.propTypes = {
    // ----------------------------- Warning --------------------------------
    // | These PropTypes are generated from the TypeScript type definitions |
    // |     To update them edit the d.ts file and run "yarn proptypes"     |
    // ----------------------------------------------------------------------
    /**
   * The children to render into the `container`.
   */ children: _propTypesDefault.default.node,
    /**
   * A HTML element, component instance, or function that returns either.
   * The `container` will have the portal children appended to it.
   *
   * By default, it uses the body of the top-level document object,
   * so it's simply `document.body` most of the time.
   */ container: _propTypesDefault.default/* @typescript-to-proptypes-ignore */ .oneOfType([
        _utils.HTMLElementType,
        _propTypesDefault.default.instanceOf(_react.Component),
        _propTypesDefault.default.func
    ]),
    /**
   * Disable the portal behavior.
   * The children stay within it's parent DOM hierarchy.
   */ disablePortal: _propTypesDefault.default.bool,
    /**
   * Callback fired once the children has been mounted into the `container`.
   *
   * This prop will be removed in v5, the ref can be used instead.
   * @deprecated Use the ref instead.
   */ onRendered: _deprecatedPropTypeDefault.default(_propTypesDefault.default.func, 'Use the ref instead.')
};
// eslint-disable-next-line
Portal["propTypes"] = _utils.exactProp(Portal.propTypes);
exports.default = Portal;

},{"react":"21dqq","react-dom":"j6uA9","prop-types":"7wKI2","@material-ui/utils":"54RkF","../utils/deprecatedPropType":"loRgF","../utils/setRef":"6f9nb","../utils/useForkRef":"kUpGa","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"g7KfJ":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "ariaHidden", ()=>ariaHidden
);
parcelHelpers.export(exports, "default", ()=>ModalManager
);
var _classCallCheck = require("@babel/runtime/helpers/esm/classCallCheck");
var _classCallCheckDefault = parcelHelpers.interopDefault(_classCallCheck);
var _createClass = require("@babel/runtime/helpers/esm/createClass");
var _createClassDefault = parcelHelpers.interopDefault(_createClass);
var _toConsumableArray = require("@babel/runtime/helpers/esm/toConsumableArray");
var _toConsumableArrayDefault = parcelHelpers.interopDefault(_toConsumableArray);
var _getScrollbarSize = require("../utils/getScrollbarSize");
var _getScrollbarSizeDefault = parcelHelpers.interopDefault(_getScrollbarSize);
var _ownerDocument = require("../utils/ownerDocument");
var _ownerDocumentDefault = parcelHelpers.interopDefault(_ownerDocument);
var _ownerWindow = require("../utils/ownerWindow"); // Is a vertical scrollbar displayed?
var _ownerWindowDefault = parcelHelpers.interopDefault(_ownerWindow);
function isOverflowing(container) {
    var doc = _ownerDocumentDefault.default(container);
    if (doc.body === container) return _ownerWindowDefault.default(doc).innerWidth > doc.documentElement.clientWidth;
    return container.scrollHeight > container.clientHeight;
}
function ariaHidden(node, show) {
    if (show) node.setAttribute('aria-hidden', 'true');
    else node.removeAttribute('aria-hidden');
}
function getPaddingRight(node) {
    return parseInt(window.getComputedStyle(node)['padding-right'], 10) || 0;
}
function ariaHiddenSiblings(container, mountNode, currentNode) {
    var nodesToExclude = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [];
    var show = arguments.length > 4 ? arguments[4] : undefined;
    var blacklist = [
        mountNode,
        currentNode
    ].concat(_toConsumableArrayDefault.default(nodesToExclude));
    var blacklistTagNames = [
        'TEMPLATE',
        'SCRIPT',
        'STYLE'
    ];
    [].forEach.call(container.children, function(node) {
        if (node.nodeType === 1 && blacklist.indexOf(node) === -1 && blacklistTagNames.indexOf(node.tagName) === -1) ariaHidden(node, show);
    });
}
function findIndexOf(containerInfo, callback) {
    var idx = -1;
    containerInfo.some(function(item, index) {
        if (callback(item)) {
            idx = index;
            return true;
        }
        return false;
    });
    return idx;
}
function handleContainer(containerInfo, props) {
    var restoreStyle = [];
    var restorePaddings = [];
    var container = containerInfo.container;
    var fixedNodes;
    if (!props.disableScrollLock) {
        if (isOverflowing(container)) {
            // Compute the size before applying overflow hidden to avoid any scroll jumps.
            var scrollbarSize = _getScrollbarSizeDefault.default();
            restoreStyle.push({
                value: container.style.paddingRight,
                key: 'padding-right',
                el: container
            }); // Use computed style, here to get the real padding to add our scrollbar width.
            container.style['padding-right'] = "".concat(getPaddingRight(container) + scrollbarSize, "px"); // .mui-fixed is a global helper.
            fixedNodes = _ownerDocumentDefault.default(container).querySelectorAll('.mui-fixed');
            [].forEach.call(fixedNodes, function(node) {
                restorePaddings.push(node.style.paddingRight);
                node.style.paddingRight = "".concat(getPaddingRight(node) + scrollbarSize, "px");
            });
        } // Improve Gatsby support
        // https://css-tricks.com/snippets/css/force-vertical-scrollbar/
        var parent = container.parentElement;
        var scrollContainer = parent.nodeName === 'HTML' && window.getComputedStyle(parent)['overflow-y'] === 'scroll' ? parent : container; // Block the scroll even if no scrollbar is visible to account for mobile keyboard
        // screensize shrink.
        restoreStyle.push({
            value: scrollContainer.style.overflow,
            key: 'overflow',
            el: scrollContainer
        });
        scrollContainer.style.overflow = 'hidden';
    }
    var restore = function restore() {
        if (fixedNodes) [].forEach.call(fixedNodes, function(node, i) {
            if (restorePaddings[i]) node.style.paddingRight = restorePaddings[i];
            else node.style.removeProperty('padding-right');
        });
        restoreStyle.forEach(function(_ref) {
            var value = _ref.value, el = _ref.el, key = _ref.key;
            if (value) el.style.setProperty(key, value);
            else el.style.removeProperty(key);
        });
    };
    return restore;
}
function getHiddenSiblings(container) {
    var hiddenSiblings = [];
    [].forEach.call(container.children, function(node) {
        if (node.getAttribute && node.getAttribute('aria-hidden') === 'true') hiddenSiblings.push(node);
    });
    return hiddenSiblings;
}
/**
 * @ignore - do not document.
 *
 * Proper state management for containers and the modals in those containers.
 * Simplified, but inspired by react-overlay's ModalManager class.
 * Used by the Modal to ensure proper styling of containers.
 */ var ModalManager = /*#__PURE__*/ function() {
    function ModalManager1() {
        _classCallCheckDefault.default(this, ModalManager1);
        // this.modals[modalIndex] = modal
        this.modals = []; // this.containers[containerIndex] = {
        //   modals: [],
        //   container,
        //   restore: null,
        // }
        this.containers = [];
    }
    _createClassDefault.default(ModalManager1, [
        {
            key: "add",
            value: function add(modal, container) {
                var modalIndex = this.modals.indexOf(modal);
                if (modalIndex !== -1) return modalIndex;
                modalIndex = this.modals.length;
                this.modals.push(modal); // If the modal we are adding is already in the DOM.
                if (modal.modalRef) ariaHidden(modal.modalRef, false);
                var hiddenSiblingNodes = getHiddenSiblings(container);
                ariaHiddenSiblings(container, modal.mountNode, modal.modalRef, hiddenSiblingNodes, true);
                var containerIndex = findIndexOf(this.containers, function(item) {
                    return item.container === container;
                });
                if (containerIndex !== -1) {
                    this.containers[containerIndex].modals.push(modal);
                    return modalIndex;
                }
                this.containers.push({
                    modals: [
                        modal
                    ],
                    container: container,
                    restore: null,
                    hiddenSiblingNodes: hiddenSiblingNodes
                });
                return modalIndex;
            }
        },
        {
            key: "mount",
            value: function mount(modal, props) {
                var containerIndex = findIndexOf(this.containers, function(item) {
                    return item.modals.indexOf(modal) !== -1;
                });
                var containerInfo = this.containers[containerIndex];
                if (!containerInfo.restore) containerInfo.restore = handleContainer(containerInfo, props);
            }
        },
        {
            key: "remove",
            value: function remove(modal) {
                var modalIndex = this.modals.indexOf(modal);
                if (modalIndex === -1) return modalIndex;
                var containerIndex = findIndexOf(this.containers, function(item) {
                    return item.modals.indexOf(modal) !== -1;
                });
                var containerInfo = this.containers[containerIndex];
                containerInfo.modals.splice(containerInfo.modals.indexOf(modal), 1);
                this.modals.splice(modalIndex, 1); // If that was the last modal in a container, clean up the container.
                if (containerInfo.modals.length === 0) {
                    // The modal might be closed before it had the chance to be mounted in the DOM.
                    if (containerInfo.restore) containerInfo.restore();
                    if (modal.modalRef) // In case the modal wasn't in the DOM yet.
                    ariaHidden(modal.modalRef, true);
                    ariaHiddenSiblings(containerInfo.container, modal.mountNode, modal.modalRef, containerInfo.hiddenSiblingNodes, false);
                    this.containers.splice(containerIndex, 1);
                } else {
                    // Otherwise make sure the next top modal is visible to a screen reader.
                    var nextTop = containerInfo.modals[containerInfo.modals.length - 1]; // as soon as a modal is adding its modalRef is undefined. it can't set
                    // aria-hidden because the dom element doesn't exist either
                    // when modal was unmounted before modalRef gets null
                    if (nextTop.modalRef) ariaHidden(nextTop.modalRef, false);
                }
                return modalIndex;
            }
        },
        {
            key: "isTopModal",
            value: function isTopModal(modal) {
                return this.modals.length > 0 && this.modals[this.modals.length - 1] === modal;
            }
        }
    ]);
    return ModalManager1;
}();

},{"@babel/runtime/helpers/esm/classCallCheck":"aNx1x","@babel/runtime/helpers/esm/createClass":"kZyth","@babel/runtime/helpers/esm/toConsumableArray":"bCmCj","../utils/getScrollbarSize":"61dpz","../utils/ownerDocument":"lxJTm","../utils/ownerWindow":"fmWv6","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"61dpz":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
function getScrollbarSize() {
    var scrollDiv = document.createElement('div');
    scrollDiv.style.width = '99px';
    scrollDiv.style.height = '99px';
    scrollDiv.style.position = 'absolute';
    scrollDiv.style.top = '-9999px';
    scrollDiv.style.overflow = 'scroll';
    document.body.appendChild(scrollDiv);
    var scrollbarSize = scrollDiv.offsetWidth - scrollDiv.clientWidth;
    document.body.removeChild(scrollDiv);
    return scrollbarSize;
}
exports.default = getScrollbarSize;

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"7SUJW":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>_unstableTrapFocusDefault.default
);
var _unstableTrapFocus = require("./Unstable_TrapFocus");
var _unstableTrapFocusDefault = parcelHelpers.interopDefault(_unstableTrapFocus);

},{"./Unstable_TrapFocus":"ca1hH","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"ca1hH":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/* eslint-disable consistent-return, jsx-a11y/no-noninteractive-tabindex, camelcase */ var _react = require("react");
var _reactDom = require("react-dom");
var _propTypes = require("prop-types");
var _propTypesDefault = parcelHelpers.interopDefault(_propTypes);
var _ownerDocument = require("../utils/ownerDocument");
var _ownerDocumentDefault = parcelHelpers.interopDefault(_ownerDocument);
var _useForkRef = require("../utils/useForkRef");
var _useForkRefDefault = parcelHelpers.interopDefault(_useForkRef);
var _utils = require("@material-ui/utils");
/**
 * Utility component that locks focus inside the component.
 */ function Unstable_TrapFocus(props) {
    var children = props.children, _props$disableAutoFoc = props.disableAutoFocus, disableAutoFocus = _props$disableAutoFoc === void 0 ? false : _props$disableAutoFoc, _props$disableEnforce = props.disableEnforceFocus, disableEnforceFocus = _props$disableEnforce === void 0 ? false : _props$disableEnforce, _props$disableRestore = props.disableRestoreFocus, disableRestoreFocus = _props$disableRestore === void 0 ? false : _props$disableRestore, getDoc = props.getDoc, isEnabled = props.isEnabled, open = props.open;
    var ignoreNextEnforceFocus = _react.useRef();
    var sentinelStart = _react.useRef(null);
    var sentinelEnd = _react.useRef(null);
    var nodeToRestore = _react.useRef();
    var rootRef = _react.useRef(null); // can be removed once we drop support for non ref forwarding class components
    var handleOwnRef = _react.useCallback(function(instance) {
        // #StrictMode ready
        rootRef.current = _reactDom.findDOMNode(instance);
    }, []);
    var handleRef = _useForkRefDefault.default(children.ref, handleOwnRef);
    var prevOpenRef = _react.useRef();
    _react.useEffect(function() {
        prevOpenRef.current = open;
    }, [
        open
    ]);
    if (!prevOpenRef.current && open && typeof window !== 'undefined') // WARNING: Potentially unsafe in concurrent mode.
    // The way the read on `nodeToRestore` is setup could make this actually safe.
    // Say we render `open={false}` -> `open={true}` but never commit.
    // We have now written a state that wasn't committed. But no committed effect
    // will read this wrong value. We only read from `nodeToRestore` in effects
    // that were committed on `open={true}`
    // WARNING: Prevents the instance from being garbage collected. Should only
    // hold a weak ref.
    nodeToRestore.current = getDoc().activeElement;
    _react.useEffect(function() {
        if (!open) return;
        var doc = _ownerDocumentDefault.default(rootRef.current); // We might render an empty child.
        if (!disableAutoFocus && rootRef.current && !rootRef.current.contains(doc.activeElement)) {
            if (!rootRef.current.hasAttribute('tabIndex')) {
                console.error([
                    'Material-UI: The modal content node does not accept focus.',
                    'For the benefit of assistive technologies, the tabIndex of the node is being set to "-1".'
                ].join('\n'));
                rootRef.current.setAttribute('tabIndex', -1);
            }
            rootRef.current.focus();
        }
        var contain = function contain() {
            var rootElement = rootRef.current; // Cleanup functions are executed lazily in React 17.
            // Contain can be called between the component being unmounted and its cleanup function being run.
            if (rootElement === null) return;
            if (!doc.hasFocus() || disableEnforceFocus || !isEnabled() || ignoreNextEnforceFocus.current) {
                ignoreNextEnforceFocus.current = false;
                return;
            }
            if (rootRef.current && !rootRef.current.contains(doc.activeElement)) rootRef.current.focus();
        };
        var loopFocus = function loopFocus(event) {
            // 9 = Tab
            if (disableEnforceFocus || !isEnabled() || event.keyCode !== 9) return;
             // Make sure the next tab starts from the right place.
            if (doc.activeElement === rootRef.current) {
                // We need to ignore the next contain as
                // it will try to move the focus back to the rootRef element.
                ignoreNextEnforceFocus.current = true;
                if (event.shiftKey) sentinelEnd.current.focus();
                else sentinelStart.current.focus();
            }
        };
        doc.addEventListener('focus', contain, true);
        doc.addEventListener('keydown', loopFocus, true); // With Edge, Safari and Firefox, no focus related events are fired when the focused area stops being a focused area
        // e.g. https://bugzilla.mozilla.org/show_bug.cgi?id=559561.
        //
        // The whatwg spec defines how the browser should behave but does not explicitly mention any events:
        // https://html.spec.whatwg.org/multipage/interaction.html#focus-fixup-rule.
        var interval = setInterval(function() {
            contain();
        }, 50);
        return function() {
            clearInterval(interval);
            doc.removeEventListener('focus', contain, true);
            doc.removeEventListener('keydown', loopFocus, true); // restoreLastFocus()
            if (!disableRestoreFocus) {
                // In IE 11 it is possible for document.activeElement to be null resulting
                // in nodeToRestore.current being null.
                // Not all elements in IE 11 have a focus method.
                // Once IE 11 support is dropped the focus() call can be unconditional.
                if (nodeToRestore.current && nodeToRestore.current.focus) nodeToRestore.current.focus();
                nodeToRestore.current = null;
            }
        };
    }, [
        disableAutoFocus,
        disableEnforceFocus,
        disableRestoreFocus,
        isEnabled,
        open
    ]);
    return /*#__PURE__*/ _react.createElement(_react.Fragment, null, /*#__PURE__*/ _react.createElement("div", {
        tabIndex: 0,
        ref: sentinelStart,
        "data-test": "sentinelStart"
    }), /*#__PURE__*/ _react.cloneElement(children, {
        ref: handleRef
    }), /*#__PURE__*/ _react.createElement("div", {
        tabIndex: 0,
        ref: sentinelEnd,
        "data-test": "sentinelEnd"
    }));
}
Unstable_TrapFocus.propTypes = {
    // ----------------------------- Warning --------------------------------
    // | These PropTypes are generated from the TypeScript type definitions |
    // |     To update them edit the d.ts file and run "yarn proptypes"     |
    // ----------------------------------------------------------------------
    /**
   * A single child content element.
   */ children: _propTypesDefault.default.node,
    /**
   * If `true`, the trap focus will not automatically shift focus to itself when it opens, and
   * replace it to the last focused element when it closes.
   * This also works correctly with any trap focus children that have the `disableAutoFocus` prop.
   *
   * Generally this should never be set to `true` as it makes the trap focus less
   * accessible to assistive technologies, like screen readers.
   */ disableAutoFocus: _propTypesDefault.default.bool,
    /**
   * If `true`, the trap focus will not prevent focus from leaving the trap focus while open.
   *
   * Generally this should never be set to `true` as it makes the trap focus less
   * accessible to assistive technologies, like screen readers.
   */ disableEnforceFocus: _propTypesDefault.default.bool,
    /**
   * If `true`, the trap focus will not restore focus to previously focused element once
   * trap focus is hidden.
   */ disableRestoreFocus: _propTypesDefault.default.bool,
    /**
   * Return the document to consider.
   * We use it to implement the restore focus between different browser documents.
   */ getDoc: _propTypesDefault.default.func.isRequired,
    /**
   * Do we still want to enforce the focus?
   * This prop helps nesting TrapFocus elements.
   */ isEnabled: _propTypesDefault.default.func.isRequired,
    /**
   * If `true`, focus will be locked.
   */ open: _propTypesDefault.default.bool.isRequired
};
// eslint-disable-next-line
Unstable_TrapFocus["propTypes"] = _utils.exactProp(Unstable_TrapFocus.propTypes);
exports.default = Unstable_TrapFocus;

},{"react":"21dqq","react-dom":"j6uA9","prop-types":"7wKI2","../utils/ownerDocument":"lxJTm","../utils/useForkRef":"kUpGa","@material-ui/utils":"54RkF","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"5ckZe":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "styles", ()=>styles
);
var _extends = require("@babel/runtime/helpers/esm/extends");
var _extendsDefault = parcelHelpers.interopDefault(_extends);
var _objectWithoutProperties = require("@babel/runtime/helpers/esm/objectWithoutProperties");
var _objectWithoutPropertiesDefault = parcelHelpers.interopDefault(_objectWithoutProperties);
var _react = require("react");
var _propTypes = require("prop-types");
var _propTypesDefault = parcelHelpers.interopDefault(_propTypes);
var styles = {
    /* Styles applied to the root element. */ root: {
        zIndex: -1,
        position: 'fixed',
        right: 0,
        bottom: 0,
        top: 0,
        left: 0,
        backgroundColor: 'rgba(0, 0, 0, 0.5)',
        WebkitTapHighlightColor: 'transparent'
    },
    /* Styles applied to the root element if `invisible={true}`. */ invisible: {
        backgroundColor: 'transparent'
    }
};
/**
 * @ignore - internal component.
 */ var SimpleBackdrop = /*#__PURE__*/ _react.forwardRef(function SimpleBackdrop(props, ref) {
    var _props$invisible = props.invisible, invisible = _props$invisible === void 0 ? false : _props$invisible, open = props.open, other = _objectWithoutPropertiesDefault.default(props, [
        "invisible",
        "open"
    ]);
    return open ? /*#__PURE__*/ _react.createElement("div", _extendsDefault.default({
        "aria-hidden": true,
        ref: ref
    }, other, {
        style: _extendsDefault.default({}, styles.root, invisible ? styles.invisible : {}, other.style)
    })) : null;
});
SimpleBackdrop.propTypes = {
    /**
   * If `true`, the backdrop is invisible.
   * It can be used when rendering a popover or a custom select component.
   */ invisible: _propTypesDefault.default.bool,
    /**
   * If `true`, the backdrop is open.
   */ open: _propTypesDefault.default.bool.isRequired
};
exports.default = SimpleBackdrop;

},{"@babel/runtime/helpers/esm/extends":"fTBFS","@babel/runtime/helpers/esm/objectWithoutProperties":"25tJ4","react":"21dqq","prop-types":"7wKI2","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"ftrMS":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>_dialogActionsDefault.default
);
var _dialogActions = require("./DialogActions");
var _dialogActionsDefault = parcelHelpers.interopDefault(_dialogActions);

},{"./DialogActions":"ixCDG","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"ixCDG":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "styles", ()=>styles
);
var _extends = require("@babel/runtime/helpers/esm/extends");
var _extendsDefault = parcelHelpers.interopDefault(_extends);
var _objectWithoutProperties = require("@babel/runtime/helpers/esm/objectWithoutProperties");
var _objectWithoutPropertiesDefault = parcelHelpers.interopDefault(_objectWithoutProperties);
var _react = require("react");
var _propTypes = require("prop-types");
var _propTypesDefault = parcelHelpers.interopDefault(_propTypes);
var _clsx = require("clsx");
var _clsxDefault = parcelHelpers.interopDefault(_clsx);
var _withStyles = require("../styles/withStyles");
var _withStylesDefault = parcelHelpers.interopDefault(_withStyles);
var styles = {
    /* Styles applied to the root element. */ root: {
        display: 'flex',
        alignItems: 'center',
        padding: 8,
        justifyContent: 'flex-end',
        flex: '0 0 auto'
    },
    /* Styles applied to the root element if `disableSpacing={false}`. */ spacing: {
        '& > :not(:first-child)': {
            marginLeft: 8
        }
    }
};
var DialogActions = /*#__PURE__*/ _react.forwardRef(function DialogActions(props, ref) {
    var _props$disableSpacing = props.disableSpacing, disableSpacing = _props$disableSpacing === void 0 ? false : _props$disableSpacing, classes = props.classes, className = props.className, other = _objectWithoutPropertiesDefault.default(props, [
        "disableSpacing",
        "classes",
        "className"
    ]);
    return /*#__PURE__*/ _react.createElement("div", _extendsDefault.default({
        className: _clsxDefault.default(classes.root, className, !disableSpacing && classes.spacing),
        ref: ref
    }, other));
});
DialogActions.propTypes = {
    // ----------------------------- Warning --------------------------------
    // | These PropTypes are generated from the TypeScript type definitions |
    // |     To update them edit the d.ts file and run "yarn proptypes"     |
    // ----------------------------------------------------------------------
    /**
   * The content of the component.
   */ children: _propTypesDefault.default.node,
    /**
   * Override or extend the styles applied to the component.
   * See [CSS API](#css) below for more details.
   */ classes: _propTypesDefault.default.object,
    /**
   * @ignore
   */ className: _propTypesDefault.default.string,
    /**
   * If `true`, the actions do not have additional margin.
   */ disableSpacing: _propTypesDefault.default.bool
};
exports.default = _withStylesDefault.default(styles, {
    name: 'MuiDialogActions'
})(DialogActions);

},{"@babel/runtime/helpers/esm/extends":"fTBFS","@babel/runtime/helpers/esm/objectWithoutProperties":"25tJ4","react":"21dqq","prop-types":"7wKI2","clsx":"83C22","../styles/withStyles":"7U0iM","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"5oZZo":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>_dialogContentDefault.default
);
var _dialogContent = require("./DialogContent");
var _dialogContentDefault = parcelHelpers.interopDefault(_dialogContent);

},{"./DialogContent":"1i4oB","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"1i4oB":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "styles", ()=>styles
);
var _extends = require("@babel/runtime/helpers/esm/extends");
var _extendsDefault = parcelHelpers.interopDefault(_extends);
var _objectWithoutProperties = require("@babel/runtime/helpers/esm/objectWithoutProperties");
var _objectWithoutPropertiesDefault = parcelHelpers.interopDefault(_objectWithoutProperties);
var _react = require("react");
var _propTypes = require("prop-types");
var _propTypesDefault = parcelHelpers.interopDefault(_propTypes);
var _clsx = require("clsx");
var _clsxDefault = parcelHelpers.interopDefault(_clsx);
var _withStyles = require("../styles/withStyles");
var _withStylesDefault = parcelHelpers.interopDefault(_withStyles);
var styles = function styles(theme) {
    return {
        /* Styles applied to the root element. */ root: {
            flex: '1 1 auto',
            WebkitOverflowScrolling: 'touch',
            // Add iOS momentum scrolling.
            overflowY: 'auto',
            padding: '8px 24px',
            '&:first-child': {
                // dialog without title
                paddingTop: 20
            }
        },
        /* Styles applied to the root element if `dividers={true}`. */ dividers: {
            padding: '16px 24px',
            borderTop: "1px solid ".concat(theme.palette.divider),
            borderBottom: "1px solid ".concat(theme.palette.divider)
        }
    };
};
var DialogContent = /*#__PURE__*/ _react.forwardRef(function DialogContent(props, ref) {
    var classes = props.classes, className = props.className, _props$dividers = props.dividers, dividers = _props$dividers === void 0 ? false : _props$dividers, other = _objectWithoutPropertiesDefault.default(props, [
        "classes",
        "className",
        "dividers"
    ]);
    return /*#__PURE__*/ _react.createElement("div", _extendsDefault.default({
        className: _clsxDefault.default(classes.root, className, dividers && classes.dividers),
        ref: ref
    }, other));
});
DialogContent.propTypes = {
    // ----------------------------- Warning --------------------------------
    // | These PropTypes are generated from the TypeScript type definitions |
    // |     To update them edit the d.ts file and run "yarn proptypes"     |
    // ----------------------------------------------------------------------
    /**
   * The content of the component.
   */ children: _propTypesDefault.default.node,
    /**
   * Override or extend the styles applied to the component.
   * See [CSS API](#css) below for more details.
   */ classes: _propTypesDefault.default.object,
    /**
   * @ignore
   */ className: _propTypesDefault.default.string,
    /**
   * Display the top and bottom dividers.
   */ dividers: _propTypesDefault.default.bool
};
exports.default = _withStylesDefault.default(styles, {
    name: 'MuiDialogContent'
})(DialogContent);

},{"@babel/runtime/helpers/esm/extends":"fTBFS","@babel/runtime/helpers/esm/objectWithoutProperties":"25tJ4","react":"21dqq","prop-types":"7wKI2","clsx":"83C22","../styles/withStyles":"7U0iM","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"efLol":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>_dialogContentTextDefault.default
);
var _dialogContentText = require("./DialogContentText");
var _dialogContentTextDefault = parcelHelpers.interopDefault(_dialogContentText);

},{"./DialogContentText":"3n8hX","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"3n8hX":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "styles", ()=>styles
);
var _extends = require("@babel/runtime/helpers/esm/extends");
var _extendsDefault = parcelHelpers.interopDefault(_extends);
var _react = require("react");
var _propTypes = require("prop-types");
var _propTypesDefault = parcelHelpers.interopDefault(_propTypes);
var _withStyles = require("../styles/withStyles");
var _withStylesDefault = parcelHelpers.interopDefault(_withStyles);
var _typography = require("../Typography");
var _typographyDefault = parcelHelpers.interopDefault(_typography);
var styles = {
    /* Styles applied to the root element. */ root: {
        marginBottom: 12
    }
};
var DialogContentText = /*#__PURE__*/ _react.forwardRef(function DialogContentText(props, ref) {
    return /*#__PURE__*/ _react.createElement(_typographyDefault.default, _extendsDefault.default({
        component: "p",
        variant: "body1",
        color: "textSecondary",
        ref: ref
    }, props));
});
DialogContentText.propTypes = {
    // ----------------------------- Warning --------------------------------
    // | These PropTypes are generated from the TypeScript type definitions |
    // |     To update them edit the d.ts file and run "yarn proptypes"     |
    // ----------------------------------------------------------------------
    /**
   * The content of the component.
   */ children: _propTypesDefault.default.node,
    /**
   * Override or extend the styles applied to the component.
   * See [CSS API](#css) below for more details.
   */ classes: _propTypesDefault.default.object
};
exports.default = _withStylesDefault.default(styles, {
    name: 'MuiDialogContentText'
})(DialogContentText);

},{"@babel/runtime/helpers/esm/extends":"fTBFS","react":"21dqq","prop-types":"7wKI2","../styles/withStyles":"7U0iM","../Typography":"6dDPF","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"JwdzH":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>_dialogTitleDefault.default
);
var _dialogTitle = require("./DialogTitle");
var _dialogTitleDefault = parcelHelpers.interopDefault(_dialogTitle);

},{"./DialogTitle":"dJTlE","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"dJTlE":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "styles", ()=>styles
);
var _extends = require("@babel/runtime/helpers/esm/extends");
var _extendsDefault = parcelHelpers.interopDefault(_extends);
var _objectWithoutProperties = require("@babel/runtime/helpers/esm/objectWithoutProperties");
var _objectWithoutPropertiesDefault = parcelHelpers.interopDefault(_objectWithoutProperties);
var _react = require("react");
var _propTypes = require("prop-types");
var _propTypesDefault = parcelHelpers.interopDefault(_propTypes);
var _clsx = require("clsx");
var _clsxDefault = parcelHelpers.interopDefault(_clsx);
var _withStyles = require("../styles/withStyles");
var _withStylesDefault = parcelHelpers.interopDefault(_withStyles);
var _typography = require("../Typography");
var _typographyDefault = parcelHelpers.interopDefault(_typography);
var styles = {
    /* Styles applied to the root element. */ root: {
        margin: 0,
        padding: '16px 24px',
        flex: '0 0 auto'
    }
};
var DialogTitle = /*#__PURE__*/ _react.forwardRef(function DialogTitle(props, ref) {
    var children = props.children, classes = props.classes, className = props.className, _props$disableTypogra = props.disableTypography, disableTypography = _props$disableTypogra === void 0 ? false : _props$disableTypogra, other = _objectWithoutPropertiesDefault.default(props, [
        "children",
        "classes",
        "className",
        "disableTypography"
    ]);
    return /*#__PURE__*/ _react.createElement("div", _extendsDefault.default({
        className: _clsxDefault.default(classes.root, className),
        ref: ref
    }, other), disableTypography ? children : /*#__PURE__*/ _react.createElement(_typographyDefault.default, {
        component: "h2",
        variant: "h6"
    }, children));
});
DialogTitle.propTypes = {
    // ----------------------------- Warning --------------------------------
    // | These PropTypes are generated from the TypeScript type definitions |
    // |     To update them edit the d.ts file and run "yarn proptypes"     |
    // ----------------------------------------------------------------------
    /**
   * The content of the component.
   */ children: _propTypesDefault.default.node,
    /**
   * Override or extend the styles applied to the component.
   * See [CSS API](#css) below for more details.
   */ classes: _propTypesDefault.default.object,
    /**
   * @ignore
   */ className: _propTypesDefault.default.string,
    /**
   * If `true`, the children won't be wrapped by a typography component.
   * For instance, this can be useful to render an h4 instead of the default h2.
   */ disableTypography: _propTypesDefault.default.bool
};
exports.default = _withStylesDefault.default(styles, {
    name: 'MuiDialogTitle'
})(DialogTitle);

},{"@babel/runtime/helpers/esm/extends":"fTBFS","@babel/runtime/helpers/esm/objectWithoutProperties":"25tJ4","react":"21dqq","prop-types":"7wKI2","clsx":"83C22","../styles/withStyles":"7U0iM","../Typography":"6dDPF","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"96ziI":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>_dividerDefault.default
);
var _divider = require("./Divider");
var _dividerDefault = parcelHelpers.interopDefault(_divider);

},{"./Divider":"d2Hdy","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"d2Hdy":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "styles", ()=>styles
);
var _extends = require("@babel/runtime/helpers/esm/extends");
var _extendsDefault = parcelHelpers.interopDefault(_extends);
var _objectWithoutProperties = require("@babel/runtime/helpers/esm/objectWithoutProperties");
var _objectWithoutPropertiesDefault = parcelHelpers.interopDefault(_objectWithoutProperties);
var _react = require("react");
var _propTypes = require("prop-types");
var _propTypesDefault = parcelHelpers.interopDefault(_propTypes);
var _clsx = require("clsx");
var _clsxDefault = parcelHelpers.interopDefault(_clsx);
var _withStyles = require("../styles/withStyles");
var _withStylesDefault = parcelHelpers.interopDefault(_withStyles);
var _colorManipulator = require("../styles/colorManipulator");
var styles = function styles(theme) {
    return {
        /* Styles applied to the root element. */ root: {
            height: 1,
            margin: 0,
            // Reset browser default style.
            border: 'none',
            flexShrink: 0,
            backgroundColor: theme.palette.divider
        },
        /* Styles applied to the root element if `absolute={true}`. */ absolute: {
            position: 'absolute',
            bottom: 0,
            left: 0,
            width: '100%'
        },
        /* Styles applied to the root element if `variant="inset"`. */ inset: {
            marginLeft: 72
        },
        /* Styles applied to the root element if `light={true}`. */ light: {
            backgroundColor: _colorManipulator.alpha(theme.palette.divider, 0.08)
        },
        /* Styles applied to the root element if `variant="middle"`. */ middle: {
            marginLeft: theme.spacing(2),
            marginRight: theme.spacing(2)
        },
        /* Styles applied to the root element if `orientation="vertical"`. */ vertical: {
            height: '100%',
            width: 1
        },
        /* Styles applied to the root element if `flexItem={true}`. */ flexItem: {
            alignSelf: 'stretch',
            height: 'auto'
        }
    };
};
var Divider = /*#__PURE__*/ _react.forwardRef(function Divider(props, ref) {
    var _props$absolute = props.absolute, absolute = _props$absolute === void 0 ? false : _props$absolute, classes = props.classes, className = props.className, _props$component = props.component, Component = _props$component === void 0 ? 'hr' : _props$component, _props$flexItem = props.flexItem, flexItem = _props$flexItem === void 0 ? false : _props$flexItem, _props$light = props.light, light = _props$light === void 0 ? false : _props$light, _props$orientation = props.orientation, orientation = _props$orientation === void 0 ? 'horizontal' : _props$orientation, _props$role = props.role, role = _props$role === void 0 ? Component !== 'hr' ? 'separator' : undefined : _props$role, _props$variant = props.variant, variant = _props$variant === void 0 ? 'fullWidth' : _props$variant, other = _objectWithoutPropertiesDefault.default(props, [
        "absolute",
        "classes",
        "className",
        "component",
        "flexItem",
        "light",
        "orientation",
        "role",
        "variant"
    ]);
    return /*#__PURE__*/ _react.createElement(Component, _extendsDefault.default({
        className: _clsxDefault.default(classes.root, className, variant !== 'fullWidth' && classes[variant], absolute && classes.absolute, flexItem && classes.flexItem, light && classes.light, orientation === 'vertical' && classes.vertical),
        role: role,
        ref: ref
    }, other));
});
Divider.propTypes = {
    // ----------------------------- Warning --------------------------------
    // | These PropTypes are generated from the TypeScript type definitions |
    // |     To update them edit the d.ts file and run "yarn proptypes"     |
    // ----------------------------------------------------------------------
    /**
   * Absolutely position the element.
   */ absolute: _propTypesDefault.default.bool,
    /**
   * @ignore
   */ children: _propTypesDefault.default.node,
    /**
   * Override or extend the styles applied to the component.
   * See [CSS API](#css) below for more details.
   */ classes: _propTypesDefault.default.object,
    /**
   * @ignore
   */ className: _propTypesDefault.default.string,
    /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */ component: _propTypesDefault.default/* @typescript-to-proptypes-ignore */ .elementType,
    /**
   * If `true`, a vertical divider will have the correct height when used in flex container.
   * (By default, a vertical divider will have a calculated height of `0px` if it is the child of a flex container.)
   */ flexItem: _propTypesDefault.default.bool,
    /**
   * If `true`, the divider will have a lighter color.
   */ light: _propTypesDefault.default.bool,
    /**
   * The divider orientation.
   */ orientation: _propTypesDefault.default.oneOf([
        'horizontal',
        'vertical'
    ]),
    /**
   * @ignore
   */ role: _propTypesDefault.default.string,
    /**
   * The variant to use.
   */ variant: _propTypesDefault.default.oneOf([
        'fullWidth',
        'inset',
        'middle'
    ])
};
exports.default = _withStylesDefault.default(styles, {
    name: 'MuiDivider'
})(Divider);

},{"@babel/runtime/helpers/esm/extends":"fTBFS","@babel/runtime/helpers/esm/objectWithoutProperties":"25tJ4","react":"21dqq","prop-types":"7wKI2","clsx":"83C22","../styles/withStyles":"7U0iM","../styles/colorManipulator":"iz48G","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"fqezw":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>_drawerDefault.default
);
var _drawer = require("./Drawer");
var _drawerDefault = parcelHelpers.interopDefault(_drawer);

},{"./Drawer":"hpOJm","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"hpOJm":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "styles", ()=>styles
);
parcelHelpers.export(exports, "isHorizontal", ()=>isHorizontal
);
parcelHelpers.export(exports, "getAnchor", ()=>getAnchor
);
var _extends = require("@babel/runtime/helpers/esm/extends");
var _extendsDefault = parcelHelpers.interopDefault(_extends);
var _objectWithoutProperties = require("@babel/runtime/helpers/esm/objectWithoutProperties");
var _objectWithoutPropertiesDefault = parcelHelpers.interopDefault(_objectWithoutProperties);
var _react = require("react");
var _propTypes = require("prop-types");
var _propTypesDefault = parcelHelpers.interopDefault(_propTypes);
var _clsx = require("clsx");
var _clsxDefault = parcelHelpers.interopDefault(_clsx);
var _modal = require("../Modal");
var _modalDefault = parcelHelpers.interopDefault(_modal);
var _backdrop = require("../Backdrop");
var _backdropDefault = parcelHelpers.interopDefault(_backdrop);
var _withStyles = require("../styles/withStyles");
var _withStylesDefault = parcelHelpers.interopDefault(_withStyles);
var _slide = require("../Slide");
var _slideDefault = parcelHelpers.interopDefault(_slide);
var _paper = require("../Paper");
var _paperDefault = parcelHelpers.interopDefault(_paper);
var _capitalize = require("../utils/capitalize");
var _capitalizeDefault = parcelHelpers.interopDefault(_capitalize);
var _transitions = require("../styles/transitions");
var _useTheme = require("../styles/useTheme");
var _useThemeDefault = parcelHelpers.interopDefault(_useTheme);
var styles = function styles(theme) {
    return {
        /* Styles applied to the root element. */ root: {},
        /* Styles applied to the root element if `variant="permanent or persistent"`. */ docked: {
            flex: '0 0 auto'
        },
        /* Styles applied to the `Paper` component. */ paper: {
            overflowY: 'auto',
            display: 'flex',
            flexDirection: 'column',
            height: '100%',
            flex: '1 0 auto',
            zIndex: theme.zIndex.drawer,
            WebkitOverflowScrolling: 'touch',
            // Add iOS momentum scrolling.
            // temporary style
            position: 'fixed',
            top: 0,
            // We disable the focus ring for mouse, touch and keyboard users.
            // At some point, it would be better to keep it for keyboard users.
            // :focus-ring CSS pseudo-class will help.
            outline: 0
        },
        /* Styles applied to the `Paper` component if `anchor="left"`. */ paperAnchorLeft: {
            left: 0,
            right: 'auto'
        },
        /* Styles applied to the `Paper` component if `anchor="right"`. */ paperAnchorRight: {
            left: 'auto',
            right: 0
        },
        /* Styles applied to the `Paper` component if `anchor="top"`. */ paperAnchorTop: {
            top: 0,
            left: 0,
            bottom: 'auto',
            right: 0,
            height: 'auto',
            maxHeight: '100%'
        },
        /* Styles applied to the `Paper` component if `anchor="bottom"`. */ paperAnchorBottom: {
            top: 'auto',
            left: 0,
            bottom: 0,
            right: 0,
            height: 'auto',
            maxHeight: '100%'
        },
        /* Styles applied to the `Paper` component if `anchor="left"` and `variant` is not "temporary". */ paperAnchorDockedLeft: {
            borderRight: "1px solid ".concat(theme.palette.divider)
        },
        /* Styles applied to the `Paper` component if `anchor="top"` and `variant` is not "temporary". */ paperAnchorDockedTop: {
            borderBottom: "1px solid ".concat(theme.palette.divider)
        },
        /* Styles applied to the `Paper` component if `anchor="right"` and `variant` is not "temporary". */ paperAnchorDockedRight: {
            borderLeft: "1px solid ".concat(theme.palette.divider)
        },
        /* Styles applied to the `Paper` component if `anchor="bottom"` and `variant` is not "temporary". */ paperAnchorDockedBottom: {
            borderTop: "1px solid ".concat(theme.palette.divider)
        },
        /* Styles applied to the `Modal` component. */ modal: {}
    };
};
var oppositeDirection = {
    left: 'right',
    right: 'left',
    top: 'down',
    bottom: 'up'
};
function isHorizontal(anchor) {
    return [
        'left',
        'right'
    ].indexOf(anchor) !== -1;
}
function getAnchor(theme, anchor) {
    return theme.direction === 'rtl' && isHorizontal(anchor) ? oppositeDirection[anchor] : anchor;
}
var defaultTransitionDuration = {
    enter: _transitions.duration.enteringScreen,
    exit: _transitions.duration.leavingScreen
};
/**
 * The props of the [Modal](/api/modal/) component are available
 * when `variant="temporary"` is set.
 */ var Drawer = /*#__PURE__*/ _react.forwardRef(function Drawer(props, ref) {
    var _props$anchor = props.anchor, anchorProp = _props$anchor === void 0 ? 'left' : _props$anchor, BackdropProps = props.BackdropProps, children = props.children, classes = props.classes, className = props.className, _props$elevation = props.elevation, elevation = _props$elevation === void 0 ? 16 : _props$elevation, _props$ModalProps = props.ModalProps;
    _props$ModalProps = _props$ModalProps === void 0 ? {} : _props$ModalProps;
    var BackdropPropsProp = _props$ModalProps.BackdropProps, ModalProps = _objectWithoutPropertiesDefault.default(_props$ModalProps, [
        "BackdropProps"
    ]), onClose = props.onClose, _props$open = props.open, open = _props$open === void 0 ? false : _props$open, _props$PaperProps = props.PaperProps, PaperProps = _props$PaperProps === void 0 ? {} : _props$PaperProps, SlideProps = props.SlideProps, _props$TransitionComp = props.TransitionComponent, TransitionComponent = _props$TransitionComp === void 0 ? _slideDefault.default : _props$TransitionComp, _props$transitionDura = props.transitionDuration, transitionDuration = _props$transitionDura === void 0 ? defaultTransitionDuration : _props$transitionDura, _props$variant = props.variant, variant = _props$variant === void 0 ? 'temporary' : _props$variant, other = _objectWithoutPropertiesDefault.default(props, [
        "anchor",
        "BackdropProps",
        "children",
        "classes",
        "className",
        "elevation",
        "ModalProps",
        "onClose",
        "open",
        "PaperProps",
        "SlideProps",
        "TransitionComponent",
        "transitionDuration",
        "variant"
    ]);
    var theme = _useThemeDefault.default(); // Let's assume that the Drawer will always be rendered on user space.
    // We use this state is order to skip the appear transition during the
    // initial mount of the component.
    var mounted = _react.useRef(false);
    _react.useEffect(function() {
        mounted.current = true;
    }, []);
    var anchor = getAnchor(theme, anchorProp);
    var drawer = /*#__PURE__*/ _react.createElement(_paperDefault.default, _extendsDefault.default({
        elevation: variant === 'temporary' ? elevation : 0,
        square: true
    }, PaperProps, {
        className: _clsxDefault.default(classes.paper, classes["paperAnchor".concat(_capitalizeDefault.default(anchor))], PaperProps.className, variant !== 'temporary' && classes["paperAnchorDocked".concat(_capitalizeDefault.default(anchor))])
    }), children);
    if (variant === 'permanent') return /*#__PURE__*/ _react.createElement("div", _extendsDefault.default({
        className: _clsxDefault.default(classes.root, classes.docked, className),
        ref: ref
    }, other), drawer);
    var slidingDrawer = /*#__PURE__*/ _react.createElement(TransitionComponent, _extendsDefault.default({
        in: open,
        direction: oppositeDirection[anchor],
        timeout: transitionDuration,
        appear: mounted.current
    }, SlideProps), drawer);
    if (variant === 'persistent') return /*#__PURE__*/ _react.createElement("div", _extendsDefault.default({
        className: _clsxDefault.default(classes.root, classes.docked, className),
        ref: ref
    }, other), slidingDrawer);
     // variant === temporary
    return /*#__PURE__*/ _react.createElement(_modalDefault.default, _extendsDefault.default({
        BackdropProps: _extendsDefault.default({}, BackdropProps, BackdropPropsProp, {
            transitionDuration: transitionDuration
        }),
        BackdropComponent: _backdropDefault.default,
        className: _clsxDefault.default(classes.root, classes.modal, className),
        open: open,
        onClose: onClose,
        ref: ref
    }, other, ModalProps), slidingDrawer);
});
Drawer.propTypes = {
    // ----------------------------- Warning --------------------------------
    // | These PropTypes are generated from the TypeScript type definitions |
    // |     To update them edit the d.ts file and run "yarn proptypes"     |
    // ----------------------------------------------------------------------
    /**
   * Side from which the drawer will appear.
   */ anchor: _propTypesDefault.default.oneOf([
        'bottom',
        'left',
        'right',
        'top'
    ]),
    /**
   * @ignore
   */ BackdropProps: _propTypesDefault.default.object,
    /**
   * The contents of the drawer.
   */ children: _propTypesDefault.default.node,
    /**
   * Override or extend the styles applied to the component.
   * See [CSS API](#css) below for more details.
   */ classes: _propTypesDefault.default.object,
    /**
   * @ignore
   */ className: _propTypesDefault.default.string,
    /**
   * The elevation of the drawer.
   */ elevation: _propTypesDefault.default.number,
    /**
   * Props applied to the [`Modal`](/api/modal/) element.
   */ ModalProps: _propTypesDefault.default.object,
    /**
   * Callback fired when the component requests to be closed.
   *
   * @param {object} event The event source of the callback.
   */ onClose: _propTypesDefault.default.func,
    /**
   * If `true`, the drawer is open.
   */ open: _propTypesDefault.default.bool,
    /**
   * Props applied to the [`Paper`](/api/paper/) element.
   */ PaperProps: _propTypesDefault.default.object,
    /**
   * Props applied to the [`Slide`](/api/slide/) element.
   */ SlideProps: _propTypesDefault.default.object,
    /**
   * The duration for the transition, in milliseconds.
   * You may specify a single timeout for all transitions, or individually with an object.
   */ transitionDuration: _propTypesDefault.default.oneOfType([
        _propTypesDefault.default.number,
        _propTypesDefault.default.shape({
            appear: _propTypesDefault.default.number,
            enter: _propTypesDefault.default.number,
            exit: _propTypesDefault.default.number
        })
    ]),
    /**
   * The variant to use.
   */ variant: _propTypesDefault.default.oneOf([
        'permanent',
        'persistent',
        'temporary'
    ])
};
exports.default = _withStylesDefault.default(styles, {
    name: 'MuiDrawer',
    flip: false
})(Drawer);

},{"@babel/runtime/helpers/esm/extends":"fTBFS","@babel/runtime/helpers/esm/objectWithoutProperties":"25tJ4","react":"21dqq","prop-types":"7wKI2","clsx":"83C22","../Modal":"eA3TP","../Backdrop":"2ZW6c","../styles/withStyles":"7U0iM","../Slide":"daGbs","../Paper":"j0s2L","../utils/capitalize":"5AJVX","../styles/transitions":"c5294","../styles/useTheme":"kWUCn","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"daGbs":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>_slideDefault.default
);
var _slide = require("./Slide");
var _slideDefault = parcelHelpers.interopDefault(_slide);

},{"./Slide":"3LRTl","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"3LRTl":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "setTranslateValue", ()=>setTranslateValue
);
var _extends = require("@babel/runtime/helpers/esm/extends");
var _extendsDefault = parcelHelpers.interopDefault(_extends);
var _objectWithoutProperties = require("@babel/runtime/helpers/esm/objectWithoutProperties");
var _objectWithoutPropertiesDefault = parcelHelpers.interopDefault(_objectWithoutProperties);
var _react = require("react");
var _propTypes = require("prop-types");
var _propTypesDefault = parcelHelpers.interopDefault(_propTypes);
var _reactDom = require("react-dom");
var _debounce = require("../utils/debounce");
var _debounceDefault = parcelHelpers.interopDefault(_debounce);
var _reactTransitionGroup = require("react-transition-group");
var _utils = require("@material-ui/utils");
var _useForkRef = require("../utils/useForkRef");
var _useForkRefDefault = parcelHelpers.interopDefault(_useForkRef);
var _useTheme = require("../styles/useTheme");
var _useThemeDefault = parcelHelpers.interopDefault(_useTheme);
var _transitions = require("../styles/transitions");
var _utils1 = require("../transitions/utils"); // Translate the node so he can't be seen on the screen.
// Later, we gonna translate back the node to his original location
// with `none`.`
function getTranslateValue(direction, node) {
    var rect = node.getBoundingClientRect();
    var transform;
    if (node.fakeTransform) transform = node.fakeTransform;
    else {
        var computedStyle = window.getComputedStyle(node);
        transform = computedStyle.getPropertyValue('-webkit-transform') || computedStyle.getPropertyValue('transform');
    }
    var offsetX = 0;
    var offsetY = 0;
    if (transform && transform !== 'none' && typeof transform === 'string') {
        var transformValues = transform.split('(')[1].split(')')[0].split(',');
        offsetX = parseInt(transformValues[4], 10);
        offsetY = parseInt(transformValues[5], 10);
    }
    if (direction === 'left') return "translateX(".concat(window.innerWidth, "px) translateX(").concat(offsetX - rect.left, "px)");
    if (direction === 'right') return "translateX(-".concat(rect.left + rect.width - offsetX, "px)");
    if (direction === 'up') return "translateY(".concat(window.innerHeight, "px) translateY(").concat(offsetY - rect.top, "px)");
     // direction === 'down'
    return "translateY(-".concat(rect.top + rect.height - offsetY, "px)");
}
function setTranslateValue(direction, node) {
    var transform = getTranslateValue(direction, node);
    if (transform) {
        node.style.webkitTransform = transform;
        node.style.transform = transform;
    }
}
var defaultTimeout = {
    enter: _transitions.duration.enteringScreen,
    exit: _transitions.duration.leavingScreen
};
/**
 * The Slide transition is used by the [Drawer](/components/drawers/) component.
 * It uses [react-transition-group](https://github.com/reactjs/react-transition-group) internally.
 */ var Slide = /*#__PURE__*/ _react.forwardRef(function Slide(props, ref) {
    var children = props.children, _props$direction = props.direction, direction = _props$direction === void 0 ? 'down' : _props$direction, inProp = props.in, onEnter = props.onEnter, onEntered = props.onEntered, onEntering = props.onEntering, onExit = props.onExit, onExited = props.onExited, onExiting = props.onExiting, style = props.style, _props$timeout = props.timeout, timeout = _props$timeout === void 0 ? defaultTimeout : _props$timeout, _props$TransitionComp = props.TransitionComponent, TransitionComponent = _props$TransitionComp === void 0 ? _reactTransitionGroup.Transition : _props$TransitionComp, other = _objectWithoutPropertiesDefault.default(props, [
        "children",
        "direction",
        "in",
        "onEnter",
        "onEntered",
        "onEntering",
        "onExit",
        "onExited",
        "onExiting",
        "style",
        "timeout",
        "TransitionComponent"
    ]);
    var theme = _useThemeDefault.default();
    var childrenRef = _react.useRef(null);
    /**
   * used in cloneElement(children, { ref: handleRef })
   */ var handleOwnRef = _react.useCallback(function(instance) {
        // #StrictMode ready
        childrenRef.current = _reactDom.findDOMNode(instance);
    }, []);
    var handleRefIntermediary = _useForkRefDefault.default(children.ref, handleOwnRef);
    var handleRef = _useForkRefDefault.default(handleRefIntermediary, ref);
    var normalizedTransitionCallback = function normalizedTransitionCallback(callback) {
        return function(isAppearing) {
            if (callback) {
                // onEnterXxx and onExitXxx callbacks have a different arguments.length value.
                if (isAppearing === undefined) callback(childrenRef.current);
                else callback(childrenRef.current, isAppearing);
            }
        };
    };
    var handleEnter = normalizedTransitionCallback(function(node, isAppearing) {
        setTranslateValue(direction, node);
        _utils1.reflow(node);
        if (onEnter) onEnter(node, isAppearing);
    });
    var handleEntering = normalizedTransitionCallback(function(node, isAppearing) {
        var transitionProps = _utils1.getTransitionProps({
            timeout: timeout,
            style: style
        }, {
            mode: 'enter'
        });
        node.style.webkitTransition = theme.transitions.create('-webkit-transform', _extendsDefault.default({}, transitionProps, {
            easing: theme.transitions.easing.easeOut
        }));
        node.style.transition = theme.transitions.create('transform', _extendsDefault.default({}, transitionProps, {
            easing: theme.transitions.easing.easeOut
        }));
        node.style.webkitTransform = 'none';
        node.style.transform = 'none';
        if (onEntering) onEntering(node, isAppearing);
    });
    var handleEntered = normalizedTransitionCallback(onEntered);
    var handleExiting = normalizedTransitionCallback(onExiting);
    var handleExit = normalizedTransitionCallback(function(node) {
        var transitionProps = _utils1.getTransitionProps({
            timeout: timeout,
            style: style
        }, {
            mode: 'exit'
        });
        node.style.webkitTransition = theme.transitions.create('-webkit-transform', _extendsDefault.default({}, transitionProps, {
            easing: theme.transitions.easing.sharp
        }));
        node.style.transition = theme.transitions.create('transform', _extendsDefault.default({}, transitionProps, {
            easing: theme.transitions.easing.sharp
        }));
        setTranslateValue(direction, node);
        if (onExit) onExit(node);
    });
    var handleExited = normalizedTransitionCallback(function(node) {
        // No need for transitions when the component is hidden
        node.style.webkitTransition = '';
        node.style.transition = '';
        if (onExited) onExited(node);
    });
    var updatePosition = _react.useCallback(function() {
        if (childrenRef.current) setTranslateValue(direction, childrenRef.current);
    }, [
        direction
    ]);
    _react.useEffect(function() {
        // Skip configuration where the position is screen size invariant.
        if (inProp || direction === 'down' || direction === 'right') return undefined;
        var handleResize = _debounceDefault.default(function() {
            if (childrenRef.current) setTranslateValue(direction, childrenRef.current);
        });
        window.addEventListener('resize', handleResize);
        return function() {
            handleResize.clear();
            window.removeEventListener('resize', handleResize);
        };
    }, [
        direction,
        inProp
    ]);
    _react.useEffect(function() {
        if (!inProp) // We need to update the position of the drawer when the direction change and
        // when it's hidden.
        updatePosition();
    }, [
        inProp,
        updatePosition
    ]);
    return /*#__PURE__*/ _react.createElement(TransitionComponent, _extendsDefault.default({
        nodeRef: childrenRef,
        onEnter: handleEnter,
        onEntered: handleEntered,
        onEntering: handleEntering,
        onExit: handleExit,
        onExited: handleExited,
        onExiting: handleExiting,
        appear: true,
        in: inProp,
        timeout: timeout
    }, other), function(state, childProps) {
        return /*#__PURE__*/ _react.cloneElement(children, _extendsDefault.default({
            ref: handleRef,
            style: _extendsDefault.default({
                visibility: state === 'exited' && !inProp ? 'hidden' : undefined
            }, style, children.props.style)
        }, childProps));
    });
});
Slide.propTypes = {
    // ----------------------------- Warning --------------------------------
    // | These PropTypes are generated from the TypeScript type definitions |
    // |     To update them edit the d.ts file and run "yarn proptypes"     |
    // ----------------------------------------------------------------------
    /**
   * A single child content element.
   */ children: _utils.elementAcceptingRef,
    /**
   * Direction the child node will enter from.
   */ direction: _propTypesDefault.default.oneOf([
        'down',
        'left',
        'right',
        'up'
    ]),
    /**
   * If `true`, show the component; triggers the enter or exit animation.
   */ in: _propTypesDefault.default.bool,
    /**
   * @ignore
   */ onEnter: _propTypesDefault.default.func,
    /**
   * @ignore
   */ onEntered: _propTypesDefault.default.func,
    /**
   * @ignore
   */ onEntering: _propTypesDefault.default.func,
    /**
   * @ignore
   */ onExit: _propTypesDefault.default.func,
    /**
   * @ignore
   */ onExited: _propTypesDefault.default.func,
    /**
   * @ignore
   */ onExiting: _propTypesDefault.default.func,
    /**
   * @ignore
   */ style: _propTypesDefault.default.object,
    /**
   * The duration for the transition, in milliseconds.
   * You may specify a single timeout for all transitions, or individually with an object.
   */ timeout: _propTypesDefault.default.oneOfType([
        _propTypesDefault.default.number,
        _propTypesDefault.default.shape({
            appear: _propTypesDefault.default.number,
            enter: _propTypesDefault.default.number,
            exit: _propTypesDefault.default.number
        })
    ])
};
exports.default = Slide;

},{"@babel/runtime/helpers/esm/extends":"fTBFS","@babel/runtime/helpers/esm/objectWithoutProperties":"25tJ4","react":"21dqq","prop-types":"7wKI2","react-dom":"j6uA9","../utils/debounce":"fsAbo","react-transition-group":"fZSkB","@material-ui/utils":"54RkF","../utils/useForkRef":"kUpGa","../styles/useTheme":"kWUCn","../styles/transitions":"c5294","../transitions/utils":"ixDXW","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"a494k":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>_expansionPanelDefault.default
);
var _expansionPanel = require("./ExpansionPanel");
var _expansionPanelDefault = parcelHelpers.interopDefault(_expansionPanel);

},{"./ExpansionPanel":"1U9gv","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"1U9gv":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "styles", ()=>styles
);
var _extends = require("@babel/runtime/helpers/esm/extends");
var _extendsDefault = parcelHelpers.interopDefault(_extends);
var _toArray = require("@babel/runtime/helpers/esm/toArray");
var _toArrayDefault = parcelHelpers.interopDefault(_toArray);
var _slicedToArray = require("@babel/runtime/helpers/esm/slicedToArray");
var _slicedToArrayDefault = parcelHelpers.interopDefault(_slicedToArray);
var _objectWithoutProperties = require("@babel/runtime/helpers/esm/objectWithoutProperties");
var _objectWithoutPropertiesDefault = parcelHelpers.interopDefault(_objectWithoutProperties);
var _react = require("react");
var _reactIs = require("react-is");
var _propTypes = require("prop-types");
var _propTypesDefault = parcelHelpers.interopDefault(_propTypes);
var _clsx = require("clsx");
var _clsxDefault = parcelHelpers.interopDefault(_clsx);
var _utils = require("@material-ui/utils");
var _collapse = require("../Collapse");
var _collapseDefault = parcelHelpers.interopDefault(_collapse);
var _paper = require("../Paper");
var _paperDefault = parcelHelpers.interopDefault(_paper);
var _withStyles = require("../styles/withStyles");
var _withStylesDefault = parcelHelpers.interopDefault(_withStyles);
var _expansionPanelContext = require("./ExpansionPanelContext");
var _expansionPanelContextDefault = parcelHelpers.interopDefault(_expansionPanelContext);
var _useControlled = require("../utils/useControlled");
var _useControlledDefault = parcelHelpers.interopDefault(_useControlled);
var styles = function styles(theme) {
    var transition = {
        duration: theme.transitions.duration.shortest
    };
    return {
        /* Styles applied to the root element. */ root: {
            position: 'relative',
            transition: theme.transitions.create([
                'margin'
            ], transition),
            '&:before': {
                position: 'absolute',
                left: 0,
                top: -1,
                right: 0,
                height: 1,
                content: '""',
                opacity: 1,
                backgroundColor: theme.palette.divider,
                transition: theme.transitions.create([
                    'opacity',
                    'background-color'
                ], transition)
            },
            '&:first-child': {
                '&:before': {
                    display: 'none'
                }
            },
            '&$expanded': {
                margin: '16px 0',
                '&:first-child': {
                    marginTop: 0
                },
                '&:last-child': {
                    marginBottom: 0
                },
                '&:before': {
                    opacity: 0
                }
            },
            '&$expanded + &': {
                '&:before': {
                    display: 'none'
                }
            },
            '&$disabled': {
                backgroundColor: theme.palette.action.disabledBackground
            }
        },
        /* Styles applied to the root element if `square={false}`. */ rounded: {
            borderRadius: 0,
            '&:first-child': {
                borderTopLeftRadius: theme.shape.borderRadius,
                borderTopRightRadius: theme.shape.borderRadius
            },
            '&:last-child': {
                borderBottomLeftRadius: theme.shape.borderRadius,
                borderBottomRightRadius: theme.shape.borderRadius,
                // Fix a rendering issue on Edge
                '@supports (-ms-ime-align: auto)': {
                    borderBottomLeftRadius: 0,
                    borderBottomRightRadius: 0
                }
            }
        },
        /* Styles applied to the root element if `expanded={true}`. */ expanded: {},
        /* Styles applied to the root element if `disabled={true}`. */ disabled: {}
    };
};
var warnedOnce = false;
/**
 * ⚠️ The ExpansionPanel component was renamed to Accordion to use a more common naming convention.
 *
 * You should use `import { Accordion } from '@material-ui/core'`
 * or `import Accordion from '@material-ui/core/Accordion'`.
 */ var ExpansionPanel = /*#__PURE__*/ _react.forwardRef(function ExpansionPanel(props, ref) {
    if (!warnedOnce) {
        warnedOnce = true;
        console.error([
            'Material-UI: the ExpansionPanel component was renamed to Accordion to use a more common naming convention.',
            '',
            "You should use `import { Accordion } from '@material-ui/core'`",
            "or `import Accordion from '@material-ui/core/Accordion'`"
        ].join('\n'));
    }
    var childrenProp = props.children, classes = props.classes, className = props.className, _props$defaultExpande = props.defaultExpanded, defaultExpanded = _props$defaultExpande === void 0 ? false : _props$defaultExpande, _props$disabled = props.disabled, disabled = _props$disabled === void 0 ? false : _props$disabled, expandedProp = props.expanded, onChange = props.onChange, _props$square = props.square, square = _props$square === void 0 ? false : _props$square, _props$TransitionComp = props.TransitionComponent, TransitionComponent = _props$TransitionComp === void 0 ? _collapseDefault.default : _props$TransitionComp, TransitionProps = props.TransitionProps, other = _objectWithoutPropertiesDefault.default(props, [
        "children",
        "classes",
        "className",
        "defaultExpanded",
        "disabled",
        "expanded",
        "onChange",
        "square",
        "TransitionComponent",
        "TransitionProps"
    ]);
    var _useControlled1 = _useControlledDefault.default({
        controlled: expandedProp,
        default: defaultExpanded,
        name: 'ExpansionPanel',
        state: 'expanded'
    }), _useControlled2 = _slicedToArrayDefault.default(_useControlled1, 2), expanded = _useControlled2[0], setExpandedState = _useControlled2[1];
    var handleChange = _react.useCallback(function(event) {
        setExpandedState(!expanded);
        if (onChange) onChange(event, !expanded);
    }, [
        expanded,
        onChange,
        setExpandedState
    ]);
    var _React$Children$toArr = _react.Children.toArray(childrenProp), _React$Children$toArr2 = _toArrayDefault.default(_React$Children$toArr), summary = _React$Children$toArr2[0], children = _React$Children$toArr2.slice(1);
    var contextValue = _react.useMemo(function() {
        return {
            expanded: expanded,
            disabled: disabled,
            toggle: handleChange
        };
    }, [
        expanded,
        disabled,
        handleChange
    ]);
    return /*#__PURE__*/ _react.createElement(_paperDefault.default, _extendsDefault.default({
        className: _clsxDefault.default(classes.root, className, expanded && classes.expanded, disabled && classes.disabled, !square && classes.rounded),
        ref: ref,
        square: square
    }, other), /*#__PURE__*/ _react.createElement(_expansionPanelContextDefault.default.Provider, {
        value: contextValue
    }, summary), /*#__PURE__*/ _react.createElement(TransitionComponent, _extendsDefault.default({
        in: expanded,
        timeout: "auto"
    }, TransitionProps), /*#__PURE__*/ _react.createElement("div", {
        "aria-labelledby": summary.props.id,
        id: summary.props['aria-controls'],
        role: "region"
    }, children)));
});
ExpansionPanel.propTypes = {
    // ----------------------------- Warning --------------------------------
    // | These PropTypes are generated from the TypeScript type definitions |
    // |     To update them edit the d.ts file and run "yarn proptypes"     |
    // ----------------------------------------------------------------------
    /**
   * The content of the expansion panel.
   */ children: _utils.chainPropTypes(_propTypesDefault.default.node.isRequired, function(props) {
        var summary = _react.Children.toArray(props.children)[0];
        if (_reactIs.isFragment(summary)) return new Error("Material-UI: The ExpansionPanel doesn't accept a Fragment as a child. Consider providing an array instead.");
        if (!/*#__PURE__*/ _react.isValidElement(summary)) return new Error('Material-UI: Expected the first child of ExpansionPanel to be a valid element.');
        return null;
    }),
    /**
   * Override or extend the styles applied to the component.
   * See [CSS API](#css) below for more details.
   */ classes: _propTypesDefault.default.object,
    /**
   * @ignore
   */ className: _propTypesDefault.default.string,
    /**
   * If `true`, expands the panel by default.
   */ defaultExpanded: _propTypesDefault.default.bool,
    /**
   * If `true`, the panel will be displayed in a disabled state.
   */ disabled: _propTypesDefault.default.bool,
    /**
   * If `true`, expands the panel, otherwise collapse it.
   * Setting this prop enables control over the panel.
   */ expanded: _propTypesDefault.default.bool,
    /**
   * Callback fired when the expand/collapse state is changed.
   *
   * @param {object} event The event source of the callback.
   * @param {boolean} expanded The `expanded` state of the panel.
   */ onChange: _propTypesDefault.default.func,
    /**
   * If `true`, rounded corners are disabled.
   */ square: _propTypesDefault.default.bool,
    /**
   * The component used for the collapse effect.
   * [Follow this guide](/components/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.
   */ TransitionComponent: _propTypesDefault.default.elementType,
    /**
   * Props applied to the [`Transition`](http://reactcommunity.org/react-transition-group/transition#Transition-props) element.
   */ TransitionProps: _propTypesDefault.default.object
};
exports.default = _withStylesDefault.default(styles, {
    name: 'MuiExpansionPanel'
})(ExpansionPanel);

},{"@babel/runtime/helpers/esm/extends":"fTBFS","@babel/runtime/helpers/esm/toArray":"cbR4G","@babel/runtime/helpers/esm/slicedToArray":"cBZWN","@babel/runtime/helpers/esm/objectWithoutProperties":"25tJ4","react":"21dqq","react-is":"63mDj","prop-types":"7wKI2","clsx":"83C22","@material-ui/utils":"54RkF","../Collapse":"1KqGq","../Paper":"j0s2L","../styles/withStyles":"7U0iM","./ExpansionPanelContext":"lSrnL","../utils/useControlled":"1ORwD","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"lSrnL":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _react = require("react");
/**
 * @ignore - internal component.
 * @type {React.Context<{} | {expanded: boolean, disabled: boolean, toggle: () => void}>}
 */ var ExpansionPanelContext = _react.createContext({});
ExpansionPanelContext.displayName = 'ExpansionPanelContext';
exports.default = ExpansionPanelContext;

},{"react":"21dqq","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"l85md":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>_expansionPanelActionsDefault.default
);
var _expansionPanelActions = require("./ExpansionPanelActions");
var _expansionPanelActionsDefault = parcelHelpers.interopDefault(_expansionPanelActions);

},{"./ExpansionPanelActions":"1Xch7","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"1Xch7":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "styles", ()=>styles
);
var _extends = require("@babel/runtime/helpers/esm/extends");
var _extendsDefault = parcelHelpers.interopDefault(_extends);
var _objectWithoutProperties = require("@babel/runtime/helpers/esm/objectWithoutProperties");
var _objectWithoutPropertiesDefault = parcelHelpers.interopDefault(_objectWithoutProperties);
var _react = require("react");
var _propTypes = require("prop-types");
var _propTypesDefault = parcelHelpers.interopDefault(_propTypes);
var _clsx = require("clsx");
var _clsxDefault = parcelHelpers.interopDefault(_clsx);
var _withStyles = require("../styles/withStyles");
var _withStylesDefault = parcelHelpers.interopDefault(_withStyles);
var styles = {
    /* Styles applied to the root element. */ root: {
        display: 'flex',
        alignItems: 'center',
        padding: 8,
        justifyContent: 'flex-end'
    },
    /* Styles applied to the root element if `disableSpacing={false}`. */ spacing: {
        '& > :not(:first-child)': {
            marginLeft: 8
        }
    }
};
var warnedOnce = false;
/**
 * ⚠️ The ExpansionPanelActions component was renamed to AccordionActions to use a more common naming convention.
 *
 * You should use `import { AccordionActions } from '@material-ui/core'`
 * or `import AccordionActions from '@material-ui/core/AccordionActions'`.
 */ var ExpansionPanelActions = /*#__PURE__*/ _react.forwardRef(function ExpansionPanelActions(props, ref) {
    if (!warnedOnce) {
        warnedOnce = true;
        console.error([
            'Material-UI: the ExpansionPanelActions component was renamed to AccordionActions to use a more common naming convention.',
            '',
            "You should use `import { AccordionActions } from '@material-ui/core'`",
            "or `import AccordionActions from '@material-ui/core/AccordionActions'`"
        ].join('\n'));
    }
    var classes = props.classes, className = props.className, _props$disableSpacing = props.disableSpacing, disableSpacing = _props$disableSpacing === void 0 ? false : _props$disableSpacing, other = _objectWithoutPropertiesDefault.default(props, [
        "classes",
        "className",
        "disableSpacing"
    ]);
    return /*#__PURE__*/ _react.createElement("div", _extendsDefault.default({
        className: _clsxDefault.default(classes.root, className, !disableSpacing && classes.spacing),
        ref: ref
    }, other));
});
ExpansionPanelActions.propTypes = {
    // ----------------------------- Warning --------------------------------
    // | These PropTypes are generated from the TypeScript type definitions |
    // |     To update them edit the d.ts file and run "yarn proptypes"     |
    // ----------------------------------------------------------------------
    /**
   * The content of the component.
   */ children: _propTypesDefault.default.node,
    /**
   * Override or extend the styles applied to the component.
   * See [CSS API](#css) below for more details.
   */ classes: _propTypesDefault.default.object,
    /**
   * @ignore
   */ className: _propTypesDefault.default.string,
    /**
   * If `true`, the actions do not have additional margin.
   */ disableSpacing: _propTypesDefault.default.bool
};
exports.default = _withStylesDefault.default(styles, {
    name: 'MuiExpansionPanelActions'
})(ExpansionPanelActions);

},{"@babel/runtime/helpers/esm/extends":"fTBFS","@babel/runtime/helpers/esm/objectWithoutProperties":"25tJ4","react":"21dqq","prop-types":"7wKI2","clsx":"83C22","../styles/withStyles":"7U0iM","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"c80QM":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>_expansionPanelDetailsDefault.default
);
var _expansionPanelDetails = require("./ExpansionPanelDetails");
var _expansionPanelDetailsDefault = parcelHelpers.interopDefault(_expansionPanelDetails);

},{"./ExpansionPanelDetails":"5YBG5","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"5YBG5":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "styles", ()=>styles
);
var _extends = require("@babel/runtime/helpers/esm/extends");
var _extendsDefault = parcelHelpers.interopDefault(_extends);
var _objectWithoutProperties = require("@babel/runtime/helpers/esm/objectWithoutProperties");
var _objectWithoutPropertiesDefault = parcelHelpers.interopDefault(_objectWithoutProperties);
var _react = require("react");
var _propTypes = require("prop-types");
var _propTypesDefault = parcelHelpers.interopDefault(_propTypes);
var _clsx = require("clsx");
var _clsxDefault = parcelHelpers.interopDefault(_clsx);
var _withStyles = require("../styles/withStyles");
var _withStylesDefault = parcelHelpers.interopDefault(_withStyles);
var styles = function styles(theme) {
    return {
        /* Styles applied to the root element. */ root: {
            display: 'flex',
            padding: theme.spacing(1, 2, 2)
        }
    };
};
var warnedOnce = false;
/**
 * ⚠️ The ExpansionPanelDetails component was renamed to AccordionDetails to use a more common naming convention.
 *
 * You should use `import { AccordionDetails } from '@material-ui/core'`
 * or `import AccordionDetails from '@material-ui/core/AccordionDetails'`.
 */ var ExpansionPanelDetails = /*#__PURE__*/ _react.forwardRef(function ExpansionPanelDetails(props, ref) {
    if (!warnedOnce) {
        warnedOnce = true;
        console.error([
            'Material-UI: the ExpansionPanelDetails component was renamed to AccordionDetails to use a more common naming convention.',
            '',
            "You should use `import { AccordionDetails } from '@material-ui/core'`",
            "or `import AccordionDetails from '@material-ui/core/AccordionActions'`"
        ].join('\n'));
    }
    var classes = props.classes, className = props.className, other = _objectWithoutPropertiesDefault.default(props, [
        "classes",
        "className"
    ]);
    return /*#__PURE__*/ _react.createElement("div", _extendsDefault.default({
        className: _clsxDefault.default(classes.root, className),
        ref: ref
    }, other));
});
ExpansionPanelDetails.propTypes = {
    // ----------------------------- Warning --------------------------------
    // | These PropTypes are generated from the TypeScript type definitions |
    // |     To update them edit the d.ts file and run "yarn proptypes"     |
    // ----------------------------------------------------------------------
    /**
   * The content of the expansion panel details.
   */ children: _propTypesDefault.default.node,
    /**
   * Override or extend the styles applied to the component.
   * See [CSS API](#css) below for more details.
   */ classes: _propTypesDefault.default.object,
    /**
   * @ignore
   */ className: _propTypesDefault.default.string
};
exports.default = _withStylesDefault.default(styles, {
    name: 'MuiExpansionPanelDetails'
})(ExpansionPanelDetails);

},{"@babel/runtime/helpers/esm/extends":"fTBFS","@babel/runtime/helpers/esm/objectWithoutProperties":"25tJ4","react":"21dqq","prop-types":"7wKI2","clsx":"83C22","../styles/withStyles":"7U0iM","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"kbMkK":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>_expansionPanelSummaryDefault.default
);
var _expansionPanelSummary = require("./ExpansionPanelSummary");
var _expansionPanelSummaryDefault = parcelHelpers.interopDefault(_expansionPanelSummary);

},{"./ExpansionPanelSummary":"27rWi","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"27rWi":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "styles", ()=>styles
);
var _extends = require("@babel/runtime/helpers/esm/extends");
var _extendsDefault = parcelHelpers.interopDefault(_extends);
var _objectWithoutProperties = require("@babel/runtime/helpers/esm/objectWithoutProperties");
var _objectWithoutPropertiesDefault = parcelHelpers.interopDefault(_objectWithoutProperties);
/* eslint-disable jsx-a11y/aria-role */ var _react = require("react");
var _propTypes = require("prop-types");
var _propTypesDefault = parcelHelpers.interopDefault(_propTypes);
var _clsx = require("clsx");
var _clsxDefault = parcelHelpers.interopDefault(_clsx);
var _buttonBase = require("../ButtonBase");
var _buttonBaseDefault = parcelHelpers.interopDefault(_buttonBase);
var _iconButton = require("../IconButton");
var _iconButtonDefault = parcelHelpers.interopDefault(_iconButton);
var _withStyles = require("../styles/withStyles");
var _withStylesDefault = parcelHelpers.interopDefault(_withStyles);
var _expansionPanelContext = require("../ExpansionPanel/ExpansionPanelContext");
var _expansionPanelContextDefault = parcelHelpers.interopDefault(_expansionPanelContext);
var styles = function styles(theme) {
    var transition = {
        duration: theme.transitions.duration.shortest
    };
    return {
        /* Styles applied to the root element. */ root: {
            display: 'flex',
            minHeight: 48,
            transition: theme.transitions.create([
                'min-height',
                'background-color'
            ], transition),
            padding: theme.spacing(0, 2),
            '&:hover:not($disabled)': {
                cursor: 'pointer'
            },
            '&$expanded': {
                minHeight: 64
            },
            '&$focused': {
                backgroundColor: theme.palette.action.focus
            },
            '&$disabled': {
                opacity: theme.palette.action.disabledOpacity
            }
        },
        /* Pseudo-class applied to the root element, children wrapper element and `IconButton` component if `expanded={true}`. */ expanded: {},
        /* Pseudo-class applied to the root element if `focused={true}`. */ focused: {},
        /* Pseudo-class applied to the root element if `disabled={true}`. */ disabled: {},
        /* Styles applied to the children wrapper element. */ content: {
            display: 'flex',
            flexGrow: 1,
            transition: theme.transitions.create([
                'margin'
            ], transition),
            margin: '12px 0',
            '&$expanded': {
                margin: '20px 0'
            }
        },
        /* Styles applied to the `IconButton` component when `expandIcon` is supplied. */ expandIcon: {
            transform: 'rotate(0deg)',
            transition: theme.transitions.create('transform', transition),
            '&:hover': {
                // Disable the hover effect for the IconButton,
                // because a hover effect should apply to the entire Expand button and
                // not only to the IconButton.
                backgroundColor: 'transparent'
            },
            '&$expanded': {
                transform: 'rotate(180deg)'
            }
        }
    };
};
var warnedOnce = false;
/**
 * ⚠️ The ExpansionPanelSummary component was renamed to AccordionSummary to use a more common naming convention.
 *
 * You should use `import { AccordionSummary } from '@material-ui/core'`
 * or `import AccordionSummary from '@material-ui/core/AccordionSummary'`.
 */ var ExpansionPanelSummary = /*#__PURE__*/ _react.forwardRef(function ExpansionPanelSummary(props, ref) {
    if (!warnedOnce) {
        warnedOnce = true;
        console.error([
            'Material-UI: the ExpansionPanelSummary component was renamed to AccordionSummary to use a more common naming convention.',
            '',
            "You should use `import { AccordionSummary } from '@material-ui/core'`",
            "or `import AccordionSummary from '@material-ui/core/AccordionSummary'`"
        ].join('\n'));
    }
    var children = props.children, classes = props.classes, className = props.className, expandIcon = props.expandIcon, IconButtonProps = props.IconButtonProps, onBlur = props.onBlur, onClick = props.onClick, onFocusVisible = props.onFocusVisible, other = _objectWithoutPropertiesDefault.default(props, [
        "children",
        "classes",
        "className",
        "expandIcon",
        "IconButtonProps",
        "onBlur",
        "onClick",
        "onFocusVisible"
    ]);
    var _React$useState = _react.useState(false), focusedState = _React$useState[0], setFocusedState = _React$useState[1];
    var handleFocusVisible = function handleFocusVisible(event) {
        setFocusedState(true);
        if (onFocusVisible) onFocusVisible(event);
    };
    var handleBlur = function handleBlur(event) {
        setFocusedState(false);
        if (onBlur) onBlur(event);
    };
    var _React$useContext = _react.useContext(_expansionPanelContextDefault.default), _React$useContext$dis = _React$useContext.disabled, disabled = _React$useContext$dis === void 0 ? false : _React$useContext$dis, expanded = _React$useContext.expanded, toggle = _React$useContext.toggle;
    var handleChange = function handleChange(event) {
        if (toggle) toggle(event);
        if (onClick) onClick(event);
    };
    return /*#__PURE__*/ _react.createElement(_buttonBaseDefault.default, _extendsDefault.default({
        focusRipple: false,
        disableRipple: true,
        disabled: disabled,
        component: "div",
        "aria-expanded": expanded,
        className: _clsxDefault.default(classes.root, className, disabled && classes.disabled, expanded && classes.expanded, focusedState && classes.focused),
        onFocusVisible: handleFocusVisible,
        onBlur: handleBlur,
        onClick: handleChange,
        ref: ref
    }, other), /*#__PURE__*/ _react.createElement("div", {
        className: _clsxDefault.default(classes.content, expanded && classes.expanded)
    }, children), expandIcon && /*#__PURE__*/ _react.createElement(_iconButtonDefault.default, _extendsDefault.default({
        className: _clsxDefault.default(classes.expandIcon, expanded && classes.expanded),
        edge: "end",
        component: "div",
        tabIndex: null,
        role: null,
        "aria-hidden": true
    }, IconButtonProps), expandIcon));
});
ExpansionPanelSummary.propTypes = {
    // ----------------------------- Warning --------------------------------
    // | These PropTypes are generated from the TypeScript type definitions |
    // |     To update them edit the d.ts file and run "yarn proptypes"     |
    // ----------------------------------------------------------------------
    /**
   * The content of the expansion panel summary.
   */ children: _propTypesDefault.default.node,
    /**
   * Override or extend the styles applied to the component.
   * See [CSS API](#css) below for more details.
   */ classes: _propTypesDefault.default.object,
    /**
   * @ignore
   */ className: _propTypesDefault.default.string,
    /**
   * The icon to display as the expand indicator.
   */ expandIcon: _propTypesDefault.default.node,
    /**
   * Props applied to the `IconButton` element wrapping the expand icon.
   */ IconButtonProps: _propTypesDefault.default.object,
    /**
   * @ignore
   */ onBlur: _propTypesDefault.default.func,
    /**
   * @ignore
   */ onClick: _propTypesDefault.default.func,
    /**
   * Callback fired when the component is focused with a keyboard.
   * We trigger a `onFocus` callback too.
   */ onFocusVisible: _propTypesDefault.default.func
};
exports.default = _withStylesDefault.default(styles, {
    name: 'MuiExpansionPanelSummary'
})(ExpansionPanelSummary);

},{"@babel/runtime/helpers/esm/extends":"fTBFS","@babel/runtime/helpers/esm/objectWithoutProperties":"25tJ4","react":"21dqq","prop-types":"7wKI2","clsx":"83C22","../ButtonBase":"2TQRV","../IconButton":"cer9e","../styles/withStyles":"7U0iM","../ExpansionPanel/ExpansionPanelContext":"lSrnL","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"bCQL6":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>_fabDefault.default
);
var _fab = require("./Fab");
var _fabDefault = parcelHelpers.interopDefault(_fab);

},{"./Fab":"fnBps","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"fnBps":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "styles", ()=>styles
);
var _objectWithoutProperties = require("@babel/runtime/helpers/esm/objectWithoutProperties");
var _objectWithoutPropertiesDefault = parcelHelpers.interopDefault(_objectWithoutProperties);
var _extends = require("@babel/runtime/helpers/esm/extends");
var _extendsDefault = parcelHelpers.interopDefault(_extends);
var _react = require("react");
var _propTypes = require("prop-types");
var _propTypesDefault = parcelHelpers.interopDefault(_propTypes);
var _clsx = require("clsx");
var _clsxDefault = parcelHelpers.interopDefault(_clsx);
var _utils = require("@material-ui/utils");
var _withStyles = require("../styles/withStyles");
var _withStylesDefault = parcelHelpers.interopDefault(_withStyles);
var _buttonBase = require("../ButtonBase");
var _buttonBaseDefault = parcelHelpers.interopDefault(_buttonBase);
var _capitalize = require("../utils/capitalize");
var _capitalizeDefault = parcelHelpers.interopDefault(_capitalize);
var styles = function styles(theme) {
    return {
        /* Styles applied to the root element. */ root: _extendsDefault.default({}, theme.typography.button, {
            boxSizing: 'border-box',
            minHeight: 36,
            transition: theme.transitions.create([
                'background-color',
                'box-shadow',
                'border'
            ], {
                duration: theme.transitions.duration.short
            }),
            borderRadius: '50%',
            padding: 0,
            minWidth: 0,
            width: 56,
            height: 56,
            boxShadow: theme.shadows[6],
            '&:active': {
                boxShadow: theme.shadows[12]
            },
            color: theme.palette.getContrastText(theme.palette.grey[300]),
            backgroundColor: theme.palette.grey[300],
            '&:hover': {
                backgroundColor: theme.palette.grey.A100,
                // Reset on touch devices, it doesn't add specificity
                '@media (hover: none)': {
                    backgroundColor: theme.palette.grey[300]
                },
                '&$disabled': {
                    backgroundColor: theme.palette.action.disabledBackground
                },
                textDecoration: 'none'
            },
            '&$focusVisible': {
                boxShadow: theme.shadows[6]
            },
            '&$disabled': {
                color: theme.palette.action.disabled,
                boxShadow: theme.shadows[0],
                backgroundColor: theme.palette.action.disabledBackground
            }
        }),
        /* Styles applied to the span element that wraps the children. */ label: {
            width: '100%',
            // assure the correct width for iOS Safari
            display: 'inherit',
            alignItems: 'inherit',
            justifyContent: 'inherit'
        },
        /* Styles applied to the root element if `color="primary"`. */ primary: {
            color: theme.palette.primary.contrastText,
            backgroundColor: theme.palette.primary.main,
            '&:hover': {
                backgroundColor: theme.palette.primary.dark,
                // Reset on touch devices, it doesn't add specificity
                '@media (hover: none)': {
                    backgroundColor: theme.palette.primary.main
                }
            }
        },
        /* Styles applied to the root element if `color="secondary"`. */ secondary: {
            color: theme.palette.secondary.contrastText,
            backgroundColor: theme.palette.secondary.main,
            '&:hover': {
                backgroundColor: theme.palette.secondary.dark,
                // Reset on touch devices, it doesn't add specificity
                '@media (hover: none)': {
                    backgroundColor: theme.palette.secondary.main
                }
            }
        },
        /* Styles applied to the root element if `variant="extended"`. */ extended: {
            borderRadius: 24,
            padding: '0 16px',
            width: 'auto',
            minHeight: 'auto',
            minWidth: 48,
            height: 48,
            '&$sizeSmall': {
                width: 'auto',
                padding: '0 8px',
                borderRadius: 17,
                minWidth: 34,
                height: 34
            },
            '&$sizeMedium': {
                width: 'auto',
                padding: '0 16px',
                borderRadius: 20,
                minWidth: 40,
                height: 40
            }
        },
        /* Pseudo-class applied to the ButtonBase root element if the button is keyboard focused. */ focusVisible: {},
        /* Pseudo-class applied to the root element if `disabled={true}`. */ disabled: {},
        /* Styles applied to the root element if `color="inherit"`. */ colorInherit: {
            color: 'inherit'
        },
        /* Styles applied to the root element if `size="small"``. */ sizeSmall: {
            width: 40,
            height: 40
        },
        /* Styles applied to the root element if `size="medium"``. */ sizeMedium: {
            width: 48,
            height: 48
        }
    };
};
var Fab = /*#__PURE__*/ _react.forwardRef(function Fab(props, ref) {
    var children = props.children, classes = props.classes, className = props.className, _props$color = props.color, color = _props$color === void 0 ? 'default' : _props$color, _props$component = props.component, component = _props$component === void 0 ? 'button' : _props$component, _props$disabled = props.disabled, disabled = _props$disabled === void 0 ? false : _props$disabled, _props$disableFocusRi = props.disableFocusRipple, disableFocusRipple = _props$disableFocusRi === void 0 ? false : _props$disableFocusRi, focusVisibleClassName = props.focusVisibleClassName, _props$size = props.size, size = _props$size === void 0 ? 'large' : _props$size, _props$variant = props.variant, variant = _props$variant === void 0 ? 'circular' : _props$variant, other = _objectWithoutPropertiesDefault.default(props, [
        "children",
        "classes",
        "className",
        "color",
        "component",
        "disabled",
        "disableFocusRipple",
        "focusVisibleClassName",
        "size",
        "variant"
    ]);
    return /*#__PURE__*/ _react.createElement(_buttonBaseDefault.default, _extendsDefault.default({
        className: _clsxDefault.default(classes.root, className, size !== 'large' && classes["size".concat(_capitalizeDefault.default(size))], disabled && classes.disabled, variant === 'extended' && classes.extended, {
            'primary': classes.primary,
            'secondary': classes.secondary,
            'inherit': classes.colorInherit
        }[color]),
        component: component,
        disabled: disabled,
        focusRipple: !disableFocusRipple,
        focusVisibleClassName: _clsxDefault.default(classes.focusVisible, focusVisibleClassName),
        ref: ref
    }, other), /*#__PURE__*/ _react.createElement("span", {
        className: classes.label
    }, children));
});
Fab.propTypes = {
    // ----------------------------- Warning --------------------------------
    // | These PropTypes are generated from the TypeScript type definitions |
    // |     To update them edit the d.ts file and run "yarn proptypes"     |
    // ----------------------------------------------------------------------
    /**
   * The content of the button.
   */ children: _propTypesDefault.default/* @typescript-to-proptypes-ignore */ .node.isRequired,
    /**
   * Override or extend the styles applied to the component.
   * See [CSS API](#css) below for more details.
   */ classes: _propTypesDefault.default.object,
    /**
   * @ignore
   */ className: _propTypesDefault.default.string,
    /**
   * The color of the component. It supports those theme colors that make sense for this component.
   */ color: _propTypesDefault.default.oneOf([
        'default',
        'inherit',
        'primary',
        'secondary'
    ]),
    /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */ component: _propTypesDefault.default/* @typescript-to-proptypes-ignore */ .elementType,
    /**
   * If `true`, the button will be disabled.
   */ disabled: _propTypesDefault.default.bool,
    /**
   * If `true`, the  keyboard focus ripple will be disabled.
   */ disableFocusRipple: _propTypesDefault.default.bool,
    /**
   * If `true`, the ripple effect will be disabled.
   */ disableRipple: _propTypesDefault.default.bool,
    /**
   * @ignore
   */ focusVisibleClassName: _propTypesDefault.default.string,
    /**
   * The URL to link to when the button is clicked.
   * If defined, an `a` element will be used as the root node.
   */ href: _propTypesDefault.default.string,
    /**
   * The size of the button.
   * `small` is equivalent to the dense button styling.
   */ size: _propTypesDefault.default.oneOf([
        'large',
        'medium',
        'small'
    ]),
    /**
   * The variant to use.
   * 'round' is deprecated, use 'circular' instead.
   */ variant: _utils.chainPropTypes(_propTypesDefault.default.oneOf([
        'extended',
        'circular',
        'round'
    ]), function(props) {
        if (props.variant === 'round') throw new Error('Material-UI: variant="round" was renamed variant="circular" for consistency.');
        return null;
    })
};
exports.default = _withStylesDefault.default(styles, {
    name: 'MuiFab'
})(Fab);

},{"@babel/runtime/helpers/esm/objectWithoutProperties":"25tJ4","@babel/runtime/helpers/esm/extends":"fTBFS","react":"21dqq","prop-types":"7wKI2","clsx":"83C22","@material-ui/utils":"54RkF","../styles/withStyles":"7U0iM","../ButtonBase":"2TQRV","../utils/capitalize":"5AJVX","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"clmGe":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>_filledInputDefault.default
);
var _filledInput = require("./FilledInput");
var _filledInputDefault = parcelHelpers.interopDefault(_filledInput);

},{"./FilledInput":"elJ8m","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"elJ8m":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "styles", ()=>styles
);
var _extends = require("@babel/runtime/helpers/esm/extends");
var _extendsDefault = parcelHelpers.interopDefault(_extends);
var _objectWithoutProperties = require("@babel/runtime/helpers/esm/objectWithoutProperties");
var _objectWithoutPropertiesDefault = parcelHelpers.interopDefault(_objectWithoutProperties);
var _react = require("react");
var _propTypes = require("prop-types");
var _propTypesDefault = parcelHelpers.interopDefault(_propTypes);
var _clsx = require("clsx");
var _clsxDefault = parcelHelpers.interopDefault(_clsx);
var _utils = require("@material-ui/utils");
var _inputBase = require("../InputBase");
var _inputBaseDefault = parcelHelpers.interopDefault(_inputBase);
var _withStyles = require("../styles/withStyles");
var _withStylesDefault = parcelHelpers.interopDefault(_withStyles);
var styles = function styles(theme) {
    var light = theme.palette.type === 'light';
    var bottomLineColor = light ? 'rgba(0, 0, 0, 0.42)' : 'rgba(255, 255, 255, 0.7)';
    var backgroundColor = light ? 'rgba(0, 0, 0, 0.09)' : 'rgba(255, 255, 255, 0.09)';
    return {
        /* Styles applied to the root element. */ root: {
            position: 'relative',
            backgroundColor: backgroundColor,
            borderTopLeftRadius: theme.shape.borderRadius,
            borderTopRightRadius: theme.shape.borderRadius,
            transition: theme.transitions.create('background-color', {
                duration: theme.transitions.duration.shorter,
                easing: theme.transitions.easing.easeOut
            }),
            '&:hover': {
                backgroundColor: light ? 'rgba(0, 0, 0, 0.13)' : 'rgba(255, 255, 255, 0.13)',
                // Reset on touch devices, it doesn't add specificity
                '@media (hover: none)': {
                    backgroundColor: backgroundColor
                }
            },
            '&$focused': {
                backgroundColor: light ? 'rgba(0, 0, 0, 0.09)' : 'rgba(255, 255, 255, 0.09)'
            },
            '&$disabled': {
                backgroundColor: light ? 'rgba(0, 0, 0, 0.12)' : 'rgba(255, 255, 255, 0.12)'
            }
        },
        /* Styles applied to the root element if color secondary. */ colorSecondary: {
            '&$underline:after': {
                borderBottomColor: theme.palette.secondary.main
            }
        },
        /* Styles applied to the root element if `disableUnderline={false}`. */ underline: {
            '&:after': {
                borderBottom: "2px solid ".concat(theme.palette.primary.main),
                left: 0,
                bottom: 0,
                // Doing the other way around crash on IE 11 "''" https://github.com/cssinjs/jss/issues/242
                content: '""',
                position: 'absolute',
                right: 0,
                transform: 'scaleX(0)',
                transition: theme.transitions.create('transform', {
                    duration: theme.transitions.duration.shorter,
                    easing: theme.transitions.easing.easeOut
                }),
                pointerEvents: 'none' // Transparent to the hover style.
            },
            '&$focused:after': {
                transform: 'scaleX(1)'
            },
            '&$error:after': {
                borderBottomColor: theme.palette.error.main,
                transform: 'scaleX(1)' // error is always underlined in red
            },
            '&:before': {
                borderBottom: "1px solid ".concat(bottomLineColor),
                left: 0,
                bottom: 0,
                // Doing the other way around crash on IE 11 "''" https://github.com/cssinjs/jss/issues/242
                content: '"\\00a0"',
                position: 'absolute',
                right: 0,
                transition: theme.transitions.create('border-bottom-color', {
                    duration: theme.transitions.duration.shorter
                }),
                pointerEvents: 'none' // Transparent to the hover style.
            },
            '&:hover:before': {
                borderBottom: "1px solid ".concat(theme.palette.text.primary)
            },
            '&$disabled:before': {
                borderBottomStyle: 'dotted'
            }
        },
        /* Pseudo-class applied to the root element if the component is focused. */ focused: {},
        /* Pseudo-class applied to the root element if `disabled={true}`. */ disabled: {},
        /* Styles applied to the root element if `startAdornment` is provided. */ adornedStart: {
            paddingLeft: 12
        },
        /* Styles applied to the root element if `endAdornment` is provided. */ adornedEnd: {
            paddingRight: 12
        },
        /* Pseudo-class applied to the root element if `error={true}`. */ error: {},
        /* Styles applied to the `input` element if `margin="dense"`. */ marginDense: {},
        /* Styles applied to the root element if `multiline={true}`. */ multiline: {
            padding: '27px 12px 10px',
            '&$marginDense': {
                paddingTop: 23,
                paddingBottom: 6
            }
        },
        /* Styles applied to the `input` element. */ input: {
            padding: '27px 12px 10px',
            '&:-webkit-autofill': {
                WebkitBoxShadow: theme.palette.type === 'light' ? null : '0 0 0 100px #266798 inset',
                WebkitTextFillColor: theme.palette.type === 'light' ? null : '#fff',
                caretColor: theme.palette.type === 'light' ? null : '#fff',
                borderTopLeftRadius: 'inherit',
                borderTopRightRadius: 'inherit'
            }
        },
        /* Styles applied to the `input` element if `margin="dense"`. */ inputMarginDense: {
            paddingTop: 23,
            paddingBottom: 6
        },
        /* Styles applied to the `input` if in `<FormControl hiddenLabel />`. */ inputHiddenLabel: {
            paddingTop: 18,
            paddingBottom: 19,
            '&$inputMarginDense': {
                paddingTop: 10,
                paddingBottom: 11
            }
        },
        /* Styles applied to the `input` element if `multiline={true}`. */ inputMultiline: {
            padding: 0
        },
        /* Styles applied to the `input` element if `startAdornment` is provided. */ inputAdornedStart: {
            paddingLeft: 0
        },
        /* Styles applied to the `input` element if `endAdornment` is provided. */ inputAdornedEnd: {
            paddingRight: 0
        }
    };
};
var FilledInput = /*#__PURE__*/ _react.forwardRef(function FilledInput(props, ref) {
    var disableUnderline = props.disableUnderline, classes = props.classes, _props$fullWidth = props.fullWidth, fullWidth = _props$fullWidth === void 0 ? false : _props$fullWidth, _props$inputComponent = props.inputComponent, inputComponent = _props$inputComponent === void 0 ? 'input' : _props$inputComponent, _props$multiline = props.multiline, multiline = _props$multiline === void 0 ? false : _props$multiline, _props$type = props.type, type = _props$type === void 0 ? 'text' : _props$type, other = _objectWithoutPropertiesDefault.default(props, [
        "disableUnderline",
        "classes",
        "fullWidth",
        "inputComponent",
        "multiline",
        "type"
    ]);
    return /*#__PURE__*/ _react.createElement(_inputBaseDefault.default, _extendsDefault.default({
        classes: _extendsDefault.default({}, classes, {
            root: _clsxDefault.default(classes.root, !disableUnderline && classes.underline),
            underline: null
        }),
        fullWidth: fullWidth,
        inputComponent: inputComponent,
        multiline: multiline,
        ref: ref,
        type: type
    }, other));
});
FilledInput.propTypes = {
    // ----------------------------- Warning --------------------------------
    // | These PropTypes are generated from the TypeScript type definitions |
    // |     To update them edit the d.ts file and run "yarn proptypes"     |
    // ----------------------------------------------------------------------
    /**
   * This prop helps users to fill forms faster, especially on mobile devices.
   * The name can be confusing, as it's more like an autofill.
   * You can learn more about it [following the specification](https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#autofill).
   */ autoComplete: _propTypesDefault.default.string,
    /**
   * If `true`, the `input` element will be focused during the first mount.
   */ autoFocus: _propTypesDefault.default.bool,
    /**
   * Override or extend the styles applied to the component.
   * See [CSS API](#css) below for more details.
   */ classes: _propTypesDefault.default.object,
    /**
   * The color of the component. It supports those theme colors that make sense for this component.
   */ color: _propTypesDefault.default.oneOf([
        'primary',
        'secondary'
    ]),
    /**
   * The default `input` element value. Use when the component is not controlled.
   */ defaultValue: _propTypesDefault.default.any,
    /**
   * If `true`, the `input` element will be disabled.
   */ disabled: _propTypesDefault.default.bool,
    /**
   * If `true`, the input will not have an underline.
   */ disableUnderline: _propTypesDefault.default.bool,
    /**
   * End `InputAdornment` for this component.
   */ endAdornment: _propTypesDefault.default.node,
    /**
   * If `true`, the input will indicate an error. This is normally obtained via context from
   * FormControl.
   */ error: _propTypesDefault.default.bool,
    /**
   * If `true`, the input will take up the full width of its container.
   */ fullWidth: _propTypesDefault.default.bool,
    /**
   * The id of the `input` element.
   */ id: _propTypesDefault.default.string,
    /**
   * The component used for the `input` element.
   * Either a string to use a HTML element or a component.
   */ inputComponent: _propTypesDefault.default.elementType,
    /**
   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.
   */ inputProps: _propTypesDefault.default.object,
    /**
   * Pass a ref to the `input` element.
   */ inputRef: _utils.refType,
    /**
   * If `dense`, will adjust vertical spacing. This is normally obtained via context from
   * FormControl.
   */ margin: _propTypesDefault.default.oneOf([
        'dense',
        'none'
    ]),
    /**
   * Maximum number of rows to display when multiline option is set to true.
   */ maxRows: _propTypesDefault.default.oneOfType([
        _propTypesDefault.default.number,
        _propTypesDefault.default.string
    ]),
    /**
   * If `true`, a textarea element will be rendered.
   */ multiline: _propTypesDefault.default.bool,
    /**
   * Name attribute of the `input` element.
   */ name: _propTypesDefault.default.string,
    /**
   * Callback fired when the value is changed.
   *
   * @param {object} event The event source of the callback.
   * You can pull out the new value by accessing `event.target.value` (string).
   */ onChange: _propTypesDefault.default.func,
    /**
   * The short hint displayed in the input before the user enters a value.
   */ placeholder: _propTypesDefault.default.string,
    /**
   * It prevents the user from changing the value of the field
   * (not from interacting with the field).
   */ readOnly: _propTypesDefault.default.bool,
    /**
   * If `true`, the `input` element will be required.
   */ required: _propTypesDefault.default.bool,
    /**
   * Number of rows to display when multiline option is set to true.
   */ rows: _propTypesDefault.default.oneOfType([
        _propTypesDefault.default.number,
        _propTypesDefault.default.string
    ]),
    /**
   * Start `InputAdornment` for this component.
   */ startAdornment: _propTypesDefault.default.node,
    /**
   * Type of the `input` element. It should be [a valid HTML5 input type](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Form_%3Cinput%3E_types).
   */ type: _propTypesDefault.default.string,
    /**
   * The value of the `input` element, required for a controlled component.
   */ value: _propTypesDefault.default.any
};
FilledInput.muiName = 'Input';
exports.default = _withStylesDefault.default(styles, {
    name: 'MuiFilledInput'
})(FilledInput);

},{"@babel/runtime/helpers/esm/extends":"fTBFS","@babel/runtime/helpers/esm/objectWithoutProperties":"25tJ4","react":"21dqq","prop-types":"7wKI2","clsx":"83C22","@material-ui/utils":"54RkF","../InputBase":"4MrXd","../styles/withStyles":"7U0iM","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"4MrXd":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>_inputBaseDefault.default
);
var _inputBase = require("./InputBase");
var _inputBaseDefault = parcelHelpers.interopDefault(_inputBase);

},{"./InputBase":"j635a","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"j635a":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "styles", ()=>styles
);
var _objectWithoutProperties = require("@babel/runtime/helpers/esm/objectWithoutProperties");
var _objectWithoutPropertiesDefault = parcelHelpers.interopDefault(_objectWithoutProperties);
var _extends = require("@babel/runtime/helpers/esm/extends");
var _extendsDefault = parcelHelpers.interopDefault(_extends);
var _utils = require("@material-ui/utils");
/* eslint-disable jsx-a11y/click-events-have-key-events, jsx-a11y/no-static-element-interactions */ var _react = require("react");
var _propTypes = require("prop-types");
var _propTypesDefault = parcelHelpers.interopDefault(_propTypes);
var _clsx = require("clsx");
var _clsxDefault = parcelHelpers.interopDefault(_clsx);
var _formControlState = require("../FormControl/formControlState");
var _formControlStateDefault = parcelHelpers.interopDefault(_formControlState);
var _formControlContext = require("../FormControl/FormControlContext");
var _formControlContextDefault = parcelHelpers.interopDefault(_formControlContext);
var _withStyles = require("../styles/withStyles");
var _withStylesDefault = parcelHelpers.interopDefault(_withStyles);
var _capitalize = require("../utils/capitalize");
var _capitalizeDefault = parcelHelpers.interopDefault(_capitalize);
var _useForkRef = require("../utils/useForkRef");
var _useForkRefDefault = parcelHelpers.interopDefault(_useForkRef);
var _textareaAutosize = require("../TextareaAutosize");
var _textareaAutosizeDefault = parcelHelpers.interopDefault(_textareaAutosize);
var _utils1 = require("./utils");
var styles = function styles(theme) {
    var light = theme.palette.type === 'light';
    var placeholder = {
        color: 'currentColor',
        opacity: light ? 0.42 : 0.5,
        transition: theme.transitions.create('opacity', {
            duration: theme.transitions.duration.shorter
        })
    };
    var placeholderHidden = {
        opacity: '0 !important'
    };
    var placeholderVisible = {
        opacity: light ? 0.42 : 0.5
    };
    return {
        '@global': {
            '@keyframes mui-auto-fill': {},
            '@keyframes mui-auto-fill-cancel': {}
        },
        /* Styles applied to the root element. */ root: _extendsDefault.default({}, theme.typography.body1, {
            color: theme.palette.text.primary,
            lineHeight: '1.1876em',
            // Reset (19px), match the native input line-height
            boxSizing: 'border-box',
            // Prevent padding issue with fullWidth.
            position: 'relative',
            cursor: 'text',
            display: 'inline-flex',
            alignItems: 'center',
            '&$disabled': {
                color: theme.palette.text.disabled,
                cursor: 'default'
            }
        }),
        /* Styles applied to the root element if the component is a descendant of `FormControl`. */ formControl: {},
        /* Styles applied to the root element if the component is focused. */ focused: {},
        /* Styles applied to the root element if `disabled={true}`. */ disabled: {},
        /* Styles applied to the root element if `startAdornment` is provided. */ adornedStart: {},
        /* Styles applied to the root element if `endAdornment` is provided. */ adornedEnd: {},
        /* Pseudo-class applied to the root element if `error={true}`. */ error: {},
        /* Styles applied to the `input` element if `margin="dense"`. */ marginDense: {},
        /* Styles applied to the root element if `multiline={true}`. */ multiline: {
            padding: "".concat(6, "px 0 ").concat(7, "px"),
            '&$marginDense': {
                paddingTop: 3
            }
        },
        /* Styles applied to the root element if the color is secondary. */ colorSecondary: {},
        /* Styles applied to the root element if `fullWidth={true}`. */ fullWidth: {
            width: '100%'
        },
        /* Styles applied to the `input` element. */ input: {
            font: 'inherit',
            letterSpacing: 'inherit',
            color: 'currentColor',
            padding: "".concat(6, "px 0 ").concat(7, "px"),
            border: 0,
            boxSizing: 'content-box',
            background: 'none',
            height: '1.1876em',
            // Reset (19px), match the native input line-height
            margin: 0,
            // Reset for Safari
            WebkitTapHighlightColor: 'transparent',
            display: 'block',
            // Make the flex item shrink with Firefox
            minWidth: 0,
            width: '100%',
            // Fix IE 11 width issue
            animationName: 'mui-auto-fill-cancel',
            animationDuration: '10ms',
            '&::-webkit-input-placeholder': placeholder,
            '&::-moz-placeholder': placeholder,
            // Firefox 19+
            '&:-ms-input-placeholder': placeholder,
            // IE 11
            '&::-ms-input-placeholder': placeholder,
            // Edge
            '&:focus': {
                outline: 0
            },
            // Reset Firefox invalid required input style
            '&:invalid': {
                boxShadow: 'none'
            },
            '&::-webkit-search-decoration': {
                // Remove the padding when type=search.
                '-webkit-appearance': 'none'
            },
            // Show and hide the placeholder logic
            'label[data-shrink=false] + $formControl &': {
                '&::-webkit-input-placeholder': placeholderHidden,
                '&::-moz-placeholder': placeholderHidden,
                // Firefox 19+
                '&:-ms-input-placeholder': placeholderHidden,
                // IE 11
                '&::-ms-input-placeholder': placeholderHidden,
                // Edge
                '&:focus::-webkit-input-placeholder': placeholderVisible,
                '&:focus::-moz-placeholder': placeholderVisible,
                // Firefox 19+
                '&:focus:-ms-input-placeholder': placeholderVisible,
                // IE 11
                '&:focus::-ms-input-placeholder': placeholderVisible // Edge
            },
            '&$disabled': {
                opacity: 1 // Reset iOS opacity
            },
            '&:-webkit-autofill': {
                animationDuration: '5000s',
                animationName: 'mui-auto-fill'
            }
        },
        /* Styles applied to the `input` element if `margin="dense"`. */ inputMarginDense: {
            paddingTop: 3
        },
        /* Styles applied to the `input` element if `multiline={true}`. */ inputMultiline: {
            height: 'auto',
            resize: 'none',
            padding: 0
        },
        /* Styles applied to the `input` element if `type="search"`. */ inputTypeSearch: {
            // Improve type search style.
            '-moz-appearance': 'textfield',
            '-webkit-appearance': 'textfield'
        },
        /* Styles applied to the `input` element if `startAdornment` is provided. */ inputAdornedStart: {},
        /* Styles applied to the `input` element if `endAdornment` is provided. */ inputAdornedEnd: {},
        /* Styles applied to the `input` element if `hiddenLabel={true}`. */ inputHiddenLabel: {}
    };
};
var useEnhancedEffect = typeof window === 'undefined' ? _react.useEffect : _react.useLayoutEffect;
/**
 * `InputBase` contains as few styles as possible.
 * It aims to be a simple building block for creating an input.
 * It contains a load of style reset and some state logic.
 */ var InputBase = /*#__PURE__*/ _react.forwardRef(function InputBase(props, ref) {
    var ariaDescribedby = props['aria-describedby'], autoComplete = props.autoComplete, autoFocus = props.autoFocus, classes = props.classes, className = props.className, color = props.color, defaultValue = props.defaultValue, disabled = props.disabled, endAdornment = props.endAdornment, error = props.error, _props$fullWidth = props.fullWidth, fullWidth = _props$fullWidth === void 0 ? false : _props$fullWidth, id = props.id, _props$inputComponent = props.inputComponent, inputComponent = _props$inputComponent === void 0 ? 'input' : _props$inputComponent, _props$inputProps = props.inputProps, inputPropsProp = _props$inputProps === void 0 ? {} : _props$inputProps, inputRefProp = props.inputRef, margin = props.margin, _props$multiline = props.multiline, multiline = _props$multiline === void 0 ? false : _props$multiline, name = props.name, onBlur = props.onBlur, onChange = props.onChange, onClick = props.onClick, onFocus = props.onFocus, onKeyDown = props.onKeyDown, onKeyUp = props.onKeyUp, placeholder = props.placeholder, readOnly = props.readOnly, renderSuffix = props.renderSuffix, rows = props.rows, rowsMax = props.rowsMax, rowsMin = props.rowsMin, maxRows = props.maxRows, minRows = props.minRows, startAdornment = props.startAdornment, _props$type = props.type, type = _props$type === void 0 ? 'text' : _props$type, valueProp = props.value, other = _objectWithoutPropertiesDefault.default(props, [
        "aria-describedby",
        "autoComplete",
        "autoFocus",
        "classes",
        "className",
        "color",
        "defaultValue",
        "disabled",
        "endAdornment",
        "error",
        "fullWidth",
        "id",
        "inputComponent",
        "inputProps",
        "inputRef",
        "margin",
        "multiline",
        "name",
        "onBlur",
        "onChange",
        "onClick",
        "onFocus",
        "onKeyDown",
        "onKeyUp",
        "placeholder",
        "readOnly",
        "renderSuffix",
        "rows",
        "rowsMax",
        "rowsMin",
        "maxRows",
        "minRows",
        "startAdornment",
        "type",
        "value"
    ]);
    var value = inputPropsProp.value != null ? inputPropsProp.value : valueProp;
    var _React$useRef = _react.useRef(value != null), isControlled = _React$useRef.current;
    var inputRef = _react.useRef();
    var handleInputRefWarning = _react.useCallback(function(instance) {
        if (instance && instance.nodeName !== 'INPUT' && !instance.focus) console.error([
            'Material-UI: You have provided a `inputComponent` to the input component',
            'that does not correctly handle the `inputRef` prop.',
            'Make sure the `inputRef` prop is called with a HTMLInputElement.'
        ].join('\n'));
    }, []);
    var handleInputPropsRefProp = _useForkRefDefault.default(inputPropsProp.ref, handleInputRefWarning);
    var handleInputRefProp = _useForkRefDefault.default(inputRefProp, handleInputPropsRefProp);
    var handleInputRef = _useForkRefDefault.default(inputRef, handleInputRefProp);
    var _React$useState = _react.useState(false), focused = _React$useState[0], setFocused = _React$useState[1];
    var muiFormControl = _formControlContext.useFormControl();
    // eslint-disable-next-line react-hooks/rules-of-hooks
    _react.useEffect(function() {
        if (muiFormControl) return muiFormControl.registerEffect();
        return undefined;
    }, [
        muiFormControl
    ]);
    var fcs = _formControlStateDefault.default({
        props: props,
        muiFormControl: muiFormControl,
        states: [
            'color',
            'disabled',
            'error',
            'hiddenLabel',
            'margin',
            'required',
            'filled'
        ]
    });
    fcs.focused = muiFormControl ? muiFormControl.focused : focused; // The blur won't fire when the disabled state is set on a focused input.
    // We need to book keep the focused state manually.
    _react.useEffect(function() {
        if (!muiFormControl && disabled && focused) {
            setFocused(false);
            if (onBlur) onBlur();
        }
    }, [
        muiFormControl,
        disabled,
        focused,
        onBlur
    ]);
    var onFilled = muiFormControl && muiFormControl.onFilled;
    var onEmpty = muiFormControl && muiFormControl.onEmpty;
    var checkDirty = _react.useCallback(function(obj) {
        if (_utils1.isFilled(obj)) {
            if (onFilled) onFilled();
        } else if (onEmpty) onEmpty();
    }, [
        onFilled,
        onEmpty
    ]);
    useEnhancedEffect(function() {
        if (isControlled) checkDirty({
            value: value
        });
    }, [
        value,
        checkDirty,
        isControlled
    ]);
    var handleFocus = function handleFocus(event) {
        // Fix a bug with IE 11 where the focus/blur events are triggered
        // while the input is disabled.
        if (fcs.disabled) {
            event.stopPropagation();
            return;
        }
        if (onFocus) onFocus(event);
        if (inputPropsProp.onFocus) inputPropsProp.onFocus(event);
        if (muiFormControl && muiFormControl.onFocus) muiFormControl.onFocus(event);
        else setFocused(true);
    };
    var handleBlur = function handleBlur(event) {
        if (onBlur) onBlur(event);
        if (inputPropsProp.onBlur) inputPropsProp.onBlur(event);
        if (muiFormControl && muiFormControl.onBlur) muiFormControl.onBlur(event);
        else setFocused(false);
    };
    var handleChange = function handleChange(event) {
        if (!isControlled) {
            var element = event.target || inputRef.current;
            if (element == null) throw new Error("Material-UI: Expected valid input target. Did you use a custom `inputComponent` and forget to forward refs? See https://material-ui.com/r/input-component-ref-interface for more info.");
            checkDirty({
                value: element.value
            });
        }
        for(var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++)args[_key - 1] = arguments[_key];
        if (inputPropsProp.onChange) inputPropsProp.onChange.apply(inputPropsProp, [
            event
        ].concat(args));
         // Perform in the willUpdate
        if (onChange) onChange.apply(void 0, [
            event
        ].concat(args));
    }; // Check the input state on mount, in case it was filled by the user
    // or auto filled by the browser before the hydration (for SSR).
    _react.useEffect(function() {
        checkDirty(inputRef.current);
    }, []); // eslint-disable-line react-hooks/exhaustive-deps
    var handleClick = function handleClick(event) {
        if (inputRef.current && event.currentTarget === event.target) inputRef.current.focus();
        if (onClick) onClick(event);
    };
    var InputComponent = inputComponent;
    var inputProps = _extendsDefault.default({}, inputPropsProp, {
        ref: handleInputRef
    });
    if (typeof InputComponent !== 'string') inputProps = _extendsDefault.default({
        // Rename ref to inputRef as we don't know the
        // provided `inputComponent` structure.
        inputRef: handleInputRef,
        type: type
    }, inputProps, {
        ref: null
    });
    else if (multiline) {
        if (rows && !maxRows && !minRows && !rowsMax && !rowsMin) InputComponent = 'textarea';
        else {
            inputProps = _extendsDefault.default({
                minRows: rows || minRows,
                rowsMax: rowsMax,
                maxRows: maxRows
            }, inputProps);
            InputComponent = _textareaAutosizeDefault.default;
        }
    } else inputProps = _extendsDefault.default({
        type: type
    }, inputProps);
    var handleAutoFill = function handleAutoFill(event) {
        // Provide a fake value as Chrome might not let you access it for security reasons.
        checkDirty(event.animationName === 'mui-auto-fill-cancel' ? inputRef.current : {
            value: 'x'
        });
    };
    _react.useEffect(function() {
        if (muiFormControl) muiFormControl.setAdornedStart(Boolean(startAdornment));
    }, [
        muiFormControl,
        startAdornment
    ]);
    return /*#__PURE__*/ _react.createElement("div", _extendsDefault.default({
        className: _clsxDefault.default(classes.root, classes["color".concat(_capitalizeDefault.default(fcs.color || 'primary'))], className, fcs.disabled && classes.disabled, fcs.error && classes.error, fullWidth && classes.fullWidth, fcs.focused && classes.focused, muiFormControl && classes.formControl, multiline && classes.multiline, startAdornment && classes.adornedStart, endAdornment && classes.adornedEnd, fcs.margin === 'dense' && classes.marginDense),
        onClick: handleClick,
        ref: ref
    }, other), startAdornment, /*#__PURE__*/ _react.createElement(_formControlContextDefault.default.Provider, {
        value: null
    }, /*#__PURE__*/ _react.createElement(InputComponent, _extendsDefault.default({
        "aria-invalid": fcs.error,
        "aria-describedby": ariaDescribedby,
        autoComplete: autoComplete,
        autoFocus: autoFocus,
        defaultValue: defaultValue,
        disabled: fcs.disabled,
        id: id,
        onAnimationStart: handleAutoFill,
        name: name,
        placeholder: placeholder,
        readOnly: readOnly,
        required: fcs.required,
        rows: rows,
        value: value,
        onKeyDown: onKeyDown,
        onKeyUp: onKeyUp
    }, inputProps, {
        className: _clsxDefault.default(classes.input, inputPropsProp.className, fcs.disabled && classes.disabled, multiline && classes.inputMultiline, fcs.hiddenLabel && classes.inputHiddenLabel, startAdornment && classes.inputAdornedStart, endAdornment && classes.inputAdornedEnd, type === 'search' && classes.inputTypeSearch, fcs.margin === 'dense' && classes.inputMarginDense),
        onBlur: handleBlur,
        onChange: handleChange,
        onFocus: handleFocus
    }))), endAdornment, renderSuffix ? renderSuffix(_extendsDefault.default({}, fcs, {
        startAdornment: startAdornment
    })) : null);
});
InputBase.propTypes = {
    // ----------------------------- Warning --------------------------------
    // | These PropTypes are generated from the TypeScript type definitions |
    // |     To update them edit the d.ts file and run "yarn proptypes"     |
    // ----------------------------------------------------------------------
    /**
   * @ignore
   */ 'aria-describedby': _propTypesDefault.default.string,
    /**
   * This prop helps users to fill forms faster, especially on mobile devices.
   * The name can be confusing, as it's more like an autofill.
   * You can learn more about it [following the specification](https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#autofill).
   */ autoComplete: _propTypesDefault.default.string,
    /**
   * If `true`, the `input` element will be focused during the first mount.
   */ autoFocus: _propTypesDefault.default.bool,
    /**
   * Override or extend the styles applied to the component.
   * See [CSS API](#css) below for more details.
   */ classes: _propTypesDefault.default.object,
    /**
   * @ignore
   */ className: _propTypesDefault.default.string,
    /**
   * The color of the component. It supports those theme colors that make sense for this component.
   */ color: _propTypesDefault.default.oneOf([
        'primary',
        'secondary'
    ]),
    /**
   * The default `input` element value. Use when the component is not controlled.
   */ defaultValue: _propTypesDefault.default.any,
    /**
   * If `true`, the `input` element will be disabled.
   */ disabled: _propTypesDefault.default.bool,
    /**
   * End `InputAdornment` for this component.
   */ endAdornment: _propTypesDefault.default.node,
    /**
   * If `true`, the input will indicate an error. This is normally obtained via context from
   * FormControl.
   */ error: _propTypesDefault.default.bool,
    /**
   * If `true`, the input will take up the full width of its container.
   */ fullWidth: _propTypesDefault.default.bool,
    /**
   * The id of the `input` element.
   */ id: _propTypesDefault.default.string,
    /**
   * The component used for the `input` element.
   * Either a string to use a HTML element or a component.
   */ inputComponent: _propTypesDefault.default.elementType,
    /**
   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.
   */ inputProps: _propTypesDefault.default.object,
    /**
   * Pass a ref to the `input` element.
   */ inputRef: _utils.refType,
    /**
   * If `dense`, will adjust vertical spacing. This is normally obtained via context from
   * FormControl.
   */ margin: _propTypesDefault.default.oneOf([
        'dense',
        'none'
    ]),
    /**
   * Maximum number of rows to display when multiline option is set to true.
   */ maxRows: _propTypesDefault.default.oneOfType([
        _propTypesDefault.default.number,
        _propTypesDefault.default.string
    ]),
    /**
   * Minimum number of rows to display when multiline option is set to true.
   */ minRows: _propTypesDefault.default.oneOfType([
        _propTypesDefault.default.number,
        _propTypesDefault.default.string
    ]),
    /**
   * If `true`, a textarea element will be rendered.
   */ multiline: _propTypesDefault.default.bool,
    /**
   * Name attribute of the `input` element.
   */ name: _propTypesDefault.default.string,
    /**
   * Callback fired when the input is blurred.
   *
   * Notice that the first argument (event) might be undefined.
   */ onBlur: _propTypesDefault.default.func,
    /**
   * Callback fired when the value is changed.
   *
   * @param {object} event The event source of the callback.
   * You can pull out the new value by accessing `event.target.value` (string).
   */ onChange: _propTypesDefault.default.func,
    /**
   * @ignore
   */ onClick: _propTypesDefault.default.func,
    /**
   * @ignore
   */ onFocus: _propTypesDefault.default.func,
    /**
   * @ignore
   */ onKeyDown: _propTypesDefault.default.func,
    /**
   * @ignore
   */ onKeyUp: _propTypesDefault.default.func,
    /**
   * The short hint displayed in the input before the user enters a value.
   */ placeholder: _propTypesDefault.default.string,
    /**
   * It prevents the user from changing the value of the field
   * (not from interacting with the field).
   */ readOnly: _propTypesDefault.default.bool,
    /**
   * @ignore
   */ renderSuffix: _propTypesDefault.default.func,
    /**
   * If `true`, the `input` element will be required.
   */ required: _propTypesDefault.default.bool,
    /**
   * Number of rows to display when multiline option is set to true.
   */ rows: _propTypesDefault.default.oneOfType([
        _propTypesDefault.default.number,
        _propTypesDefault.default.string
    ]),
    /**
   * Maximum number of rows to display.
   * @deprecated Use `maxRows` instead.
   */ rowsMax: _propTypesDefault.default.oneOfType([
        _propTypesDefault.default.number,
        _propTypesDefault.default.string
    ]),
    /**
   * Minimum number of rows to display.
   * @deprecated Use `minRows` instead.
   */ rowsMin: _propTypesDefault.default.oneOfType([
        _propTypesDefault.default.number,
        _propTypesDefault.default.string
    ]),
    /**
   * Start `InputAdornment` for this component.
   */ startAdornment: _propTypesDefault.default.node,
    /**
   * Type of the `input` element. It should be [a valid HTML5 input type](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Form_%3Cinput%3E_types).
   */ type: _propTypesDefault.default.string,
    /**
   * The value of the `input` element, required for a controlled component.
   */ value: _propTypesDefault.default.any
};
exports.default = _withStylesDefault.default(styles, {
    name: 'MuiInputBase'
})(InputBase);

},{"@babel/runtime/helpers/esm/objectWithoutProperties":"25tJ4","@babel/runtime/helpers/esm/extends":"fTBFS","@material-ui/utils":"54RkF","react":"21dqq","prop-types":"7wKI2","clsx":"83C22","../FormControl/formControlState":"dZti6","../FormControl/FormControlContext":"50ngn","../styles/withStyles":"7U0iM","../utils/capitalize":"5AJVX","../utils/useForkRef":"kUpGa","../TextareaAutosize":"1Wm5T","./utils":"dWKcr","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"dZti6":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
function formControlState(_ref) {
    var props = _ref.props, states = _ref.states, muiFormControl = _ref.muiFormControl;
    return states.reduce(function(acc, state) {
        acc[state] = props[state];
        if (muiFormControl) {
            if (typeof props[state] === 'undefined') acc[state] = muiFormControl[state];
        }
        return acc;
    }, {});
}
exports.default = formControlState;

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"1Wm5T":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>_textareaAutosizeDefault.default
);
var _textareaAutosize = require("./TextareaAutosize");
var _textareaAutosizeDefault = parcelHelpers.interopDefault(_textareaAutosize);

},{"./TextareaAutosize":"8ntM1","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"8ntM1":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _extends = require("@babel/runtime/helpers/esm/extends");
var _extendsDefault = parcelHelpers.interopDefault(_extends);
var _objectWithoutProperties = require("@babel/runtime/helpers/esm/objectWithoutProperties");
var _objectWithoutPropertiesDefault = parcelHelpers.interopDefault(_objectWithoutProperties);
var _react = require("react");
var _propTypes = require("prop-types");
var _propTypesDefault = parcelHelpers.interopDefault(_propTypes);
var _debounce = require("../utils/debounce");
var _debounceDefault = parcelHelpers.interopDefault(_debounce);
var _useForkRef = require("../utils/useForkRef");
var _useForkRefDefault = parcelHelpers.interopDefault(_useForkRef);
var _deprecatedPropType = require("../utils/deprecatedPropType");
var _deprecatedPropTypeDefault = parcelHelpers.interopDefault(_deprecatedPropType);
function getStyleValue(computedStyle, property) {
    return parseInt(computedStyle[property], 10) || 0;
}
var useEnhancedEffect = typeof window !== 'undefined' ? _react.useLayoutEffect : _react.useEffect;
var styles = {
    /* Styles applied to the shadow textarea element. */ shadow: {
        // Visibility needed to hide the extra text area on iPads
        visibility: 'hidden',
        // Remove from the content flow
        position: 'absolute',
        // Ignore the scrollbar width
        overflow: 'hidden',
        height: 0,
        top: 0,
        left: 0,
        // Create a new layer, increase the isolation of the computed values
        transform: 'translateZ(0)'
    }
};
var TextareaAutosize = /*#__PURE__*/ _react.forwardRef(function TextareaAutosize(props, ref) {
    var onChange = props.onChange, rows = props.rows, rowsMax = props.rowsMax, rowsMinProp = props.rowsMin, maxRowsProp = props.maxRows, _props$minRows = props.minRows, minRowsProp = _props$minRows === void 0 ? 1 : _props$minRows, style = props.style, value = props.value, other = _objectWithoutPropertiesDefault.default(props, [
        "onChange",
        "rows",
        "rowsMax",
        "rowsMin",
        "maxRows",
        "minRows",
        "style",
        "value"
    ]);
    var maxRows = maxRowsProp || rowsMax;
    var minRows = rows || rowsMinProp || minRowsProp;
    var _React$useRef = _react.useRef(value != null), isControlled = _React$useRef.current;
    var inputRef = _react.useRef(null);
    var handleRef = _useForkRefDefault.default(ref, inputRef);
    var shadowRef = _react.useRef(null);
    var renders = _react.useRef(0);
    var _React$useState = _react.useState({}), state = _React$useState[0], setState = _React$useState[1];
    var syncHeight = _react.useCallback(function() {
        var input = inputRef.current;
        var computedStyle = window.getComputedStyle(input);
        var inputShallow = shadowRef.current;
        inputShallow.style.width = computedStyle.width;
        inputShallow.value = input.value || props.placeholder || 'x';
        if (inputShallow.value.slice(-1) === '\n') // Certain fonts which overflow the line height will cause the textarea
        // to report a different scrollHeight depending on whether the last line
        // is empty. Make it non-empty to avoid this issue.
        inputShallow.value += ' ';
        var boxSizing = computedStyle['box-sizing'];
        var padding = getStyleValue(computedStyle, 'padding-bottom') + getStyleValue(computedStyle, 'padding-top');
        var border = getStyleValue(computedStyle, 'border-bottom-width') + getStyleValue(computedStyle, 'border-top-width'); // The height of the inner content
        var innerHeight = inputShallow.scrollHeight - padding; // Measure height of a textarea with a single row
        inputShallow.value = 'x';
        var singleRowHeight = inputShallow.scrollHeight - padding; // The height of the outer content
        var outerHeight = innerHeight;
        if (minRows) outerHeight = Math.max(Number(minRows) * singleRowHeight, outerHeight);
        if (maxRows) outerHeight = Math.min(Number(maxRows) * singleRowHeight, outerHeight);
        outerHeight = Math.max(outerHeight, singleRowHeight); // Take the box sizing into account for applying this value as a style.
        var outerHeightStyle = outerHeight + (boxSizing === 'border-box' ? padding + border : 0);
        var overflow = Math.abs(outerHeight - innerHeight) <= 1;
        setState(function(prevState) {
            // Need a large enough difference to update the height.
            // This prevents infinite rendering loop.
            if (renders.current < 20 && (outerHeightStyle > 0 && Math.abs((prevState.outerHeightStyle || 0) - outerHeightStyle) > 1 || prevState.overflow !== overflow)) {
                renders.current += 1;
                return {
                    overflow: overflow,
                    outerHeightStyle: outerHeightStyle
                };
            }
            if (renders.current === 20) console.error([
                'Material-UI: Too many re-renders. The layout is unstable.',
                'TextareaAutosize limits the number of renders to prevent an infinite loop.'
            ].join('\n'));
            return prevState;
        });
    }, [
        maxRows,
        minRows,
        props.placeholder
    ]);
    _react.useEffect(function() {
        var handleResize = _debounceDefault.default(function() {
            renders.current = 0;
            syncHeight();
        });
        window.addEventListener('resize', handleResize);
        return function() {
            handleResize.clear();
            window.removeEventListener('resize', handleResize);
        };
    }, [
        syncHeight
    ]);
    useEnhancedEffect(function() {
        syncHeight();
    });
    _react.useEffect(function() {
        renders.current = 0;
    }, [
        value
    ]);
    var handleChange = function handleChange(event) {
        renders.current = 0;
        if (!isControlled) syncHeight();
        if (onChange) onChange(event);
    };
    return /*#__PURE__*/ _react.createElement(_react.Fragment, null, /*#__PURE__*/ _react.createElement("textarea", _extendsDefault.default({
        value: value,
        onChange: handleChange,
        ref: handleRef // Apply the rows prop to get a "correct" first SSR paint
        ,
        rows: minRows,
        style: _extendsDefault.default({
            height: state.outerHeightStyle,
            // Need a large enough difference to allow scrolling.
            // This prevents infinite rendering loop.
            overflow: state.overflow ? 'hidden' : null
        }, style)
    }, other)), /*#__PURE__*/ _react.createElement("textarea", {
        "aria-hidden": true,
        className: props.className,
        readOnly: true,
        ref: shadowRef,
        tabIndex: -1,
        style: _extendsDefault.default({}, styles.shadow, style)
    }));
});
TextareaAutosize.propTypes = {
    // ----------------------------- Warning --------------------------------
    // | These PropTypes are generated from the TypeScript type definitions |
    // |     To update them edit the d.ts file and run "yarn proptypes"     |
    // ----------------------------------------------------------------------
    /**
   * @ignore
   */ className: _propTypesDefault.default.string,
    /**
   * Maximum number of rows to display.
   */ maxRows: _propTypesDefault.default.oneOfType([
        _propTypesDefault.default.number,
        _propTypesDefault.default.string
    ]),
    /**
   * Minimum number of rows to display.
   */ minRows: _propTypesDefault.default.oneOfType([
        _propTypesDefault.default.number,
        _propTypesDefault.default.string
    ]),
    /**
   * @ignore
   */ onChange: _propTypesDefault.default.func,
    /**
   * @ignore
   */ placeholder: _propTypesDefault.default.string,
    /**
   * Minimum number of rows to display.
   * @deprecated Use `minRows` instead.
   */ rows: _deprecatedPropTypeDefault.default(_propTypesDefault.default.oneOfType([
        _propTypesDefault.default.number,
        _propTypesDefault.default.string
    ]), 'Use `minRows` instead.'),
    /**
   * Maximum number of rows to display.
   * @deprecated Use `maxRows` instead.
   */ rowsMax: _deprecatedPropTypeDefault.default(_propTypesDefault.default.oneOfType([
        _propTypesDefault.default.number,
        _propTypesDefault.default.string
    ]), 'Use `maxRows` instead.'),
    /**
   * Minimum number of rows to display.
   * @deprecated Use `minRows` instead.
   */ rowsMin: _deprecatedPropTypeDefault.default(_propTypesDefault.default.oneOfType([
        _propTypesDefault.default.number,
        _propTypesDefault.default.string
    ]), 'Use `minRows` instead.'),
    /**
   * @ignore
   */ style: _propTypesDefault.default.object,
    /**
   * @ignore
   */ value: _propTypesDefault.default.oneOfType([
        _propTypesDefault.default.arrayOf(_propTypesDefault.default.string),
        _propTypesDefault.default.number,
        _propTypesDefault.default.string
    ])
};
exports.default = TextareaAutosize;

},{"@babel/runtime/helpers/esm/extends":"fTBFS","@babel/runtime/helpers/esm/objectWithoutProperties":"25tJ4","react":"21dqq","prop-types":"7wKI2","../utils/debounce":"fsAbo","../utils/useForkRef":"kUpGa","../utils/deprecatedPropType":"loRgF","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"dWKcr":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
// Supports determination of isControlled().
// Controlled input accepts its current value as a prop.
//
// @see https://facebook.github.io/react/docs/forms.html#controlled-components
// @param value
// @returns {boolean} true if string (including '') or number (including zero)
parcelHelpers.export(exports, "hasValue", ()=>hasValue
) // Determine if field is empty or filled.
;
// Response determines if label is presented above field or as placeholder.
//
// @param obj
// @param SSR
// @returns {boolean} False when not present or empty string.
//                    True when any number or string with length.
parcelHelpers.export(exports, "isFilled", ()=>isFilled
) // Determine if an Input is adorned on start.
;
// It's corresponding to the left with LTR.
//
// @param obj
// @returns {boolean} False when no adornments.
//                    True when adorned at the start.
parcelHelpers.export(exports, "isAdornedStart", ()=>isAdornedStart
);
function hasValue(value) {
    return value != null && !(Array.isArray(value) && value.length === 0);
}
function isFilled(obj) {
    var SSR = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
    return obj && (hasValue(obj.value) && obj.value !== '' || SSR && hasValue(obj.defaultValue) && obj.defaultValue !== '');
}
function isAdornedStart(obj) {
    return obj.startAdornment;
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"6Jd3C":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>_formControlDefault.default
);
parcelHelpers.export(exports, "useFormControl", ()=>_useFormControlDefault.default
);
var _formControl = require("./FormControl");
var _formControlDefault = parcelHelpers.interopDefault(_formControl);
var _useFormControl = require("./useFormControl");
var _useFormControlDefault = parcelHelpers.interopDefault(_useFormControl);

},{"./FormControl":"hhiLq","./useFormControl":"eKmPJ","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"hhiLq":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "styles", ()=>styles
);
var _extends = require("@babel/runtime/helpers/esm/extends");
var _extendsDefault = parcelHelpers.interopDefault(_extends);
var _objectWithoutProperties = require("@babel/runtime/helpers/esm/objectWithoutProperties");
var _objectWithoutPropertiesDefault = parcelHelpers.interopDefault(_objectWithoutProperties);
var _react = require("react");
var _propTypes = require("prop-types");
var _propTypesDefault = parcelHelpers.interopDefault(_propTypes);
var _clsx = require("clsx");
var _clsxDefault = parcelHelpers.interopDefault(_clsx);
var _utils = require("../InputBase/utils");
var _withStyles = require("../styles/withStyles");
var _withStylesDefault = parcelHelpers.interopDefault(_withStyles);
var _capitalize = require("../utils/capitalize");
var _capitalizeDefault = parcelHelpers.interopDefault(_capitalize);
var _isMuiElement = require("../utils/isMuiElement");
var _isMuiElementDefault = parcelHelpers.interopDefault(_isMuiElement);
var _formControlContext = require("./FormControlContext");
var _formControlContextDefault = parcelHelpers.interopDefault(_formControlContext);
var styles = {
    /* Styles applied to the root element. */ root: {
        display: 'inline-flex',
        flexDirection: 'column',
        position: 'relative',
        // Reset fieldset default style.
        minWidth: 0,
        padding: 0,
        margin: 0,
        border: 0,
        verticalAlign: 'top' // Fix alignment issue on Safari.
    },
    /* Styles applied to the root element if `margin="normal"`. */ marginNormal: {
        marginTop: 16,
        marginBottom: 8
    },
    /* Styles applied to the root element if `margin="dense"`. */ marginDense: {
        marginTop: 8,
        marginBottom: 4
    },
    /* Styles applied to the root element if `fullWidth={true}`. */ fullWidth: {
        width: '100%'
    }
};
/**
 * Provides context such as filled/focused/error/required for form inputs.
 * Relying on the context provides high flexibility and ensures that the state always stays
 * consistent across the children of the `FormControl`.
 * This context is used by the following components:
 *
 *  - FormLabel
 *  - FormHelperText
 *  - Input
 *  - InputLabel
 *
 * You can find one composition example below and more going to [the demos](/components/text-fields/#components).
 *
 * ```jsx
 * <FormControl>
 *   <InputLabel htmlFor="my-input">Email address</InputLabel>
 *   <Input id="my-input" aria-describedby="my-helper-text" />
 *   <FormHelperText id="my-helper-text">We'll never share your email.</FormHelperText>
 * </FormControl>
 * ```
 *
 * ⚠️Only one input can be used within a FormControl.
 */ var FormControl = /*#__PURE__*/ _react.forwardRef(function FormControl(props, ref) {
    var children = props.children, classes = props.classes, className = props.className, _props$color = props.color, color = _props$color === void 0 ? 'primary' : _props$color, _props$component = props.component, Component = _props$component === void 0 ? 'div' : _props$component, _props$disabled = props.disabled, disabled = _props$disabled === void 0 ? false : _props$disabled, _props$error = props.error, error = _props$error === void 0 ? false : _props$error, _props$fullWidth = props.fullWidth, fullWidth = _props$fullWidth === void 0 ? false : _props$fullWidth, visuallyFocused = props.focused, _props$hiddenLabel = props.hiddenLabel, hiddenLabel = _props$hiddenLabel === void 0 ? false : _props$hiddenLabel, _props$margin = props.margin, margin = _props$margin === void 0 ? 'none' : _props$margin, _props$required = props.required, required = _props$required === void 0 ? false : _props$required, size = props.size, _props$variant = props.variant, variant = _props$variant === void 0 ? 'standard' : _props$variant, other = _objectWithoutPropertiesDefault.default(props, [
        "children",
        "classes",
        "className",
        "color",
        "component",
        "disabled",
        "error",
        "fullWidth",
        "focused",
        "hiddenLabel",
        "margin",
        "required",
        "size",
        "variant"
    ]);
    var _React$useState = _react.useState(function() {
        // We need to iterate through the children and find the Input in order
        // to fully support server-side rendering.
        var initialAdornedStart = false;
        if (children) _react.Children.forEach(children, function(child) {
            if (!_isMuiElementDefault.default(child, [
                'Input',
                'Select'
            ])) return;
            var input = _isMuiElementDefault.default(child, [
                'Select'
            ]) ? child.props.input : child;
            if (input && _utils.isAdornedStart(input.props)) initialAdornedStart = true;
        });
        return initialAdornedStart;
    }), adornedStart = _React$useState[0], setAdornedStart = _React$useState[1];
    var _React$useState2 = _react.useState(function() {
        // We need to iterate through the children and find the Input in order
        // to fully support server-side rendering.
        var initialFilled = false;
        if (children) _react.Children.forEach(children, function(child) {
            if (!_isMuiElementDefault.default(child, [
                'Input',
                'Select'
            ])) return;
            if (_utils.isFilled(child.props, true)) initialFilled = true;
        });
        return initialFilled;
    }), filled = _React$useState2[0], setFilled = _React$useState2[1];
    var _React$useState3 = _react.useState(false), _focused = _React$useState3[0], setFocused = _React$useState3[1];
    var focused = visuallyFocused !== undefined ? visuallyFocused : _focused;
    if (disabled && focused) setFocused(false);
    var registerEffect;
    // eslint-disable-next-line react-hooks/rules-of-hooks
    var registeredInput = _react.useRef(false);
    registerEffect = function registerEffect() {
        if (registeredInput.current) console.error([
            'Material-UI: There are multiple InputBase components inside a FormControl.',
            'This is not supported. It might cause infinite rendering loops.',
            'Only use one InputBase.'
        ].join('\n'));
        registeredInput.current = true;
        return function() {
            registeredInput.current = false;
        };
    };
    var onFilled = _react.useCallback(function() {
        setFilled(true);
    }, []);
    var onEmpty = _react.useCallback(function() {
        setFilled(false);
    }, []);
    var childContext = {
        adornedStart: adornedStart,
        setAdornedStart: setAdornedStart,
        color: color,
        disabled: disabled,
        error: error,
        filled: filled,
        focused: focused,
        fullWidth: fullWidth,
        hiddenLabel: hiddenLabel,
        margin: (size === 'small' ? 'dense' : undefined) || margin,
        onBlur: function onBlur() {
            setFocused(false);
        },
        onEmpty: onEmpty,
        onFilled: onFilled,
        onFocus: function onFocus() {
            setFocused(true);
        },
        registerEffect: registerEffect,
        required: required,
        variant: variant
    };
    return /*#__PURE__*/ _react.createElement(_formControlContextDefault.default.Provider, {
        value: childContext
    }, /*#__PURE__*/ _react.createElement(Component, _extendsDefault.default({
        className: _clsxDefault.default(classes.root, className, margin !== 'none' && classes["margin".concat(_capitalizeDefault.default(margin))], fullWidth && classes.fullWidth),
        ref: ref
    }, other), children));
});
FormControl.propTypes = {
    // ----------------------------- Warning --------------------------------
    // | These PropTypes are generated from the TypeScript type definitions |
    // |     To update them edit the d.ts file and run "yarn proptypes"     |
    // ----------------------------------------------------------------------
    /**
   * The contents of the form control.
   */ children: _propTypesDefault.default.node,
    /**
   * Override or extend the styles applied to the component.
   * See [CSS API](#css) below for more details.
   */ classes: _propTypesDefault.default.object,
    /**
   * @ignore
   */ className: _propTypesDefault.default.string,
    /**
   * The color of the component. It supports those theme colors that make sense for this component.
   */ color: _propTypesDefault.default.oneOf([
        'primary',
        'secondary'
    ]),
    /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */ component: _propTypesDefault.default/* @typescript-to-proptypes-ignore */ .elementType,
    /**
   * If `true`, the label, input and helper text should be displayed in a disabled state.
   */ disabled: _propTypesDefault.default.bool,
    /**
   * If `true`, the label should be displayed in an error state.
   */ error: _propTypesDefault.default.bool,
    /**
   * If `true`, the component will be displayed in focused state.
   */ focused: _propTypesDefault.default.bool,
    /**
   * If `true`, the component will take up the full width of its container.
   */ fullWidth: _propTypesDefault.default.bool,
    /**
   * If `true`, the label will be hidden.
   * This is used to increase density for a `FilledInput`.
   * Be sure to add `aria-label` to the `input` element.
   */ hiddenLabel: _propTypesDefault.default.bool,
    /**
   * If `dense` or `normal`, will adjust vertical spacing of this and contained components.
   */ margin: _propTypesDefault.default.oneOf([
        'dense',
        'none',
        'normal'
    ]),
    /**
   * If `true`, the label will indicate that the input is required.
   */ required: _propTypesDefault.default.bool,
    /**
   * The size of the text field.
   */ size: _propTypesDefault.default.oneOf([
        'medium',
        'small'
    ]),
    /**
   * The variant to use.
   */ variant: _propTypesDefault.default.oneOf([
        'filled',
        'outlined',
        'standard'
    ])
};
exports.default = _withStylesDefault.default(styles, {
    name: 'MuiFormControl'
})(FormControl);

},{"@babel/runtime/helpers/esm/extends":"fTBFS","@babel/runtime/helpers/esm/objectWithoutProperties":"25tJ4","react":"21dqq","prop-types":"7wKI2","clsx":"83C22","../InputBase/utils":"dWKcr","../styles/withStyles":"7U0iM","../utils/capitalize":"5AJVX","../utils/isMuiElement":"6dsp6","./FormControlContext":"50ngn","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"aTJOB":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>_formControlLabelDefault.default
);
var _formControlLabel = require("./FormControlLabel");
var _formControlLabelDefault = parcelHelpers.interopDefault(_formControlLabel);

},{"./FormControlLabel":"gBaZR","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"gBaZR":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "styles", ()=>styles
);
var _extends = require("@babel/runtime/helpers/esm/extends");
var _extendsDefault = parcelHelpers.interopDefault(_extends);
var _objectWithoutProperties = require("@babel/runtime/helpers/esm/objectWithoutProperties");
var _objectWithoutPropertiesDefault = parcelHelpers.interopDefault(_objectWithoutProperties);
var _react = require("react");
var _propTypes = require("prop-types");
var _propTypesDefault = parcelHelpers.interopDefault(_propTypes);
var _clsx = require("clsx");
var _clsxDefault = parcelHelpers.interopDefault(_clsx);
var _utils = require("@material-ui/utils");
var _formControl = require("../FormControl");
var _withStyles = require("../styles/withStyles");
var _withStylesDefault = parcelHelpers.interopDefault(_withStyles);
var _typography = require("../Typography");
var _typographyDefault = parcelHelpers.interopDefault(_typography);
var _capitalize = require("../utils/capitalize");
var _capitalizeDefault = parcelHelpers.interopDefault(_capitalize);
var styles = function styles(theme) {
    return {
        /* Styles applied to the root element. */ root: {
            display: 'inline-flex',
            alignItems: 'center',
            cursor: 'pointer',
            // For correct alignment with the text.
            verticalAlign: 'middle',
            WebkitTapHighlightColor: 'transparent',
            marginLeft: -11,
            marginRight: 16,
            // used for row presentation of radio/checkbox
            '&$disabled': {
                cursor: 'default'
            }
        },
        /* Styles applied to the root element if `labelPlacement="start"`. */ labelPlacementStart: {
            flexDirection: 'row-reverse',
            marginLeft: 16,
            // used for row presentation of radio/checkbox
            marginRight: -11
        },
        /* Styles applied to the root element if `labelPlacement="top"`. */ labelPlacementTop: {
            flexDirection: 'column-reverse',
            marginLeft: 16
        },
        /* Styles applied to the root element if `labelPlacement="bottom"`. */ labelPlacementBottom: {
            flexDirection: 'column',
            marginLeft: 16
        },
        /* Pseudo-class applied to the root element if `disabled={true}`. */ disabled: {},
        /* Styles applied to the label's Typography component. */ label: {
            '&$disabled': {
                color: theme.palette.text.disabled
            }
        }
    };
};
/**
 * Drop in replacement of the `Radio`, `Switch` and `Checkbox` component.
 * Use this component if you want to display an extra label.
 */ var FormControlLabel = /*#__PURE__*/ _react.forwardRef(function FormControlLabel(props, ref) {
    var checked = props.checked, classes = props.classes, className = props.className, control = props.control, disabledProp = props.disabled, inputRef = props.inputRef, label = props.label, _props$labelPlacement = props.labelPlacement, labelPlacement = _props$labelPlacement === void 0 ? 'end' : _props$labelPlacement, name = props.name, onChange = props.onChange, value = props.value, other = _objectWithoutPropertiesDefault.default(props, [
        "checked",
        "classes",
        "className",
        "control",
        "disabled",
        "inputRef",
        "label",
        "labelPlacement",
        "name",
        "onChange",
        "value"
    ]);
    var muiFormControl = _formControl.useFormControl();
    var disabled = disabledProp;
    if (typeof disabled === 'undefined' && typeof control.props.disabled !== 'undefined') disabled = control.props.disabled;
    if (typeof disabled === 'undefined' && muiFormControl) disabled = muiFormControl.disabled;
    var controlProps = {
        disabled: disabled
    };
    [
        'checked',
        'name',
        'onChange',
        'value',
        'inputRef'
    ].forEach(function(key) {
        if (typeof control.props[key] === 'undefined' && typeof props[key] !== 'undefined') controlProps[key] = props[key];
    });
    return /*#__PURE__*/ _react.createElement("label", _extendsDefault.default({
        className: _clsxDefault.default(classes.root, className, labelPlacement !== 'end' && classes["labelPlacement".concat(_capitalizeDefault.default(labelPlacement))], disabled && classes.disabled),
        ref: ref
    }, other), /*#__PURE__*/ _react.cloneElement(control, controlProps), /*#__PURE__*/ _react.createElement(_typographyDefault.default, {
        component: "span",
        className: _clsxDefault.default(classes.label, disabled && classes.disabled)
    }, label));
});
FormControlLabel.propTypes = {
    // ----------------------------- Warning --------------------------------
    // | These PropTypes are generated from the TypeScript type definitions |
    // |     To update them edit the d.ts file and run "yarn proptypes"     |
    // ----------------------------------------------------------------------
    /**
   * If `true`, the component appears selected.
   */ checked: _propTypesDefault.default.bool,
    /**
   * Override or extend the styles applied to the component.
   * See [CSS API](#css) below for more details.
   */ classes: _propTypesDefault.default.object,
    /**
   * @ignore
   */ className: _propTypesDefault.default.string,
    /**
   * A control element. For instance, it can be be a `Radio`, a `Switch` or a `Checkbox`.
   */ control: _propTypesDefault.default.element.isRequired,
    /**
   * If `true`, the control will be disabled.
   */ disabled: _propTypesDefault.default.bool,
    /**
   * Pass a ref to the `input` element.
   */ inputRef: _utils.refType,
    /**
   * The text to be used in an enclosing label element.
   */ label: _propTypesDefault.default.node,
    /**
   * The position of the label.
   */ labelPlacement: _propTypesDefault.default.oneOf([
        'bottom',
        'end',
        'start',
        'top'
    ]),
    /**
   * @ignore
   */ name: _propTypesDefault.default.string,
    /**
   * Callback fired when the state is changed.
   *
   * @param {object} event The event source of the callback.
   * You can pull out the new checked state by accessing `event.target.checked` (boolean).
   */ onChange: _propTypesDefault.default.func,
    /**
   * The value of the component.
   */ value: _propTypesDefault.default.any
};
exports.default = _withStylesDefault.default(styles, {
    name: 'MuiFormControlLabel'
})(FormControlLabel);

},{"@babel/runtime/helpers/esm/extends":"fTBFS","@babel/runtime/helpers/esm/objectWithoutProperties":"25tJ4","react":"21dqq","prop-types":"7wKI2","clsx":"83C22","@material-ui/utils":"54RkF","../FormControl":"6Jd3C","../styles/withStyles":"7U0iM","../Typography":"6dDPF","../utils/capitalize":"5AJVX","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"03BFX":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>_formGroupDefault.default
);
var _formGroup = require("./FormGroup");
var _formGroupDefault = parcelHelpers.interopDefault(_formGroup);

},{"./FormGroup":"gkDU3","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"gkDU3":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "styles", ()=>styles
);
var _extends = require("@babel/runtime/helpers/esm/extends");
var _extendsDefault = parcelHelpers.interopDefault(_extends);
var _objectWithoutProperties = require("@babel/runtime/helpers/esm/objectWithoutProperties");
var _objectWithoutPropertiesDefault = parcelHelpers.interopDefault(_objectWithoutProperties);
var _react = require("react");
var _propTypes = require("prop-types");
var _propTypesDefault = parcelHelpers.interopDefault(_propTypes);
var _clsx = require("clsx");
var _clsxDefault = parcelHelpers.interopDefault(_clsx);
var _withStyles = require("../styles/withStyles");
var _withStylesDefault = parcelHelpers.interopDefault(_withStyles);
var styles = {
    /* Styles applied to the root element. */ root: {
        display: 'flex',
        flexDirection: 'column',
        flexWrap: 'wrap'
    },
    /* Styles applied to the root element if `row={true}`. */ row: {
        flexDirection: 'row'
    }
};
/**
 * `FormGroup` wraps controls such as `Checkbox` and `Switch`.
 * It provides compact row layout.
 * For the `Radio`, you should be using the `RadioGroup` component instead of this one.
 */ var FormGroup = /*#__PURE__*/ _react.forwardRef(function FormGroup(props, ref) {
    var classes = props.classes, className = props.className, _props$row = props.row, row = _props$row === void 0 ? false : _props$row, other = _objectWithoutPropertiesDefault.default(props, [
        "classes",
        "className",
        "row"
    ]);
    return /*#__PURE__*/ _react.createElement("div", _extendsDefault.default({
        className: _clsxDefault.default(classes.root, className, row && classes.row),
        ref: ref
    }, other));
});
FormGroup.propTypes = {
    // ----------------------------- Warning --------------------------------
    // | These PropTypes are generated from the TypeScript type definitions |
    // |     To update them edit the d.ts file and run "yarn proptypes"     |
    // ----------------------------------------------------------------------
    /**
   * The content of the component.
   */ children: _propTypesDefault.default.node,
    /**
   * Override or extend the styles applied to the component.
   * See [CSS API](#css) below for more details.
   */ classes: _propTypesDefault.default.object,
    /**
   * @ignore
   */ className: _propTypesDefault.default.string,
    /**
   * Display group of elements in a compact row.
   */ row: _propTypesDefault.default.bool
};
exports.default = _withStylesDefault.default(styles, {
    name: 'MuiFormGroup'
})(FormGroup);

},{"@babel/runtime/helpers/esm/extends":"fTBFS","@babel/runtime/helpers/esm/objectWithoutProperties":"25tJ4","react":"21dqq","prop-types":"7wKI2","clsx":"83C22","../styles/withStyles":"7U0iM","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"2qPWq":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>_formHelperTextDefault.default
);
var _formHelperText = require("./FormHelperText");
var _formHelperTextDefault = parcelHelpers.interopDefault(_formHelperText);

},{"./FormHelperText":"kUST2","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"kUST2":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "styles", ()=>styles
);
var _objectWithoutProperties = require("@babel/runtime/helpers/esm/objectWithoutProperties");
var _objectWithoutPropertiesDefault = parcelHelpers.interopDefault(_objectWithoutProperties);
var _extends = require("@babel/runtime/helpers/esm/extends");
var _extendsDefault = parcelHelpers.interopDefault(_extends);
var _react = require("react");
var _propTypes = require("prop-types");
var _propTypesDefault = parcelHelpers.interopDefault(_propTypes);
var _clsx = require("clsx");
var _clsxDefault = parcelHelpers.interopDefault(_clsx);
var _formControlState = require("../FormControl/formControlState");
var _formControlStateDefault = parcelHelpers.interopDefault(_formControlState);
var _useFormControl = require("../FormControl/useFormControl");
var _useFormControlDefault = parcelHelpers.interopDefault(_useFormControl);
var _withStyles = require("../styles/withStyles");
var _withStylesDefault = parcelHelpers.interopDefault(_withStyles);
var styles = function styles(theme) {
    return {
        /* Styles applied to the root element. */ root: _extendsDefault.default({
            color: theme.palette.text.secondary
        }, theme.typography.caption, {
            textAlign: 'left',
            marginTop: 3,
            margin: 0,
            '&$disabled': {
                color: theme.palette.text.disabled
            },
            '&$error': {
                color: theme.palette.error.main
            }
        }),
        /* Pseudo-class applied to the root element if `error={true}`. */ error: {},
        /* Pseudo-class applied to the root element if `disabled={true}`. */ disabled: {},
        /* Styles applied to the root element if `margin="dense"`. */ marginDense: {
            marginTop: 4
        },
        /* Styles applied to the root element if `variant="filled"` or `variant="outlined"`. */ contained: {
            marginLeft: 14,
            marginRight: 14
        },
        /* Pseudo-class applied to the root element if `focused={true}`. */ focused: {},
        /* Pseudo-class applied to the root element if `filled={true}`. */ filled: {},
        /* Pseudo-class applied to the root element if `required={true}`. */ required: {}
    };
};
var FormHelperText = /*#__PURE__*/ _react.forwardRef(function FormHelperText(props, ref) {
    var children = props.children, classes = props.classes, className = props.className, _props$component = props.component, Component = _props$component === void 0 ? 'p' : _props$component, disabled = props.disabled, error = props.error, filled = props.filled, focused = props.focused, margin = props.margin, required = props.required, variant = props.variant, other = _objectWithoutPropertiesDefault.default(props, [
        "children",
        "classes",
        "className",
        "component",
        "disabled",
        "error",
        "filled",
        "focused",
        "margin",
        "required",
        "variant"
    ]);
    var muiFormControl = _useFormControlDefault.default();
    var fcs = _formControlStateDefault.default({
        props: props,
        muiFormControl: muiFormControl,
        states: [
            'variant',
            'margin',
            'disabled',
            'error',
            'filled',
            'focused',
            'required'
        ]
    });
    return /*#__PURE__*/ _react.createElement(Component, _extendsDefault.default({
        className: _clsxDefault.default(classes.root, (fcs.variant === 'filled' || fcs.variant === 'outlined') && classes.contained, className, fcs.disabled && classes.disabled, fcs.error && classes.error, fcs.filled && classes.filled, fcs.focused && classes.focused, fcs.required && classes.required, fcs.margin === 'dense' && classes.marginDense),
        ref: ref
    }, other), children === ' ' ? /*#__PURE__*/ // eslint-disable-next-line react/no-danger
    _react.createElement("span", {
        dangerouslySetInnerHTML: {
            __html: '&#8203;'
        }
    }) : children);
});
FormHelperText.propTypes = {
    // ----------------------------- Warning --------------------------------
    // | These PropTypes are generated from the TypeScript type definitions |
    // |     To update them edit the d.ts file and run "yarn proptypes"     |
    // ----------------------------------------------------------------------
    /**
   * The content of the component.
   *
   * If `' '` is provided, the component reserves one line height for displaying a future message.
   */ children: _propTypesDefault.default.node,
    /**
   * Override or extend the styles applied to the component.
   * See [CSS API](#css) below for more details.
   */ classes: _propTypesDefault.default.object,
    /**
   * @ignore
   */ className: _propTypesDefault.default.string,
    /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */ component: _propTypesDefault.default/* @typescript-to-proptypes-ignore */ .elementType,
    /**
   * If `true`, the helper text should be displayed in a disabled state.
   */ disabled: _propTypesDefault.default.bool,
    /**
   * If `true`, helper text should be displayed in an error state.
   */ error: _propTypesDefault.default.bool,
    /**
   * If `true`, the helper text should use filled classes key.
   */ filled: _propTypesDefault.default.bool,
    /**
   * If `true`, the helper text should use focused classes key.
   */ focused: _propTypesDefault.default.bool,
    /**
   * If `dense`, will adjust vertical spacing. This is normally obtained via context from
   * FormControl.
   */ margin: _propTypesDefault.default.oneOf([
        'dense'
    ]),
    /**
   * If `true`, the helper text should use required classes key.
   */ required: _propTypesDefault.default.bool,
    /**
   * The variant to use.
   */ variant: _propTypesDefault.default.oneOf([
        'filled',
        'outlined',
        'standard'
    ])
};
exports.default = _withStylesDefault.default(styles, {
    name: 'MuiFormHelperText'
})(FormHelperText);

},{"@babel/runtime/helpers/esm/objectWithoutProperties":"25tJ4","@babel/runtime/helpers/esm/extends":"fTBFS","react":"21dqq","prop-types":"7wKI2","clsx":"83C22","../FormControl/formControlState":"dZti6","../FormControl/useFormControl":"eKmPJ","../styles/withStyles":"7U0iM","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"ggWa6":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>_formLabelDefault.default
);
var _formLabel = require("./FormLabel");
var _formLabelDefault = parcelHelpers.interopDefault(_formLabel);

},{"./FormLabel":"3Qst0","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"3Qst0":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "styles", ()=>styles
);
var _objectWithoutProperties = require("@babel/runtime/helpers/esm/objectWithoutProperties");
var _objectWithoutPropertiesDefault = parcelHelpers.interopDefault(_objectWithoutProperties);
var _extends = require("@babel/runtime/helpers/esm/extends");
var _extendsDefault = parcelHelpers.interopDefault(_extends);
var _react = require("react");
var _propTypes = require("prop-types");
var _propTypesDefault = parcelHelpers.interopDefault(_propTypes);
var _clsx = require("clsx");
var _clsxDefault = parcelHelpers.interopDefault(_clsx);
var _formControlState = require("../FormControl/formControlState");
var _formControlStateDefault = parcelHelpers.interopDefault(_formControlState);
var _useFormControl = require("../FormControl/useFormControl");
var _useFormControlDefault = parcelHelpers.interopDefault(_useFormControl);
var _capitalize = require("../utils/capitalize");
var _capitalizeDefault = parcelHelpers.interopDefault(_capitalize);
var _withStyles = require("../styles/withStyles");
var _withStylesDefault = parcelHelpers.interopDefault(_withStyles);
var styles = function styles(theme) {
    return {
        /* Styles applied to the root element. */ root: _extendsDefault.default({
            color: theme.palette.text.secondary
        }, theme.typography.body1, {
            lineHeight: 1,
            padding: 0,
            '&$focused': {
                color: theme.palette.primary.main
            },
            '&$disabled': {
                color: theme.palette.text.disabled
            },
            '&$error': {
                color: theme.palette.error.main
            }
        }),
        /* Styles applied to the root element if the color is secondary. */ colorSecondary: {
            '&$focused': {
                color: theme.palette.secondary.main
            }
        },
        /* Pseudo-class applied to the root element if `focused={true}`. */ focused: {},
        /* Pseudo-class applied to the root element if `disabled={true}`. */ disabled: {},
        /* Pseudo-class applied to the root element if `error={true}`. */ error: {},
        /* Pseudo-class applied to the root element if `filled={true}`. */ filled: {},
        /* Pseudo-class applied to the root element if `required={true}`. */ required: {},
        /* Styles applied to the asterisk element. */ asterisk: {
            '&$error': {
                color: theme.palette.error.main
            }
        }
    };
};
var FormLabel = /*#__PURE__*/ _react.forwardRef(function FormLabel(props, ref) {
    var children = props.children, classes = props.classes, className = props.className, color = props.color, _props$component = props.component, Component = _props$component === void 0 ? 'label' : _props$component, disabled = props.disabled, error = props.error, filled = props.filled, focused = props.focused, required = props.required, other = _objectWithoutPropertiesDefault.default(props, [
        "children",
        "classes",
        "className",
        "color",
        "component",
        "disabled",
        "error",
        "filled",
        "focused",
        "required"
    ]);
    var muiFormControl = _useFormControlDefault.default();
    var fcs = _formControlStateDefault.default({
        props: props,
        muiFormControl: muiFormControl,
        states: [
            'color',
            'required',
            'focused',
            'disabled',
            'error',
            'filled'
        ]
    });
    return /*#__PURE__*/ _react.createElement(Component, _extendsDefault.default({
        className: _clsxDefault.default(classes.root, classes["color".concat(_capitalizeDefault.default(fcs.color || 'primary'))], className, fcs.disabled && classes.disabled, fcs.error && classes.error, fcs.filled && classes.filled, fcs.focused && classes.focused, fcs.required && classes.required),
        ref: ref
    }, other), children, fcs.required && /*#__PURE__*/ _react.createElement("span", {
        "aria-hidden": true,
        className: _clsxDefault.default(classes.asterisk, fcs.error && classes.error)
    }, "\u2009", '*'));
});
FormLabel.propTypes = {
    // ----------------------------- Warning --------------------------------
    // | These PropTypes are generated from the TypeScript type definitions |
    // |     To update them edit the d.ts file and run "yarn proptypes"     |
    // ----------------------------------------------------------------------
    /**
   * The content of the component.
   */ children: _propTypesDefault.default.node,
    /**
   * Override or extend the styles applied to the component.
   * See [CSS API](#css) below for more details.
   */ classes: _propTypesDefault.default.object,
    /**
   * @ignore
   */ className: _propTypesDefault.default.string,
    /**
   * The color of the component. It supports those theme colors that make sense for this component.
   */ color: _propTypesDefault.default.oneOf([
        'primary',
        'secondary'
    ]),
    /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */ component: _propTypesDefault.default/* @typescript-to-proptypes-ignore */ .elementType,
    /**
   * If `true`, the label should be displayed in a disabled state.
   */ disabled: _propTypesDefault.default.bool,
    /**
   * If `true`, the label should be displayed in an error state.
   */ error: _propTypesDefault.default.bool,
    /**
   * If `true`, the label should use filled classes key.
   */ filled: _propTypesDefault.default.bool,
    /**
   * If `true`, the input of this label is focused (used by `FormGroup` components).
   */ focused: _propTypesDefault.default.bool,
    /**
   * If `true`, the label will indicate that the input is required.
   */ required: _propTypesDefault.default.bool
};
exports.default = _withStylesDefault.default(styles, {
    name: 'MuiFormLabel'
})(FormLabel);

},{"@babel/runtime/helpers/esm/objectWithoutProperties":"25tJ4","@babel/runtime/helpers/esm/extends":"fTBFS","react":"21dqq","prop-types":"7wKI2","clsx":"83C22","../FormControl/formControlState":"dZti6","../FormControl/useFormControl":"eKmPJ","../utils/capitalize":"5AJVX","../styles/withStyles":"7U0iM","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"fqbct":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>_gridDefault.default
);
var _grid = require("./Grid");
var _gridDefault = parcelHelpers.interopDefault(_grid);

},{"./Grid":"3x7X0","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"3x7X0":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "styles", ()=>styles
);
var _objectWithoutProperties = require("@babel/runtime/helpers/esm/objectWithoutProperties");
var _objectWithoutPropertiesDefault = parcelHelpers.interopDefault(_objectWithoutProperties);
var _extends = require("@babel/runtime/helpers/esm/extends");
var _extendsDefault = parcelHelpers.interopDefault(_extends);
// A grid component using the following libs as inspiration.
//
// For the implementation:
// - https://getbootstrap.com/docs/4.3/layout/grid/
// - https://github.com/kristoferjoseph/flexboxgrid/blob/master/src/css/flexboxgrid.css
// - https://github.com/roylee0704/react-flexbox-grid
// - https://material.angularjs.org/latest/layout/introduction
//
// Follow this flexbox Guide to better understand the underlying model:
// - https://css-tricks.com/snippets/css/a-guide-to-flexbox/
var _react = require("react");
var _propTypes = require("prop-types");
var _propTypesDefault = parcelHelpers.interopDefault(_propTypes);
var _clsx = require("clsx");
var _clsxDefault = parcelHelpers.interopDefault(_clsx);
var _withStyles = require("../styles/withStyles");
var _withStylesDefault = parcelHelpers.interopDefault(_withStyles);
var _requirePropFactory = require("../utils/requirePropFactory");
var _requirePropFactoryDefault = parcelHelpers.interopDefault(_requirePropFactory);
var _deprecatedPropType = require("../utils/deprecatedPropType");
var _deprecatedPropTypeDefault = parcelHelpers.interopDefault(_deprecatedPropType);
var SPACINGS = [
    0,
    1,
    2,
    3,
    4,
    5,
    6,
    7,
    8,
    9,
    10
];
var GRID_SIZES = [
    'auto',
    true,
    1,
    2,
    3,
    4,
    5,
    6,
    7,
    8,
    9,
    10,
    11,
    12
];
function generateGrid(globalStyles, theme, breakpoint) {
    var styles1 = {};
    GRID_SIZES.forEach(function(size) {
        var key = "grid-".concat(breakpoint, "-").concat(size);
        if (size === true) {
            // For the auto layouting
            styles1[key] = {
                flexBasis: 0,
                flexGrow: 1,
                maxWidth: '100%'
            };
            return;
        }
        if (size === 'auto') {
            styles1[key] = {
                flexBasis: 'auto',
                flexGrow: 0,
                maxWidth: 'none'
            };
            return;
        } // Keep 7 significant numbers.
        var width = "".concat(Math.round(size / 12 * 10e7) / 10e5, "%"); // Close to the bootstrap implementation:
        // https://github.com/twbs/bootstrap/blob/8fccaa2439e97ec72a4b7dc42ccc1f649790adb0/scss/mixins/_grid.scss#L41
        styles1[key] = {
            flexBasis: width,
            flexGrow: 0,
            maxWidth: width
        };
    }); // No need for a media query for the first size.
    if (breakpoint === 'xs') _extendsDefault.default(globalStyles, styles1);
    else globalStyles[theme.breakpoints.up(breakpoint)] = styles1;
}
function getOffset(val) {
    var div = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;
    var parse = parseFloat(val);
    return "".concat(parse / div).concat(String(val).replace(String(parse), '') || 'px');
}
function generateGutter(theme, breakpoint) {
    var styles2 = {};
    SPACINGS.forEach(function(spacing) {
        var themeSpacing = theme.spacing(spacing);
        if (themeSpacing === 0) return;
        styles2["spacing-".concat(breakpoint, "-").concat(spacing)] = {
            margin: "-".concat(getOffset(themeSpacing, 2)),
            width: "calc(100% + ".concat(getOffset(themeSpacing), ")"),
            '& > $item': {
                padding: getOffset(themeSpacing, 2)
            }
        };
    });
    return styles2;
} // Default CSS values
var styles = function styles(theme) {
    return _extendsDefault.default({
        /* Styles applied to the root element. */ root: {},
        /* Styles applied to the root element if `container={true}`. */ container: {
            boxSizing: 'border-box',
            display: 'flex',
            flexWrap: 'wrap',
            width: '100%'
        },
        /* Styles applied to the root element if `item={true}`. */ item: {
            boxSizing: 'border-box',
            margin: '0' // For instance, it's useful when used with a `figure` element.
        },
        /* Styles applied to the root element if `zeroMinWidth={true}`. */ zeroMinWidth: {
            minWidth: 0
        },
        /* Styles applied to the root element if `direction="column"`. */ 'direction-xs-column': {
            flexDirection: 'column'
        },
        /* Styles applied to the root element if `direction="column-reverse"`. */ 'direction-xs-column-reverse': {
            flexDirection: 'column-reverse'
        },
        /* Styles applied to the root element if `direction="row-reverse"`. */ 'direction-xs-row-reverse': {
            flexDirection: 'row-reverse'
        },
        /* Styles applied to the root element if `wrap="nowrap"`. */ 'wrap-xs-nowrap': {
            flexWrap: 'nowrap'
        },
        /* Styles applied to the root element if `wrap="reverse"`. */ 'wrap-xs-wrap-reverse': {
            flexWrap: 'wrap-reverse'
        },
        /* Styles applied to the root element if `alignItems="center"`. */ 'align-items-xs-center': {
            alignItems: 'center'
        },
        /* Styles applied to the root element if `alignItems="flex-start"`. */ 'align-items-xs-flex-start': {
            alignItems: 'flex-start'
        },
        /* Styles applied to the root element if `alignItems="flex-end"`. */ 'align-items-xs-flex-end': {
            alignItems: 'flex-end'
        },
        /* Styles applied to the root element if `alignItems="baseline"`. */ 'align-items-xs-baseline': {
            alignItems: 'baseline'
        },
        /* Styles applied to the root element if `alignContent="center"`. */ 'align-content-xs-center': {
            alignContent: 'center'
        },
        /* Styles applied to the root element if `alignContent="flex-start"`. */ 'align-content-xs-flex-start': {
            alignContent: 'flex-start'
        },
        /* Styles applied to the root element if `alignContent="flex-end"`. */ 'align-content-xs-flex-end': {
            alignContent: 'flex-end'
        },
        /* Styles applied to the root element if `alignContent="space-between"`. */ 'align-content-xs-space-between': {
            alignContent: 'space-between'
        },
        /* Styles applied to the root element if `alignContent="space-around"`. */ 'align-content-xs-space-around': {
            alignContent: 'space-around'
        },
        /* Styles applied to the root element if `justifyContent="center"`. */ 'justify-content-xs-center': {
            justifyContent: 'center'
        },
        /* Styles applied to the root element if `justifyContent="flex-end"`. */ 'justify-content-xs-flex-end': {
            justifyContent: 'flex-end'
        },
        /* Styles applied to the root element if `justifyContent="space-between"`. */ 'justify-content-xs-space-between': {
            justifyContent: 'space-between'
        },
        /* Styles applied to the root element if `justifyContent="space-around"`. */ 'justify-content-xs-space-around': {
            justifyContent: 'space-around'
        },
        /* Styles applied to the root element if `justifyContent="space-evenly"`. */ 'justify-content-xs-space-evenly': {
            justifyContent: 'space-evenly'
        }
    }, generateGutter(theme, 'xs'), theme.breakpoints.keys.reduce(function(accumulator, key) {
        // Use side effect over immutability for better performance.
        generateGrid(accumulator, theme, key);
        return accumulator;
    }, {}));
};
var Grid = /*#__PURE__*/ _react.forwardRef(function Grid(props, ref) {
    var _props$alignContent = props.alignContent, alignContent = _props$alignContent === void 0 ? 'stretch' : _props$alignContent, _props$alignItems = props.alignItems, alignItems = _props$alignItems === void 0 ? 'stretch' : _props$alignItems, classes = props.classes, classNameProp = props.className, _props$component = props.component, Component = _props$component === void 0 ? 'div' : _props$component, _props$container = props.container, container = _props$container === void 0 ? false : _props$container, _props$direction = props.direction, direction = _props$direction === void 0 ? 'row' : _props$direction, _props$item = props.item, item = _props$item === void 0 ? false : _props$item, justify = props.justify, _props$justifyContent = props.justifyContent, justifyContent = _props$justifyContent === void 0 ? 'flex-start' : _props$justifyContent, _props$lg = props.lg, lg = _props$lg === void 0 ? false : _props$lg, _props$md = props.md, md = _props$md === void 0 ? false : _props$md, _props$sm = props.sm, sm = _props$sm === void 0 ? false : _props$sm, _props$spacing = props.spacing, spacing = _props$spacing === void 0 ? 0 : _props$spacing, _props$wrap = props.wrap, wrap = _props$wrap === void 0 ? 'wrap' : _props$wrap, _props$xl = props.xl, xl = _props$xl === void 0 ? false : _props$xl, _props$xs = props.xs, xs = _props$xs === void 0 ? false : _props$xs, _props$zeroMinWidth = props.zeroMinWidth, zeroMinWidth = _props$zeroMinWidth === void 0 ? false : _props$zeroMinWidth, other = _objectWithoutPropertiesDefault.default(props, [
        "alignContent",
        "alignItems",
        "classes",
        "className",
        "component",
        "container",
        "direction",
        "item",
        "justify",
        "justifyContent",
        "lg",
        "md",
        "sm",
        "spacing",
        "wrap",
        "xl",
        "xs",
        "zeroMinWidth"
    ]);
    var className = _clsxDefault.default(classes.root, classNameProp, container && [
        classes.container,
        spacing !== 0 && classes["spacing-xs-".concat(String(spacing))]
    ], item && classes.item, zeroMinWidth && classes.zeroMinWidth, direction !== 'row' && classes["direction-xs-".concat(String(direction))], wrap !== 'wrap' && classes["wrap-xs-".concat(String(wrap))], alignItems !== 'stretch' && classes["align-items-xs-".concat(String(alignItems))], alignContent !== 'stretch' && classes["align-content-xs-".concat(String(alignContent))], (justify || justifyContent) !== 'flex-start' && classes["justify-content-xs-".concat(String(justify || justifyContent))], xs !== false && classes["grid-xs-".concat(String(xs))], sm !== false && classes["grid-sm-".concat(String(sm))], md !== false && classes["grid-md-".concat(String(md))], lg !== false && classes["grid-lg-".concat(String(lg))], xl !== false && classes["grid-xl-".concat(String(xl))]);
    return /*#__PURE__*/ _react.createElement(Component, _extendsDefault.default({
        className: className,
        ref: ref
    }, other));
});
Grid.propTypes = {
    /**
   * Defines the `align-content` style property.
   * It's applied for all screen sizes.
   */ alignContent: _propTypesDefault.default.oneOf([
        'stretch',
        'center',
        'flex-start',
        'flex-end',
        'space-between',
        'space-around'
    ]),
    /**
   * Defines the `align-items` style property.
   * It's applied for all screen sizes.
   */ alignItems: _propTypesDefault.default.oneOf([
        'flex-start',
        'center',
        'flex-end',
        'stretch',
        'baseline'
    ]),
    /**
   * The content of the component.
   */ children: _propTypesDefault.default.node,
    /**
   * Override or extend the styles applied to the component.
   * See [CSS API](#css) below for more details.
   */ classes: _propTypesDefault.default.object.isRequired,
    /**
   * @ignore
   */ className: _propTypesDefault.default.string,
    /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */ component: _propTypesDefault.default/* @typescript-to-proptypes-ignore */ .elementType,
    /**
   * If `true`, the component will have the flex *container* behavior.
   * You should be wrapping *items* with a *container*.
   */ container: _propTypesDefault.default.bool,
    /**
   * Defines the `flex-direction` style property.
   * It is applied for all screen sizes.
   */ direction: _propTypesDefault.default.oneOf([
        'row',
        'row-reverse',
        'column',
        'column-reverse'
    ]),
    /**
   * If `true`, the component will have the flex *item* behavior.
   * You should be wrapping *items* with a *container*.
   */ item: _propTypesDefault.default.bool,
    /**
   * Defines the `justify-content` style property.
   * It is applied for all screen sizes.
   * @deprecated Use `justifyContent` instead, the prop was renamed
   */ justify: _deprecatedPropTypeDefault.default(_propTypesDefault.default.oneOf([
        'flex-start',
        'center',
        'flex-end',
        'space-between',
        'space-around',
        'space-evenly'
    ]), 'Use `justifyContent` instead, the prop was renamed.'),
    /**
   * Defines the `justify-content` style property.
   * It is applied for all screen sizes.
   */ justifyContent: _propTypesDefault.default.oneOf([
        'flex-start',
        'center',
        'flex-end',
        'space-between',
        'space-around',
        'space-evenly'
    ]),
    /**
   * Defines the number of grids the component is going to use.
   * It's applied for the `lg` breakpoint and wider screens if not overridden.
   */ lg: _propTypesDefault.default.oneOf([
        false,
        'auto',
        true,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10,
        11,
        12
    ]),
    /**
   * Defines the number of grids the component is going to use.
   * It's applied for the `md` breakpoint and wider screens if not overridden.
   */ md: _propTypesDefault.default.oneOf([
        false,
        'auto',
        true,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10,
        11,
        12
    ]),
    /**
   * Defines the number of grids the component is going to use.
   * It's applied for the `sm` breakpoint and wider screens if not overridden.
   */ sm: _propTypesDefault.default.oneOf([
        false,
        'auto',
        true,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10,
        11,
        12
    ]),
    /**
   * Defines the space between the type `item` component.
   * It can only be used on a type `container` component.
   */ spacing: _propTypesDefault.default.oneOf(SPACINGS),
    /**
   * Defines the `flex-wrap` style property.
   * It's applied for all screen sizes.
   */ wrap: _propTypesDefault.default.oneOf([
        'nowrap',
        'wrap',
        'wrap-reverse'
    ]),
    /**
   * Defines the number of grids the component is going to use.
   * It's applied for the `xl` breakpoint and wider screens.
   */ xl: _propTypesDefault.default.oneOf([
        false,
        'auto',
        true,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10,
        11,
        12
    ]),
    /**
   * Defines the number of grids the component is going to use.
   * It's applied for all the screen sizes with the lowest priority.
   */ xs: _propTypesDefault.default.oneOf([
        false,
        'auto',
        true,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10,
        11,
        12
    ]),
    /**
   * If `true`, it sets `min-width: 0` on the item.
   * Refer to the limitations section of the documentation to better understand the use case.
   */ zeroMinWidth: _propTypesDefault.default.bool
};
var StyledGrid = _withStylesDefault.default(styles, {
    name: 'MuiGrid'
})(Grid);
var requireProp = _requirePropFactoryDefault.default('Grid');
StyledGrid.propTypes = _extendsDefault.default({}, StyledGrid.propTypes, {
    alignContent: requireProp('container'),
    alignItems: requireProp('container'),
    direction: requireProp('container'),
    justifyContent: requireProp('container'),
    lg: requireProp('item'),
    md: requireProp('item'),
    sm: requireProp('item'),
    spacing: requireProp('container'),
    wrap: requireProp('container'),
    xs: requireProp('item'),
    zeroMinWidth: requireProp('item')
});
exports.default = StyledGrid;

},{"@babel/runtime/helpers/esm/objectWithoutProperties":"25tJ4","@babel/runtime/helpers/esm/extends":"fTBFS","react":"21dqq","prop-types":"7wKI2","clsx":"83C22","../styles/withStyles":"7U0iM","../utils/requirePropFactory":"4sLw0","../utils/deprecatedPropType":"loRgF","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"liwfv":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>_gridListDefault.default
);
var _gridList = require("./GridList");
var _gridListDefault = parcelHelpers.interopDefault(_gridList);

},{"./GridList":"fPXWt","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"fPXWt":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "styles", ()=>styles
);
var _extends = require("@babel/runtime/helpers/esm/extends");
var _extendsDefault = parcelHelpers.interopDefault(_extends);
var _objectWithoutProperties = require("@babel/runtime/helpers/esm/objectWithoutProperties");
var _objectWithoutPropertiesDefault = parcelHelpers.interopDefault(_objectWithoutProperties);
var _react = require("react");
var _reactIs = require("react-is");
var _propTypes = require("prop-types");
var _propTypesDefault = parcelHelpers.interopDefault(_propTypes);
var _clsx = require("clsx");
var _clsxDefault = parcelHelpers.interopDefault(_clsx);
var _withStyles = require("../styles/withStyles");
var _withStylesDefault = parcelHelpers.interopDefault(_withStyles);
var styles = {
    /* Styles applied to the root element. */ root: {
        display: 'flex',
        flexWrap: 'wrap',
        overflowY: 'auto',
        listStyle: 'none',
        padding: 0,
        WebkitOverflowScrolling: 'touch' // Add iOS momentum scrolling.
    }
};
var warnedOnce = false;
/**
 * ⚠️ The GridList component was renamed to ImageList to align with the current Material Design naming.
 *
 * You should use `import { ImageList } from '@material-ui/core'`
 * or `import ImageList from '@material-ui/core/ImageList'`.
 */ var GridList = /*#__PURE__*/ _react.forwardRef(function GridList(props, ref) {
    if (!warnedOnce) {
        warnedOnce = true;
        console.error([
            'Material-UI: The GridList component was renamed to ImageList to align with the current Material Design naming.',
            '',
            "You should use `import { ImageList } from '@material-ui/core'`",
            "or `import ImageList from '@material-ui/core/ImageList'`."
        ].join('\n'));
    }
    var _props$cellHeight = props.cellHeight, cellHeight = _props$cellHeight === void 0 ? 180 : _props$cellHeight, children = props.children, classes = props.classes, className = props.className, _props$cols = props.cols, cols = _props$cols === void 0 ? 2 : _props$cols, _props$component = props.component, Component = _props$component === void 0 ? 'ul' : _props$component, _props$spacing = props.spacing, spacing = _props$spacing === void 0 ? 4 : _props$spacing, style = props.style, other = _objectWithoutPropertiesDefault.default(props, [
        "cellHeight",
        "children",
        "classes",
        "className",
        "cols",
        "component",
        "spacing",
        "style"
    ]);
    return /*#__PURE__*/ _react.createElement(Component, _extendsDefault.default({
        className: _clsxDefault.default(classes.root, className),
        ref: ref,
        style: _extendsDefault.default({
            margin: -spacing / 2
        }, style)
    }, other), _react.Children.map(children, function(child) {
        if (!/*#__PURE__*/ _react.isValidElement(child)) return null;
        if (_reactIs.isFragment(child)) console.error([
            "Material-UI: The GridList component doesn't accept a Fragment as a child.",
            'Consider providing an array instead.'
        ].join('\n'));
        var childCols = child.props.cols || 1;
        var childRows = child.props.rows || 1;
        return /*#__PURE__*/ _react.cloneElement(child, {
            style: _extendsDefault.default({
                width: "".concat(100 / cols * childCols, "%"),
                height: cellHeight === 'auto' ? 'auto' : cellHeight * childRows + spacing,
                padding: spacing / 2
            }, child.props.style)
        });
    }));
});
GridList.propTypes = {
    /**
   * Number of px for one cell height.
   * You can set `'auto'` if you want to let the children determine the height.
   */ cellHeight: _propTypesDefault.default.oneOfType([
        _propTypesDefault.default.number,
        _propTypesDefault.default.oneOf([
            'auto'
        ])
    ]),
    /**
   * Grid Tiles that will be in Grid List.
   */ children: _propTypesDefault.default.node.isRequired,
    /**
   * Override or extend the styles applied to the component.
   * See [CSS API](#css) below for more details.
   */ classes: _propTypesDefault.default.object.isRequired,
    /**
   * @ignore
   */ className: _propTypesDefault.default.string,
    /**
   * Number of columns.
   */ cols: _propTypesDefault.default.number,
    /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */ component: _propTypesDefault.default/* @typescript-to-proptypes-ignore */ .elementType,
    /**
   * Number of px for the spacing between tiles.
   */ spacing: _propTypesDefault.default.number,
    /**
   * @ignore
   */ style: _propTypesDefault.default.object
};
exports.default = _withStylesDefault.default(styles, {
    name: 'MuiGridList'
})(GridList);

},{"@babel/runtime/helpers/esm/extends":"fTBFS","@babel/runtime/helpers/esm/objectWithoutProperties":"25tJ4","react":"21dqq","react-is":"63mDj","prop-types":"7wKI2","clsx":"83C22","../styles/withStyles":"7U0iM","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"8zqfB":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>_gridListTileDefault.default
);
var _gridListTile = require("./GridListTile");
var _gridListTileDefault = parcelHelpers.interopDefault(_gridListTile);

},{"./GridListTile":"3KM9B","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"3KM9B":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "styles", ()=>styles
);
var _extends = require("@babel/runtime/helpers/esm/extends");
var _extendsDefault = parcelHelpers.interopDefault(_extends);
var _objectWithoutProperties = require("@babel/runtime/helpers/esm/objectWithoutProperties");
var _objectWithoutPropertiesDefault = parcelHelpers.interopDefault(_objectWithoutProperties);
var _toConsumableArray = require("@babel/runtime/helpers/esm/toConsumableArray");
var _toConsumableArrayDefault = parcelHelpers.interopDefault(_toConsumableArray);
var _react = require("react");
var _propTypes = require("prop-types");
var _propTypesDefault = parcelHelpers.interopDefault(_propTypes);
var _clsx = require("clsx");
var _clsxDefault = parcelHelpers.interopDefault(_clsx);
var _debounce = require("../utils/debounce");
var _debounceDefault = parcelHelpers.interopDefault(_debounce);
var _withStyles = require("../styles/withStyles");
var _withStylesDefault = parcelHelpers.interopDefault(_withStyles);
var _isMuiElement = require("../utils/isMuiElement");
var _isMuiElementDefault = parcelHelpers.interopDefault(_isMuiElement);
var styles = {
    /* Styles applied to the root element. */ root: {
        boxSizing: 'border-box',
        flexShrink: 0
    },
    /* Styles applied to the `div` element that wraps the children. */ tile: {
        position: 'relative',
        display: 'block',
        // In case it's not rendered with a div.
        height: '100%',
        overflow: 'hidden'
    },
    /* Styles applied to an `img` element child, if needed to ensure it covers the tile. */ imgFullHeight: {
        height: '100%',
        transform: 'translateX(-50%)',
        position: 'relative',
        left: '50%'
    },
    /* Styles applied to an `img` element child, if needed to ensure it covers the tile. */ imgFullWidth: {
        width: '100%',
        position: 'relative',
        transform: 'translateY(-50%)',
        top: '50%'
    }
};
var fit = function fit(imgEl, classes) {
    if (!imgEl || !imgEl.complete) return;
    if (imgEl.width / imgEl.height > imgEl.parentElement.offsetWidth / imgEl.parentElement.offsetHeight) {
        var _imgEl$classList, _imgEl$classList2;
        (_imgEl$classList = imgEl.classList).remove.apply(_imgEl$classList, _toConsumableArrayDefault.default(classes.imgFullWidth.split(' ')));
        (_imgEl$classList2 = imgEl.classList).add.apply(_imgEl$classList2, _toConsumableArrayDefault.default(classes.imgFullHeight.split(' ')));
    } else {
        var _imgEl$classList3, _imgEl$classList4;
        (_imgEl$classList3 = imgEl.classList).remove.apply(_imgEl$classList3, _toConsumableArrayDefault.default(classes.imgFullHeight.split(' ')));
        (_imgEl$classList4 = imgEl.classList).add.apply(_imgEl$classList4, _toConsumableArrayDefault.default(classes.imgFullWidth.split(' ')));
    }
};
function ensureImageCover(imgEl, classes) {
    if (!imgEl) return;
    if (imgEl.complete) fit(imgEl, classes);
    else imgEl.addEventListener('load', function() {
        fit(imgEl, classes);
    });
}
var warnedOnce = false;
/**
 * ⚠️ The GridList component was renamed to ImageList to align with the current Material Design naming.
 *
 * You should use `import { ImageListItem } from '@material-ui/core'`
 * or `import ImageListItem from '@material-ui/core/ImageListItem'`.
 */ var GridListTile = /*#__PURE__*/ _react.forwardRef(function GridListTile(props, ref) {
    if (!warnedOnce) {
        warnedOnce = true;
        console.error([
            'Material-UI: The GridListTile component was renamed to ImageListItem to align with the current Material Design naming.',
            '',
            "You should use `import { ImageListItem } from '@material-ui/core'`",
            "or `import ImageListItem from '@material-ui/core/ImageListItem'`."
        ].join('\n'));
    }
    var children = props.children, classes = props.classes, className = props.className, _props$cols = props.cols, cols = _props$cols === void 0 ? 1 : _props$cols, _props$component = props.component, Component = _props$component === void 0 ? 'li' : _props$component, _props$rows = props.rows, rows = _props$rows === void 0 ? 1 : _props$rows, other = _objectWithoutPropertiesDefault.default(props, [
        "children",
        "classes",
        "className",
        "cols",
        "component",
        "rows"
    ]);
    var imgRef = _react.useRef(null);
    _react.useEffect(function() {
        ensureImageCover(imgRef.current, classes);
    });
    _react.useEffect(function() {
        var handleResize = _debounceDefault.default(function() {
            fit(imgRef.current, classes);
        });
        window.addEventListener('resize', handleResize);
        return function() {
            handleResize.clear();
            window.removeEventListener('resize', handleResize);
        };
    }, [
        classes
    ]);
    return /*#__PURE__*/ _react.createElement(Component, _extendsDefault.default({
        className: _clsxDefault.default(classes.root, className),
        ref: ref
    }, other), /*#__PURE__*/ _react.createElement("div", {
        className: classes.tile
    }, _react.Children.map(children, function(child) {
        if (!/*#__PURE__*/ _react.isValidElement(child)) return null;
        if (child.type === 'img' || _isMuiElementDefault.default(child, [
            'Image'
        ])) return /*#__PURE__*/ _react.cloneElement(child, {
            ref: imgRef
        });
        return child;
    })));
});
GridListTile.propTypes = {
    /**
   * Theoretically you can pass any node as children, but the main use case is to pass an img,
   * in which case GridListTile takes care of making the image "cover" available space
   * (similar to `background-size: cover` or to `object-fit: cover`).
   */ children: _propTypesDefault.default.node,
    /**
   * Override or extend the styles applied to the component.
   * See [CSS API](#css) below for more details.
   */ classes: _propTypesDefault.default.object.isRequired,
    /**
   * @ignore
   */ className: _propTypesDefault.default.string,
    /**
   * Width of the tile in number of grid cells.
   */ cols: _propTypesDefault.default.number,
    /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */ component: _propTypesDefault.default/* @typescript-to-proptypes-ignore */ .elementType,
    /**
   * Height of the tile in number of grid cells.
   */ rows: _propTypesDefault.default.number
};
exports.default = _withStylesDefault.default(styles, {
    name: 'MuiGridListTile'
})(GridListTile);

},{"@babel/runtime/helpers/esm/extends":"fTBFS","@babel/runtime/helpers/esm/objectWithoutProperties":"25tJ4","@babel/runtime/helpers/esm/toConsumableArray":"bCmCj","react":"21dqq","prop-types":"7wKI2","clsx":"83C22","../utils/debounce":"fsAbo","../styles/withStyles":"7U0iM","../utils/isMuiElement":"6dsp6","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"4RS0d":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>_gridListTileBarDefault.default
);
var _gridListTileBar = require("./GridListTileBar");
var _gridListTileBarDefault = parcelHelpers.interopDefault(_gridListTileBar);

},{"./GridListTileBar":"cyO7v","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"cyO7v":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "styles", ()=>styles
);
var _extends = require("@babel/runtime/helpers/esm/extends");
var _extendsDefault = parcelHelpers.interopDefault(_extends);
var _objectWithoutProperties = require("@babel/runtime/helpers/esm/objectWithoutProperties");
var _objectWithoutPropertiesDefault = parcelHelpers.interopDefault(_objectWithoutProperties);
var _react = require("react");
var _propTypes = require("prop-types");
var _propTypesDefault = parcelHelpers.interopDefault(_propTypes);
var _clsx = require("clsx");
var _clsxDefault = parcelHelpers.interopDefault(_clsx);
var _withStyles = require("../styles/withStyles");
var _withStylesDefault = parcelHelpers.interopDefault(_withStyles);
var styles = function styles(theme) {
    return {
        /* Styles applied to the root element. */ root: {
            position: 'absolute',
            left: 0,
            right: 0,
            height: 48,
            background: 'rgba(0, 0, 0, 0.5)',
            display: 'flex',
            alignItems: 'center',
            fontFamily: theme.typography.fontFamily
        },
        /* Styles applied to the root element if `titlePosition="bottom"`. */ titlePositionBottom: {
            bottom: 0
        },
        /* Styles applied to the root element if `titlePosition="top"`. */ titlePositionTop: {
            top: 0
        },
        /* Styles applied to the root element if a `subtitle` is provided. */ rootSubtitle: {
            height: 68
        },
        /* Styles applied to the title and subtitle container element. */ titleWrap: {
            flexGrow: 1,
            marginLeft: 16,
            marginRight: 16,
            color: theme.palette.common.white,
            overflow: 'hidden'
        },
        /* Styles applied to the container element if `actionPosition="left"`. */ titleWrapActionPosLeft: {
            marginLeft: 0
        },
        /* Styles applied to the container element if `actionPosition="right"`. */ titleWrapActionPosRight: {
            marginRight: 0
        },
        /* Styles applied to the title container element. */ title: {
            fontSize: theme.typography.pxToRem(16),
            lineHeight: '24px',
            textOverflow: 'ellipsis',
            overflow: 'hidden',
            whiteSpace: 'nowrap'
        },
        /* Styles applied to the subtitle container element. */ subtitle: {
            fontSize: theme.typography.pxToRem(12),
            lineHeight: 1,
            textOverflow: 'ellipsis',
            overflow: 'hidden',
            whiteSpace: 'nowrap'
        },
        /* Styles applied to the actionIcon if supplied. */ actionIcon: {},
        /* Styles applied to the actionIcon if `actionPosition="left"`. */ actionIconActionPosLeft: {
            order: -1
        }
    };
};
var warnedOnce = false;
/**
 * ⚠️ The GridListTileBar component was renamed to ImageListItemBar to align with the current Material Design naming.
 *
 * You should use `import { ImageListItemBar } from '@material-ui/core'`
 * or `import ImageListItemBar from '@material-ui/core/ImageListItemBar'`.
 */ var GridListTileBar = /*#__PURE__*/ _react.forwardRef(function GridListTileBar(props, ref) {
    if (!warnedOnce) {
        warnedOnce = true;
        console.error([
            'Material-UI: The GridListTileBar component was renamed to ImageListItemBar to align with the current Material Design naming.',
            '',
            "You should use `import { ImageListItemBar } from '@material-ui/core'`",
            "or `import ImageListItemBar from '@material-ui/core/ImageListItemBar'`."
        ].join('\n'));
    }
    var actionIcon = props.actionIcon, _props$actionPosition = props.actionPosition, actionPosition = _props$actionPosition === void 0 ? 'right' : _props$actionPosition, classes = props.classes, className = props.className, subtitle = props.subtitle, title = props.title, _props$titlePosition = props.titlePosition, titlePosition = _props$titlePosition === void 0 ? 'bottom' : _props$titlePosition, other = _objectWithoutPropertiesDefault.default(props, [
        "actionIcon",
        "actionPosition",
        "classes",
        "className",
        "subtitle",
        "title",
        "titlePosition"
    ]);
    var actionPos = actionIcon && actionPosition;
    return /*#__PURE__*/ _react.createElement("div", _extendsDefault.default({
        className: _clsxDefault.default(classes.root, className, titlePosition === 'top' ? classes.titlePositionTop : classes.titlePositionBottom, subtitle && classes.rootSubtitle),
        ref: ref
    }, other), /*#__PURE__*/ _react.createElement("div", {
        className: _clsxDefault.default(classes.titleWrap, {
            'left': classes.titleWrapActionPosLeft,
            'right': classes.titleWrapActionPosRight
        }[actionPos])
    }, /*#__PURE__*/ _react.createElement("div", {
        className: classes.title
    }, title), subtitle ? /*#__PURE__*/ _react.createElement("div", {
        className: classes.subtitle
    }, subtitle) : null), actionIcon ? /*#__PURE__*/ _react.createElement("div", {
        className: _clsxDefault.default(classes.actionIcon, actionPos === 'left' && classes.actionIconActionPosLeft)
    }, actionIcon) : null);
});
GridListTileBar.propTypes = {
    // ----------------------------- Warning --------------------------------
    // | These PropTypes are generated from the TypeScript type definitions |
    // |     To update them edit the d.ts file and run "yarn proptypes"     |
    // ----------------------------------------------------------------------
    /**
   * An IconButton element to be used as secondary action target
   * (primary action target is the tile itself).
   */ actionIcon: _propTypesDefault.default.node,
    /**
   * Position of secondary action IconButton.
   */ actionPosition: _propTypesDefault.default.oneOf([
        'left',
        'right'
    ]),
    /**
   * Override or extend the styles applied to the component.
   * See [CSS API](#css) below for more details.
   */ classes: _propTypesDefault.default.object,
    /**
   * @ignore
   */ className: _propTypesDefault.default.string,
    /**
   * String or element serving as subtitle (support text).
   */ subtitle: _propTypesDefault.default.node,
    /**
   * Title to be displayed on tile.
   */ title: _propTypesDefault.default.node,
    /**
   * Position of the title bar.
   */ titlePosition: _propTypesDefault.default.oneOf([
        'bottom',
        'top'
    ])
};
exports.default = _withStylesDefault.default(styles, {
    name: 'MuiGridListTileBar'
})(GridListTileBar);

},{"@babel/runtime/helpers/esm/extends":"fTBFS","@babel/runtime/helpers/esm/objectWithoutProperties":"25tJ4","react":"21dqq","prop-types":"7wKI2","clsx":"83C22","../styles/withStyles":"7U0iM","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"2tpXF":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>_growDefault.default
);
var _grow = require("./Grow");
var _growDefault = parcelHelpers.interopDefault(_grow);

},{"./Grow":"llihQ","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"llihQ":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _extends = require("@babel/runtime/helpers/esm/extends");
var _extendsDefault = parcelHelpers.interopDefault(_extends);
var _slicedToArray = require("@babel/runtime/helpers/esm/slicedToArray");
var _slicedToArrayDefault = parcelHelpers.interopDefault(_slicedToArray);
var _objectWithoutProperties = require("@babel/runtime/helpers/esm/objectWithoutProperties");
var _objectWithoutPropertiesDefault = parcelHelpers.interopDefault(_objectWithoutProperties);
var _react = require("react");
var _propTypes = require("prop-types");
var _propTypesDefault = parcelHelpers.interopDefault(_propTypes);
var _reactTransitionGroup = require("react-transition-group");
var _useTheme = require("../styles/useTheme");
var _useThemeDefault = parcelHelpers.interopDefault(_useTheme);
var _utils = require("../transitions/utils");
var _useForkRef = require("../utils/useForkRef");
var _useForkRefDefault = parcelHelpers.interopDefault(_useForkRef);
function getScale(value) {
    return "scale(".concat(value, ", ").concat(Math.pow(value, 2), ")");
}
var styles = {
    entering: {
        opacity: 1,
        transform: getScale(1)
    },
    entered: {
        opacity: 1,
        transform: 'none'
    }
};
/**
 * The Grow transition is used by the [Tooltip](/components/tooltips/) and
 * [Popover](/components/popover/) components.
 * It uses [react-transition-group](https://github.com/reactjs/react-transition-group) internally.
 */ var Grow = /*#__PURE__*/ _react.forwardRef(function Grow(props, ref) {
    var children = props.children, _props$disableStrictM = props.disableStrictModeCompat, disableStrictModeCompat = _props$disableStrictM === void 0 ? false : _props$disableStrictM, inProp = props.in, onEnter = props.onEnter, onEntered = props.onEntered, onEntering = props.onEntering, onExit = props.onExit, onExited = props.onExited, onExiting = props.onExiting, style = props.style, _props$timeout = props.timeout, timeout = _props$timeout === void 0 ? 'auto' : _props$timeout, _props$TransitionComp = props.TransitionComponent, TransitionComponent = _props$TransitionComp === void 0 ? _reactTransitionGroup.Transition : _props$TransitionComp, other = _objectWithoutPropertiesDefault.default(props, [
        "children",
        "disableStrictModeCompat",
        "in",
        "onEnter",
        "onEntered",
        "onEntering",
        "onExit",
        "onExited",
        "onExiting",
        "style",
        "timeout",
        "TransitionComponent"
    ]);
    var timer = _react.useRef();
    var autoTimeout = _react.useRef();
    var theme = _useThemeDefault.default();
    var enableStrictModeCompat = theme.unstable_strictMode && !disableStrictModeCompat;
    var nodeRef = _react.useRef(null);
    var foreignRef = _useForkRefDefault.default(children.ref, ref);
    var handleRef = _useForkRefDefault.default(enableStrictModeCompat ? nodeRef : undefined, foreignRef);
    var normalizedTransitionCallback = function normalizedTransitionCallback(callback) {
        return function(nodeOrAppearing, maybeAppearing) {
            if (callback) {
                var _ref = enableStrictModeCompat ? [
                    nodeRef.current,
                    nodeOrAppearing
                ] : [
                    nodeOrAppearing,
                    maybeAppearing
                ], _ref2 = _slicedToArrayDefault.default(_ref, 2), node = _ref2[0], isAppearing = _ref2[1]; // onEnterXxx and onExitXxx callbacks have a different arguments.length value.
                if (isAppearing === undefined) callback(node);
                else callback(node, isAppearing);
            }
        };
    };
    var handleEntering = normalizedTransitionCallback(onEntering);
    var handleEnter = normalizedTransitionCallback(function(node, isAppearing) {
        _utils.reflow(node); // So the animation always start from the start.
        var _getTransitionProps = _utils.getTransitionProps({
            style: style,
            timeout: timeout
        }, {
            mode: 'enter'
        }), transitionDuration = _getTransitionProps.duration, delay = _getTransitionProps.delay;
        var duration;
        if (timeout === 'auto') {
            duration = theme.transitions.getAutoHeightDuration(node.clientHeight);
            autoTimeout.current = duration;
        } else duration = transitionDuration;
        node.style.transition = [
            theme.transitions.create('opacity', {
                duration: duration,
                delay: delay
            }),
            theme.transitions.create('transform', {
                duration: duration * 0.666,
                delay: delay
            })
        ].join(',');
        if (onEnter) onEnter(node, isAppearing);
    });
    var handleEntered = normalizedTransitionCallback(onEntered);
    var handleExiting = normalizedTransitionCallback(onExiting);
    var handleExit = normalizedTransitionCallback(function(node) {
        var _getTransitionProps2 = _utils.getTransitionProps({
            style: style,
            timeout: timeout
        }, {
            mode: 'exit'
        }), transitionDuration = _getTransitionProps2.duration, delay = _getTransitionProps2.delay;
        var duration;
        if (timeout === 'auto') {
            duration = theme.transitions.getAutoHeightDuration(node.clientHeight);
            autoTimeout.current = duration;
        } else duration = transitionDuration;
        node.style.transition = [
            theme.transitions.create('opacity', {
                duration: duration,
                delay: delay
            }),
            theme.transitions.create('transform', {
                duration: duration * 0.666,
                delay: delay || duration * 0.333
            })
        ].join(',');
        node.style.opacity = '0';
        node.style.transform = getScale(0.75);
        if (onExit) onExit(node);
    });
    var handleExited = normalizedTransitionCallback(onExited);
    var addEndListener = function addEndListener(nodeOrNext, maybeNext) {
        var next = enableStrictModeCompat ? nodeOrNext : maybeNext;
        if (timeout === 'auto') timer.current = setTimeout(next, autoTimeout.current || 0);
    };
    _react.useEffect(function() {
        return function() {
            clearTimeout(timer.current);
        };
    }, []);
    return /*#__PURE__*/ _react.createElement(TransitionComponent, _extendsDefault.default({
        appear: true,
        in: inProp,
        nodeRef: enableStrictModeCompat ? nodeRef : undefined,
        onEnter: handleEnter,
        onEntered: handleEntered,
        onEntering: handleEntering,
        onExit: handleExit,
        onExited: handleExited,
        onExiting: handleExiting,
        addEndListener: addEndListener,
        timeout: timeout === 'auto' ? null : timeout
    }, other), function(state, childProps) {
        return /*#__PURE__*/ _react.cloneElement(children, _extendsDefault.default({
            style: _extendsDefault.default({
                opacity: 0,
                transform: getScale(0.75),
                visibility: state === 'exited' && !inProp ? 'hidden' : undefined
            }, styles[state], style, children.props.style),
            ref: handleRef
        }, childProps));
    });
});
Grow.propTypes = {
    // ----------------------------- Warning --------------------------------
    // | These PropTypes are generated from the TypeScript type definitions |
    // |     To update them edit the d.ts file and run "yarn proptypes"     |
    // ----------------------------------------------------------------------
    /**
   * A single child content element.
   */ children: _propTypesDefault.default.element,
    /**
   * Enable this prop if you encounter 'Function components cannot be given refs',
   * use `unstable_createStrictModeTheme`,
   * and can't forward the ref in the child component.
   */ disableStrictModeCompat: _propTypesDefault.default.bool,
    /**
   * If `true`, show the component; triggers the enter or exit animation.
   */ in: _propTypesDefault.default.bool,
    /**
   * @ignore
   */ onEnter: _propTypesDefault.default.func,
    /**
   * @ignore
   */ onEntered: _propTypesDefault.default.func,
    /**
   * @ignore
   */ onEntering: _propTypesDefault.default.func,
    /**
   * @ignore
   */ onExit: _propTypesDefault.default.func,
    /**
   * @ignore
   */ onExited: _propTypesDefault.default.func,
    /**
   * @ignore
   */ onExiting: _propTypesDefault.default.func,
    /**
   * @ignore
   */ style: _propTypesDefault.default.object,
    /**
   * The duration for the transition, in milliseconds.
   * You may specify a single timeout for all transitions, or individually with an object.
   *
   * Set to 'auto' to automatically calculate transition time based on height.
   */ timeout: _propTypesDefault.default.oneOfType([
        _propTypesDefault.default.oneOf([
            'auto'
        ]),
        _propTypesDefault.default.number,
        _propTypesDefault.default.shape({
            appear: _propTypesDefault.default.number,
            enter: _propTypesDefault.default.number,
            exit: _propTypesDefault.default.number
        })
    ])
};
Grow.muiSupportAuto = true;
exports.default = Grow;

},{"@babel/runtime/helpers/esm/extends":"fTBFS","@babel/runtime/helpers/esm/slicedToArray":"cBZWN","@babel/runtime/helpers/esm/objectWithoutProperties":"25tJ4","react":"21dqq","prop-types":"7wKI2","react-transition-group":"fZSkB","../styles/useTheme":"kWUCn","../transitions/utils":"ixDXW","../utils/useForkRef":"kUpGa","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"223BB":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>_hiddenDefault.default
);
var _hidden = require("./Hidden");
var _hiddenDefault = parcelHelpers.interopDefault(_hidden);

},{"./Hidden":"44STP","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"44STP":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _extends = require("@babel/runtime/helpers/esm/extends");
var _extendsDefault = parcelHelpers.interopDefault(_extends);
var _objectWithoutProperties = require("@babel/runtime/helpers/esm/objectWithoutProperties");
var _objectWithoutPropertiesDefault = parcelHelpers.interopDefault(_objectWithoutProperties);
var _react = require("react");
var _propTypes = require("prop-types");
var _propTypesDefault = parcelHelpers.interopDefault(_propTypes);
var _hiddenJs = require("./HiddenJs");
var _hiddenJsDefault = parcelHelpers.interopDefault(_hiddenJs);
var _hiddenCss = require("./HiddenCss");
var _hiddenCssDefault = parcelHelpers.interopDefault(_hiddenCss);
/**
 * Responsively hides children based on the selected implementation.
 */ function Hidden(props) {
    var _props$implementation = props.implementation, implementation = _props$implementation === void 0 ? 'js' : _props$implementation, _props$lgDown = props.lgDown, lgDown = _props$lgDown === void 0 ? false : _props$lgDown, _props$lgUp = props.lgUp, lgUp = _props$lgUp === void 0 ? false : _props$lgUp, _props$mdDown = props.mdDown, mdDown = _props$mdDown === void 0 ? false : _props$mdDown, _props$mdUp = props.mdUp, mdUp = _props$mdUp === void 0 ? false : _props$mdUp, _props$smDown = props.smDown, smDown = _props$smDown === void 0 ? false : _props$smDown, _props$smUp = props.smUp, smUp = _props$smUp === void 0 ? false : _props$smUp, _props$xlDown = props.xlDown, xlDown = _props$xlDown === void 0 ? false : _props$xlDown, _props$xlUp = props.xlUp, xlUp = _props$xlUp === void 0 ? false : _props$xlUp, _props$xsDown = props.xsDown, xsDown = _props$xsDown === void 0 ? false : _props$xsDown, _props$xsUp = props.xsUp, xsUp = _props$xsUp === void 0 ? false : _props$xsUp, other = _objectWithoutPropertiesDefault.default(props, [
        "implementation",
        "lgDown",
        "lgUp",
        "mdDown",
        "mdUp",
        "smDown",
        "smUp",
        "xlDown",
        "xlUp",
        "xsDown",
        "xsUp"
    ]);
    if (implementation === 'js') return /*#__PURE__*/ _react.createElement(_hiddenJsDefault.default, _extendsDefault.default({
        lgDown: lgDown,
        lgUp: lgUp,
        mdDown: mdDown,
        mdUp: mdUp,
        smDown: smDown,
        smUp: smUp,
        xlDown: xlDown,
        xlUp: xlUp,
        xsDown: xsDown,
        xsUp: xsUp
    }, other));
    return /*#__PURE__*/ _react.createElement(_hiddenCssDefault.default, _extendsDefault.default({
        lgDown: lgDown,
        lgUp: lgUp,
        mdDown: mdDown,
        mdUp: mdUp,
        smDown: smDown,
        smUp: smUp,
        xlDown: xlDown,
        xlUp: xlUp,
        xsDown: xsDown,
        xsUp: xsUp
    }, other));
}
Hidden.propTypes = {
    /**
   * The content of the component.
   */ children: _propTypesDefault.default.node,
    /**
   * @ignore
   */ className: _propTypesDefault.default.string,
    /**
   * Specify which implementation to use.  'js' is the default, 'css' works better for
   * server-side rendering.
   */ implementation: _propTypesDefault.default.oneOf([
        'js',
        'css'
    ]),
    /**
   * You can use this prop when choosing the `js` implementation with server-side rendering.
   *
   * As `window.innerWidth` is unavailable on the server,
   * we default to rendering an empty component during the first mount.
   * You might want to use an heuristic to approximate
   * the screen width of the client browser screen width.
   *
   * For instance, you could be using the user-agent or the client-hints.
   * https://caniuse.com/#search=client%20hint
   */ initialWidth: _propTypesDefault.default.oneOf([
        'xs',
        'sm',
        'md',
        'lg',
        'xl'
    ]),
    /**
   * If `true`, screens this size and down will be hidden.
   */ lgDown: _propTypesDefault.default.bool,
    /**
   * If `true`, screens this size and up will be hidden.
   */ lgUp: _propTypesDefault.default.bool,
    /**
   * If `true`, screens this size and down will be hidden.
   */ mdDown: _propTypesDefault.default.bool,
    /**
   * If `true`, screens this size and up will be hidden.
   */ mdUp: _propTypesDefault.default.bool,
    /**
   * Hide the given breakpoint(s).
   */ only: _propTypesDefault.default.oneOfType([
        _propTypesDefault.default.oneOf([
            'xs',
            'sm',
            'md',
            'lg',
            'xl'
        ]),
        _propTypesDefault.default.arrayOf(_propTypesDefault.default.oneOf([
            'xs',
            'sm',
            'md',
            'lg',
            'xl'
        ]))
    ]),
    /**
   * If `true`, screens this size and down will be hidden.
   */ smDown: _propTypesDefault.default.bool,
    /**
   * If `true`, screens this size and up will be hidden.
   */ smUp: _propTypesDefault.default.bool,
    /**
   * If `true`, screens this size and down will be hidden.
   */ xlDown: _propTypesDefault.default.bool,
    /**
   * If `true`, screens this size and up will be hidden.
   */ xlUp: _propTypesDefault.default.bool,
    /**
   * If `true`, screens this size and down will be hidden.
   */ xsDown: _propTypesDefault.default.bool,
    /**
   * If `true`, screens this size and up will be hidden.
   */ xsUp: _propTypesDefault.default.bool
};
exports.default = Hidden;

},{"@babel/runtime/helpers/esm/extends":"fTBFS","@babel/runtime/helpers/esm/objectWithoutProperties":"25tJ4","react":"21dqq","prop-types":"7wKI2","./HiddenJs":"2r3H2","./HiddenCss":"2j8Tk","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"2r3H2":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _propTypes = require("prop-types");
var _propTypesDefault = parcelHelpers.interopDefault(_propTypes);
var _utils = require("@material-ui/utils");
var _withWidth = require("../withWidth");
var _withWidthDefault = parcelHelpers.interopDefault(_withWidth);
var _useTheme = require("../styles/useTheme");
var _useThemeDefault = parcelHelpers.interopDefault(_useTheme);
/**
 * @ignore - internal component.
 */ function HiddenJs(props) {
    var children = props.children, only = props.only, width = props.width;
    var theme = _useThemeDefault.default();
    var visible = true; // `only` check is faster to get out sooner if used.
    if (only) {
        if (Array.isArray(only)) for(var i = 0; i < only.length; i += 1){
            var breakpoint = only[i];
            if (width === breakpoint) {
                visible = false;
                break;
            }
        }
        else if (only && width === only) visible = false;
    } // Allow `only` to be combined with other props. If already hidden, no need to check others.
    if (visible) // determine visibility based on the smallest size up
    for(var _i = 0; _i < theme.breakpoints.keys.length; _i += 1){
        var _breakpoint = theme.breakpoints.keys[_i];
        var breakpointUp = props["".concat(_breakpoint, "Up")];
        var breakpointDown = props["".concat(_breakpoint, "Down")];
        if (breakpointUp && _withWidth.isWidthUp(_breakpoint, width) || breakpointDown && _withWidth.isWidthDown(_breakpoint, width)) {
            visible = false;
            break;
        }
    }
    if (!visible) return null;
    return children;
}
HiddenJs.propTypes = {
    /**
   * The content of the component.
   */ children: _propTypesDefault.default.node,
    /**
   * @ignore
   */ className: _propTypesDefault.default.string,
    /**
   * Specify which implementation to use.  'js' is the default, 'css' works better for
   * server-side rendering.
   */ implementation: _propTypesDefault.default.oneOf([
        'js',
        'css'
    ]),
    /**
   * You can use this prop when choosing the `js` implementation with server-side rendering.
   *
   * As `window.innerWidth` is unavailable on the server,
   * we default to rendering an empty component during the first mount.
   * You might want to use an heuristic to approximate
   * the screen width of the client browser screen width.
   *
   * For instance, you could be using the user-agent or the client-hints.
   * https://caniuse.com/#search=client%20hint
   */ initialWidth: _propTypesDefault.default.oneOf([
        'xs',
        'sm',
        'md',
        'lg',
        'xl'
    ]),
    /**
   * If `true`, screens this size and down will be hidden.
   */ lgDown: _propTypesDefault.default.bool,
    /**
   * If `true`, screens this size and up will be hidden.
   */ lgUp: _propTypesDefault.default.bool,
    /**
   * If `true`, screens this size and down will be hidden.
   */ mdDown: _propTypesDefault.default.bool,
    /**
   * If `true`, screens this size and up will be hidden.
   */ mdUp: _propTypesDefault.default.bool,
    /**
   * Hide the given breakpoint(s).
   */ only: _propTypesDefault.default.oneOfType([
        _propTypesDefault.default.oneOf([
            'xs',
            'sm',
            'md',
            'lg',
            'xl'
        ]),
        _propTypesDefault.default.arrayOf(_propTypesDefault.default.oneOf([
            'xs',
            'sm',
            'md',
            'lg',
            'xl'
        ]))
    ]),
    /**
   * If `true`, screens this size and down will be hidden.
   */ smDown: _propTypesDefault.default.bool,
    /**
   * If `true`, screens this size and up will be hidden.
   */ smUp: _propTypesDefault.default.bool,
    /**
   * @ignore
   * width prop provided by withWidth decorator.
   */ width: _propTypesDefault.default.string.isRequired,
    /**
   * If `true`, screens this size and down will be hidden.
   */ xlDown: _propTypesDefault.default.bool,
    /**
   * If `true`, screens this size and up will be hidden.
   */ xlUp: _propTypesDefault.default.bool,
    /**
   * If `true`, screens this size and down will be hidden.
   */ xsDown: _propTypesDefault.default.bool,
    /**
   * If `true`, screens this size and up will be hidden.
   */ xsUp: _propTypesDefault.default.bool
};
HiddenJs.propTypes = _utils.exactProp(HiddenJs.propTypes);
exports.default = _withWidthDefault.default()(HiddenJs);

},{"prop-types":"7wKI2","@material-ui/utils":"54RkF","../withWidth":"9xCeZ","../styles/useTheme":"kWUCn","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"9xCeZ":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>_withWidthDefault.default
);
var _withWidth = require("./withWidth");
var _withWidthDefault = parcelHelpers.interopDefault(_withWidth);
parcelHelpers.exportAll(_withWidth, exports);

},{"./withWidth":"dCc0b","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"dCc0b":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "isWidthUp", ()=>isWidthUp
);
parcelHelpers.export(exports, "isWidthDown", ()=>isWidthDown
);
var _extends = require("@babel/runtime/helpers/esm/extends");
var _extendsDefault = parcelHelpers.interopDefault(_extends);
var _objectWithoutProperties = require("@babel/runtime/helpers/esm/objectWithoutProperties");
var _objectWithoutPropertiesDefault = parcelHelpers.interopDefault(_objectWithoutProperties);
var _react = require("react");
var _propTypes = require("prop-types");
var _propTypesDefault = parcelHelpers.interopDefault(_propTypes);
var _utils = require("@material-ui/utils");
var _styles = require("@material-ui/styles");
var _hoistNonReactStatics = require("hoist-non-react-statics");
var _hoistNonReactStaticsDefault = parcelHelpers.interopDefault(_hoistNonReactStatics);
var _useTheme = require("../styles/useTheme");
var _useThemeDefault = parcelHelpers.interopDefault(_useTheme);
var _createBreakpoints = require("../styles/createBreakpoints");
var _useMediaQuery = require("../useMediaQuery"); // By default, returns true if screen width is the same or greater than the given breakpoint.
var _useMediaQueryDefault = parcelHelpers.interopDefault(_useMediaQuery);
var isWidthUp = function isWidthUp(breakpoint, width) {
    var inclusive = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;
    if (inclusive) return _createBreakpoints.keys.indexOf(breakpoint) <= _createBreakpoints.keys.indexOf(width);
    return _createBreakpoints.keys.indexOf(breakpoint) < _createBreakpoints.keys.indexOf(width);
}; // By default, returns true if screen width is the same or less than the given breakpoint.
var isWidthDown = function isWidthDown(breakpoint, width) {
    var inclusive = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;
    if (inclusive) return _createBreakpoints.keys.indexOf(width) <= _createBreakpoints.keys.indexOf(breakpoint);
    return _createBreakpoints.keys.indexOf(width) < _createBreakpoints.keys.indexOf(breakpoint);
};
var useEnhancedEffect = typeof window === 'undefined' ? _react.useEffect : _react.useLayoutEffect;
var withWidth = function withWidth() {
    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    return function(Component) {
        var _options$withTheme = options.withTheme, withThemeOption = _options$withTheme === void 0 ? false : _options$withTheme, _options$noSSR = options.noSSR, noSSR = _options$noSSR === void 0 ? false : _options$noSSR, initialWidthOption = options.initialWidth;
        function WithWidth(props) {
            var contextTheme = _useThemeDefault.default();
            var theme = props.theme || contextTheme;
            var _getThemeProps = _styles.getThemeProps({
                theme: theme,
                name: 'MuiWithWidth',
                props: _extendsDefault.default({}, props)
            }), initialWidth = _getThemeProps.initialWidth, width = _getThemeProps.width, other = _objectWithoutPropertiesDefault.default(_getThemeProps, [
                "initialWidth",
                "width"
            ]);
            var _React$useState = _react.useState(false), mountedState = _React$useState[0], setMountedState = _React$useState[1];
            useEnhancedEffect(function() {
                setMountedState(true);
            }, []);
            /**
       * innerWidth |xs      sm      md      lg      xl
       *            |-------|-------|-------|-------|------>
       * width      |  xs   |  sm   |  md   |  lg   |  xl
       */ var keys = theme.breakpoints.keys.slice().reverse();
            var widthComputed = keys.reduce(function(output, key) {
                // eslint-disable-next-line react-hooks/rules-of-hooks
                var matches = _useMediaQueryDefault.default(theme.breakpoints.up(key));
                return !output && matches ? key : output;
            }, null);
            var more = _extendsDefault.default({
                width: width || (mountedState || noSSR ? widthComputed : undefined) || initialWidth || initialWidthOption
            }, withThemeOption ? {
                theme: theme
            } : {}, other); // When rendering the component on the server,
            // we have no idea about the client browser screen width.
            // In order to prevent blinks and help the reconciliation of the React tree
            // we are not rendering the child component.
            //
            // An alternative is to use the `initialWidth` property.
            if (more.width === undefined) return null;
            return /*#__PURE__*/ _react.createElement(Component, more);
        }
        WithWidth.propTypes = {
            /**
       * As `window.innerWidth` is unavailable on the server,
       * we default to rendering an empty component during the first mount.
       * You might want to use an heuristic to approximate
       * the screen width of the client browser screen width.
       *
       * For instance, you could be using the user-agent or the client-hints.
       * https://caniuse.com/#search=client%20hint
       */ initialWidth: _propTypesDefault.default.oneOf([
                'xs',
                'sm',
                'md',
                'lg',
                'xl'
            ]),
            /**
       * @ignore
       */ theme: _propTypesDefault.default.object,
            /**
       * Bypass the width calculation logic.
       */ width: _propTypesDefault.default.oneOf([
                'xs',
                'sm',
                'md',
                'lg',
                'xl'
            ])
        };
        WithWidth.displayName = "WithWidth(".concat(_utils.getDisplayName(Component), ")");
        _hoistNonReactStaticsDefault.default(WithWidth, Component);
        return WithWidth;
    };
};
exports.default = withWidth;

},{"@babel/runtime/helpers/esm/extends":"fTBFS","@babel/runtime/helpers/esm/objectWithoutProperties":"25tJ4","react":"21dqq","prop-types":"7wKI2","@material-ui/utils":"54RkF","@material-ui/styles":"1TOv0","hoist-non-react-statics":"1GfsB","../styles/useTheme":"kWUCn","../styles/createBreakpoints":"SxfzH","../useMediaQuery":"hbUiL","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"hbUiL":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>_useMediaQueryDefault.default
);
var _useMediaQuery = require("./useMediaQuery");
var _useMediaQueryDefault = parcelHelpers.interopDefault(_useMediaQuery);

},{"./useMediaQuery":"2JLKU","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"2JLKU":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _extends = require("@babel/runtime/helpers/esm/extends");
var _extendsDefault = parcelHelpers.interopDefault(_extends);
var _react = require("react");
var _styles = require("@material-ui/styles");
function useMediaQuery(queryInput) {
    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
    var theme = _styles.useTheme();
    var props = _styles.getThemeProps({
        theme: theme,
        name: 'MuiUseMediaQuery',
        props: {}
    });
    if (typeof queryInput === 'function' && theme === null) console.error([
        'Material-UI: The `query` argument provided is invalid.',
        'You are providing a function without a theme in the context.',
        'One of the parent elements needs to use a ThemeProvider.'
    ].join('\n'));
    var query = typeof queryInput === 'function' ? queryInput(theme) : queryInput;
    query = query.replace(/^@media( ?)/m, ''); // Wait for jsdom to support the match media feature.
    // All the browsers Material-UI support have this built-in.
    // This defensive check is here for simplicity.
    // Most of the time, the match media logic isn't central to people tests.
    var supportMatchMedia = typeof window !== 'undefined' && typeof window.matchMedia !== 'undefined';
    var _props$options = _extendsDefault.default({}, props, options), _props$options$defaul = _props$options.defaultMatches, defaultMatches = _props$options$defaul === void 0 ? false : _props$options$defaul, _props$options$matchM = _props$options.matchMedia, matchMedia = _props$options$matchM === void 0 ? supportMatchMedia ? window.matchMedia : null : _props$options$matchM, _props$options$noSsr = _props$options.noSsr, noSsr = _props$options$noSsr === void 0 ? false : _props$options$noSsr, _props$options$ssrMat = _props$options.ssrMatchMedia, ssrMatchMedia = _props$options$ssrMat === void 0 ? null : _props$options$ssrMat;
    var _React$useState = _react.useState(function() {
        if (noSsr && supportMatchMedia) return matchMedia(query).matches;
        if (ssrMatchMedia) return ssrMatchMedia(query).matches;
         // Once the component is mounted, we rely on the
        // event listeners to return the correct matches value.
        return defaultMatches;
    }), match = _React$useState[0], setMatch = _React$useState[1];
    _react.useEffect(function() {
        var active = true;
        if (!supportMatchMedia) return undefined;
        var queryList = matchMedia(query);
        var updateMatch = function updateMatch() {
            // Workaround Safari wrong implementation of matchMedia
            // TODO can we remove it?
            // https://github.com/mui-org/material-ui/pull/17315#issuecomment-528286677
            if (active) setMatch(queryList.matches);
        };
        updateMatch();
        queryList.addListener(updateMatch);
        return function() {
            active = false;
            queryList.removeListener(updateMatch);
        };
    }, [
        query,
        matchMedia,
        supportMatchMedia
    ]);
    // eslint-disable-next-line react-hooks/rules-of-hooks
    _react.useDebugValue({
        query: query,
        match: match
    });
    return match;
}
exports.default = useMediaQuery;

},{"@babel/runtime/helpers/esm/extends":"fTBFS","react":"21dqq","@material-ui/styles":"1TOv0","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"2j8Tk":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _objectWithoutProperties = require("@babel/runtime/helpers/esm/objectWithoutProperties");
var _objectWithoutPropertiesDefault = parcelHelpers.interopDefault(_objectWithoutProperties);
var _defineProperty = require("@babel/runtime/helpers/esm/defineProperty");
var _definePropertyDefault = parcelHelpers.interopDefault(_defineProperty);
var _react = require("react");
var _propTypes = require("prop-types");
var _propTypesDefault = parcelHelpers.interopDefault(_propTypes);
var _capitalize = require("../utils/capitalize");
var _capitalizeDefault = parcelHelpers.interopDefault(_capitalize);
var _withStyles = require("../styles/withStyles");
var _withStylesDefault = parcelHelpers.interopDefault(_withStyles);
var _useTheme = require("../styles/useTheme");
var _useThemeDefault = parcelHelpers.interopDefault(_useTheme);
var styles = function styles(theme) {
    var hidden = {
        display: 'none'
    };
    return theme.breakpoints.keys.reduce(function(acc, key) {
        acc["only".concat(_capitalizeDefault.default(key))] = _definePropertyDefault.default({}, theme.breakpoints.only(key), hidden);
        acc["".concat(key, "Up")] = _definePropertyDefault.default({}, theme.breakpoints.up(key), hidden);
        acc["".concat(key, "Down")] = _definePropertyDefault.default({}, theme.breakpoints.down(key), hidden);
        return acc;
    }, {});
};
/**
 * @ignore - internal component.
 */ function HiddenCss(props) {
    var children = props.children, classes = props.classes, className = props.className, only = props.only, other = _objectWithoutPropertiesDefault.default(props, [
        "children",
        "classes",
        "className",
        "only"
    ]);
    var theme = _useThemeDefault.default();
    var unknownProps = Object.keys(other).filter(function(propName) {
        var isUndeclaredBreakpoint = !theme.breakpoints.keys.some(function(breakpoint) {
            return "".concat(breakpoint, "Up") === propName || "".concat(breakpoint, "Down") === propName;
        });
        return isUndeclaredBreakpoint;
    });
    if (unknownProps.length > 0) console.error("Material-UI: Unsupported props received by `<Hidden implementation=\"css\" />`: ".concat(unknownProps.join(', '), ". Did you forget to wrap this component in a ThemeProvider declaring these breakpoints?"));
    var clsx = [];
    if (className) clsx.push(className);
    for(var i = 0; i < theme.breakpoints.keys.length; i += 1){
        var breakpoint1 = theme.breakpoints.keys[i];
        var breakpointUp = props["".concat(breakpoint1, "Up")];
        var breakpointDown = props["".concat(breakpoint1, "Down")];
        if (breakpointUp) clsx.push(classes["".concat(breakpoint1, "Up")]);
        if (breakpointDown) clsx.push(classes["".concat(breakpoint1, "Down")]);
    }
    if (only) {
        var onlyBreakpoints = Array.isArray(only) ? only : [
            only
        ];
        onlyBreakpoints.forEach(function(breakpoint) {
            clsx.push(classes["only".concat(_capitalizeDefault.default(breakpoint))]);
        });
    }
    return /*#__PURE__*/ _react.createElement("div", {
        className: clsx.join(' ')
    }, children);
}
HiddenCss.propTypes = {
    /**
   * The content of the component.
   */ children: _propTypesDefault.default.node,
    /**
   * Override or extend the styles applied to the component.
   * See [CSS API](#css) below for more details.
   */ classes: _propTypesDefault.default.object.isRequired,
    /**
   * @ignore
   */ className: _propTypesDefault.default.string,
    /**
   * Specify which implementation to use.  'js' is the default, 'css' works better for
   * server-side rendering.
   */ implementation: _propTypesDefault.default.oneOf([
        'js',
        'css'
    ]),
    /**
   * If `true`, screens this size and down will be hidden.
   */ lgDown: _propTypesDefault.default.bool,
    /**
   * If `true`, screens this size and up will be hidden.
   */ lgUp: _propTypesDefault.default.bool,
    /**
   * If `true`, screens this size and down will be hidden.
   */ mdDown: _propTypesDefault.default.bool,
    /**
   * If `true`, screens this size and up will be hidden.
   */ mdUp: _propTypesDefault.default.bool,
    /**
   * Hide the given breakpoint(s).
   */ only: _propTypesDefault.default.oneOfType([
        _propTypesDefault.default.oneOf([
            'xs',
            'sm',
            'md',
            'lg',
            'xl'
        ]),
        _propTypesDefault.default.arrayOf(_propTypesDefault.default.oneOf([
            'xs',
            'sm',
            'md',
            'lg',
            'xl'
        ]))
    ]),
    /**
   * If `true`, screens this size and down will be hidden.
   */ smDown: _propTypesDefault.default.bool,
    /**
   * If `true`, screens this size and up will be hidden.
   */ smUp: _propTypesDefault.default.bool,
    /**
   * If `true`, screens this size and down will be hidden.
   */ xlDown: _propTypesDefault.default.bool,
    /**
   * If `true`, screens this size and up will be hidden.
   */ xlUp: _propTypesDefault.default.bool,
    /**
   * If `true`, screens this size and down will be hidden.
   */ xsDown: _propTypesDefault.default.bool,
    /**
   * If `true`, screens this size and up will be hidden.
   */ xsUp: _propTypesDefault.default.bool
};
exports.default = _withStylesDefault.default(styles, {
    name: 'PrivateHiddenCss'
})(HiddenCss);

},{"@babel/runtime/helpers/esm/objectWithoutProperties":"25tJ4","@babel/runtime/helpers/esm/defineProperty":"hbmCA","react":"21dqq","prop-types":"7wKI2","../utils/capitalize":"5AJVX","../styles/withStyles":"7U0iM","../styles/useTheme":"kWUCn","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"eW0qT":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>_iconDefault.default
);
var _icon = require("./Icon");
var _iconDefault = parcelHelpers.interopDefault(_icon);

},{"./Icon":"gUt9n","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"gUt9n":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "styles", ()=>styles
);
var _extends = require("@babel/runtime/helpers/esm/extends");
var _extendsDefault = parcelHelpers.interopDefault(_extends);
var _objectWithoutProperties = require("@babel/runtime/helpers/esm/objectWithoutProperties");
var _objectWithoutPropertiesDefault = parcelHelpers.interopDefault(_objectWithoutProperties);
var _react = require("react");
var _propTypes = require("prop-types");
var _propTypesDefault = parcelHelpers.interopDefault(_propTypes);
var _clsx = require("clsx");
var _clsxDefault = parcelHelpers.interopDefault(_clsx);
var _utils = require("@material-ui/utils");
var _withStyles = require("../styles/withStyles");
var _withStylesDefault = parcelHelpers.interopDefault(_withStyles);
var _capitalize = require("../utils/capitalize");
var _capitalizeDefault = parcelHelpers.interopDefault(_capitalize);
var styles = function styles(theme) {
    return {
        /* Styles applied to the root element. */ root: {
            userSelect: 'none',
            fontSize: theme.typography.pxToRem(24),
            width: '1em',
            height: '1em',
            // Chrome fix for https://bugs.chromium.org/p/chromium/issues/detail?id=820541
            // To remove at some point.
            overflow: 'hidden',
            flexShrink: 0
        },
        /* Styles applied to the root element if `color="primary"`. */ colorPrimary: {
            color: theme.palette.primary.main
        },
        /* Styles applied to the root element if `color="secondary"`. */ colorSecondary: {
            color: theme.palette.secondary.main
        },
        /* Styles applied to the root element if `color="action"`. */ colorAction: {
            color: theme.palette.action.active
        },
        /* Styles applied to the root element if `color="error"`. */ colorError: {
            color: theme.palette.error.main
        },
        /* Styles applied to the root element if `color="disabled"`. */ colorDisabled: {
            color: theme.palette.action.disabled
        },
        /* Styles applied to the root element if `fontSize="inherit"`. */ fontSizeInherit: {
            fontSize: 'inherit'
        },
        /* Styles applied to the root element if `fontSize="small"`. */ fontSizeSmall: {
            fontSize: theme.typography.pxToRem(20)
        },
        /* Styles applied to the root element if `fontSize="large"`. */ fontSizeLarge: {
            fontSize: theme.typography.pxToRem(36)
        }
    };
};
var Icon = /*#__PURE__*/ _react.forwardRef(function Icon(props, ref) {
    var classes = props.classes, className = props.className, _props$color = props.color, color = _props$color === void 0 ? 'inherit' : _props$color, _props$component = props.component, Component = _props$component === void 0 ? 'span' : _props$component, _props$fontSize = props.fontSize, fontSize = _props$fontSize === void 0 ? 'medium' : _props$fontSize, other = _objectWithoutPropertiesDefault.default(props, [
        "classes",
        "className",
        "color",
        "component",
        "fontSize"
    ]);
    return /*#__PURE__*/ _react.createElement(Component, _extendsDefault.default({
        className: _clsxDefault.default('material-icons', classes.root, className, color !== 'inherit' && classes["color".concat(_capitalizeDefault.default(color))], fontSize !== 'default' && fontSize !== 'medium' && classes["fontSize".concat(_capitalizeDefault.default(fontSize))]),
        "aria-hidden": true,
        ref: ref
    }, other));
});
Icon.propTypes = {
    /**
   * The name of the icon font ligature.
   */ children: _propTypesDefault.default.node,
    /**
   * Override or extend the styles applied to the component.
   * See [CSS API](#css) below for more details.
   */ classes: _propTypesDefault.default.object.isRequired,
    /**
   * @ignore
   */ className: _propTypesDefault.default.string,
    /**
   * The color of the component. It supports those theme colors that make sense for this component.
   */ color: _propTypesDefault.default.oneOf([
        'inherit',
        'primary',
        'secondary',
        'action',
        'error',
        'disabled'
    ]),
    /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */ component: _propTypesDefault.default/* @typescript-to-proptypes-ignore */ .elementType,
    /**
   * The fontSize applied to the icon. Defaults to 24px, but can be configure to inherit font size.
   */ fontSize: _utils.chainPropTypes(_propTypesDefault.default.oneOf([
        'default',
        'inherit',
        'large',
        'medium',
        'small'
    ]), function(props) {
        var fontSize = props.fontSize;
        if (fontSize === 'default') throw new Error('Material-UI: `fontSize="default"` is deprecated. Use `fontSize="medium"` instead.');
        return null;
    })
};
Icon.muiName = 'Icon';
exports.default = _withStylesDefault.default(styles, {
    name: 'MuiIcon'
})(Icon);

},{"@babel/runtime/helpers/esm/extends":"fTBFS","@babel/runtime/helpers/esm/objectWithoutProperties":"25tJ4","react":"21dqq","prop-types":"7wKI2","clsx":"83C22","@material-ui/utils":"54RkF","../styles/withStyles":"7U0iM","../utils/capitalize":"5AJVX","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"s32Zv":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>_imageListDefault.default
);
var _imageList = require("./ImageList");
var _imageListDefault = parcelHelpers.interopDefault(_imageList);

},{"./ImageList":"k1GzA","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"k1GzA":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "styles", ()=>styles
);
var _extends = require("@babel/runtime/helpers/esm/extends");
var _extendsDefault = parcelHelpers.interopDefault(_extends);
var _objectWithoutProperties = require("@babel/runtime/helpers/esm/objectWithoutProperties");
var _objectWithoutPropertiesDefault = parcelHelpers.interopDefault(_objectWithoutProperties);
var _react = require("react");
var _reactIs = require("react-is");
var _propTypes = require("prop-types");
var _propTypesDefault = parcelHelpers.interopDefault(_propTypes);
var _clsx = require("clsx");
var _clsxDefault = parcelHelpers.interopDefault(_clsx);
var _withStyles = require("../styles/withStyles");
var _withStylesDefault = parcelHelpers.interopDefault(_withStyles);
var _deprecatedPropType = require("../utils/deprecatedPropType");
var _deprecatedPropTypeDefault = parcelHelpers.interopDefault(_deprecatedPropType);
var styles = {
    /* Styles applied to the root element. */ root: {
        display: 'flex',
        flexWrap: 'wrap',
        overflowY: 'auto',
        listStyle: 'none',
        padding: 0,
        WebkitOverflowScrolling: 'touch' // Add iOS momentum scrolling.
    }
};
var ImageList = /*#__PURE__*/ _react.forwardRef(function ImageList(props, ref) {
    var cellHeight = props.cellHeight, children = props.children, classes = props.classes, className = props.className, _props$cols = props.cols, cols = _props$cols === void 0 ? 2 : _props$cols, _props$component = props.component, Component = _props$component === void 0 ? 'ul' : _props$component, _props$gap = props.gap, gapProp = _props$gap === void 0 ? 4 : _props$gap, _props$rowHeight = props.rowHeight, rowHeightProp = _props$rowHeight === void 0 ? 180 : _props$rowHeight, spacing = props.spacing, style = props.style, other = _objectWithoutPropertiesDefault.default(props, [
        "cellHeight",
        "children",
        "classes",
        "className",
        "cols",
        "component",
        "gap",
        "rowHeight",
        "spacing",
        "style"
    ]);
    var gap = spacing || gapProp;
    var rowHeight = cellHeight || rowHeightProp;
    return /*#__PURE__*/ _react.createElement(Component, _extendsDefault.default({
        className: _clsxDefault.default(classes.root, className),
        ref: ref,
        style: _extendsDefault.default({
            margin: -gap / 2
        }, style)
    }, other), _react.Children.map(children, function(child) {
        if (!/*#__PURE__*/ _react.isValidElement(child)) return null;
        if (_reactIs.isFragment(child)) console.error([
            "Material-UI: The ImageList component doesn't accept a Fragment as a child.",
            'Consider providing an array instead.'
        ].join('\n'));
        var childCols = child.props.cols || 1;
        var childRows = child.props.rows || 1;
        return /*#__PURE__*/ _react.cloneElement(child, {
            style: _extendsDefault.default({
                width: "".concat(100 / cols * childCols, "%"),
                height: rowHeight === 'auto' ? 'auto' : rowHeight * childRows + gap,
                padding: gap / 2
            }, child.props.style)
        });
    }));
});
ImageList.propTypes = {
    // ----------------------------- Warning --------------------------------
    // | These PropTypes are generated from the TypeScript type definitions |
    // |     To update them edit the d.ts file and run "yarn proptypes"     |
    // ----------------------------------------------------------------------
    /**
   * Cell height in `px`.
   * Set to `'auto'` to let the children determine the height.
   * @deprecated Use rowHeight instead.
   */ cellHeight: _deprecatedPropTypeDefault.default(_propTypesDefault.default.oneOfType([
        _propTypesDefault.default.number,
        _propTypesDefault.default.oneOf([
            'auto'
        ])
    ]), 'Use the `rowHeight` prop instead.'),
    /**
   * Items that will be in the image list.
   */ children: _propTypesDefault.default.node,
    /**
   * Override or extend the styles applied to the component.
   * See [CSS API](#css) below for more details.
   */ classes: _propTypesDefault.default.object,
    /**
   * @ignore
   */ className: _propTypesDefault.default.string,
    /**
   * Number of columns.
   */ cols: _propTypesDefault.default.number,
    /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */ component: _propTypesDefault.default/* @typescript-to-proptypes-ignore */ .elementType,
    /**
   * The gap between items in `px`.
   */ gap: _propTypesDefault.default.number,
    /**
   * The height of one row in `px`.
   */ rowHeight: _propTypesDefault.default.oneOfType([
        _propTypesDefault.default.oneOf([
            'auto'
        ]),
        _propTypesDefault.default.number
    ]),
    /**
   * The spacing between items in `px`.
   * @deprecated Use gap instead.
   */ spacing: _deprecatedPropTypeDefault.default(_propTypesDefault.default.number, 'Use the `gap` prop instead.'),
    /**
   * @ignore
   */ style: _propTypesDefault.default.object
};
exports.default = _withStylesDefault.default(styles, {
    name: 'MuiImageList'
})(ImageList);

},{"@babel/runtime/helpers/esm/extends":"fTBFS","@babel/runtime/helpers/esm/objectWithoutProperties":"25tJ4","react":"21dqq","react-is":"63mDj","prop-types":"7wKI2","clsx":"83C22","../styles/withStyles":"7U0iM","../utils/deprecatedPropType":"loRgF","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"9A3nb":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>_imageListItemDefault.default
);
var _imageListItem = require("./ImageListItem");
var _imageListItemDefault = parcelHelpers.interopDefault(_imageListItem);

},{"./ImageListItem":"kFLPg","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"kFLPg":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "styles", ()=>styles
);
var _extends = require("@babel/runtime/helpers/esm/extends");
var _extendsDefault = parcelHelpers.interopDefault(_extends);
var _objectWithoutProperties = require("@babel/runtime/helpers/esm/objectWithoutProperties");
var _objectWithoutPropertiesDefault = parcelHelpers.interopDefault(_objectWithoutProperties);
var _toConsumableArray = require("@babel/runtime/helpers/esm/toConsumableArray");
var _toConsumableArrayDefault = parcelHelpers.interopDefault(_toConsumableArray);
var _react = require("react");
var _propTypes = require("prop-types");
var _propTypesDefault = parcelHelpers.interopDefault(_propTypes);
var _clsx = require("clsx");
var _clsxDefault = parcelHelpers.interopDefault(_clsx);
var _debounce = require("../utils/debounce");
var _debounceDefault = parcelHelpers.interopDefault(_debounce);
var _withStyles = require("../styles/withStyles");
var _withStylesDefault = parcelHelpers.interopDefault(_withStyles);
var _isMuiElement = require("../utils/isMuiElement");
var _isMuiElementDefault = parcelHelpers.interopDefault(_isMuiElement);
var styles = {
    /* Styles applied to the root element. */ root: {
        boxSizing: 'border-box',
        flexShrink: 0
    },
    /* Styles applied to the `div` element that wraps the children. */ item: {
        position: 'relative',
        display: 'block',
        // In case it's not rendered with a div.
        height: '100%',
        overflow: 'hidden'
    },
    /* Styles applied to an `img` element child, if needed to ensure it covers the item. */ imgFullHeight: {
        height: '100%',
        transform: 'translateX(-50%)',
        position: 'relative',
        left: '50%'
    },
    /* Styles applied to an `img` element child, if needed to ensure it covers the item. */ imgFullWidth: {
        width: '100%',
        position: 'relative',
        transform: 'translateY(-50%)',
        top: '50%'
    }
};
var fit = function fit(imgEl, classes) {
    if (!imgEl || !imgEl.complete) return;
    if (imgEl.width / imgEl.height > imgEl.parentElement.offsetWidth / imgEl.parentElement.offsetHeight) {
        var _imgEl$classList, _imgEl$classList2;
        (_imgEl$classList = imgEl.classList).remove.apply(_imgEl$classList, _toConsumableArrayDefault.default(classes.imgFullWidth.split(' ')));
        (_imgEl$classList2 = imgEl.classList).add.apply(_imgEl$classList2, _toConsumableArrayDefault.default(classes.imgFullHeight.split(' ')));
    } else {
        var _imgEl$classList3, _imgEl$classList4;
        (_imgEl$classList3 = imgEl.classList).remove.apply(_imgEl$classList3, _toConsumableArrayDefault.default(classes.imgFullHeight.split(' ')));
        (_imgEl$classList4 = imgEl.classList).add.apply(_imgEl$classList4, _toConsumableArrayDefault.default(classes.imgFullWidth.split(' ')));
    }
};
function ensureImageCover(imgEl, classes) {
    if (!imgEl) return;
    if (imgEl.complete) fit(imgEl, classes);
    else imgEl.addEventListener('load', function() {
        fit(imgEl, classes);
    });
}
var ImageListItem = /*#__PURE__*/ _react.forwardRef(function ImageListItem(props, ref) {
    // cols rows default values are for docs only
    var children = props.children, classes = props.classes, className = props.className, _props$cols = props.cols, cols = _props$cols === void 0 ? 1 : _props$cols, _props$component = props.component, Component = _props$component === void 0 ? 'li' : _props$component, _props$rows = props.rows, rows = _props$rows === void 0 ? 1 : _props$rows, other = _objectWithoutPropertiesDefault.default(props, [
        "children",
        "classes",
        "className",
        "cols",
        "component",
        "rows"
    ]);
    var imgRef = _react.useRef(null);
    _react.useEffect(function() {
        ensureImageCover(imgRef.current, classes);
    });
    _react.useEffect(function() {
        var handleResize = _debounceDefault.default(function() {
            fit(imgRef.current, classes);
        });
        window.addEventListener('resize', handleResize);
        return function() {
            handleResize.clear();
            window.removeEventListener('resize', handleResize);
        };
    }, [
        classes
    ]);
    return /*#__PURE__*/ _react.createElement(Component, _extendsDefault.default({
        className: _clsxDefault.default(classes.root, className),
        ref: ref
    }, other), /*#__PURE__*/ _react.createElement("div", {
        className: classes.item
    }, _react.Children.map(children, function(child) {
        if (!/*#__PURE__*/ _react.isValidElement(child)) return null;
        if (child.type === 'img' || _isMuiElementDefault.default(child, [
            'Image'
        ])) return /*#__PURE__*/ _react.cloneElement(child, {
            ref: imgRef
        });
        return child;
    })));
});
ImageListItem.propTypes = {
    // ----------------------------- Warning --------------------------------
    // | These PropTypes are generated from the TypeScript type definitions |
    // |     To update them edit the d.ts file and run "yarn proptypes"     |
    // ----------------------------------------------------------------------
    /**
   * While you can pass any node as children, the main use case is for an img.
   */ children: _propTypesDefault.default.node,
    /**
   * Override or extend the styles applied to the component.
   * See [CSS API](#css) below for more details.
   */ classes: _propTypesDefault.default.object,
    /**
   * @ignore
   */ className: _propTypesDefault.default.string,
    /**
   * Width of the item in number of grid columns.
   */ cols: _propTypesDefault.default.number,
    /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */ component: _propTypesDefault.default/* @typescript-to-proptypes-ignore */ .elementType,
    /**
   * Height of the item in number of grid rows.
   */ rows: _propTypesDefault.default.number
};
exports.default = _withStylesDefault.default(styles, {
    name: 'MuiImageListItem'
})(ImageListItem);

},{"@babel/runtime/helpers/esm/extends":"fTBFS","@babel/runtime/helpers/esm/objectWithoutProperties":"25tJ4","@babel/runtime/helpers/esm/toConsumableArray":"bCmCj","react":"21dqq","prop-types":"7wKI2","clsx":"83C22","../utils/debounce":"fsAbo","../styles/withStyles":"7U0iM","../utils/isMuiElement":"6dsp6","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"8Jox2":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>_imageListItemBarDefault.default
);
var _imageListItemBar = require("./ImageListItemBar");
var _imageListItemBarDefault = parcelHelpers.interopDefault(_imageListItemBar);

},{"./ImageListItemBar":"bbSqH","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"bbSqH":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "styles", ()=>styles
);
var _extends = require("@babel/runtime/helpers/esm/extends");
var _extendsDefault = parcelHelpers.interopDefault(_extends);
var _objectWithoutProperties = require("@babel/runtime/helpers/esm/objectWithoutProperties");
var _objectWithoutPropertiesDefault = parcelHelpers.interopDefault(_objectWithoutProperties);
var _react = require("react");
var _propTypes = require("prop-types");
var _propTypesDefault = parcelHelpers.interopDefault(_propTypes);
var _clsx = require("clsx");
var _clsxDefault = parcelHelpers.interopDefault(_clsx);
var _withStyles = require("../styles/withStyles");
var _withStylesDefault = parcelHelpers.interopDefault(_withStyles);
var _deprecatedPropType = require("../utils/deprecatedPropType");
var _deprecatedPropTypeDefault = parcelHelpers.interopDefault(_deprecatedPropType);
var styles = function styles(theme) {
    return {
        /* Styles applied to the root element. */ root: {
            position: 'absolute',
            left: 0,
            right: 0,
            height: 48,
            background: 'rgba(0, 0, 0, 0.5)',
            display: 'flex',
            alignItems: 'center',
            fontFamily: theme.typography.fontFamily
        },
        /* Styles applied to the root element if `position="bottom"`. */ positionBottom: {
            bottom: 0
        },
        /* Styles applied to the root element if `position="top"`. */ positionTop: {
            top: 0
        },
        /* Styles applied to the root element if a `subtitle` is provided. */ rootSubtitle: {
            height: 68
        },
        /* Styles applied to the title and subtitle container element. */ titleWrap: {
            flexGrow: 1,
            marginLeft: 16,
            marginRight: 16,
            color: theme.palette.common.white,
            overflow: 'hidden'
        },
        /* Styles applied to the container element if `actionPosition="left"`. */ titleWrapActionPosLeft: {
            marginLeft: 0
        },
        /* Styles applied to the container element if `actionPosition="right"`. */ titleWrapActionPosRight: {
            marginRight: 0
        },
        /* Styles applied to the title container element. */ title: {
            fontSize: theme.typography.pxToRem(16),
            lineHeight: '24px',
            textOverflow: 'ellipsis',
            overflow: 'hidden',
            whiteSpace: 'nowrap'
        },
        /* Styles applied to the subtitle container element. */ subtitle: {
            fontSize: theme.typography.pxToRem(12),
            lineHeight: 1,
            textOverflow: 'ellipsis',
            overflow: 'hidden',
            whiteSpace: 'nowrap'
        },
        /* Styles applied to the actionIcon if supplied. */ actionIcon: {},
        /* Styles applied to the actionIcon if `actionPosition="left"`. */ actionIconActionPosLeft: {
            order: -1
        }
    };
};
var ImageListItemBar = /*#__PURE__*/ _react.forwardRef(function ImageListItemBar(props, ref) {
    var actionIcon = props.actionIcon, _props$actionPosition = props.actionPosition, actionPosition = _props$actionPosition === void 0 ? 'right' : _props$actionPosition, classes = props.classes, className = props.className, subtitle = props.subtitle, title = props.title, _props$position = props.position, positionProp = _props$position === void 0 ? 'bottom' : _props$position, titlePosition = props.titlePosition, other = _objectWithoutPropertiesDefault.default(props, [
        "actionIcon",
        "actionPosition",
        "classes",
        "className",
        "subtitle",
        "title",
        "position",
        "titlePosition"
    ]);
    var position = titlePosition || positionProp;
    var actionPos = actionIcon && actionPosition;
    return /*#__PURE__*/ _react.createElement("div", _extendsDefault.default({
        className: _clsxDefault.default(classes.root, className, subtitle && classes.rootSubtitle, {
            'bottom': classes.positionBottom,
            'top': classes.positionTop
        }[position]),
        ref: ref
    }, other), /*#__PURE__*/ _react.createElement("div", {
        className: _clsxDefault.default(classes.titleWrap, {
            'left': classes.titleWrapActionPosLeft,
            'right': classes.titleWrapActionPosRight
        }[actionPos])
    }, /*#__PURE__*/ _react.createElement("div", {
        className: classes.title
    }, title), subtitle ? /*#__PURE__*/ _react.createElement("div", {
        className: classes.subtitle
    }, subtitle) : null), actionIcon ? /*#__PURE__*/ _react.createElement("div", {
        className: _clsxDefault.default(classes.actionIcon, actionPos === 'left' && classes.actionIconActionPosLeft)
    }, actionIcon) : null);
});
ImageListItemBar.propTypes = {
    // ----------------------------- Warning --------------------------------
    // | These PropTypes are generated from the TypeScript type definitions |
    // |     To update them edit the d.ts file and run "yarn proptypes"     |
    // ----------------------------------------------------------------------
    /**
   * An IconButton element to be used as secondary action target
   * (primary action target is the item itself).
   */ actionIcon: _propTypesDefault.default.node,
    /**
   * Position of secondary action IconButton.
   */ actionPosition: _propTypesDefault.default.oneOf([
        'left',
        'right'
    ]),
    /**
   * Override or extend the styles applied to the component.
   * See [CSS API](#css) below for more details.
   */ classes: _propTypesDefault.default.object,
    /**
   * @ignore
   */ className: _propTypesDefault.default.string,
    /**
   * Position of the title bar.
   */ position: _propTypesDefault.default.oneOf([
        'bottom',
        'top'
    ]),
    /**
   * String or element serving as subtitle (support text).
   */ subtitle: _propTypesDefault.default.node,
    /**
   * Title to be displayed on item.
   */ title: _propTypesDefault.default.node,
    /**
   * Position of the title bar.
   * @deprecated Use position instead.
   */ titlePosition: _deprecatedPropTypeDefault.default(_propTypesDefault.default.oneOf([
        'bottom',
        'top'
    ]), 'Use the `position` prop instead.')
};
exports.default = _withStylesDefault.default(styles, {
    name: 'MuiImageListItemBar'
})(ImageListItemBar);

},{"@babel/runtime/helpers/esm/extends":"fTBFS","@babel/runtime/helpers/esm/objectWithoutProperties":"25tJ4","react":"21dqq","prop-types":"7wKI2","clsx":"83C22","../styles/withStyles":"7U0iM","../utils/deprecatedPropType":"loRgF","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"41TRI":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>_inputDefault.default
);
var _input = require("./Input");
var _inputDefault = parcelHelpers.interopDefault(_input);

},{"./Input":"3niew","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"3niew":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "styles", ()=>styles
);
var _extends = require("@babel/runtime/helpers/esm/extends");
var _extendsDefault = parcelHelpers.interopDefault(_extends);
var _objectWithoutProperties = require("@babel/runtime/helpers/esm/objectWithoutProperties");
var _objectWithoutPropertiesDefault = parcelHelpers.interopDefault(_objectWithoutProperties);
var _react = require("react");
var _propTypes = require("prop-types");
var _propTypesDefault = parcelHelpers.interopDefault(_propTypes);
var _clsx = require("clsx");
var _clsxDefault = parcelHelpers.interopDefault(_clsx);
var _utils = require("@material-ui/utils");
var _inputBase = require("../InputBase");
var _inputBaseDefault = parcelHelpers.interopDefault(_inputBase);
var _withStyles = require("../styles/withStyles");
var _withStylesDefault = parcelHelpers.interopDefault(_withStyles);
var styles = function styles(theme) {
    var light = theme.palette.type === 'light';
    var bottomLineColor = light ? 'rgba(0, 0, 0, 0.42)' : 'rgba(255, 255, 255, 0.7)';
    return {
        /* Styles applied to the root element. */ root: {
            position: 'relative'
        },
        /* Styles applied to the root element if the component is a descendant of `FormControl`. */ formControl: {
            'label + &': {
                marginTop: 16
            }
        },
        /* Styles applied to the root element if the component is focused. */ focused: {},
        /* Styles applied to the root element if `disabled={true}`. */ disabled: {},
        /* Styles applied to the root element if color secondary. */ colorSecondary: {
            '&$underline:after': {
                borderBottomColor: theme.palette.secondary.main
            }
        },
        /* Styles applied to the root element if `disableUnderline={false}`. */ underline: {
            '&:after': {
                borderBottom: "2px solid ".concat(theme.palette.primary.main),
                left: 0,
                bottom: 0,
                // Doing the other way around crash on IE 11 "''" https://github.com/cssinjs/jss/issues/242
                content: '""',
                position: 'absolute',
                right: 0,
                transform: 'scaleX(0)',
                transition: theme.transitions.create('transform', {
                    duration: theme.transitions.duration.shorter,
                    easing: theme.transitions.easing.easeOut
                }),
                pointerEvents: 'none' // Transparent to the hover style.
            },
            '&$focused:after': {
                transform: 'scaleX(1)'
            },
            '&$error:after': {
                borderBottomColor: theme.palette.error.main,
                transform: 'scaleX(1)' // error is always underlined in red
            },
            '&:before': {
                borderBottom: "1px solid ".concat(bottomLineColor),
                left: 0,
                bottom: 0,
                // Doing the other way around crash on IE 11 "''" https://github.com/cssinjs/jss/issues/242
                content: '"\\00a0"',
                position: 'absolute',
                right: 0,
                transition: theme.transitions.create('border-bottom-color', {
                    duration: theme.transitions.duration.shorter
                }),
                pointerEvents: 'none' // Transparent to the hover style.
            },
            '&:hover:not($disabled):before': {
                borderBottom: "2px solid ".concat(theme.palette.text.primary),
                // Reset on touch devices, it doesn't add specificity
                '@media (hover: none)': {
                    borderBottom: "1px solid ".concat(bottomLineColor)
                }
            },
            '&$disabled:before': {
                borderBottomStyle: 'dotted'
            }
        },
        /* Pseudo-class applied to the root element if `error={true}`. */ error: {},
        /* Styles applied to the `input` element if `margin="dense"`. */ marginDense: {},
        /* Styles applied to the root element if `multiline={true}`. */ multiline: {},
        /* Styles applied to the root element if `fullWidth={true}`. */ fullWidth: {},
        /* Styles applied to the `input` element. */ input: {},
        /* Styles applied to the `input` element if `margin="dense"`. */ inputMarginDense: {},
        /* Styles applied to the `input` element if `multiline={true}`. */ inputMultiline: {},
        /* Styles applied to the `input` element if `type="search"`. */ inputTypeSearch: {}
    };
};
var Input = /*#__PURE__*/ _react.forwardRef(function Input(props, ref) {
    var disableUnderline = props.disableUnderline, classes = props.classes, _props$fullWidth = props.fullWidth, fullWidth = _props$fullWidth === void 0 ? false : _props$fullWidth, _props$inputComponent = props.inputComponent, inputComponent = _props$inputComponent === void 0 ? 'input' : _props$inputComponent, _props$multiline = props.multiline, multiline = _props$multiline === void 0 ? false : _props$multiline, _props$type = props.type, type = _props$type === void 0 ? 'text' : _props$type, other = _objectWithoutPropertiesDefault.default(props, [
        "disableUnderline",
        "classes",
        "fullWidth",
        "inputComponent",
        "multiline",
        "type"
    ]);
    return /*#__PURE__*/ _react.createElement(_inputBaseDefault.default, _extendsDefault.default({
        classes: _extendsDefault.default({}, classes, {
            root: _clsxDefault.default(classes.root, !disableUnderline && classes.underline),
            underline: null
        }),
        fullWidth: fullWidth,
        inputComponent: inputComponent,
        multiline: multiline,
        ref: ref,
        type: type
    }, other));
});
Input.propTypes = {
    // ----------------------------- Warning --------------------------------
    // | These PropTypes are generated from the TypeScript type definitions |
    // |     To update them edit the d.ts file and run "yarn proptypes"     |
    // ----------------------------------------------------------------------
    /**
   * This prop helps users to fill forms faster, especially on mobile devices.
   * The name can be confusing, as it's more like an autofill.
   * You can learn more about it [following the specification](https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#autofill).
   */ autoComplete: _propTypesDefault.default.string,
    /**
   * If `true`, the `input` element will be focused during the first mount.
   */ autoFocus: _propTypesDefault.default.bool,
    /**
   * Override or extend the styles applied to the component.
   * See [CSS API](#css) below for more details.
   */ classes: _propTypesDefault.default.object,
    /**
   * The color of the component. It supports those theme colors that make sense for this component.
   */ color: _propTypesDefault.default.oneOf([
        'primary',
        'secondary'
    ]),
    /**
   * The default `input` element value. Use when the component is not controlled.
   */ defaultValue: _propTypesDefault.default.any,
    /**
   * If `true`, the `input` element will be disabled.
   */ disabled: _propTypesDefault.default.bool,
    /**
   * If `true`, the input will not have an underline.
   */ disableUnderline: _propTypesDefault.default.bool,
    /**
   * End `InputAdornment` for this component.
   */ endAdornment: _propTypesDefault.default.node,
    /**
   * If `true`, the input will indicate an error. This is normally obtained via context from
   * FormControl.
   */ error: _propTypesDefault.default.bool,
    /**
   * If `true`, the input will take up the full width of its container.
   */ fullWidth: _propTypesDefault.default.bool,
    /**
   * The id of the `input` element.
   */ id: _propTypesDefault.default.string,
    /**
   * The component used for the `input` element.
   * Either a string to use a HTML element or a component.
   */ inputComponent: _propTypesDefault.default.elementType,
    /**
   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.
   */ inputProps: _propTypesDefault.default.object,
    /**
   * Pass a ref to the `input` element.
   */ inputRef: _utils.refType,
    /**
   * If `dense`, will adjust vertical spacing. This is normally obtained via context from
   * FormControl.
   */ margin: _propTypesDefault.default.oneOf([
        'dense',
        'none'
    ]),
    /**
   * Maximum number of rows to display when multiline option is set to true.
   */ maxRows: _propTypesDefault.default.oneOfType([
        _propTypesDefault.default.number,
        _propTypesDefault.default.string
    ]),
    /**
   * If `true`, a textarea element will be rendered.
   */ multiline: _propTypesDefault.default.bool,
    /**
   * Name attribute of the `input` element.
   */ name: _propTypesDefault.default.string,
    /**
   * Callback fired when the value is changed.
   *
   * @param {object} event The event source of the callback.
   * You can pull out the new value by accessing `event.target.value` (string).
   */ onChange: _propTypesDefault.default.func,
    /**
   * The short hint displayed in the input before the user enters a value.
   */ placeholder: _propTypesDefault.default.string,
    /**
   * It prevents the user from changing the value of the field
   * (not from interacting with the field).
   */ readOnly: _propTypesDefault.default.bool,
    /**
   * If `true`, the `input` element will be required.
   */ required: _propTypesDefault.default.bool,
    /**
   * Number of rows to display when multiline option is set to true.
   */ rows: _propTypesDefault.default.oneOfType([
        _propTypesDefault.default.number,
        _propTypesDefault.default.string
    ]),
    /**
   * Start `InputAdornment` for this component.
   */ startAdornment: _propTypesDefault.default.node,
    /**
   * Type of the `input` element. It should be [a valid HTML5 input type](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Form_%3Cinput%3E_types).
   */ type: _propTypesDefault.default.string,
    /**
   * The value of the `input` element, required for a controlled component.
   */ value: _propTypesDefault.default.any
};
Input.muiName = 'Input';
exports.default = _withStylesDefault.default(styles, {
    name: 'MuiInput'
})(Input);

},{"@babel/runtime/helpers/esm/extends":"fTBFS","@babel/runtime/helpers/esm/objectWithoutProperties":"25tJ4","react":"21dqq","prop-types":"7wKI2","clsx":"83C22","@material-ui/utils":"54RkF","../InputBase":"4MrXd","../styles/withStyles":"7U0iM","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"btdWE":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>_inputAdornmentDefault.default
);
var _inputAdornment = require("./InputAdornment");
var _inputAdornmentDefault = parcelHelpers.interopDefault(_inputAdornment);

},{"./InputAdornment":"5IbIA","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"5IbIA":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "styles", ()=>styles
);
var _extends = require("@babel/runtime/helpers/esm/extends");
var _extendsDefault = parcelHelpers.interopDefault(_extends);
var _objectWithoutProperties = require("@babel/runtime/helpers/esm/objectWithoutProperties");
var _objectWithoutPropertiesDefault = parcelHelpers.interopDefault(_objectWithoutProperties);
var _react = require("react");
var _propTypes = require("prop-types");
var _propTypesDefault = parcelHelpers.interopDefault(_propTypes);
var _clsx = require("clsx");
var _clsxDefault = parcelHelpers.interopDefault(_clsx);
var _typography = require("../Typography");
var _typographyDefault = parcelHelpers.interopDefault(_typography);
var _withStyles = require("../styles/withStyles");
var _withStylesDefault = parcelHelpers.interopDefault(_withStyles);
var _formControlContext = require("../FormControl/FormControlContext");
var _formControlContextDefault = parcelHelpers.interopDefault(_formControlContext);
var styles = {
    /* Styles applied to the root element. */ root: {
        display: 'flex',
        height: '0.01em',
        // Fix IE 11 flexbox alignment. To remove at some point.
        maxHeight: '2em',
        alignItems: 'center',
        whiteSpace: 'nowrap'
    },
    /* Styles applied to the root element if `variant="filled"`. */ filled: {
        '&$positionStart:not($hiddenLabel)': {
            marginTop: 16
        }
    },
    /* Styles applied to the root element if `position="start"`. */ positionStart: {
        marginRight: 8
    },
    /* Styles applied to the root element if `position="end"`. */ positionEnd: {
        marginLeft: 8
    },
    /* Styles applied to the root element if `disablePointerEvents=true`. */ disablePointerEvents: {
        pointerEvents: 'none'
    },
    /* Styles applied if the adornment is used inside <FormControl hiddenLabel />. */ hiddenLabel: {},
    /* Styles applied if the adornment is used inside <FormControl margin="dense" />. */ marginDense: {}
};
var InputAdornment = /*#__PURE__*/ _react.forwardRef(function InputAdornment(props, ref) {
    var children = props.children, classes = props.classes, className = props.className, _props$component = props.component, Component = _props$component === void 0 ? 'div' : _props$component, _props$disablePointer = props.disablePointerEvents, disablePointerEvents = _props$disablePointer === void 0 ? false : _props$disablePointer, _props$disableTypogra = props.disableTypography, disableTypography = _props$disableTypogra === void 0 ? false : _props$disableTypogra, position = props.position, variantProp = props.variant, other = _objectWithoutPropertiesDefault.default(props, [
        "children",
        "classes",
        "className",
        "component",
        "disablePointerEvents",
        "disableTypography",
        "position",
        "variant"
    ]);
    var muiFormControl = _formControlContext.useFormControl() || {};
    var variant = variantProp;
    if (variantProp && muiFormControl.variant) {
        if (variantProp === muiFormControl.variant) console.error("Material-UI: The `InputAdornment` variant infers the variant prop you do not have to provide one.");
    }
    if (muiFormControl && !variant) variant = muiFormControl.variant;
    return /*#__PURE__*/ _react.createElement(_formControlContextDefault.default.Provider, {
        value: null
    }, /*#__PURE__*/ _react.createElement(Component, _extendsDefault.default({
        className: _clsxDefault.default(classes.root, className, position === 'end' ? classes.positionEnd : classes.positionStart, disablePointerEvents && classes.disablePointerEvents, muiFormControl.hiddenLabel && classes.hiddenLabel, variant === 'filled' && classes.filled, muiFormControl.margin === 'dense' && classes.marginDense),
        ref: ref
    }, other), typeof children === 'string' && !disableTypography ? /*#__PURE__*/ _react.createElement(_typographyDefault.default, {
        color: "textSecondary"
    }, children) : children));
});
InputAdornment.propTypes = {
    /**
   * The content of the component, normally an `IconButton` or string.
   */ children: _propTypesDefault.default.node.isRequired,
    /**
   * Override or extend the styles applied to the component.
   * See [CSS API](#css) below for more details.
   */ classes: _propTypesDefault.default.object.isRequired,
    /**
   * @ignore
   */ className: _propTypesDefault.default.string,
    /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */ component: _propTypesDefault.default/* @typescript-to-proptypes-ignore */ .elementType,
    /**
   * Disable pointer events on the root.
   * This allows for the content of the adornment to focus the input on click.
   */ disablePointerEvents: _propTypesDefault.default.bool,
    /**
   * If children is a string then disable wrapping in a Typography component.
   */ disableTypography: _propTypesDefault.default.bool,
    /**
   * @ignore
   */ muiFormControl: _propTypesDefault.default.object,
    /**
   * The position this adornment should appear relative to the `Input`.
   */ position: _propTypesDefault.default.oneOf([
        'start',
        'end'
    ]).isRequired,
    /**
   * The variant to use.
   * Note: If you are using the `TextField` component or the `FormControl` component
   * you do not have to set this manually.
   */ variant: _propTypesDefault.default.oneOf([
        'standard',
        'outlined',
        'filled'
    ])
};
exports.default = _withStylesDefault.default(styles, {
    name: 'MuiInputAdornment'
})(InputAdornment);

},{"@babel/runtime/helpers/esm/extends":"fTBFS","@babel/runtime/helpers/esm/objectWithoutProperties":"25tJ4","react":"21dqq","prop-types":"7wKI2","clsx":"83C22","../Typography":"6dDPF","../styles/withStyles":"7U0iM","../FormControl/FormControlContext":"50ngn","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"Yuko7":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>_inputLabelDefault.default
);
var _inputLabel = require("./InputLabel");
var _inputLabelDefault = parcelHelpers.interopDefault(_inputLabel);

},{"./InputLabel":"iuqZ5","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"iuqZ5":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "styles", ()=>styles
);
var _extends = require("@babel/runtime/helpers/esm/extends");
var _extendsDefault = parcelHelpers.interopDefault(_extends);
var _objectWithoutProperties = require("@babel/runtime/helpers/esm/objectWithoutProperties");
var _objectWithoutPropertiesDefault = parcelHelpers.interopDefault(_objectWithoutProperties);
var _react = require("react");
var _propTypes = require("prop-types");
var _propTypesDefault = parcelHelpers.interopDefault(_propTypes);
var _clsx = require("clsx");
var _clsxDefault = parcelHelpers.interopDefault(_clsx);
var _formControlState = require("../FormControl/formControlState");
var _formControlStateDefault = parcelHelpers.interopDefault(_formControlState);
var _useFormControl = require("../FormControl/useFormControl");
var _useFormControlDefault = parcelHelpers.interopDefault(_useFormControl);
var _withStyles = require("../styles/withStyles");
var _withStylesDefault = parcelHelpers.interopDefault(_withStyles);
var _formLabel = require("../FormLabel");
var _formLabelDefault = parcelHelpers.interopDefault(_formLabel);
var styles = function styles(theme) {
    return {
        /* Styles applied to the root element. */ root: {
            display: 'block',
            transformOrigin: 'top left'
        },
        /* Pseudo-class applied to the root element if `focused={true}`. */ focused: {},
        /* Pseudo-class applied to the root element if `disabled={true}`. */ disabled: {},
        /* Pseudo-class applied to the root element if `error={true}`. */ error: {},
        /* Pseudo-class applied to the root element if `required={true}`. */ required: {},
        /* Pseudo-class applied to the asterisk element. */ asterisk: {},
        /* Styles applied to the root element if the component is a descendant of `FormControl`. */ formControl: {
            position: 'absolute',
            left: 0,
            top: 0,
            // slight alteration to spec spacing to match visual spec result
            transform: 'translate(0, 24px) scale(1)'
        },
        /* Styles applied to the root element if `margin="dense"`. */ marginDense: {
            // Compensation for the `Input.inputDense` style.
            transform: 'translate(0, 21px) scale(1)'
        },
        /* Styles applied to the `input` element if `shrink={true}`. */ shrink: {
            transform: 'translate(0, 1.5px) scale(0.75)',
            transformOrigin: 'top left'
        },
        /* Styles applied to the `input` element if `disableAnimation={false}`. */ animated: {
            transition: theme.transitions.create([
                'color',
                'transform'
            ], {
                duration: theme.transitions.duration.shorter,
                easing: theme.transitions.easing.easeOut
            })
        },
        /* Styles applied to the root element if `variant="filled"`. */ filled: {
            // Chrome's autofill feature gives the input field a yellow background.
            // Since the input field is behind the label in the HTML tree,
            // the input field is drawn last and hides the label with an opaque background color.
            // zIndex: 1 will raise the label above opaque background-colors of input.
            zIndex: 1,
            pointerEvents: 'none',
            transform: 'translate(12px, 20px) scale(1)',
            '&$marginDense': {
                transform: 'translate(12px, 17px) scale(1)'
            },
            '&$shrink': {
                transform: 'translate(12px, 10px) scale(0.75)',
                '&$marginDense': {
                    transform: 'translate(12px, 7px) scale(0.75)'
                }
            }
        },
        /* Styles applied to the root element if `variant="outlined"`. */ outlined: {
            // see comment above on filled.zIndex
            zIndex: 1,
            pointerEvents: 'none',
            transform: 'translate(14px, 20px) scale(1)',
            '&$marginDense': {
                transform: 'translate(14px, 12px) scale(1)'
            },
            '&$shrink': {
                transform: 'translate(14px, -6px) scale(0.75)'
            }
        }
    };
};
var InputLabel = /*#__PURE__*/ _react.forwardRef(function InputLabel(props, ref) {
    var classes = props.classes, className = props.className, _props$disableAnimati = props.disableAnimation, disableAnimation = _props$disableAnimati === void 0 ? false : _props$disableAnimati, margin = props.margin, shrinkProp = props.shrink, variant = props.variant, other = _objectWithoutPropertiesDefault.default(props, [
        "classes",
        "className",
        "disableAnimation",
        "margin",
        "shrink",
        "variant"
    ]);
    var muiFormControl = _useFormControlDefault.default();
    var shrink = shrinkProp;
    if (typeof shrink === 'undefined' && muiFormControl) shrink = muiFormControl.filled || muiFormControl.focused || muiFormControl.adornedStart;
    var fcs = _formControlStateDefault.default({
        props: props,
        muiFormControl: muiFormControl,
        states: [
            'margin',
            'variant'
        ]
    });
    return /*#__PURE__*/ _react.createElement(_formLabelDefault.default, _extendsDefault.default({
        "data-shrink": shrink,
        className: _clsxDefault.default(classes.root, className, muiFormControl && classes.formControl, !disableAnimation && classes.animated, shrink && classes.shrink, fcs.margin === 'dense' && classes.marginDense, {
            'filled': classes.filled,
            'outlined': classes.outlined
        }[fcs.variant]),
        classes: {
            focused: classes.focused,
            disabled: classes.disabled,
            error: classes.error,
            required: classes.required,
            asterisk: classes.asterisk
        },
        ref: ref
    }, other));
});
InputLabel.propTypes = {
    // ----------------------------- Warning --------------------------------
    // | These PropTypes are generated from the TypeScript type definitions |
    // |     To update them edit the d.ts file and run "yarn proptypes"     |
    // ----------------------------------------------------------------------
    /**
   * The contents of the `InputLabel`.
   */ children: _propTypesDefault.default.node,
    /**
   * Override or extend the styles applied to the component.
   * See [CSS API](#css) below for more details.
   */ classes: _propTypesDefault.default.object,
    /**
   * @ignore
   */ className: _propTypesDefault.default.string,
    /**
   * The color of the component. It supports those theme colors that make sense for this component.
   */ color: _propTypesDefault.default.oneOf([
        'primary',
        'secondary'
    ]),
    /**
   * If `true`, the transition animation is disabled.
   */ disableAnimation: _propTypesDefault.default.bool,
    /**
   * If `true`, apply disabled class.
   */ disabled: _propTypesDefault.default.bool,
    /**
   * If `true`, the label will be displayed in an error state.
   */ error: _propTypesDefault.default.bool,
    /**
   * If `true`, the input of this label is focused.
   */ focused: _propTypesDefault.default.bool,
    /**
   * If `dense`, will adjust vertical spacing. This is normally obtained via context from
   * FormControl.
   */ margin: _propTypesDefault.default.oneOf([
        'dense'
    ]),
    /**
   * if `true`, the label will indicate that the input is required.
   */ required: _propTypesDefault.default.bool,
    /**
   * If `true`, the label is shrunk.
   */ shrink: _propTypesDefault.default.bool,
    /**
   * The variant to use.
   */ variant: _propTypesDefault.default.oneOf([
        'filled',
        'outlined',
        'standard'
    ])
};
exports.default = _withStylesDefault.default(styles, {
    name: 'MuiInputLabel'
})(InputLabel);

},{"@babel/runtime/helpers/esm/extends":"fTBFS","@babel/runtime/helpers/esm/objectWithoutProperties":"25tJ4","react":"21dqq","prop-types":"7wKI2","clsx":"83C22","../FormControl/formControlState":"dZti6","../FormControl/useFormControl":"eKmPJ","../styles/withStyles":"7U0iM","../FormLabel":"ggWa6","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"fyi8r":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>_linearProgressDefault.default
);
var _linearProgress = require("./LinearProgress");
var _linearProgressDefault = parcelHelpers.interopDefault(_linearProgress);

},{"./LinearProgress":"dVuTo","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"dVuTo":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "styles", ()=>styles
);
var _extends = require("@babel/runtime/helpers/esm/extends");
var _extendsDefault = parcelHelpers.interopDefault(_extends);
var _objectWithoutProperties = require("@babel/runtime/helpers/esm/objectWithoutProperties");
var _objectWithoutPropertiesDefault = parcelHelpers.interopDefault(_objectWithoutProperties);
var _react = require("react");
var _propTypes = require("prop-types");
var _propTypesDefault = parcelHelpers.interopDefault(_propTypes);
var _clsx = require("clsx");
var _clsxDefault = parcelHelpers.interopDefault(_clsx);
var _capitalize = require("../utils/capitalize");
var _capitalizeDefault = parcelHelpers.interopDefault(_capitalize);
var _withStyles = require("../styles/withStyles");
var _withStylesDefault = parcelHelpers.interopDefault(_withStyles);
var _colorManipulator = require("../styles/colorManipulator");
var _useTheme = require("../styles/useTheme");
var _useThemeDefault = parcelHelpers.interopDefault(_useTheme);
var TRANSITION_DURATION = 4; // seconds
var styles = function styles(theme) {
    var getColor = function getColor(color) {
        return theme.palette.type === 'light' ? _colorManipulator.lighten(color, 0.62) : _colorManipulator.darken(color, 0.5);
    };
    var backgroundPrimary = getColor(theme.palette.primary.main);
    var backgroundSecondary = getColor(theme.palette.secondary.main);
    return {
        /* Styles applied to the root element. */ root: {
            position: 'relative',
            overflow: 'hidden',
            height: 4,
            '@media print': {
                colorAdjust: 'exact'
            }
        },
        /* Styles applied to the root and bar2 element if `color="primary"`; bar2 if `variant="buffer"`. */ colorPrimary: {
            backgroundColor: backgroundPrimary
        },
        /* Styles applied to the root and bar2 elements if `color="secondary"`; bar2 if `variant="buffer"`. */ colorSecondary: {
            backgroundColor: backgroundSecondary
        },
        /* Styles applied to the root element if `variant="determinate"`. */ determinate: {},
        /* Styles applied to the root element if `variant="indeterminate"`. */ indeterminate: {},
        /* Styles applied to the root element if `variant="buffer"`. */ buffer: {
            backgroundColor: 'transparent'
        },
        /* Styles applied to the root element if `variant="query"`. */ query: {
            transform: 'rotate(180deg)'
        },
        /* Styles applied to the additional bar element if `variant="buffer"`. */ dashed: {
            position: 'absolute',
            marginTop: 0,
            height: '100%',
            width: '100%',
            animation: '$buffer 3s infinite linear'
        },
        /* Styles applied to the additional bar element if `variant="buffer"` and `color="primary"`. */ dashedColorPrimary: {
            backgroundImage: "radial-gradient(".concat(backgroundPrimary, " 0%, ").concat(backgroundPrimary, " 16%, transparent 42%)"),
            backgroundSize: '10px 10px',
            backgroundPosition: '0 -23px'
        },
        /* Styles applied to the additional bar element if `variant="buffer"` and `color="secondary"`. */ dashedColorSecondary: {
            backgroundImage: "radial-gradient(".concat(backgroundSecondary, " 0%, ").concat(backgroundSecondary, " 16%, transparent 42%)"),
            backgroundSize: '10px 10px',
            backgroundPosition: '0 -23px'
        },
        /* Styles applied to the layered bar1 and bar2 elements. */ bar: {
            width: '100%',
            position: 'absolute',
            left: 0,
            bottom: 0,
            top: 0,
            transition: 'transform 0.2s linear',
            transformOrigin: 'left'
        },
        /* Styles applied to the bar elements if `color="primary"`; bar2 if `variant` not "buffer". */ barColorPrimary: {
            backgroundColor: theme.palette.primary.main
        },
        /* Styles applied to the bar elements if `color="secondary"`; bar2 if `variant` not "buffer". */ barColorSecondary: {
            backgroundColor: theme.palette.secondary.main
        },
        /* Styles applied to the bar1 element if `variant="indeterminate or query"`. */ bar1Indeterminate: {
            width: 'auto',
            animation: '$indeterminate1 2.1s cubic-bezier(0.65, 0.815, 0.735, 0.395) infinite'
        },
        /* Styles applied to the bar1 element if `variant="determinate"`. */ bar1Determinate: {
            transition: "transform .".concat(TRANSITION_DURATION, "s linear")
        },
        /* Styles applied to the bar1 element if `variant="buffer"`. */ bar1Buffer: {
            zIndex: 1,
            transition: "transform .".concat(TRANSITION_DURATION, "s linear")
        },
        /* Styles applied to the bar2 element if `variant="indeterminate or query"`. */ bar2Indeterminate: {
            width: 'auto',
            animation: '$indeterminate2 2.1s cubic-bezier(0.165, 0.84, 0.44, 1) 1.15s infinite'
        },
        /* Styles applied to the bar2 element if `variant="buffer"`. */ bar2Buffer: {
            transition: "transform .".concat(TRANSITION_DURATION, "s linear")
        },
        // Legends:
        // || represents the viewport
        // -  represents a light background
        // x  represents a dark background
        '@keyframes indeterminate1': {
            //  |-----|---x-||-----||-----|
            '0%': {
                left: '-35%',
                right: '100%'
            },
            //  |-----|-----||-----||xxxx-|
            '60%': {
                left: '100%',
                right: '-90%'
            },
            '100%': {
                left: '100%',
                right: '-90%'
            }
        },
        '@keyframes indeterminate2': {
            //  |xxxxx|xxxxx||-----||-----|
            '0%': {
                left: '-200%',
                right: '100%'
            },
            //  |-----|-----||-----||-x----|
            '60%': {
                left: '107%',
                right: '-8%'
            },
            '100%': {
                left: '107%',
                right: '-8%'
            }
        },
        '@keyframes buffer': {
            '0%': {
                opacity: 1,
                backgroundPosition: '0 -23px'
            },
            '50%': {
                opacity: 0,
                backgroundPosition: '0 -23px'
            },
            '100%': {
                opacity: 1,
                backgroundPosition: '-200px -23px'
            }
        }
    };
};
/**
 * ## ARIA
 *
 * If the progress bar is describing the loading progress of a particular region of a page,
 * you should use `aria-describedby` to point to the progress bar, and set the `aria-busy`
 * attribute to `true` on that region until it has finished loading.
 */ var LinearProgress = /*#__PURE__*/ _react.forwardRef(function LinearProgress(props, ref) {
    var classes = props.classes, className = props.className, _props$color = props.color, color = _props$color === void 0 ? 'primary' : _props$color, value = props.value, valueBuffer = props.valueBuffer, _props$variant = props.variant, variant = _props$variant === void 0 ? 'indeterminate' : _props$variant, other = _objectWithoutPropertiesDefault.default(props, [
        "classes",
        "className",
        "color",
        "value",
        "valueBuffer",
        "variant"
    ]);
    var theme = _useThemeDefault.default();
    var rootProps = {};
    var inlineStyles = {
        bar1: {},
        bar2: {}
    };
    if (variant === 'determinate' || variant === 'buffer') {
        if (value !== undefined) {
            rootProps['aria-valuenow'] = Math.round(value);
            rootProps['aria-valuemin'] = 0;
            rootProps['aria-valuemax'] = 100;
            var transform = value - 100;
            if (theme.direction === 'rtl') transform = -transform;
            inlineStyles.bar1.transform = "translateX(".concat(transform, "%)");
        } else console.error("Material-UI: You need to provide a value prop when using the determinate or buffer variant of LinearProgress .");
    }
    if (variant === 'buffer') {
        if (valueBuffer !== undefined) {
            var _transform = (valueBuffer || 0) - 100;
            if (theme.direction === 'rtl') _transform = -_transform;
            inlineStyles.bar2.transform = "translateX(".concat(_transform, "%)");
        } else console.error("Material-UI: You need to provide a valueBuffer prop when using the buffer variant of LinearProgress.");
    }
    return /*#__PURE__*/ _react.createElement("div", _extendsDefault.default({
        className: _clsxDefault.default(classes.root, classes["color".concat(_capitalizeDefault.default(color))], className, {
            'determinate': classes.determinate,
            'indeterminate': classes.indeterminate,
            'buffer': classes.buffer,
            'query': classes.query
        }[variant]),
        role: "progressbar"
    }, rootProps, {
        ref: ref
    }, other), variant === 'buffer' ? /*#__PURE__*/ _react.createElement("div", {
        className: _clsxDefault.default(classes.dashed, classes["dashedColor".concat(_capitalizeDefault.default(color))])
    }) : null, /*#__PURE__*/ _react.createElement("div", {
        className: _clsxDefault.default(classes.bar, classes["barColor".concat(_capitalizeDefault.default(color))], (variant === 'indeterminate' || variant === 'query') && classes.bar1Indeterminate, {
            'determinate': classes.bar1Determinate,
            'buffer': classes.bar1Buffer
        }[variant]),
        style: inlineStyles.bar1
    }), variant === 'determinate' ? null : /*#__PURE__*/ _react.createElement("div", {
        className: _clsxDefault.default(classes.bar, (variant === 'indeterminate' || variant === 'query') && classes.bar2Indeterminate, variant === 'buffer' ? [
            classes["color".concat(_capitalizeDefault.default(color))],
            classes.bar2Buffer
        ] : classes["barColor".concat(_capitalizeDefault.default(color))]),
        style: inlineStyles.bar2
    }));
});
LinearProgress.propTypes = {
    // ----------------------------- Warning --------------------------------
    // | These PropTypes are generated from the TypeScript type definitions |
    // |     To update them edit the d.ts file and run "yarn proptypes"     |
    // ----------------------------------------------------------------------
    /**
   * Override or extend the styles applied to the component.
   * See [CSS API](#css) below for more details.
   */ classes: _propTypesDefault.default.object,
    /**
   * @ignore
   */ className: _propTypesDefault.default.string,
    /**
   * The color of the component. It supports those theme colors that make sense for this component.
   */ color: _propTypesDefault.default.oneOf([
        'primary',
        'secondary'
    ]),
    /**
   * The value of the progress indicator for the determinate and buffer variants.
   * Value between 0 and 100.
   */ value: _propTypesDefault.default.number,
    /**
   * The value for the buffer variant.
   * Value between 0 and 100.
   */ valueBuffer: _propTypesDefault.default.number,
    /**
   * The variant to use.
   * Use indeterminate or query when there is no progress value.
   */ variant: _propTypesDefault.default.oneOf([
        'buffer',
        'determinate',
        'indeterminate',
        'query'
    ])
};
exports.default = _withStylesDefault.default(styles, {
    name: 'MuiLinearProgress'
})(LinearProgress);

},{"@babel/runtime/helpers/esm/extends":"fTBFS","@babel/runtime/helpers/esm/objectWithoutProperties":"25tJ4","react":"21dqq","prop-types":"7wKI2","clsx":"83C22","../utils/capitalize":"5AJVX","../styles/withStyles":"7U0iM","../styles/colorManipulator":"iz48G","../styles/useTheme":"kWUCn","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"iboi9":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>_linkDefault.default
);
var _link = require("./Link");
var _linkDefault = parcelHelpers.interopDefault(_link);

},{"./Link":"6iu0Z","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"6iu0Z":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "styles", ()=>styles
);
var _extends = require("@babel/runtime/helpers/esm/extends");
var _extendsDefault = parcelHelpers.interopDefault(_extends);
var _objectWithoutProperties = require("@babel/runtime/helpers/esm/objectWithoutProperties");
var _objectWithoutPropertiesDefault = parcelHelpers.interopDefault(_objectWithoutProperties);
var _react = require("react");
var _propTypes = require("prop-types");
var _propTypesDefault = parcelHelpers.interopDefault(_propTypes);
var _clsx = require("clsx");
var _clsxDefault = parcelHelpers.interopDefault(_clsx);
var _capitalize = require("../utils/capitalize");
var _capitalizeDefault = parcelHelpers.interopDefault(_capitalize);
var _withStyles = require("../styles/withStyles");
var _withStylesDefault = parcelHelpers.interopDefault(_withStyles);
var _utils = require("@material-ui/utils");
var _useIsFocusVisible = require("../utils/useIsFocusVisible");
var _useIsFocusVisibleDefault = parcelHelpers.interopDefault(_useIsFocusVisible);
var _useForkRef = require("../utils/useForkRef");
var _useForkRefDefault = parcelHelpers.interopDefault(_useForkRef);
var _typography = require("../Typography");
var _typographyDefault = parcelHelpers.interopDefault(_typography);
var styles = {
    /* Styles applied to the root element. */ root: {},
    /* Styles applied to the root element if `underline="none"`. */ underlineNone: {
        textDecoration: 'none'
    },
    /* Styles applied to the root element if `underline="hover"`. */ underlineHover: {
        textDecoration: 'none',
        '&:hover': {
            textDecoration: 'underline'
        }
    },
    /* Styles applied to the root element if `underline="always"`. */ underlineAlways: {
        textDecoration: 'underline'
    },
    // Same reset as ButtonBase.root
    /* Styles applied to the root element if `component="button"`. */ button: {
        position: 'relative',
        WebkitTapHighlightColor: 'transparent',
        backgroundColor: 'transparent',
        // Reset default value
        // We disable the focus ring for mouse, touch and keyboard users.
        outline: 0,
        border: 0,
        margin: 0,
        // Remove the margin in Safari
        borderRadius: 0,
        padding: 0,
        // Remove the padding in Firefox
        cursor: 'pointer',
        userSelect: 'none',
        verticalAlign: 'middle',
        '-moz-appearance': 'none',
        // Reset
        '-webkit-appearance': 'none',
        // Reset
        '&::-moz-focus-inner': {
            borderStyle: 'none' // Remove Firefox dotted outline.
        },
        '&$focusVisible': {
            outline: 'auto'
        }
    },
    /* Pseudo-class applied to the root element if the link is keyboard focused. */ focusVisible: {}
};
var Link = /*#__PURE__*/ _react.forwardRef(function Link(props, ref) {
    var classes = props.classes, className = props.className, _props$color = props.color, color = _props$color === void 0 ? 'primary' : _props$color, _props$component = props.component, component = _props$component === void 0 ? 'a' : _props$component, onBlur = props.onBlur, onFocus = props.onFocus, TypographyClasses = props.TypographyClasses, _props$underline = props.underline, underline = _props$underline === void 0 ? 'hover' : _props$underline, _props$variant = props.variant, variant = _props$variant === void 0 ? 'inherit' : _props$variant, other = _objectWithoutPropertiesDefault.default(props, [
        "classes",
        "className",
        "color",
        "component",
        "onBlur",
        "onFocus",
        "TypographyClasses",
        "underline",
        "variant"
    ]);
    var _useIsFocusVisible1 = _useIsFocusVisibleDefault.default(), isFocusVisible = _useIsFocusVisible1.isFocusVisible, onBlurVisible = _useIsFocusVisible1.onBlurVisible, focusVisibleRef = _useIsFocusVisible1.ref;
    var _React$useState = _react.useState(false), focusVisible = _React$useState[0], setFocusVisible = _React$useState[1];
    var handlerRef = _useForkRefDefault.default(ref, focusVisibleRef);
    var handleBlur = function handleBlur(event) {
        if (focusVisible) {
            onBlurVisible();
            setFocusVisible(false);
        }
        if (onBlur) onBlur(event);
    };
    var handleFocus = function handleFocus(event) {
        if (isFocusVisible(event)) setFocusVisible(true);
        if (onFocus) onFocus(event);
    };
    return /*#__PURE__*/ _react.createElement(_typographyDefault.default, _extendsDefault.default({
        className: _clsxDefault.default(classes.root, classes["underline".concat(_capitalizeDefault.default(underline))], className, focusVisible && classes.focusVisible, component === 'button' && classes.button),
        classes: TypographyClasses,
        color: color,
        component: component,
        onBlur: handleBlur,
        onFocus: handleFocus,
        ref: handlerRef,
        variant: variant
    }, other));
});
Link.propTypes = {
    /**
   * The content of the link.
   */ children: _propTypesDefault.default.node.isRequired,
    /**
   * Override or extend the styles applied to the component.
   * See [CSS API](#css) below for more details.
   */ classes: _propTypesDefault.default.object.isRequired,
    /**
   * @ignore
   */ className: _propTypesDefault.default.string,
    /**
   * The color of the link.
   */ color: _propTypesDefault.default.oneOf([
        'initial',
        'inherit',
        'primary',
        'secondary',
        'textPrimary',
        'textSecondary',
        'error'
    ]),
    /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */ component: _utils.elementTypeAcceptingRef,
    /**
   * @ignore
   */ onBlur: _propTypesDefault.default.func,
    /**
   * @ignore
   */ onFocus: _propTypesDefault.default.func,
    /**
   * `classes` prop applied to the [`Typography`](/api/typography/) element.
   */ TypographyClasses: _propTypesDefault.default.object,
    /**
   * Controls when the link should have an underline.
   */ underline: _propTypesDefault.default.oneOf([
        'none',
        'hover',
        'always'
    ]),
    /**
   * Applies the theme typography styles.
   */ variant: _propTypesDefault.default.string
};
exports.default = _withStylesDefault.default(styles, {
    name: 'MuiLink'
})(Link);

},{"@babel/runtime/helpers/esm/extends":"fTBFS","@babel/runtime/helpers/esm/objectWithoutProperties":"25tJ4","react":"21dqq","prop-types":"7wKI2","clsx":"83C22","../utils/capitalize":"5AJVX","../styles/withStyles":"7U0iM","@material-ui/utils":"54RkF","../utils/useIsFocusVisible":"lY4zJ","../utils/useForkRef":"kUpGa","../Typography":"6dDPF","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"34IFw":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>_listDefault.default
);
var _list = require("./List");
var _listDefault = parcelHelpers.interopDefault(_list);

},{"./List":"cm4UY","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"cm4UY":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "styles", ()=>styles
);
var _extends = require("@babel/runtime/helpers/esm/extends");
var _extendsDefault = parcelHelpers.interopDefault(_extends);
var _objectWithoutProperties = require("@babel/runtime/helpers/esm/objectWithoutProperties");
var _objectWithoutPropertiesDefault = parcelHelpers.interopDefault(_objectWithoutProperties);
var _react = require("react");
var _propTypes = require("prop-types");
var _propTypesDefault = parcelHelpers.interopDefault(_propTypes);
var _clsx = require("clsx");
var _clsxDefault = parcelHelpers.interopDefault(_clsx);
var _withStyles = require("../styles/withStyles");
var _withStylesDefault = parcelHelpers.interopDefault(_withStyles);
var _listContext = require("./ListContext");
var _listContextDefault = parcelHelpers.interopDefault(_listContext);
var styles = {
    /* Styles applied to the root element. */ root: {
        listStyle: 'none',
        margin: 0,
        padding: 0,
        position: 'relative'
    },
    /* Styles applied to the root element if `disablePadding={false}`. */ padding: {
        paddingTop: 8,
        paddingBottom: 8
    },
    /* Styles applied to the root element if dense. */ dense: {},
    /* Styles applied to the root element if a `subheader` is provided. */ subheader: {
        paddingTop: 0
    }
};
var List = /*#__PURE__*/ _react.forwardRef(function List(props, ref) {
    var children = props.children, classes = props.classes, className = props.className, _props$component = props.component, Component = _props$component === void 0 ? 'ul' : _props$component, _props$dense = props.dense, dense = _props$dense === void 0 ? false : _props$dense, _props$disablePadding = props.disablePadding, disablePadding = _props$disablePadding === void 0 ? false : _props$disablePadding, subheader = props.subheader, other = _objectWithoutPropertiesDefault.default(props, [
        "children",
        "classes",
        "className",
        "component",
        "dense",
        "disablePadding",
        "subheader"
    ]);
    var context = _react.useMemo(function() {
        return {
            dense: dense
        };
    }, [
        dense
    ]);
    return /*#__PURE__*/ _react.createElement(_listContextDefault.default.Provider, {
        value: context
    }, /*#__PURE__*/ _react.createElement(Component, _extendsDefault.default({
        className: _clsxDefault.default(classes.root, className, dense && classes.dense, !disablePadding && classes.padding, subheader && classes.subheader),
        ref: ref
    }, other), subheader, children));
});
List.propTypes = {
    /**
   * The content of the component.
   */ children: _propTypesDefault.default.node,
    /**
   * Override or extend the styles applied to the component.
   * See [CSS API](#css) below for more details.
   */ classes: _propTypesDefault.default.object.isRequired,
    /**
   * @ignore
   */ className: _propTypesDefault.default.string,
    /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */ component: _propTypesDefault.default/* @typescript-to-proptypes-ignore */ .elementType,
    /**
   * If `true`, compact vertical padding designed for keyboard and mouse input will be used for
   * the list and list items.
   * The prop is available to descendant components as the `dense` context.
   */ dense: _propTypesDefault.default.bool,
    /**
   * If `true`, vertical padding will be removed from the list.
   */ disablePadding: _propTypesDefault.default.bool,
    /**
   * The content of the subheader, normally `ListSubheader`.
   */ subheader: _propTypesDefault.default.node
};
exports.default = _withStylesDefault.default(styles, {
    name: 'MuiList'
})(List);

},{"@babel/runtime/helpers/esm/extends":"fTBFS","@babel/runtime/helpers/esm/objectWithoutProperties":"25tJ4","react":"21dqq","prop-types":"7wKI2","clsx":"83C22","../styles/withStyles":"7U0iM","./ListContext":"aXtXF","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"aXtXF":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _react = require("react");
/**
 * @ignore - internal component.
 */ var ListContext = _react.createContext({});
ListContext.displayName = 'ListContext';
exports.default = ListContext;

},{"react":"21dqq","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"l8B5E":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>_listItemDefault.default
);
var _listItem = require("./ListItem");
var _listItemDefault = parcelHelpers.interopDefault(_listItem);

},{"./ListItem":"lmpR3","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"lmpR3":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "styles", ()=>styles
);
var _extends = require("@babel/runtime/helpers/esm/extends");
var _extendsDefault = parcelHelpers.interopDefault(_extends);
var _objectWithoutProperties = require("@babel/runtime/helpers/esm/objectWithoutProperties");
var _objectWithoutPropertiesDefault = parcelHelpers.interopDefault(_objectWithoutProperties);
var _react = require("react");
var _propTypes = require("prop-types");
var _propTypesDefault = parcelHelpers.interopDefault(_propTypes);
var _clsx = require("clsx");
var _clsxDefault = parcelHelpers.interopDefault(_clsx);
var _utils = require("@material-ui/utils");
var _withStyles = require("../styles/withStyles");
var _withStylesDefault = parcelHelpers.interopDefault(_withStyles);
var _buttonBase = require("../ButtonBase");
var _buttonBaseDefault = parcelHelpers.interopDefault(_buttonBase);
var _isMuiElement = require("../utils/isMuiElement");
var _isMuiElementDefault = parcelHelpers.interopDefault(_isMuiElement);
var _useForkRef = require("../utils/useForkRef");
var _useForkRefDefault = parcelHelpers.interopDefault(_useForkRef);
var _listContext = require("../List/ListContext");
var _listContextDefault = parcelHelpers.interopDefault(_listContext);
var _reactDom = require("react-dom");
var styles = function styles(theme) {
    return {
        /* Styles applied to the (normally root) `component` element. May be wrapped by a `container`. */ root: {
            display: 'flex',
            justifyContent: 'flex-start',
            alignItems: 'center',
            position: 'relative',
            textDecoration: 'none',
            width: '100%',
            boxSizing: 'border-box',
            textAlign: 'left',
            paddingTop: 8,
            paddingBottom: 8,
            '&$focusVisible': {
                backgroundColor: theme.palette.action.selected
            },
            '&$selected, &$selected:hover': {
                backgroundColor: theme.palette.action.selected
            },
            '&$disabled': {
                opacity: 0.5
            }
        },
        /* Styles applied to the `container` element if `children` includes `ListItemSecondaryAction`. */ container: {
            position: 'relative'
        },
        /* Pseudo-class applied to the `component`'s `focusVisibleClassName` prop if `button={true}`. */ focusVisible: {},
        /* Styles applied to the `component` element if dense. */ dense: {
            paddingTop: 4,
            paddingBottom: 4
        },
        /* Styles applied to the `component` element if `alignItems="flex-start"`. */ alignItemsFlexStart: {
            alignItems: 'flex-start'
        },
        /* Pseudo-class applied to the inner `component` element if `disabled={true}`. */ disabled: {},
        /* Styles applied to the inner `component` element if `divider={true}`. */ divider: {
            borderBottom: "1px solid ".concat(theme.palette.divider),
            backgroundClip: 'padding-box'
        },
        /* Styles applied to the inner `component` element if `disableGutters={false}`. */ gutters: {
            paddingLeft: 16,
            paddingRight: 16
        },
        /* Styles applied to the inner `component` element if `button={true}`. */ button: {
            transition: theme.transitions.create('background-color', {
                duration: theme.transitions.duration.shortest
            }),
            '&:hover': {
                textDecoration: 'none',
                backgroundColor: theme.palette.action.hover,
                // Reset on touch devices, it doesn't add specificity
                '@media (hover: none)': {
                    backgroundColor: 'transparent'
                }
            }
        },
        /* Styles applied to the `component` element if `children` includes `ListItemSecondaryAction`. */ secondaryAction: {
            // Add some space to avoid collision as `ListItemSecondaryAction`
            // is absolutely positioned.
            paddingRight: 48
        },
        /* Pseudo-class applied to the root element if `selected={true}`. */ selected: {}
    };
};
var useEnhancedEffect = typeof window === 'undefined' ? _react.useEffect : _react.useLayoutEffect;
/**
 * Uses an additional container component if `ListItemSecondaryAction` is the last child.
 */ var ListItem = /*#__PURE__*/ _react.forwardRef(function ListItem(props, ref) {
    var _props$alignItems = props.alignItems, alignItems = _props$alignItems === void 0 ? 'center' : _props$alignItems, _props$autoFocus = props.autoFocus, autoFocus = _props$autoFocus === void 0 ? false : _props$autoFocus, _props$button = props.button, button = _props$button === void 0 ? false : _props$button, childrenProp = props.children, classes = props.classes, className = props.className, componentProp = props.component, _props$ContainerCompo = props.ContainerComponent, ContainerComponent = _props$ContainerCompo === void 0 ? 'li' : _props$ContainerCompo, _props$ContainerProps = props.ContainerProps;
    _props$ContainerProps = _props$ContainerProps === void 0 ? {} : _props$ContainerProps;
    var ContainerClassName = _props$ContainerProps.className, ContainerProps = _objectWithoutPropertiesDefault.default(_props$ContainerProps, [
        "className"
    ]), _props$dense = props.dense, dense = _props$dense === void 0 ? false : _props$dense, _props$disabled = props.disabled, disabled = _props$disabled === void 0 ? false : _props$disabled, _props$disableGutters = props.disableGutters, disableGutters = _props$disableGutters === void 0 ? false : _props$disableGutters, _props$divider = props.divider, divider = _props$divider === void 0 ? false : _props$divider, focusVisibleClassName = props.focusVisibleClassName, _props$selected = props.selected, selected = _props$selected === void 0 ? false : _props$selected, other = _objectWithoutPropertiesDefault.default(props, [
        "alignItems",
        "autoFocus",
        "button",
        "children",
        "classes",
        "className",
        "component",
        "ContainerComponent",
        "ContainerProps",
        "dense",
        "disabled",
        "disableGutters",
        "divider",
        "focusVisibleClassName",
        "selected"
    ]);
    var context = _react.useContext(_listContextDefault.default);
    var childContext = {
        dense: dense || context.dense || false,
        alignItems: alignItems
    };
    var listItemRef = _react.useRef(null);
    useEnhancedEffect(function() {
        if (autoFocus) {
            if (listItemRef.current) listItemRef.current.focus();
            else console.error('Material-UI: Unable to set focus to a ListItem whose component has not been rendered.');
        }
    }, [
        autoFocus
    ]);
    var children = _react.Children.toArray(childrenProp);
    var hasSecondaryAction = children.length && _isMuiElementDefault.default(children[children.length - 1], [
        'ListItemSecondaryAction'
    ]);
    var handleOwnRef = _react.useCallback(function(instance) {
        // #StrictMode ready
        listItemRef.current = _reactDom.findDOMNode(instance);
    }, []);
    var handleRef = _useForkRefDefault.default(handleOwnRef, ref);
    var componentProps = _extendsDefault.default({
        className: _clsxDefault.default(classes.root, className, childContext.dense && classes.dense, !disableGutters && classes.gutters, divider && classes.divider, disabled && classes.disabled, button && classes.button, alignItems !== "center" && classes.alignItemsFlexStart, hasSecondaryAction && classes.secondaryAction, selected && classes.selected),
        disabled: disabled
    }, other);
    var Component = componentProp || 'li';
    if (button) {
        componentProps.component = componentProp || 'div';
        componentProps.focusVisibleClassName = _clsxDefault.default(classes.focusVisible, focusVisibleClassName);
        Component = _buttonBaseDefault.default;
    }
    if (hasSecondaryAction) {
        // Use div by default.
        Component = !componentProps.component && !componentProp ? 'div' : Component; // Avoid nesting of li > li.
        if (ContainerComponent === 'li') {
            if (Component === 'li') Component = 'div';
            else if (componentProps.component === 'li') componentProps.component = 'div';
        }
        return /*#__PURE__*/ _react.createElement(_listContextDefault.default.Provider, {
            value: childContext
        }, /*#__PURE__*/ _react.createElement(ContainerComponent, _extendsDefault.default({
            className: _clsxDefault.default(classes.container, ContainerClassName),
            ref: handleRef
        }, ContainerProps), /*#__PURE__*/ _react.createElement(Component, componentProps, children), children.pop()));
    }
    return /*#__PURE__*/ _react.createElement(_listContextDefault.default.Provider, {
        value: childContext
    }, /*#__PURE__*/ _react.createElement(Component, _extendsDefault.default({
        ref: handleRef
    }, componentProps), children));
});
ListItem.propTypes = {
    /**
   * Defines the `align-items` style property.
   */ alignItems: _propTypesDefault.default.oneOf([
        'flex-start',
        'center'
    ]),
    /**
   * If `true`, the list item will be focused during the first mount.
   * Focus will also be triggered if the value changes from false to true.
   */ autoFocus: _propTypesDefault.default.bool,
    /**
   * If `true`, the list item will be a button (using `ButtonBase`). Props intended
   * for `ButtonBase` can then be applied to `ListItem`.
   */ button: _propTypesDefault.default.bool,
    /**
   * The content of the component. If a `ListItemSecondaryAction` is used it must
   * be the last child.
   */ children: _utils.chainPropTypes(_propTypesDefault.default.node, function(props) {
        var children = _react.Children.toArray(props.children); // React.Children.toArray(props.children).findLastIndex(isListItemSecondaryAction)
        var secondaryActionIndex = -1;
        for(var i = children.length - 1; i >= 0; i -= 1){
            var child = children[i];
            if (_isMuiElementDefault.default(child, [
                'ListItemSecondaryAction'
            ])) {
                secondaryActionIndex = i;
                break;
            }
        } //  is ListItemSecondaryAction the last child of ListItem
        if (secondaryActionIndex !== -1 && secondaryActionIndex !== children.length - 1) return new Error("Material-UI: You used an element after ListItemSecondaryAction. For ListItem to detect that it has a secondary action you must pass it as the last child to ListItem.");
        return null;
    }),
    /**
   * Override or extend the styles applied to the component.
   * See [CSS API](#css) below for more details.
   */ classes: _propTypesDefault.default.object.isRequired,
    /**
   * @ignore
   */ className: _propTypesDefault.default.string,
    /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   * By default, it's a `li` when `button` is `false` and a `div` when `button` is `true`.
   */ component: _propTypesDefault.default/* @typescript-to-proptypes-ignore */ .elementType,
    /**
   * The container component used when a `ListItemSecondaryAction` is the last child.
   */ ContainerComponent: _propTypesDefault.default.elementType,
    /**
   * Props applied to the container component if used.
   */ ContainerProps: _propTypesDefault.default.object,
    /**
   * If `true`, compact vertical padding designed for keyboard and mouse input will be used.
   */ dense: _propTypesDefault.default.bool,
    /**
   * If `true`, the list item will be disabled.
   */ disabled: _propTypesDefault.default.bool,
    /**
   * If `true`, the left and right padding is removed.
   */ disableGutters: _propTypesDefault.default.bool,
    /**
   * If `true`, a 1px light border is added to the bottom of the list item.
   */ divider: _propTypesDefault.default.bool,
    /**
   * @ignore
   */ focusVisibleClassName: _propTypesDefault.default.string,
    /**
   * Use to apply selected styling.
   */ selected: _propTypesDefault.default.bool
};
exports.default = _withStylesDefault.default(styles, {
    name: 'MuiListItem'
})(ListItem);

},{"@babel/runtime/helpers/esm/extends":"fTBFS","@babel/runtime/helpers/esm/objectWithoutProperties":"25tJ4","react":"21dqq","prop-types":"7wKI2","clsx":"83C22","@material-ui/utils":"54RkF","../styles/withStyles":"7U0iM","../ButtonBase":"2TQRV","../utils/isMuiElement":"6dsp6","../utils/useForkRef":"kUpGa","../List/ListContext":"aXtXF","react-dom":"j6uA9","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"iWFP4":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>_listItemAvatarDefault.default
);
var _listItemAvatar = require("./ListItemAvatar");
var _listItemAvatarDefault = parcelHelpers.interopDefault(_listItemAvatar);

},{"./ListItemAvatar":"gknbt","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"gknbt":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "styles", ()=>styles
);
var _extends = require("@babel/runtime/helpers/esm/extends");
var _extendsDefault = parcelHelpers.interopDefault(_extends);
var _objectWithoutProperties = require("@babel/runtime/helpers/esm/objectWithoutProperties");
var _objectWithoutPropertiesDefault = parcelHelpers.interopDefault(_objectWithoutProperties);
var _react = require("react");
var _propTypes = require("prop-types");
var _propTypesDefault = parcelHelpers.interopDefault(_propTypes);
var _clsx = require("clsx");
var _clsxDefault = parcelHelpers.interopDefault(_clsx);
var _withStyles = require("../styles/withStyles");
var _withStylesDefault = parcelHelpers.interopDefault(_withStyles);
var _listContext = require("../List/ListContext");
var _listContextDefault = parcelHelpers.interopDefault(_listContext);
var styles = {
    /* Styles applied to the root element. */ root: {
        minWidth: 56,
        flexShrink: 0
    },
    /* Styles applied to the root element when the parent `ListItem` uses `alignItems="flex-start"`. */ alignItemsFlexStart: {
        marginTop: 8
    }
};
/**
 * A simple wrapper to apply `List` styles to an `Avatar`.
 */ var ListItemAvatar = /*#__PURE__*/ _react.forwardRef(function ListItemAvatar(props, ref) {
    var classes = props.classes, className = props.className, other = _objectWithoutPropertiesDefault.default(props, [
        "classes",
        "className"
    ]);
    var context = _react.useContext(_listContextDefault.default);
    return /*#__PURE__*/ _react.createElement("div", _extendsDefault.default({
        className: _clsxDefault.default(classes.root, className, context.alignItems === 'flex-start' && classes.alignItemsFlexStart),
        ref: ref
    }, other));
});
ListItemAvatar.propTypes = {
    // ----------------------------- Warning --------------------------------
    // | These PropTypes are generated from the TypeScript type definitions |
    // |     To update them edit the d.ts file and run "yarn proptypes"     |
    // ----------------------------------------------------------------------
    /**
   * The content of the component – normally `Avatar`.
   */ children: _propTypesDefault.default.element.isRequired,
    /**
   * Override or extend the styles applied to the component.
   * See [CSS API](#css) below for more details.
   */ classes: _propTypesDefault.default.object,
    /**
   * @ignore
   */ className: _propTypesDefault.default.string
};
exports.default = _withStylesDefault.default(styles, {
    name: 'MuiListItemAvatar'
})(ListItemAvatar);

},{"@babel/runtime/helpers/esm/extends":"fTBFS","@babel/runtime/helpers/esm/objectWithoutProperties":"25tJ4","react":"21dqq","prop-types":"7wKI2","clsx":"83C22","../styles/withStyles":"7U0iM","../List/ListContext":"aXtXF","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"2wu99":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>_listItemIconDefault.default
);
var _listItemIcon = require("./ListItemIcon");
var _listItemIconDefault = parcelHelpers.interopDefault(_listItemIcon);

},{"./ListItemIcon":"6EQUf","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"6EQUf":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "styles", ()=>styles
);
var _extends = require("@babel/runtime/helpers/esm/extends");
var _extendsDefault = parcelHelpers.interopDefault(_extends);
var _objectWithoutProperties = require("@babel/runtime/helpers/esm/objectWithoutProperties");
var _objectWithoutPropertiesDefault = parcelHelpers.interopDefault(_objectWithoutProperties);
var _react = require("react");
var _propTypes = require("prop-types");
var _propTypesDefault = parcelHelpers.interopDefault(_propTypes);
var _clsx = require("clsx");
var _clsxDefault = parcelHelpers.interopDefault(_clsx);
var _withStyles = require("../styles/withStyles");
var _withStylesDefault = parcelHelpers.interopDefault(_withStyles);
var _listContext = require("../List/ListContext");
var _listContextDefault = parcelHelpers.interopDefault(_listContext);
var styles = function styles(theme) {
    return {
        /* Styles applied to the root element. */ root: {
            minWidth: 56,
            color: theme.palette.action.active,
            flexShrink: 0,
            display: 'inline-flex'
        },
        /* Styles applied to the root element when the parent `ListItem` uses `alignItems="flex-start"`. */ alignItemsFlexStart: {
            marginTop: 8
        }
    };
};
/**
 * A simple wrapper to apply `List` styles to an `Icon` or `SvgIcon`.
 */ var ListItemIcon = /*#__PURE__*/ _react.forwardRef(function ListItemIcon(props, ref) {
    var classes = props.classes, className = props.className, other = _objectWithoutPropertiesDefault.default(props, [
        "classes",
        "className"
    ]);
    var context = _react.useContext(_listContextDefault.default);
    return /*#__PURE__*/ _react.createElement("div", _extendsDefault.default({
        className: _clsxDefault.default(classes.root, className, context.alignItems === 'flex-start' && classes.alignItemsFlexStart),
        ref: ref
    }, other));
});
ListItemIcon.propTypes = {
    // ----------------------------- Warning --------------------------------
    // | These PropTypes are generated from the TypeScript type definitions |
    // |     To update them edit the d.ts file and run "yarn proptypes"     |
    // ----------------------------------------------------------------------
    /**
   * The content of the component, normally `Icon`, `SvgIcon`,
   * or a `@material-ui/icons` SVG icon element.
   */ children: _propTypesDefault.default.node,
    /**
   * Override or extend the styles applied to the component.
   * See [CSS API](#css) below for more details.
   */ classes: _propTypesDefault.default.object,
    /**
   * @ignore
   */ className: _propTypesDefault.default.string
};
exports.default = _withStylesDefault.default(styles, {
    name: 'MuiListItemIcon'
})(ListItemIcon);

},{"@babel/runtime/helpers/esm/extends":"fTBFS","@babel/runtime/helpers/esm/objectWithoutProperties":"25tJ4","react":"21dqq","prop-types":"7wKI2","clsx":"83C22","../styles/withStyles":"7U0iM","../List/ListContext":"aXtXF","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"15djN":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>_listItemSecondaryActionDefault.default
);
var _listItemSecondaryAction = require("./ListItemSecondaryAction");
var _listItemSecondaryActionDefault = parcelHelpers.interopDefault(_listItemSecondaryAction);

},{"./ListItemSecondaryAction":"5fNsC","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"5fNsC":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "styles", ()=>styles
);
var _extends = require("@babel/runtime/helpers/esm/extends");
var _extendsDefault = parcelHelpers.interopDefault(_extends);
var _objectWithoutProperties = require("@babel/runtime/helpers/esm/objectWithoutProperties");
var _objectWithoutPropertiesDefault = parcelHelpers.interopDefault(_objectWithoutProperties);
var _react = require("react");
var _propTypes = require("prop-types");
var _propTypesDefault = parcelHelpers.interopDefault(_propTypes);
var _clsx = require("clsx");
var _clsxDefault = parcelHelpers.interopDefault(_clsx);
var _withStyles = require("../styles/withStyles");
var _withStylesDefault = parcelHelpers.interopDefault(_withStyles);
var styles = {
    /* Styles applied to the root element. */ root: {
        position: 'absolute',
        right: 16,
        top: '50%',
        transform: 'translateY(-50%)'
    }
};
/**
 * Must be used as the last child of ListItem to function properly.
 */ var ListItemSecondaryAction = /*#__PURE__*/ _react.forwardRef(function ListItemSecondaryAction(props, ref) {
    var classes = props.classes, className = props.className, other = _objectWithoutPropertiesDefault.default(props, [
        "classes",
        "className"
    ]);
    return /*#__PURE__*/ _react.createElement("div", _extendsDefault.default({
        className: _clsxDefault.default(classes.root, className),
        ref: ref
    }, other));
});
ListItemSecondaryAction.propTypes = {
    // ----------------------------- Warning --------------------------------
    // | These PropTypes are generated from the TypeScript type definitions |
    // |     To update them edit the d.ts file and run "yarn proptypes"     |
    // ----------------------------------------------------------------------
    /**
   * The content of the component, normally an `IconButton` or selection control.
   */ children: _propTypesDefault.default.node,
    /**
   * Override or extend the styles applied to the component.
   * See [CSS API](#css) below for more details.
   */ classes: _propTypesDefault.default.object,
    /**
   * @ignore
   */ className: _propTypesDefault.default.string
};
ListItemSecondaryAction.muiName = 'ListItemSecondaryAction';
exports.default = _withStylesDefault.default(styles, {
    name: 'MuiListItemSecondaryAction'
})(ListItemSecondaryAction);

},{"@babel/runtime/helpers/esm/extends":"fTBFS","@babel/runtime/helpers/esm/objectWithoutProperties":"25tJ4","react":"21dqq","prop-types":"7wKI2","clsx":"83C22","../styles/withStyles":"7U0iM","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"6dKGg":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>_listItemTextDefault.default
);
var _listItemText = require("./ListItemText");
var _listItemTextDefault = parcelHelpers.interopDefault(_listItemText);

},{"./ListItemText":"eyqsu","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"eyqsu":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "styles", ()=>styles
);
var _extends = require("@babel/runtime/helpers/esm/extends");
var _extendsDefault = parcelHelpers.interopDefault(_extends);
var _objectWithoutProperties = require("@babel/runtime/helpers/esm/objectWithoutProperties");
var _objectWithoutPropertiesDefault = parcelHelpers.interopDefault(_objectWithoutProperties);
var _react = require("react");
var _propTypes = require("prop-types");
var _propTypesDefault = parcelHelpers.interopDefault(_propTypes);
var _clsx = require("clsx");
var _clsxDefault = parcelHelpers.interopDefault(_clsx);
var _withStyles = require("../styles/withStyles");
var _withStylesDefault = parcelHelpers.interopDefault(_withStyles);
var _typography = require("../Typography");
var _typographyDefault = parcelHelpers.interopDefault(_typography);
var _listContext = require("../List/ListContext");
var _listContextDefault = parcelHelpers.interopDefault(_listContext);
var styles = {
    /* Styles applied to the root element. */ root: {
        flex: '1 1 auto',
        minWidth: 0,
        marginTop: 4,
        marginBottom: 4
    },
    /* Styles applied to the `Typography` components if primary and secondary are set. */ multiline: {
        marginTop: 6,
        marginBottom: 6
    },
    /* Styles applied to the `Typography` components if dense. */ dense: {},
    /* Styles applied to the root element if `inset={true}`. */ inset: {
        paddingLeft: 56
    },
    /* Styles applied to the primary `Typography` component. */ primary: {},
    /* Styles applied to the secondary `Typography` component. */ secondary: {}
};
var ListItemText = /*#__PURE__*/ _react.forwardRef(function ListItemText(props, ref) {
    var children = props.children, classes = props.classes, className = props.className, _props$disableTypogra = props.disableTypography, disableTypography = _props$disableTypogra === void 0 ? false : _props$disableTypogra, _props$inset = props.inset, inset = _props$inset === void 0 ? false : _props$inset, primaryProp = props.primary, primaryTypographyProps = props.primaryTypographyProps, secondaryProp = props.secondary, secondaryTypographyProps = props.secondaryTypographyProps, other = _objectWithoutPropertiesDefault.default(props, [
        "children",
        "classes",
        "className",
        "disableTypography",
        "inset",
        "primary",
        "primaryTypographyProps",
        "secondary",
        "secondaryTypographyProps"
    ]);
    var _React$useContext = _react.useContext(_listContextDefault.default), dense = _React$useContext.dense;
    var primary = primaryProp != null ? primaryProp : children;
    if (primary != null && primary.type !== _typographyDefault.default && !disableTypography) primary = /*#__PURE__*/ _react.createElement(_typographyDefault.default, _extendsDefault.default({
        variant: dense ? 'body2' : 'body1',
        className: classes.primary,
        component: "span",
        display: "block"
    }, primaryTypographyProps), primary);
    var secondary = secondaryProp;
    if (secondary != null && secondary.type !== _typographyDefault.default && !disableTypography) secondary = /*#__PURE__*/ _react.createElement(_typographyDefault.default, _extendsDefault.default({
        variant: "body2",
        className: classes.secondary,
        color: "textSecondary",
        display: "block"
    }, secondaryTypographyProps), secondary);
    return /*#__PURE__*/ _react.createElement("div", _extendsDefault.default({
        className: _clsxDefault.default(classes.root, className, dense && classes.dense, inset && classes.inset, primary && secondary && classes.multiline),
        ref: ref
    }, other), primary, secondary);
});
ListItemText.propTypes = {
    // ----------------------------- Warning --------------------------------
    // | These PropTypes are generated from the TypeScript type definitions |
    // |     To update them edit the d.ts file and run "yarn proptypes"     |
    // ----------------------------------------------------------------------
    /**
   * Alias for the `primary` prop.
   */ children: _propTypesDefault.default.node,
    /**
   * Override or extend the styles applied to the component.
   * See [CSS API](#css) below for more details.
   */ classes: _propTypesDefault.default.object,
    /**
   * @ignore
   */ className: _propTypesDefault.default.string,
    /**
   * If `true`, the children won't be wrapped by a Typography component.
   * This can be useful to render an alternative Typography variant by wrapping
   * the `children` (or `primary`) text, and optional `secondary` text
   * with the Typography component.
   */ disableTypography: _propTypesDefault.default.bool,
    /**
   * If `true`, the children will be indented.
   * This should be used if there is no left avatar or left icon.
   */ inset: _propTypesDefault.default.bool,
    /**
   * The main content element.
   */ primary: _propTypesDefault.default.node,
    /**
   * These props will be forwarded to the primary typography component
   * (as long as disableTypography is not `true`).
   */ primaryTypographyProps: _propTypesDefault.default.object,
    /**
   * The secondary content element.
   */ secondary: _propTypesDefault.default.node,
    /**
   * These props will be forwarded to the secondary typography component
   * (as long as disableTypography is not `true`).
   */ secondaryTypographyProps: _propTypesDefault.default.object
};
exports.default = _withStylesDefault.default(styles, {
    name: 'MuiListItemText'
})(ListItemText);

},{"@babel/runtime/helpers/esm/extends":"fTBFS","@babel/runtime/helpers/esm/objectWithoutProperties":"25tJ4","react":"21dqq","prop-types":"7wKI2","clsx":"83C22","../styles/withStyles":"7U0iM","../Typography":"6dDPF","../List/ListContext":"aXtXF","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"c0Im2":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>_listSubheaderDefault.default
);
var _listSubheader = require("./ListSubheader");
var _listSubheaderDefault = parcelHelpers.interopDefault(_listSubheader);

},{"./ListSubheader":"gR9yQ","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"gR9yQ":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "styles", ()=>styles
);
var _extends = require("@babel/runtime/helpers/esm/extends");
var _extendsDefault = parcelHelpers.interopDefault(_extends);
var _objectWithoutProperties = require("@babel/runtime/helpers/esm/objectWithoutProperties");
var _objectWithoutPropertiesDefault = parcelHelpers.interopDefault(_objectWithoutProperties);
var _react = require("react");
var _propTypes = require("prop-types");
var _propTypesDefault = parcelHelpers.interopDefault(_propTypes);
var _clsx = require("clsx");
var _clsxDefault = parcelHelpers.interopDefault(_clsx);
var _withStyles = require("../styles/withStyles");
var _withStylesDefault = parcelHelpers.interopDefault(_withStyles);
var _capitalize = require("../utils/capitalize");
var _capitalizeDefault = parcelHelpers.interopDefault(_capitalize);
var styles = function styles(theme) {
    return {
        /* Styles applied to the root element. */ root: {
            boxSizing: 'border-box',
            lineHeight: '48px',
            listStyle: 'none',
            color: theme.palette.text.secondary,
            fontFamily: theme.typography.fontFamily,
            fontWeight: theme.typography.fontWeightMedium,
            fontSize: theme.typography.pxToRem(14)
        },
        /* Styles applied to the root element if `color="primary"`. */ colorPrimary: {
            color: theme.palette.primary.main
        },
        /* Styles applied to the root element if `color="inherit"`. */ colorInherit: {
            color: 'inherit'
        },
        /* Styles applied to the inner `component` element if `disableGutters={false}`. */ gutters: {
            paddingLeft: 16,
            paddingRight: 16
        },
        /* Styles applied to the root element if `inset={true}`. */ inset: {
            paddingLeft: 72
        },
        /* Styles applied to the root element if `disableSticky={false}`. */ sticky: {
            position: 'sticky',
            top: 0,
            zIndex: 1,
            backgroundColor: 'inherit'
        }
    };
};
var ListSubheader = /*#__PURE__*/ _react.forwardRef(function ListSubheader(props, ref) {
    var classes = props.classes, className = props.className, _props$color = props.color, color = _props$color === void 0 ? 'default' : _props$color, _props$component = props.component, Component = _props$component === void 0 ? 'li' : _props$component, _props$disableGutters = props.disableGutters, disableGutters = _props$disableGutters === void 0 ? false : _props$disableGutters, _props$disableSticky = props.disableSticky, disableSticky = _props$disableSticky === void 0 ? false : _props$disableSticky, _props$inset = props.inset, inset = _props$inset === void 0 ? false : _props$inset, other = _objectWithoutPropertiesDefault.default(props, [
        "classes",
        "className",
        "color",
        "component",
        "disableGutters",
        "disableSticky",
        "inset"
    ]);
    return /*#__PURE__*/ _react.createElement(Component, _extendsDefault.default({
        className: _clsxDefault.default(classes.root, className, color !== 'default' && classes["color".concat(_capitalizeDefault.default(color))], inset && classes.inset, !disableSticky && classes.sticky, !disableGutters && classes.gutters),
        ref: ref
    }, other));
});
ListSubheader.propTypes = {
    /**
   * The content of the component.
   */ children: _propTypesDefault.default.node,
    /**
   * Override or extend the styles applied to the component.
   * See [CSS API](#css) below for more details.
   */ classes: _propTypesDefault.default.object.isRequired,
    /**
   * @ignore
   */ className: _propTypesDefault.default.string,
    /**
   * The color of the component. It supports those theme colors that make sense for this component.
   */ color: _propTypesDefault.default.oneOf([
        'default',
        'primary',
        'inherit'
    ]),
    /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */ component: _propTypesDefault.default/* @typescript-to-proptypes-ignore */ .elementType,
    /**
   * If `true`, the List Subheader will not have gutters.
   */ disableGutters: _propTypesDefault.default.bool,
    /**
   * If `true`, the List Subheader will not stick to the top during scroll.
   */ disableSticky: _propTypesDefault.default.bool,
    /**
   * If `true`, the List Subheader will be indented.
   */ inset: _propTypesDefault.default.bool
};
exports.default = _withStylesDefault.default(styles, {
    name: 'MuiListSubheader'
})(ListSubheader);

},{"@babel/runtime/helpers/esm/extends":"fTBFS","@babel/runtime/helpers/esm/objectWithoutProperties":"25tJ4","react":"21dqq","prop-types":"7wKI2","clsx":"83C22","../styles/withStyles":"7U0iM","../utils/capitalize":"5AJVX","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"923o0":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>_menuDefault.default
);
var _menu = require("./Menu");
var _menuDefault = parcelHelpers.interopDefault(_menu);

},{"./Menu":"aungz","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"aungz":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "styles", ()=>styles
);
var _extends = require("@babel/runtime/helpers/esm/extends");
var _extendsDefault = parcelHelpers.interopDefault(_extends);
var _objectWithoutProperties = require("@babel/runtime/helpers/esm/objectWithoutProperties");
var _objectWithoutPropertiesDefault = parcelHelpers.interopDefault(_objectWithoutProperties);
var _react = require("react");
var _reactIs = require("react-is");
var _propTypes = require("prop-types");
var _propTypesDefault = parcelHelpers.interopDefault(_propTypes);
var _clsx = require("clsx");
var _clsxDefault = parcelHelpers.interopDefault(_clsx);
var _utils = require("@material-ui/utils");
var _withStyles = require("../styles/withStyles");
var _withStylesDefault = parcelHelpers.interopDefault(_withStyles);
var _popover = require("../Popover");
var _popoverDefault = parcelHelpers.interopDefault(_popover);
var _menuList = require("../MenuList");
var _menuListDefault = parcelHelpers.interopDefault(_menuList);
var _reactDom = require("react-dom");
var _setRef = require("../utils/setRef");
var _setRefDefault = parcelHelpers.interopDefault(_setRef);
var _useTheme = require("../styles/useTheme");
var _useThemeDefault = parcelHelpers.interopDefault(_useTheme);
var _deprecatedPropType = require("../utils/deprecatedPropType");
var _deprecatedPropTypeDefault = parcelHelpers.interopDefault(_deprecatedPropType);
var RTL_ORIGIN = {
    vertical: 'top',
    horizontal: 'right'
};
var LTR_ORIGIN = {
    vertical: 'top',
    horizontal: 'left'
};
var styles = {
    /* Styles applied to the `Paper` component. */ paper: {
        // specZ: The maximum height of a simple menu should be one or more rows less than the view
        // height. This ensures a tapable area outside of the simple menu with which to dismiss
        // the menu.
        maxHeight: 'calc(100% - 96px)',
        // Add iOS momentum scrolling.
        WebkitOverflowScrolling: 'touch'
    },
    /* Styles applied to the `List` component via `MenuList`. */ list: {
        // We disable the focus ring for mouse, touch and keyboard users.
        outline: 0
    }
};
var Menu = /*#__PURE__*/ _react.forwardRef(function Menu(props, ref) {
    var _props$autoFocus = props.autoFocus, autoFocus = _props$autoFocus === void 0 ? true : _props$autoFocus, children = props.children, classes = props.classes, _props$disableAutoFoc = props.disableAutoFocusItem, disableAutoFocusItem = _props$disableAutoFoc === void 0 ? false : _props$disableAutoFoc, _props$MenuListProps = props.MenuListProps, MenuListProps = _props$MenuListProps === void 0 ? {} : _props$MenuListProps, onClose = props.onClose, onEnteringProp = props.onEntering, open = props.open, _props$PaperProps = props.PaperProps, PaperProps = _props$PaperProps === void 0 ? {} : _props$PaperProps, PopoverClasses = props.PopoverClasses, _props$transitionDura = props.transitionDuration, transitionDuration = _props$transitionDura === void 0 ? 'auto' : _props$transitionDura, _props$TransitionProp = props.TransitionProps;
    _props$TransitionProp = _props$TransitionProp === void 0 ? {} : _props$TransitionProp;
    var onEntering = _props$TransitionProp.onEntering, TransitionProps = _objectWithoutPropertiesDefault.default(_props$TransitionProp, [
        "onEntering"
    ]), _props$variant = props.variant, variant = _props$variant === void 0 ? 'selectedMenu' : _props$variant, other = _objectWithoutPropertiesDefault.default(props, [
        "autoFocus",
        "children",
        "classes",
        "disableAutoFocusItem",
        "MenuListProps",
        "onClose",
        "onEntering",
        "open",
        "PaperProps",
        "PopoverClasses",
        "transitionDuration",
        "TransitionProps",
        "variant"
    ]);
    var theme = _useThemeDefault.default();
    var autoFocusItem = autoFocus && !disableAutoFocusItem && open;
    var menuListActionsRef = _react.useRef(null);
    var contentAnchorRef = _react.useRef(null);
    var getContentAnchorEl = function getContentAnchorEl() {
        return contentAnchorRef.current;
    };
    var handleEntering = function handleEntering(element, isAppearing) {
        if (menuListActionsRef.current) menuListActionsRef.current.adjustStyleForScrollbar(element, theme);
        if (onEnteringProp) onEnteringProp(element, isAppearing);
        if (onEntering) onEntering(element, isAppearing);
    };
    var handleListKeyDown = function handleListKeyDown(event) {
        if (event.key === 'Tab') {
            event.preventDefault();
            if (onClose) onClose(event, 'tabKeyDown');
        }
    };
    /**
   * the index of the item should receive focus
   * in a `variant="selectedMenu"` it's the first `selected` item
   * otherwise it's the very first item.
   */ var activeItemIndex = -1; // since we inject focus related props into children we have to do a lookahead
    // to check if there is a `selected` item. We're looking for the last `selected`
    // item and use the first valid item as a fallback
    _react.Children.map(children, function(child, index) {
        if (!/*#__PURE__*/ _react.isValidElement(child)) return;
        if (_reactIs.isFragment(child)) console.error([
            "Material-UI: The Menu component doesn't accept a Fragment as a child.",
            'Consider providing an array instead.'
        ].join('\n'));
        if (!child.props.disabled) {
            if (variant !== "menu" && child.props.selected) activeItemIndex = index;
            else if (activeItemIndex === -1) activeItemIndex = index;
        }
    });
    var items = _react.Children.map(children, function(child, index) {
        if (index === activeItemIndex) return /*#__PURE__*/ _react.cloneElement(child, {
            ref: function ref(instance) {
                // #StrictMode ready
                contentAnchorRef.current = _reactDom.findDOMNode(instance);
                _setRefDefault.default(child.ref, instance);
            }
        });
        return child;
    });
    return /*#__PURE__*/ _react.createElement(_popoverDefault.default, _extendsDefault.default({
        getContentAnchorEl: getContentAnchorEl,
        classes: PopoverClasses,
        onClose: onClose,
        TransitionProps: _extendsDefault.default({
            onEntering: handleEntering
        }, TransitionProps),
        anchorOrigin: theme.direction === 'rtl' ? RTL_ORIGIN : LTR_ORIGIN,
        transformOrigin: theme.direction === 'rtl' ? RTL_ORIGIN : LTR_ORIGIN,
        PaperProps: _extendsDefault.default({}, PaperProps, {
            classes: _extendsDefault.default({}, PaperProps.classes, {
                root: classes.paper
            })
        }),
        open: open,
        ref: ref,
        transitionDuration: transitionDuration
    }, other), /*#__PURE__*/ _react.createElement(_menuListDefault.default, _extendsDefault.default({
        onKeyDown: handleListKeyDown,
        actions: menuListActionsRef,
        autoFocus: autoFocus && (activeItemIndex === -1 || disableAutoFocusItem),
        autoFocusItem: autoFocusItem,
        variant: variant
    }, MenuListProps, {
        className: _clsxDefault.default(classes.list, MenuListProps.className)
    }), items));
});
Menu.propTypes = {
    // ----------------------------- Warning --------------------------------
    // | These PropTypes are generated from the TypeScript type definitions |
    // |     To update them edit the d.ts file and run "yarn proptypes"     |
    // ----------------------------------------------------------------------
    /**
   * A HTML element, or a function that returns it.
   * It's used to set the position of the menu.
   */ anchorEl: _propTypesDefault.default/* @typescript-to-proptypes-ignore */ .oneOfType([
        _utils.HTMLElementType,
        _propTypesDefault.default.func
    ]),
    /**
   * If `true` (Default) will focus the `[role="menu"]` if no focusable child is found. Disabled
   * children are not focusable. If you set this prop to `false` focus will be placed
   * on the parent modal container. This has severe accessibility implications
   * and should only be considered if you manage focus otherwise.
   */ autoFocus: _propTypesDefault.default.bool,
    /**
   * Menu contents, normally `MenuItem`s.
   */ children: _propTypesDefault.default.node,
    /**
   * Override or extend the styles applied to the component.
   * See [CSS API](#css) below for more details.
   */ classes: _propTypesDefault.default.object,
    /**
   * When opening the menu will not focus the active item but the `[role="menu"]`
   * unless `autoFocus` is also set to `false`. Not using the default means not
   * following WAI-ARIA authoring practices. Please be considerate about possible
   * accessibility implications.
   */ disableAutoFocusItem: _propTypesDefault.default.bool,
    /**
   * Props applied to the [`MenuList`](/api/menu-list/) element.
   */ MenuListProps: _propTypesDefault.default.object,
    /**
   * Callback fired when the component requests to be closed.
   *
   * @param {object} event The event source of the callback.
   * @param {string} reason Can be: `"escapeKeyDown"`, `"backdropClick"`, `"tabKeyDown"`.
   */ onClose: _propTypesDefault.default.func,
    /**
   * Callback fired before the Menu enters.
   * @deprecated Use the `TransitionProps` prop instead.
   */ onEnter: _deprecatedPropTypeDefault.default(_propTypesDefault.default.func, 'Use the `TransitionProps` prop instead.'),
    /**
   * Callback fired when the Menu has entered.
   * @deprecated Use the `TransitionProps` prop instead.
   */ onEntered: _deprecatedPropTypeDefault.default(_propTypesDefault.default.func, 'Use the `TransitionProps` prop instead.'),
    /**
   * Callback fired when the Menu is entering.
   * @deprecated Use the `TransitionProps` prop instead.
   */ onEntering: _deprecatedPropTypeDefault.default(_propTypesDefault.default.func, 'Use the `TransitionProps` prop instead.'),
    /**
   * Callback fired before the Menu exits.
   * @deprecated Use the `TransitionProps` prop instead.
   */ onExit: _deprecatedPropTypeDefault.default(_propTypesDefault.default.func, 'Use the `TransitionProps` prop instead.'),
    /**
   * Callback fired when the Menu has exited.
   * @deprecated Use the `TransitionProps` prop instead.
   */ onExited: _deprecatedPropTypeDefault.default(_propTypesDefault.default.func, 'Use the `TransitionProps` prop instead.'),
    /**
   * Callback fired when the Menu is exiting.
   * @deprecated Use the `TransitionProps` prop instead.
   */ onExiting: _deprecatedPropTypeDefault.default(_propTypesDefault.default.func, 'Use the `TransitionProps` prop instead.'),
    /**
   * If `true`, the menu is visible.
   */ open: _propTypesDefault.default.bool.isRequired,
    /**
   * @ignore
   */ PaperProps: _propTypesDefault.default.object,
    /**
   * `classes` prop applied to the [`Popover`](/api/popover/) element.
   */ PopoverClasses: _propTypesDefault.default.object,
    /**
   * The length of the transition in `ms`, or 'auto'
   */ transitionDuration: _propTypesDefault.default.oneOfType([
        _propTypesDefault.default.oneOf([
            'auto'
        ]),
        _propTypesDefault.default.number,
        _propTypesDefault.default.shape({
            appear: _propTypesDefault.default.number,
            enter: _propTypesDefault.default.number,
            exit: _propTypesDefault.default.number
        })
    ]),
    /**
   * Props applied to the transition element.
   * By default, the element is based on this [`Transition`](http://reactcommunity.org/react-transition-group/transition) component.
   */ TransitionProps: _propTypesDefault.default.object,
    /**
   * The variant to use. Use `menu` to prevent selected items from impacting the initial focus
   * and the vertical alignment relative to the anchor element.
   */ variant: _propTypesDefault.default.oneOf([
        'menu',
        'selectedMenu'
    ])
};
exports.default = _withStylesDefault.default(styles, {
    name: 'MuiMenu'
})(Menu);

},{"@babel/runtime/helpers/esm/extends":"fTBFS","@babel/runtime/helpers/esm/objectWithoutProperties":"25tJ4","react":"21dqq","react-is":"63mDj","prop-types":"7wKI2","clsx":"83C22","@material-ui/utils":"54RkF","../styles/withStyles":"7U0iM","../Popover":"h42eB","../MenuList":"bf8L1","react-dom":"j6uA9","../utils/setRef":"6f9nb","../styles/useTheme":"kWUCn","../utils/deprecatedPropType":"loRgF","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"h42eB":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>_popoverDefault.default
);
var _popover = require("./Popover");
var _popoverDefault = parcelHelpers.interopDefault(_popover);

},{"./Popover":"4UrKs","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"4UrKs":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "getOffsetTop", ()=>getOffsetTop
);
parcelHelpers.export(exports, "getOffsetLeft", ()=>getOffsetLeft
);
parcelHelpers.export(exports, "styles", ()=>styles
);
var _extends = require("@babel/runtime/helpers/esm/extends");
var _extendsDefault = parcelHelpers.interopDefault(_extends);
var _objectWithoutProperties = require("@babel/runtime/helpers/esm/objectWithoutProperties");
var _objectWithoutPropertiesDefault = parcelHelpers.interopDefault(_objectWithoutProperties);
var _react = require("react");
var _propTypes = require("prop-types");
var _propTypesDefault = parcelHelpers.interopDefault(_propTypes);
var _reactDom = require("react-dom");
var _utils = require("@material-ui/utils");
var _debounce = require("../utils/debounce");
var _debounceDefault = parcelHelpers.interopDefault(_debounce);
var _clsx = require("clsx");
var _clsxDefault = parcelHelpers.interopDefault(_clsx);
var _ownerDocument = require("../utils/ownerDocument");
var _ownerDocumentDefault = parcelHelpers.interopDefault(_ownerDocument);
var _ownerWindow = require("../utils/ownerWindow");
var _ownerWindowDefault = parcelHelpers.interopDefault(_ownerWindow);
var _createChainedFunction = require("../utils/createChainedFunction");
var _createChainedFunctionDefault = parcelHelpers.interopDefault(_createChainedFunction);
var _deprecatedPropType = require("../utils/deprecatedPropType");
var _deprecatedPropTypeDefault = parcelHelpers.interopDefault(_deprecatedPropType);
var _withStyles = require("../styles/withStyles");
var _withStylesDefault = parcelHelpers.interopDefault(_withStyles);
var _modal = require("../Modal");
var _modalDefault = parcelHelpers.interopDefault(_modal);
var _grow = require("../Grow");
var _growDefault = parcelHelpers.interopDefault(_grow);
var _paper = require("../Paper");
var _paperDefault = parcelHelpers.interopDefault(_paper);
function getOffsetTop(rect, vertical) {
    var offset = 0;
    if (typeof vertical === 'number') offset = vertical;
    else if (vertical === 'center') offset = rect.height / 2;
    else if (vertical === 'bottom') offset = rect.height;
    return offset;
}
function getOffsetLeft(rect, horizontal) {
    var offset = 0;
    if (typeof horizontal === 'number') offset = horizontal;
    else if (horizontal === 'center') offset = rect.width / 2;
    else if (horizontal === 'right') offset = rect.width;
    return offset;
}
function getTransformOriginValue(transformOrigin) {
    return [
        transformOrigin.horizontal,
        transformOrigin.vertical
    ].map(function(n) {
        return typeof n === 'number' ? "".concat(n, "px") : n;
    }).join(' ');
} // Sum the scrollTop between two elements.
function getScrollParent(parent, child) {
    var element = child;
    var scrollTop = 0;
    while(element && element !== parent){
        element = element.parentElement;
        scrollTop += element.scrollTop;
    }
    return scrollTop;
}
function getAnchorEl(anchorEl) {
    return typeof anchorEl === 'function' ? anchorEl() : anchorEl;
}
var styles = {
    /* Styles applied to the root element. */ root: {},
    /* Styles applied to the `Paper` component. */ paper: {
        position: 'absolute',
        overflowY: 'auto',
        overflowX: 'hidden',
        // So we see the popover when it's empty.
        // It's most likely on issue on userland.
        minWidth: 16,
        minHeight: 16,
        maxWidth: 'calc(100% - 32px)',
        maxHeight: 'calc(100% - 32px)',
        // We disable the focus ring for mouse, touch and keyboard users.
        outline: 0
    }
};
var Popover = /*#__PURE__*/ _react.forwardRef(function Popover(props, ref) {
    var action = props.action, anchorEl = props.anchorEl, _props$anchorOrigin = props.anchorOrigin, anchorOrigin = _props$anchorOrigin === void 0 ? {
        vertical: 'top',
        horizontal: 'left'
    } : _props$anchorOrigin, anchorPosition = props.anchorPosition, _props$anchorReferenc = props.anchorReference, anchorReference = _props$anchorReferenc === void 0 ? 'anchorEl' : _props$anchorReferenc, children = props.children, classes = props.classes, className = props.className, containerProp = props.container, _props$elevation = props.elevation, elevation = _props$elevation === void 0 ? 8 : _props$elevation, getContentAnchorEl = props.getContentAnchorEl, _props$marginThreshol = props.marginThreshold, marginThreshold = _props$marginThreshol === void 0 ? 16 : _props$marginThreshol, onEnter = props.onEnter, onEntered = props.onEntered, onEntering = props.onEntering, onExit = props.onExit, onExited = props.onExited, onExiting = props.onExiting, open = props.open, _props$PaperProps = props.PaperProps, PaperProps = _props$PaperProps === void 0 ? {} : _props$PaperProps, _props$transformOrigi = props.transformOrigin, transformOrigin = _props$transformOrigi === void 0 ? {
        vertical: 'top',
        horizontal: 'left'
    } : _props$transformOrigi, _props$TransitionComp = props.TransitionComponent, TransitionComponent = _props$TransitionComp === void 0 ? _growDefault.default : _props$TransitionComp, _props$transitionDura = props.transitionDuration, transitionDurationProp = _props$transitionDura === void 0 ? 'auto' : _props$transitionDura, _props$TransitionProp = props.TransitionProps, TransitionProps = _props$TransitionProp === void 0 ? {} : _props$TransitionProp, other = _objectWithoutPropertiesDefault.default(props, [
        "action",
        "anchorEl",
        "anchorOrigin",
        "anchorPosition",
        "anchorReference",
        "children",
        "classes",
        "className",
        "container",
        "elevation",
        "getContentAnchorEl",
        "marginThreshold",
        "onEnter",
        "onEntered",
        "onEntering",
        "onExit",
        "onExited",
        "onExiting",
        "open",
        "PaperProps",
        "transformOrigin",
        "TransitionComponent",
        "transitionDuration",
        "TransitionProps"
    ]);
    var paperRef = _react.useRef(); // Returns the top/left offset of the position
    // to attach to on the anchor element (or body if none is provided)
    var getAnchorOffset = _react.useCallback(function(contentAnchorOffset) {
        if (anchorReference === 'anchorPosition') {
            if (!anchorPosition) console.error('Material-UI: You need to provide a `anchorPosition` prop when using <Popover anchorReference="anchorPosition" />.');
            return anchorPosition;
        }
        var resolvedAnchorEl = getAnchorEl(anchorEl); // If an anchor element wasn't provided, just use the parent body element of this Popover
        var anchorElement = resolvedAnchorEl && resolvedAnchorEl.nodeType === 1 ? resolvedAnchorEl : _ownerDocumentDefault.default(paperRef.current).body;
        var anchorRect = anchorElement.getBoundingClientRect();
        var box = anchorElement.getBoundingClientRect();
        if (box.top === 0 && box.left === 0 && box.right === 0 && box.bottom === 0) console.warn([
            'Material-UI: The `anchorEl` prop provided to the component is invalid.',
            'The anchor element should be part of the document layout.',
            "Make sure the element is present in the document or that it's not display none."
        ].join('\n'));
        var anchorVertical = contentAnchorOffset === 0 ? anchorOrigin.vertical : 'center';
        return {
            top: anchorRect.top + getOffsetTop(anchorRect, anchorVertical),
            left: anchorRect.left + getOffsetLeft(anchorRect, anchorOrigin.horizontal)
        };
    }, [
        anchorEl,
        anchorOrigin.horizontal,
        anchorOrigin.vertical,
        anchorPosition,
        anchorReference
    ]); // Returns the vertical offset of inner content to anchor the transform on if provided
    var getContentAnchorOffset = _react.useCallback(function(element) {
        var contentAnchorOffset = 0;
        if (getContentAnchorEl && anchorReference === 'anchorEl') {
            var contentAnchorEl = getContentAnchorEl(element);
            if (contentAnchorEl && element.contains(contentAnchorEl)) {
                var scrollTop = getScrollParent(element, contentAnchorEl);
                contentAnchorOffset = contentAnchorEl.offsetTop + contentAnchorEl.clientHeight / 2 - scrollTop || 0;
            } // != the default value
            if (anchorOrigin.vertical !== 'top') console.error([
                'Material-UI: You can not change the default `anchorOrigin.vertical` value ',
                'when also providing the `getContentAnchorEl` prop to the popover component.',
                'Only use one of the two props.',
                "Set `getContentAnchorEl` to `null | undefined` or leave `anchorOrigin.vertical` unchanged."
            ].join('\n'));
        }
        return contentAnchorOffset;
    }, [
        anchorOrigin.vertical,
        anchorReference,
        getContentAnchorEl
    ]); // Return the base transform origin using the element
    // and taking the content anchor offset into account if in use
    var getTransformOrigin = _react.useCallback(function(elemRect) {
        var contentAnchorOffset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;
        return {
            vertical: getOffsetTop(elemRect, transformOrigin.vertical) + contentAnchorOffset,
            horizontal: getOffsetLeft(elemRect, transformOrigin.horizontal)
        };
    }, [
        transformOrigin.horizontal,
        transformOrigin.vertical
    ]);
    var getPositioningStyle = _react.useCallback(function(element) {
        // Check if the parent has requested anchoring on an inner content node
        var contentAnchorOffset = getContentAnchorOffset(element);
        var elemRect = {
            width: element.offsetWidth,
            height: element.offsetHeight
        }; // Get the transform origin point on the element itself
        var elemTransformOrigin = getTransformOrigin(elemRect, contentAnchorOffset);
        if (anchorReference === 'none') return {
            top: null,
            left: null,
            transformOrigin: getTransformOriginValue(elemTransformOrigin)
        };
         // Get the offset of of the anchoring element
        var anchorOffset = getAnchorOffset(contentAnchorOffset); // Calculate element positioning
        var top = anchorOffset.top - elemTransformOrigin.vertical;
        var left = anchorOffset.left - elemTransformOrigin.horizontal;
        var bottom = top + elemRect.height;
        var right = left + elemRect.width; // Use the parent window of the anchorEl if provided
        var containerWindow = _ownerWindowDefault.default(getAnchorEl(anchorEl)); // Window thresholds taking required margin into account
        var heightThreshold = containerWindow.innerHeight - marginThreshold;
        var widthThreshold = containerWindow.innerWidth - marginThreshold; // Check if the vertical axis needs shifting
        if (top < marginThreshold) {
            var diff = top - marginThreshold;
            top -= diff;
            elemTransformOrigin.vertical += diff;
        } else if (bottom > heightThreshold) {
            var _diff = bottom - heightThreshold;
            top -= _diff;
            elemTransformOrigin.vertical += _diff;
        }
        if (elemRect.height > heightThreshold && elemRect.height && heightThreshold) console.error([
            'Material-UI: The popover component is too tall.',
            "Some part of it can not be seen on the screen (".concat(elemRect.height - heightThreshold, "px)."),
            'Please consider adding a `max-height` to improve the user-experience.'
        ].join('\n'));
        if (left < marginThreshold) {
            var _diff2 = left - marginThreshold;
            left -= _diff2;
            elemTransformOrigin.horizontal += _diff2;
        } else if (right > widthThreshold) {
            var _diff3 = right - widthThreshold;
            left -= _diff3;
            elemTransformOrigin.horizontal += _diff3;
        }
        return {
            top: "".concat(Math.round(top), "px"),
            left: "".concat(Math.round(left), "px"),
            transformOrigin: getTransformOriginValue(elemTransformOrigin)
        };
    }, [
        anchorEl,
        anchorReference,
        getAnchorOffset,
        getContentAnchorOffset,
        getTransformOrigin,
        marginThreshold
    ]);
    var setPositioningStyles = _react.useCallback(function() {
        var element = paperRef.current;
        if (!element) return;
        var positioning = getPositioningStyle(element);
        if (positioning.top !== null) element.style.top = positioning.top;
        if (positioning.left !== null) element.style.left = positioning.left;
        element.style.transformOrigin = positioning.transformOrigin;
    }, [
        getPositioningStyle
    ]);
    var handleEntering = function handleEntering(element, isAppearing) {
        if (onEntering) onEntering(element, isAppearing);
        setPositioningStyles();
    };
    var handlePaperRef = _react.useCallback(function(instance) {
        // #StrictMode ready
        paperRef.current = _reactDom.findDOMNode(instance);
    }, []);
    _react.useEffect(function() {
        if (open) setPositioningStyles();
    });
    _react.useImperativeHandle(action, function() {
        return open ? {
            updatePosition: function updatePosition() {
                setPositioningStyles();
            }
        } : null;
    }, [
        open,
        setPositioningStyles
    ]);
    _react.useEffect(function() {
        if (!open) return undefined;
        var handleResize = _debounceDefault.default(function() {
            setPositioningStyles();
        });
        window.addEventListener('resize', handleResize);
        return function() {
            handleResize.clear();
            window.removeEventListener('resize', handleResize);
        };
    }, [
        open,
        setPositioningStyles
    ]);
    var transitionDuration = transitionDurationProp;
    if (transitionDurationProp === 'auto' && !TransitionComponent.muiSupportAuto) transitionDuration = undefined;
     // If the container prop is provided, use that
    // If the anchorEl prop is provided, use its parent body element as the container
    // If neither are provided let the Modal take care of choosing the container
    var container = containerProp || (anchorEl ? _ownerDocumentDefault.default(getAnchorEl(anchorEl)).body : undefined);
    return /*#__PURE__*/ _react.createElement(_modalDefault.default, _extendsDefault.default({
        container: container,
        open: open,
        ref: ref,
        BackdropProps: {
            invisible: true
        },
        className: _clsxDefault.default(classes.root, className)
    }, other), /*#__PURE__*/ _react.createElement(TransitionComponent, _extendsDefault.default({
        appear: true,
        in: open,
        onEnter: onEnter,
        onEntered: onEntered,
        onExit: onExit,
        onExited: onExited,
        onExiting: onExiting,
        timeout: transitionDuration
    }, TransitionProps, {
        onEntering: _createChainedFunctionDefault.default(handleEntering, TransitionProps.onEntering)
    }), /*#__PURE__*/ _react.createElement(_paperDefault.default, _extendsDefault.default({
        elevation: elevation,
        ref: handlePaperRef
    }, PaperProps, {
        className: _clsxDefault.default(classes.paper, PaperProps.className)
    }), children)));
});
Popover.propTypes = {
    // ----------------------------- Warning --------------------------------
    // | These PropTypes are generated from the TypeScript type definitions |
    // |     To update them edit the d.ts file and run "yarn proptypes"     |
    // ----------------------------------------------------------------------
    /**
   * A ref for imperative actions.
   * It currently only supports updatePosition() action.
   */ action: _utils.refType,
    /**
   * A HTML element, or a function that returns it.
   * It's used to set the position of the popover.
   */ anchorEl: _utils.chainPropTypes(_propTypesDefault.default.oneOfType([
        _utils.HTMLElementType,
        _propTypesDefault.default.func
    ]), function(props) {
        if (props.open && (!props.anchorReference || props.anchorReference === 'anchorEl')) {
            var resolvedAnchorEl = getAnchorEl(props.anchorEl);
            if (resolvedAnchorEl && resolvedAnchorEl.nodeType === 1) {
                var box = resolvedAnchorEl.getBoundingClientRect();
                if (box.top === 0 && box.left === 0 && box.right === 0 && box.bottom === 0) return new Error([
                    'Material-UI: The `anchorEl` prop provided to the component is invalid.',
                    'The anchor element should be part of the document layout.',
                    "Make sure the element is present in the document or that it's not display none."
                ].join('\n'));
            } else return new Error([
                'Material-UI: The `anchorEl` prop provided to the component is invalid.',
                "It should be an Element instance but it's `".concat(resolvedAnchorEl, "` instead.")
            ].join('\n'));
        }
        return null;
    }),
    /**
   * This is the point on the anchor where the popover's
   * `anchorEl` will attach to. This is not used when the
   * anchorReference is 'anchorPosition'.
   *
   * Options:
   * vertical: [top, center, bottom];
   * horizontal: [left, center, right].
   */ anchorOrigin: _propTypesDefault.default.shape({
        horizontal: _propTypesDefault.default.oneOfType([
            _propTypesDefault.default.oneOf([
                'center',
                'left',
                'right'
            ]),
            _propTypesDefault.default.number
        ]).isRequired,
        vertical: _propTypesDefault.default.oneOfType([
            _propTypesDefault.default.oneOf([
                'bottom',
                'center',
                'top'
            ]),
            _propTypesDefault.default.number
        ]).isRequired
    }),
    /**
   * This is the position that may be used
   * to set the position of the popover.
   * The coordinates are relative to
   * the application's client area.
   */ anchorPosition: _propTypesDefault.default.shape({
        left: _propTypesDefault.default.number.isRequired,
        top: _propTypesDefault.default.number.isRequired
    }),
    /**
   * This determines which anchor prop to refer to to set
   * the position of the popover.
   */ anchorReference: _propTypesDefault.default.oneOf([
        'anchorEl',
        'anchorPosition',
        'none'
    ]),
    /**
   * The content of the component.
   */ children: _propTypesDefault.default.node,
    /**
   * Override or extend the styles applied to the component.
   * See [CSS API](#css) below for more details.
   */ classes: _propTypesDefault.default.object,
    /**
   * @ignore
   */ className: _propTypesDefault.default.string,
    /**
   * A HTML element, component instance, or function that returns either.
   * The `container` will passed to the Modal component.
   *
   * By default, it uses the body of the anchorEl's top-level document object,
   * so it's simply `document.body` most of the time.
   */ container: _propTypesDefault.default/* @typescript-to-proptypes-ignore */ .oneOfType([
        _utils.HTMLElementType,
        _propTypesDefault.default.instanceOf(_react.Component),
        _propTypesDefault.default.func
    ]),
    /**
   * The elevation of the popover.
   */ elevation: _propTypesDefault.default.number,
    /**
   * This function is called in order to retrieve the content anchor element.
   * It's the opposite of the `anchorEl` prop.
   * The content anchor element should be an element inside the popover.
   * It's used to correctly scroll and set the position of the popover.
   * The positioning strategy tries to make the content anchor element just above the
   * anchor element.
   */ getContentAnchorEl: _propTypesDefault.default.func,
    /**
   * Specifies how close to the edge of the window the popover can appear.
   */ marginThreshold: _propTypesDefault.default.number,
    /**
   * Callback fired when the component requests to be closed.
   */ onClose: _propTypesDefault.default.func,
    /**
   * Callback fired before the component is entering.
   * @deprecated Use the `TransitionProps` prop instead.
   */ onEnter: _deprecatedPropTypeDefault.default(_propTypesDefault.default.func, 'Use the `TransitionProps` prop instead.'),
    /**
   * Callback fired when the component has entered.
   * @deprecated Use the `TransitionProps` prop instead.
   */ onEntered: _deprecatedPropTypeDefault.default(_propTypesDefault.default.func, 'Use the `TransitionProps` prop instead.'),
    /**
   * Callback fired when the component is entering.
   * @deprecated Use the `TransitionProps` prop instead.
   */ onEntering: _deprecatedPropTypeDefault.default(_propTypesDefault.default.func, 'Use the `TransitionProps` prop instead.'),
    /**
   * Callback fired before the component is exiting.
   * @deprecated Use the `TransitionProps` prop instead.
   */ onExit: _deprecatedPropTypeDefault.default(_propTypesDefault.default.func, 'Use the `TransitionProps` prop instead.'),
    /**
   * Callback fired when the component has exited.
   * @deprecated Use the `TransitionProps` prop instead.
   */ onExited: _deprecatedPropTypeDefault.default(_propTypesDefault.default.func, 'Use the `TransitionProps` prop instead.'),
    /**
   * Callback fired when the component is exiting.
   * @deprecated Use the `TransitionProps` prop instead.
   */ onExiting: _deprecatedPropTypeDefault.default(_propTypesDefault.default.func, 'Use the `TransitionProps` prop instead.'),
    /**
   * If `true`, the popover is visible.
   */ open: _propTypesDefault.default.bool.isRequired,
    /**
   * Props applied to the [`Paper`](/api/paper/) element.
   */ PaperProps: _propTypesDefault.default/* @typescript-to-proptypes-ignore */ .shape({
        component: _utils.elementTypeAcceptingRef
    }),
    /**
   * This is the point on the popover which
   * will attach to the anchor's origin.
   *
   * Options:
   * vertical: [top, center, bottom, x(px)];
   * horizontal: [left, center, right, x(px)].
   */ transformOrigin: _propTypesDefault.default.shape({
        horizontal: _propTypesDefault.default.oneOfType([
            _propTypesDefault.default.oneOf([
                'center',
                'left',
                'right'
            ]),
            _propTypesDefault.default.number
        ]).isRequired,
        vertical: _propTypesDefault.default.oneOfType([
            _propTypesDefault.default.oneOf([
                'bottom',
                'center',
                'top'
            ]),
            _propTypesDefault.default.number
        ]).isRequired
    }),
    /**
   * The component used for the transition.
   * [Follow this guide](/components/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.
   */ TransitionComponent: _propTypesDefault.default.elementType,
    /**
   * Set to 'auto' to automatically calculate transition time based on height.
   */ transitionDuration: _propTypesDefault.default.oneOfType([
        _propTypesDefault.default.oneOf([
            'auto'
        ]),
        _propTypesDefault.default.number,
        _propTypesDefault.default.shape({
            appear: _propTypesDefault.default.number,
            enter: _propTypesDefault.default.number,
            exit: _propTypesDefault.default.number
        })
    ]),
    /**
   * Props applied to the [`Transition`](http://reactcommunity.org/react-transition-group/transition#Transition-props) element.
   */ TransitionProps: _propTypesDefault.default.object
};
exports.default = _withStylesDefault.default(styles, {
    name: 'MuiPopover'
})(Popover);

},{"@babel/runtime/helpers/esm/extends":"fTBFS","@babel/runtime/helpers/esm/objectWithoutProperties":"25tJ4","react":"21dqq","prop-types":"7wKI2","react-dom":"j6uA9","@material-ui/utils":"54RkF","../utils/debounce":"fsAbo","clsx":"83C22","../utils/ownerDocument":"lxJTm","../utils/ownerWindow":"fmWv6","../utils/createChainedFunction":"BNP7Q","../utils/deprecatedPropType":"loRgF","../styles/withStyles":"7U0iM","../Modal":"eA3TP","../Grow":"2tpXF","../Paper":"j0s2L","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"bf8L1":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>_menuListDefault.default
);
var _menuList = require("./MenuList");
var _menuListDefault = parcelHelpers.interopDefault(_menuList);

},{"./MenuList":"f1qbh","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"f1qbh":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _extends = require("@babel/runtime/helpers/esm/extends");
var _extendsDefault = parcelHelpers.interopDefault(_extends);
var _objectWithoutProperties = require("@babel/runtime/helpers/esm/objectWithoutProperties");
var _objectWithoutPropertiesDefault = parcelHelpers.interopDefault(_objectWithoutProperties);
var _react = require("react");
var _reactIs = require("react-is");
var _propTypes = require("prop-types");
var _propTypesDefault = parcelHelpers.interopDefault(_propTypes);
var _reactDom = require("react-dom");
var _ownerDocument = require("../utils/ownerDocument");
var _ownerDocumentDefault = parcelHelpers.interopDefault(_ownerDocument);
var _list = require("../List");
var _listDefault = parcelHelpers.interopDefault(_list);
var _getScrollbarSize = require("../utils/getScrollbarSize");
var _getScrollbarSizeDefault = parcelHelpers.interopDefault(_getScrollbarSize);
var _useForkRef = require("../utils/useForkRef");
var _useForkRefDefault = parcelHelpers.interopDefault(_useForkRef);
function nextItem(list, item, disableListWrap) {
    if (list === item) return list.firstChild;
    if (item && item.nextElementSibling) return item.nextElementSibling;
    return disableListWrap ? null : list.firstChild;
}
function previousItem(list, item, disableListWrap) {
    if (list === item) return disableListWrap ? list.firstChild : list.lastChild;
    if (item && item.previousElementSibling) return item.previousElementSibling;
    return disableListWrap ? null : list.lastChild;
}
function textCriteriaMatches(nextFocus, textCriteria) {
    if (textCriteria === undefined) return true;
    var text = nextFocus.innerText;
    if (text === undefined) // jsdom doesn't support innerText
    text = nextFocus.textContent;
    text = text.trim().toLowerCase();
    if (text.length === 0) return false;
    if (textCriteria.repeating) return text[0] === textCriteria.keys[0];
    return text.indexOf(textCriteria.keys.join('')) === 0;
}
function moveFocus(list, currentFocus, disableListWrap, disabledItemsFocusable, traversalFunction, textCriteria) {
    var wrappedOnce = false;
    var nextFocus = traversalFunction(list, currentFocus, currentFocus ? disableListWrap : false);
    while(nextFocus){
        // Prevent infinite loop.
        if (nextFocus === list.firstChild) {
            if (wrappedOnce) return;
            wrappedOnce = true;
        } // Same logic as useAutocomplete.js
        var nextFocusDisabled = disabledItemsFocusable ? false : nextFocus.disabled || nextFocus.getAttribute('aria-disabled') === 'true';
        if (!nextFocus.hasAttribute('tabindex') || !textCriteriaMatches(nextFocus, textCriteria) || nextFocusDisabled) // Move to the next element.
        nextFocus = traversalFunction(list, nextFocus, disableListWrap);
        else {
            nextFocus.focus();
            return;
        }
    }
}
var useEnhancedEffect = typeof window === 'undefined' ? _react.useEffect : _react.useLayoutEffect;
/**
 * A permanently displayed menu following https://www.w3.org/TR/wai-aria-practices/#menubutton.
 * It's exposed to help customization of the [`Menu`](/api/menu/) component. If you
 * use it separately you need to move focus into the component manually. Once
 * the focus is placed inside the component it is fully keyboard accessible.
 */ var MenuList = /*#__PURE__*/ _react.forwardRef(function MenuList(props, ref) {
    var actions = props.actions, _props$autoFocus = props.autoFocus, autoFocus = _props$autoFocus === void 0 ? false : _props$autoFocus, _props$autoFocusItem = props.autoFocusItem, autoFocusItem = _props$autoFocusItem === void 0 ? false : _props$autoFocusItem, children = props.children, className = props.className, _props$disabledItemsF = props.disabledItemsFocusable, disabledItemsFocusable = _props$disabledItemsF === void 0 ? false : _props$disabledItemsF, _props$disableListWra = props.disableListWrap, disableListWrap = _props$disableListWra === void 0 ? false : _props$disableListWra, onKeyDown = props.onKeyDown, _props$variant = props.variant, variant = _props$variant === void 0 ? 'selectedMenu' : _props$variant, other = _objectWithoutPropertiesDefault.default(props, [
        "actions",
        "autoFocus",
        "autoFocusItem",
        "children",
        "className",
        "disabledItemsFocusable",
        "disableListWrap",
        "onKeyDown",
        "variant"
    ]);
    var listRef = _react.useRef(null);
    var textCriteriaRef = _react.useRef({
        keys: [],
        repeating: true,
        previousKeyMatched: true,
        lastTime: null
    });
    useEnhancedEffect(function() {
        if (autoFocus) listRef.current.focus();
    }, [
        autoFocus
    ]);
    _react.useImperativeHandle(actions, function() {
        return {
            adjustStyleForScrollbar: function adjustStyleForScrollbar(containerElement, theme) {
                // Let's ignore that piece of logic if users are already overriding the width
                // of the menu.
                var noExplicitWidth = !listRef.current.style.width;
                if (containerElement.clientHeight < listRef.current.clientHeight && noExplicitWidth) {
                    var scrollbarSize = "".concat(_getScrollbarSizeDefault.default(true), "px");
                    listRef.current.style[theme.direction === 'rtl' ? 'paddingLeft' : 'paddingRight'] = scrollbarSize;
                    listRef.current.style.width = "calc(100% + ".concat(scrollbarSize, ")");
                }
                return listRef.current;
            }
        };
    }, []);
    var handleKeyDown = function handleKeyDown(event) {
        var list = listRef.current;
        var key = event.key;
        /**
     * @type {Element} - will always be defined since we are in a keydown handler
     * attached to an element. A keydown event is either dispatched to the activeElement
     * or document.body or document.documentElement. Only the first case will
     * trigger this specific handler.
     */ var currentFocus = _ownerDocumentDefault.default(list).activeElement;
        if (key === 'ArrowDown') {
            // Prevent scroll of the page
            event.preventDefault();
            moveFocus(list, currentFocus, disableListWrap, disabledItemsFocusable, nextItem);
        } else if (key === 'ArrowUp') {
            event.preventDefault();
            moveFocus(list, currentFocus, disableListWrap, disabledItemsFocusable, previousItem);
        } else if (key === 'Home') {
            event.preventDefault();
            moveFocus(list, null, disableListWrap, disabledItemsFocusable, nextItem);
        } else if (key === 'End') {
            event.preventDefault();
            moveFocus(list, null, disableListWrap, disabledItemsFocusable, previousItem);
        } else if (key.length === 1) {
            var criteria = textCriteriaRef.current;
            var lowerKey = key.toLowerCase();
            var currTime = performance.now();
            if (criteria.keys.length > 0) {
                // Reset
                if (currTime - criteria.lastTime > 500) {
                    criteria.keys = [];
                    criteria.repeating = true;
                    criteria.previousKeyMatched = true;
                } else if (criteria.repeating && lowerKey !== criteria.keys[0]) criteria.repeating = false;
            }
            criteria.lastTime = currTime;
            criteria.keys.push(lowerKey);
            var keepFocusOnCurrent = currentFocus && !criteria.repeating && textCriteriaMatches(currentFocus, criteria);
            if (criteria.previousKeyMatched && (keepFocusOnCurrent || moveFocus(list, currentFocus, false, disabledItemsFocusable, nextItem, criteria))) event.preventDefault();
            else criteria.previousKeyMatched = false;
        }
        if (onKeyDown) onKeyDown(event);
    };
    var handleOwnRef = _react.useCallback(function(instance) {
        // #StrictMode ready
        listRef.current = _reactDom.findDOMNode(instance);
    }, []);
    var handleRef = _useForkRefDefault.default(handleOwnRef, ref);
    /**
   * the index of the item should receive focus
   * in a `variant="selectedMenu"` it's the first `selected` item
   * otherwise it's the very first item.
   */ var activeItemIndex = -1; // since we inject focus related props into children we have to do a lookahead
    // to check if there is a `selected` item. We're looking for the last `selected`
    // item and use the first valid item as a fallback
    _react.Children.forEach(children, function(child, index) {
        if (!/*#__PURE__*/ _react.isValidElement(child)) return;
        if (_reactIs.isFragment(child)) console.error([
            "Material-UI: The Menu component doesn't accept a Fragment as a child.",
            'Consider providing an array instead.'
        ].join('\n'));
        if (!child.props.disabled) {
            if (variant === 'selectedMenu' && child.props.selected) activeItemIndex = index;
            else if (activeItemIndex === -1) activeItemIndex = index;
        }
    });
    var items = _react.Children.map(children, function(child, index) {
        if (index === activeItemIndex) {
            var newChildProps = {};
            if (autoFocusItem) newChildProps.autoFocus = true;
            if (child.props.tabIndex === undefined && variant === 'selectedMenu') newChildProps.tabIndex = 0;
            return /*#__PURE__*/ _react.cloneElement(child, newChildProps);
        }
        return child;
    });
    return /*#__PURE__*/ _react.createElement(_listDefault.default, _extendsDefault.default({
        role: "menu",
        ref: handleRef,
        className: className,
        onKeyDown: handleKeyDown,
        tabIndex: autoFocus ? 0 : -1
    }, other), items);
});
MenuList.propTypes = {
    // ----------------------------- Warning --------------------------------
    // | These PropTypes are generated from the TypeScript type definitions |
    // |     To update them edit the d.ts file and run "yarn proptypes"     |
    // ----------------------------------------------------------------------
    /**
   * If `true`, will focus the `[role="menu"]` container and move into tab order.
   */ autoFocus: _propTypesDefault.default.bool,
    /**
   * If `true`, will focus the first menuitem if `variant="menu"` or selected item
   * if `variant="selectedMenu"`.
   */ autoFocusItem: _propTypesDefault.default.bool,
    /**
   * MenuList contents, normally `MenuItem`s.
   */ children: _propTypesDefault.default.node,
    /**
   * @ignore
   */ className: _propTypesDefault.default.string,
    /**
   * If `true`, will allow focus on disabled items.
   */ disabledItemsFocusable: _propTypesDefault.default.bool,
    /**
   * If `true`, the menu items will not wrap focus.
   */ disableListWrap: _propTypesDefault.default.bool,
    /**
   * @ignore
   */ onKeyDown: _propTypesDefault.default.func,
    /**
   * The variant to use. Use `menu` to prevent selected items from impacting the initial focus
   * and the vertical alignment relative to the anchor element.
   */ variant: _propTypesDefault.default.oneOf([
        'menu',
        'selectedMenu'
    ])
};
exports.default = MenuList;

},{"@babel/runtime/helpers/esm/extends":"fTBFS","@babel/runtime/helpers/esm/objectWithoutProperties":"25tJ4","react":"21dqq","react-is":"63mDj","prop-types":"7wKI2","react-dom":"j6uA9","../utils/ownerDocument":"lxJTm","../List":"34IFw","../utils/getScrollbarSize":"61dpz","../utils/useForkRef":"kUpGa","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"4K3cN":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>_menuItemDefault.default
);
var _menuItem = require("./MenuItem");
var _menuItemDefault = parcelHelpers.interopDefault(_menuItem);

},{"./MenuItem":"aJmMe","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"aJmMe":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "styles", ()=>styles
);
var _objectWithoutProperties = require("@babel/runtime/helpers/esm/objectWithoutProperties");
var _objectWithoutPropertiesDefault = parcelHelpers.interopDefault(_objectWithoutProperties);
var _defineProperty = require("@babel/runtime/helpers/esm/defineProperty");
var _definePropertyDefault = parcelHelpers.interopDefault(_defineProperty);
var _extends = require("@babel/runtime/helpers/esm/extends");
var _extendsDefault = parcelHelpers.interopDefault(_extends);
var _react = require("react");
var _propTypes = require("prop-types");
var _propTypesDefault = parcelHelpers.interopDefault(_propTypes);
var _clsx = require("clsx");
var _clsxDefault = parcelHelpers.interopDefault(_clsx);
var _withStyles = require("../styles/withStyles");
var _withStylesDefault = parcelHelpers.interopDefault(_withStyles);
var _listItem = require("../ListItem");
var _listItemDefault = parcelHelpers.interopDefault(_listItem);
var styles = function styles(theme) {
    return {
        /* Styles applied to the root element. */ root: _extendsDefault.default({}, theme.typography.body1, _definePropertyDefault.default({
            minHeight: 48,
            paddingTop: 6,
            paddingBottom: 6,
            boxSizing: 'border-box',
            width: 'auto',
            overflow: 'hidden',
            whiteSpace: 'nowrap'
        }, theme.breakpoints.up('sm'), {
            minHeight: 'auto'
        })),
        // TODO v5: remove
        /* Styles applied to the root element if `disableGutters={false}`. */ gutters: {},
        /* Styles applied to the root element if `selected={true}`. */ selected: {},
        /* Styles applied to the root element if dense. */ dense: _extendsDefault.default({}, theme.typography.body2, {
            minHeight: 'auto'
        })
    };
};
var MenuItem = /*#__PURE__*/ _react.forwardRef(function MenuItem(props, ref) {
    var classes = props.classes, className = props.className, _props$component = props.component, component = _props$component === void 0 ? 'li' : _props$component, _props$disableGutters = props.disableGutters, disableGutters = _props$disableGutters === void 0 ? false : _props$disableGutters, ListItemClasses = props.ListItemClasses, _props$role = props.role, role = _props$role === void 0 ? 'menuitem' : _props$role, selected = props.selected, tabIndexProp = props.tabIndex, other = _objectWithoutPropertiesDefault.default(props, [
        "classes",
        "className",
        "component",
        "disableGutters",
        "ListItemClasses",
        "role",
        "selected",
        "tabIndex"
    ]);
    var tabIndex;
    if (!props.disabled) tabIndex = tabIndexProp !== undefined ? tabIndexProp : -1;
    return /*#__PURE__*/ _react.createElement(_listItemDefault.default, _extendsDefault.default({
        button: true,
        role: role,
        tabIndex: tabIndex,
        component: component,
        selected: selected,
        disableGutters: disableGutters,
        classes: _extendsDefault.default({
            dense: classes.dense
        }, ListItemClasses),
        className: _clsxDefault.default(classes.root, className, selected && classes.selected, !disableGutters && classes.gutters),
        ref: ref
    }, other));
});
MenuItem.propTypes = {
    /**
   * Menu item contents.
   */ children: _propTypesDefault.default.node,
    /**
   * Override or extend the styles applied to the component.
   * See [CSS API](#css) below for more details.
   */ classes: _propTypesDefault.default.object.isRequired,
    /**
   * @ignore
   */ className: _propTypesDefault.default.string,
    /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */ component: _propTypesDefault.default/* @typescript-to-proptypes-ignore */ .elementType,
    /**
   * If `true`, compact vertical padding designed for keyboard and mouse input will be used.
   */ dense: _propTypesDefault.default.bool,
    /**
   * @ignore
   */ disabled: _propTypesDefault.default.bool,
    /**
   * If `true`, the left and right padding is removed.
   */ disableGutters: _propTypesDefault.default.bool,
    /**
   * `classes` prop applied to the [`ListItem`](/api/list-item/) element.
   */ ListItemClasses: _propTypesDefault.default.object,
    /**
   * @ignore
   */ role: _propTypesDefault.default.string,
    /**
   * @ignore
   */ selected: _propTypesDefault.default.bool,
    /**
   * @ignore
   */ tabIndex: _propTypesDefault.default.number
};
exports.default = _withStylesDefault.default(styles, {
    name: 'MuiMenuItem'
})(MenuItem);

},{"@babel/runtime/helpers/esm/objectWithoutProperties":"25tJ4","@babel/runtime/helpers/esm/defineProperty":"hbmCA","@babel/runtime/helpers/esm/extends":"fTBFS","react":"21dqq","prop-types":"7wKI2","clsx":"83C22","../styles/withStyles":"7U0iM","../ListItem":"l8B5E","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"g5yld":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>_mobileStepperDefault.default
);
var _mobileStepper = require("./MobileStepper");
var _mobileStepperDefault = parcelHelpers.interopDefault(_mobileStepper);

},{"./MobileStepper":"8Xkjb","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"8Xkjb":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "styles", ()=>styles
);
var _extends = require("@babel/runtime/helpers/esm/extends");
var _extendsDefault = parcelHelpers.interopDefault(_extends);
var _toConsumableArray = require("@babel/runtime/helpers/esm/toConsumableArray");
var _toConsumableArrayDefault = parcelHelpers.interopDefault(_toConsumableArray);
var _objectWithoutProperties = require("@babel/runtime/helpers/esm/objectWithoutProperties");
var _objectWithoutPropertiesDefault = parcelHelpers.interopDefault(_objectWithoutProperties);
var _react = require("react");
var _propTypes = require("prop-types");
var _propTypesDefault = parcelHelpers.interopDefault(_propTypes);
var _clsx = require("clsx");
var _clsxDefault = parcelHelpers.interopDefault(_clsx);
var _withStyles = require("../styles/withStyles");
var _withStylesDefault = parcelHelpers.interopDefault(_withStyles);
var _paper = require("../Paper");
var _paperDefault = parcelHelpers.interopDefault(_paper);
var _capitalize = require("../utils/capitalize");
var _capitalizeDefault = parcelHelpers.interopDefault(_capitalize);
var _linearProgress = require("../LinearProgress");
var _linearProgressDefault = parcelHelpers.interopDefault(_linearProgress);
var styles = function styles(theme) {
    return {
        /* Styles applied to the root element. */ root: {
            display: 'flex',
            flexDirection: 'row',
            justifyContent: 'space-between',
            alignItems: 'center',
            background: theme.palette.background.default,
            padding: 8
        },
        /* Styles applied to the root element if `position="bottom"`. */ positionBottom: {
            position: 'fixed',
            bottom: 0,
            left: 0,
            right: 0,
            zIndex: theme.zIndex.mobileStepper
        },
        /* Styles applied to the root element if `position="top"`. */ positionTop: {
            position: 'fixed',
            top: 0,
            left: 0,
            right: 0,
            zIndex: theme.zIndex.mobileStepper
        },
        /* Styles applied to the root element if `position="static"`. */ positionStatic: {},
        /* Styles applied to the dots container if `variant="dots"`. */ dots: {
            display: 'flex',
            flexDirection: 'row'
        },
        /* Styles applied to each dot if `variant="dots"`. */ dot: {
            backgroundColor: theme.palette.action.disabled,
            borderRadius: '50%',
            width: 8,
            height: 8,
            margin: '0 2px'
        },
        /* Styles applied to a dot if `variant="dots"` and this is the active step. */ dotActive: {
            backgroundColor: theme.palette.primary.main
        },
        /* Styles applied to the Linear Progress component if `variant="progress"`. */ progress: {
            width: '50%'
        }
    };
};
var MobileStepper = /*#__PURE__*/ _react.forwardRef(function MobileStepper(props, ref) {
    var _props$activeStep = props.activeStep, activeStep = _props$activeStep === void 0 ? 0 : _props$activeStep, backButton = props.backButton, classes = props.classes, className = props.className, LinearProgressProps = props.LinearProgressProps, nextButton = props.nextButton, _props$position = props.position, position = _props$position === void 0 ? 'bottom' : _props$position, steps = props.steps, _props$variant = props.variant, variant = _props$variant === void 0 ? 'dots' : _props$variant, other = _objectWithoutPropertiesDefault.default(props, [
        "activeStep",
        "backButton",
        "classes",
        "className",
        "LinearProgressProps",
        "nextButton",
        "position",
        "steps",
        "variant"
    ]);
    return /*#__PURE__*/ _react.createElement(_paperDefault.default, _extendsDefault.default({
        square: true,
        elevation: 0,
        className: _clsxDefault.default(classes.root, classes["position".concat(_capitalizeDefault.default(position))], className),
        ref: ref
    }, other), backButton, variant === 'text' && /*#__PURE__*/ _react.createElement(_react.Fragment, null, activeStep + 1, " / ", steps), variant === 'dots' && /*#__PURE__*/ _react.createElement("div", {
        className: classes.dots
    }, _toConsumableArrayDefault.default(new Array(steps)).map(function(_, index) {
        return /*#__PURE__*/ _react.createElement("div", {
            key: index,
            className: _clsxDefault.default(classes.dot, index === activeStep && classes.dotActive)
        });
    })), variant === 'progress' && /*#__PURE__*/ _react.createElement(_linearProgressDefault.default, _extendsDefault.default({
        className: classes.progress,
        variant: "determinate",
        value: Math.ceil(activeStep / (steps - 1) * 100)
    }, LinearProgressProps)), nextButton);
});
MobileStepper.propTypes = {
    // ----------------------------- Warning --------------------------------
    // | These PropTypes are generated from the TypeScript type definitions |
    // |     To update them edit the d.ts file and run "yarn proptypes"     |
    // ----------------------------------------------------------------------
    /**
   * Set the active step (zero based index).
   * Defines which dot is highlighted when the variant is 'dots'.
   */ activeStep: _propTypesDefault.default.number,
    /**
   * A back button element. For instance, it can be a `Button` or an `IconButton`.
   */ backButton: _propTypesDefault.default.node,
    /**
   * Override or extend the styles applied to the component.
   * See [CSS API](#css) below for more details.
   */ classes: _propTypesDefault.default.object,
    /**
   * @ignore
   */ className: _propTypesDefault.default.string,
    /**
   * Props applied to the `LinearProgress` element.
   */ LinearProgressProps: _propTypesDefault.default.object,
    /**
   * A next button element. For instance, it can be a `Button` or an `IconButton`.
   */ nextButton: _propTypesDefault.default.node,
    /**
   * Set the positioning type.
   */ position: _propTypesDefault.default.oneOf([
        'bottom',
        'static',
        'top'
    ]),
    /**
   * The total steps.
   */ steps: _propTypesDefault.default.number.isRequired,
    /**
   * The variant to use.
   */ variant: _propTypesDefault.default.oneOf([
        'dots',
        'progress',
        'text'
    ])
};
exports.default = _withStylesDefault.default(styles, {
    name: 'MuiMobileStepper'
})(MobileStepper);

},{"@babel/runtime/helpers/esm/extends":"fTBFS","@babel/runtime/helpers/esm/toConsumableArray":"bCmCj","@babel/runtime/helpers/esm/objectWithoutProperties":"25tJ4","react":"21dqq","prop-types":"7wKI2","clsx":"83C22","../styles/withStyles":"7U0iM","../Paper":"j0s2L","../utils/capitalize":"5AJVX","../LinearProgress":"fyi8r","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"kE3kP":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>_nativeSelectDefault.default
);
var _nativeSelect = require("./NativeSelect");
var _nativeSelectDefault = parcelHelpers.interopDefault(_nativeSelect);

},{"./NativeSelect":"f32Br","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"f32Br":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "styles", ()=>styles
);
var _extends = require("@babel/runtime/helpers/esm/extends");
var _extendsDefault = parcelHelpers.interopDefault(_extends);
var _objectWithoutProperties = require("@babel/runtime/helpers/esm/objectWithoutProperties");
var _objectWithoutPropertiesDefault = parcelHelpers.interopDefault(_objectWithoutProperties);
var _react = require("react");
var _propTypes = require("prop-types");
var _propTypesDefault = parcelHelpers.interopDefault(_propTypes);
var _nativeSelectInput = require("./NativeSelectInput");
var _nativeSelectInputDefault = parcelHelpers.interopDefault(_nativeSelectInput);
var _withStyles = require("../styles/withStyles");
var _withStylesDefault = parcelHelpers.interopDefault(_withStyles);
var _formControlState = require("../FormControl/formControlState");
var _formControlStateDefault = parcelHelpers.interopDefault(_formControlState);
var _useFormControl = require("../FormControl/useFormControl");
var _useFormControlDefault = parcelHelpers.interopDefault(_useFormControl);
var _arrowDropDown = require("../internal/svg-icons/ArrowDropDown");
var _arrowDropDownDefault = parcelHelpers.interopDefault(_arrowDropDown);
var _input = require("../Input");
var _inputDefault = parcelHelpers.interopDefault(_input);
var styles = function styles(theme) {
    return {
        /* Styles applied to the select component `root` class. */ root: {},
        /* Styles applied to the select component `select` class. */ select: {
            '-moz-appearance': 'none',
            // Reset
            '-webkit-appearance': 'none',
            // Reset
            // When interacting quickly, the text can end up selected.
            // Native select can't be selected either.
            userSelect: 'none',
            borderRadius: 0,
            // Reset
            minWidth: 16,
            // So it doesn't collapse.
            cursor: 'pointer',
            '&:focus': {
                // Show that it's not an text input
                backgroundColor: theme.palette.type === 'light' ? 'rgba(0, 0, 0, 0.05)' : 'rgba(255, 255, 255, 0.05)',
                borderRadius: 0 // Reset Chrome style
            },
            // Remove IE 11 arrow
            '&::-ms-expand': {
                display: 'none'
            },
            '&$disabled': {
                cursor: 'default'
            },
            '&[multiple]': {
                height: 'auto'
            },
            '&:not([multiple]) option, &:not([multiple]) optgroup': {
                backgroundColor: theme.palette.background.paper
            },
            '&&': {
                paddingRight: 24
            }
        },
        /* Styles applied to the select component if `variant="filled"`. */ filled: {
            '&&': {
                paddingRight: 32
            }
        },
        /* Styles applied to the select component if `variant="outlined"`. */ outlined: {
            borderRadius: theme.shape.borderRadius,
            '&&': {
                paddingRight: 32
            }
        },
        /* Styles applied to the select component `selectMenu` class. */ selectMenu: {
            height: 'auto',
            // Resets for multpile select with chips
            minHeight: '1.1876em',
            // Required for select\text-field height consistency
            textOverflow: 'ellipsis',
            whiteSpace: 'nowrap',
            overflow: 'hidden'
        },
        /* Pseudo-class applied to the select component `disabled` class. */ disabled: {},
        /* Styles applied to the icon component. */ icon: {
            // We use a position absolute over a flexbox in order to forward the pointer events
            // to the input and to support wrapping tags..
            position: 'absolute',
            right: 0,
            top: 'calc(50% - 12px)',
            // Center vertically
            pointerEvents: 'none',
            // Don't block pointer events on the select under the icon.
            color: theme.palette.action.active,
            '&$disabled': {
                color: theme.palette.action.disabled
            }
        },
        /* Styles applied to the icon component if the popup is open. */ iconOpen: {
            transform: 'rotate(180deg)'
        },
        /* Styles applied to the icon component if `variant="filled"`. */ iconFilled: {
            right: 7
        },
        /* Styles applied to the icon component if `variant="outlined"`. */ iconOutlined: {
            right: 7
        },
        /* Styles applied to the underlying native input component. */ nativeInput: {
            bottom: 0,
            left: 0,
            position: 'absolute',
            opacity: 0,
            pointerEvents: 'none',
            width: '100%'
        }
    };
};
var defaultInput = /*#__PURE__*/ _react.createElement(_inputDefault.default, null);
/**
 * An alternative to `<Select native />` with a much smaller bundle size footprint.
 */ var NativeSelect = /*#__PURE__*/ _react.forwardRef(function NativeSelect(props, ref) {
    var children = props.children, classes = props.classes, _props$IconComponent = props.IconComponent, IconComponent = _props$IconComponent === void 0 ? _arrowDropDownDefault.default : _props$IconComponent, _props$input = props.input, input = _props$input === void 0 ? defaultInput : _props$input, inputProps = props.inputProps, variant = props.variant, other = _objectWithoutPropertiesDefault.default(props, [
        "children",
        "classes",
        "IconComponent",
        "input",
        "inputProps",
        "variant"
    ]);
    var muiFormControl = _useFormControlDefault.default();
    var fcs = _formControlStateDefault.default({
        props: props,
        muiFormControl: muiFormControl,
        states: [
            'variant'
        ]
    });
    return /*#__PURE__*/ _react.cloneElement(input, _extendsDefault.default({
        // Most of the logic is implemented in `NativeSelectInput`.
        // The `Select` component is a simple API wrapper to expose something better to play with.
        inputComponent: _nativeSelectInputDefault.default,
        inputProps: _extendsDefault.default({
            children: children,
            classes: classes,
            IconComponent: IconComponent,
            variant: fcs.variant,
            type: undefined
        }, inputProps, input ? input.props.inputProps : {}),
        ref: ref
    }, other));
});
NativeSelect.propTypes = {
    // ----------------------------- Warning --------------------------------
    // | These PropTypes are generated from the TypeScript type definitions |
    // |     To update them edit the d.ts file and run "yarn proptypes"     |
    // ----------------------------------------------------------------------
    /**
   * The option elements to populate the select with.
   * Can be some `<option>` elements.
   */ children: _propTypesDefault.default.node,
    /**
   * Override or extend the styles applied to the component.
   * See [CSS API](#css) below for more details.
   */ classes: _propTypesDefault.default.object,
    /**
   * The icon that displays the arrow.
   */ IconComponent: _propTypesDefault.default.elementType,
    /**
   * An `Input` element; does not have to be a material-ui specific `Input`.
   */ input: _propTypesDefault.default.element,
    /**
   * Attributes applied to the `select` element.
   */ inputProps: _propTypesDefault.default.object,
    /**
   * Callback function fired when a menu item is selected.
   *
   * @param {object} event The event source of the callback.
   * You can pull out the new value by accessing `event.target.value` (string).
   */ onChange: _propTypesDefault.default.func,
    /**
   * The input value. The DOM API casts this to a string.
   */ value: _propTypesDefault.default.any,
    /**
   * The variant to use.
   */ variant: _propTypesDefault.default.oneOf([
        'filled',
        'outlined',
        'standard'
    ])
};
NativeSelect.muiName = 'Select';
exports.default = _withStylesDefault.default(styles, {
    name: 'MuiNativeSelect'
})(NativeSelect);

},{"@babel/runtime/helpers/esm/extends":"fTBFS","@babel/runtime/helpers/esm/objectWithoutProperties":"25tJ4","react":"21dqq","prop-types":"7wKI2","./NativeSelectInput":"5ZzuK","../styles/withStyles":"7U0iM","../FormControl/formControlState":"dZti6","../FormControl/useFormControl":"eKmPJ","../internal/svg-icons/ArrowDropDown":"e9OoL","../Input":"41TRI","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"5ZzuK":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _extends = require("@babel/runtime/helpers/esm/extends");
var _extendsDefault = parcelHelpers.interopDefault(_extends);
var _objectWithoutProperties = require("@babel/runtime/helpers/esm/objectWithoutProperties");
var _objectWithoutPropertiesDefault = parcelHelpers.interopDefault(_objectWithoutProperties);
var _react = require("react");
var _propTypes = require("prop-types");
var _propTypesDefault = parcelHelpers.interopDefault(_propTypes);
var _clsx = require("clsx");
var _clsxDefault = parcelHelpers.interopDefault(_clsx);
var _utils = require("@material-ui/utils");
var _capitalize = require("../utils/capitalize");
var _capitalizeDefault = parcelHelpers.interopDefault(_capitalize);
/**
 * @ignore - internal component.
 */ var NativeSelectInput = /*#__PURE__*/ _react.forwardRef(function NativeSelectInput(props, ref) {
    var classes = props.classes, className = props.className, disabled = props.disabled, IconComponent = props.IconComponent, inputRef = props.inputRef, _props$variant = props.variant, variant = _props$variant === void 0 ? 'standard' : _props$variant, other = _objectWithoutPropertiesDefault.default(props, [
        "classes",
        "className",
        "disabled",
        "IconComponent",
        "inputRef",
        "variant"
    ]);
    return /*#__PURE__*/ _react.createElement(_react.Fragment, null, /*#__PURE__*/ _react.createElement("select", _extendsDefault.default({
        className: _clsxDefault.default(classes.root, classes.select, classes[variant], className, disabled && classes.disabled),
        disabled: disabled,
        ref: inputRef || ref
    }, other)), props.multiple ? null : /*#__PURE__*/ _react.createElement(IconComponent, {
        className: _clsxDefault.default(classes.icon, classes["icon".concat(_capitalizeDefault.default(variant))], disabled && classes.disabled)
    }));
});
NativeSelectInput.propTypes = {
    /**
   * The option elements to populate the select with.
   * Can be some `<option>` elements.
   */ children: _propTypesDefault.default.node,
    /**
   * Override or extend the styles applied to the component.
   * See [CSS API](#css) below for more details.
   */ classes: _propTypesDefault.default.object.isRequired,
    /**
   * The CSS class name of the select element.
   */ className: _propTypesDefault.default.string,
    /**
   * If `true`, the select will be disabled.
   */ disabled: _propTypesDefault.default.bool,
    /**
   * The icon that displays the arrow.
   */ IconComponent: _propTypesDefault.default.elementType.isRequired,
    /**
   * Use that prop to pass a ref to the native select element.
   * @deprecated
   */ inputRef: _utils.refType,
    /**
   * @ignore
   */ multiple: _propTypesDefault.default.bool,
    /**
   * Name attribute of the `select` or hidden `input` element.
   */ name: _propTypesDefault.default.string,
    /**
   * Callback function fired when a menu item is selected.
   *
   * @param {object} event The event source of the callback.
   * You can pull out the new value by accessing `event.target.value` (string).
   */ onChange: _propTypesDefault.default.func,
    /**
   * The input value.
   */ value: _propTypesDefault.default.any,
    /**
   * The variant to use.
   */ variant: _propTypesDefault.default.oneOf([
        'standard',
        'outlined',
        'filled'
    ])
};
exports.default = NativeSelectInput;

},{"@babel/runtime/helpers/esm/extends":"fTBFS","@babel/runtime/helpers/esm/objectWithoutProperties":"25tJ4","react":"21dqq","prop-types":"7wKI2","clsx":"83C22","@material-ui/utils":"54RkF","../utils/capitalize":"5AJVX","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"e9OoL":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _react = require("react");
var _createSvgIcon = require("../../utils/createSvgIcon");
var _createSvgIconDefault = parcelHelpers.interopDefault(_createSvgIcon);
/**
 * @ignore - internal component.
 */ exports.default = _createSvgIconDefault.default(/*#__PURE__*/ _react.createElement("path", {
    d: "M7 10l5 5 5-5z"
}), 'ArrowDropDown');

},{"react":"21dqq","../../utils/createSvgIcon":"lVBTd","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"yMfCC":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>_noSsrDefault.default
);
var _noSsr = require("./NoSsr");
var _noSsrDefault = parcelHelpers.interopDefault(_noSsr);

},{"./NoSsr":"5I0lt","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"5I0lt":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _react = require("react");
var _propTypes = require("prop-types");
var _propTypesDefault = parcelHelpers.interopDefault(_propTypes);
var _utils = require("@material-ui/utils");
var useEnhancedEffect = typeof window !== 'undefined' && true ? _react.useLayoutEffect : _react.useEffect;
/**
 * NoSsr purposely removes components from the subject of Server Side Rendering (SSR).
 *
 * This component can be useful in a variety of situations:
 * - Escape hatch for broken dependencies not supporting SSR.
 * - Improve the time-to-first paint on the client by only rendering above the fold.
 * - Reduce the rendering time on the server.
 * - Under too heavy server load, you can turn on service degradation.
 */ function NoSsr(props) {
    var children = props.children, _props$defer = props.defer, defer = _props$defer === void 0 ? false : _props$defer, _props$fallback = props.fallback, fallback = _props$fallback === void 0 ? null : _props$fallback;
    var _React$useState = _react.useState(false), mountedState = _React$useState[0], setMountedState = _React$useState[1];
    useEnhancedEffect(function() {
        if (!defer) setMountedState(true);
    }, [
        defer
    ]);
    _react.useEffect(function() {
        if (defer) setMountedState(true);
    }, [
        defer
    ]); // We need the Fragment here to force react-docgen to recognise NoSsr as a component.
    return /*#__PURE__*/ _react.createElement(_react.Fragment, null, mountedState ? children : fallback);
}
NoSsr.propTypes = {
    // ----------------------------- Warning --------------------------------
    // | These PropTypes are generated from the TypeScript type definitions |
    // |     To update them edit the d.ts file and run "yarn proptypes"     |
    // ----------------------------------------------------------------------
    /**
   * You can wrap a node.
   */ children: _propTypesDefault.default.node,
    /**
   * If `true`, the component will not only prevent server-side rendering.
   * It will also defer the rendering of the children into a different screen frame.
   */ defer: _propTypesDefault.default.bool,
    /**
   * The fallback content to display.
   */ fallback: _propTypesDefault.default.node
};
// eslint-disable-next-line
NoSsr["propTypes"] = _utils.exactProp(NoSsr.propTypes);
exports.default = NoSsr;

},{"react":"21dqq","prop-types":"7wKI2","@material-ui/utils":"54RkF","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"kLI7K":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>_outlinedInputDefault.default
);
var _outlinedInput = require("./OutlinedInput");
var _outlinedInputDefault = parcelHelpers.interopDefault(_outlinedInput);

},{"./OutlinedInput":"iql1m","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"iql1m":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "styles", ()=>styles
);
var _extends = require("@babel/runtime/helpers/esm/extends");
var _extendsDefault = parcelHelpers.interopDefault(_extends);
var _objectWithoutProperties = require("@babel/runtime/helpers/esm/objectWithoutProperties");
var _objectWithoutPropertiesDefault = parcelHelpers.interopDefault(_objectWithoutProperties);
var _react = require("react");
var _propTypes = require("prop-types");
var _propTypesDefault = parcelHelpers.interopDefault(_propTypes);
var _clsx = require("clsx");
var _clsxDefault = parcelHelpers.interopDefault(_clsx);
var _utils = require("@material-ui/utils");
var _inputBase = require("../InputBase");
var _inputBaseDefault = parcelHelpers.interopDefault(_inputBase);
var _notchedOutline = require("./NotchedOutline");
var _notchedOutlineDefault = parcelHelpers.interopDefault(_notchedOutline);
var _withStyles = require("../styles/withStyles");
var _withStylesDefault = parcelHelpers.interopDefault(_withStyles);
var styles = function styles(theme) {
    var borderColor = theme.palette.type === 'light' ? 'rgba(0, 0, 0, 0.23)' : 'rgba(255, 255, 255, 0.23)';
    return {
        /* Styles applied to the root element. */ root: {
            position: 'relative',
            borderRadius: theme.shape.borderRadius,
            '&:hover $notchedOutline': {
                borderColor: theme.palette.text.primary
            },
            // Reset on touch devices, it doesn't add specificity
            '@media (hover: none)': {
                '&:hover $notchedOutline': {
                    borderColor: borderColor
                }
            },
            '&$focused $notchedOutline': {
                borderColor: theme.palette.primary.main,
                borderWidth: 2
            },
            '&$error $notchedOutline': {
                borderColor: theme.palette.error.main
            },
            '&$disabled $notchedOutline': {
                borderColor: theme.palette.action.disabled
            }
        },
        /* Styles applied to the root element if the color is secondary. */ colorSecondary: {
            '&$focused $notchedOutline': {
                borderColor: theme.palette.secondary.main
            }
        },
        /* Styles applied to the root element if the component is focused. */ focused: {},
        /* Styles applied to the root element if `disabled={true}`. */ disabled: {},
        /* Styles applied to the root element if `startAdornment` is provided. */ adornedStart: {
            paddingLeft: 14
        },
        /* Styles applied to the root element if `endAdornment` is provided. */ adornedEnd: {
            paddingRight: 14
        },
        /* Pseudo-class applied to the root element if `error={true}`. */ error: {},
        /* Styles applied to the `input` element if `margin="dense"`. */ marginDense: {},
        /* Styles applied to the root element if `multiline={true}`. */ multiline: {
            padding: '18.5px 14px',
            '&$marginDense': {
                paddingTop: 10.5,
                paddingBottom: 10.5
            }
        },
        /* Styles applied to the `NotchedOutline` element. */ notchedOutline: {
            borderColor: borderColor
        },
        /* Styles applied to the `input` element. */ input: {
            padding: '18.5px 14px',
            '&:-webkit-autofill': {
                WebkitBoxShadow: theme.palette.type === 'light' ? null : '0 0 0 100px #266798 inset',
                WebkitTextFillColor: theme.palette.type === 'light' ? null : '#fff',
                caretColor: theme.palette.type === 'light' ? null : '#fff',
                borderRadius: 'inherit'
            }
        },
        /* Styles applied to the `input` element if `margin="dense"`. */ inputMarginDense: {
            paddingTop: 10.5,
            paddingBottom: 10.5
        },
        /* Styles applied to the `input` element if `multiline={true}`. */ inputMultiline: {
            padding: 0
        },
        /* Styles applied to the `input` element if `startAdornment` is provided. */ inputAdornedStart: {
            paddingLeft: 0
        },
        /* Styles applied to the `input` element if `endAdornment` is provided. */ inputAdornedEnd: {
            paddingRight: 0
        }
    };
};
var OutlinedInput = /*#__PURE__*/ _react.forwardRef(function OutlinedInput(props, ref) {
    var classes = props.classes, _props$fullWidth = props.fullWidth, fullWidth = _props$fullWidth === void 0 ? false : _props$fullWidth, _props$inputComponent = props.inputComponent, inputComponent = _props$inputComponent === void 0 ? 'input' : _props$inputComponent, label = props.label, _props$labelWidth = props.labelWidth, labelWidth = _props$labelWidth === void 0 ? 0 : _props$labelWidth, _props$multiline = props.multiline, multiline = _props$multiline === void 0 ? false : _props$multiline, notched = props.notched, _props$type = props.type, type = _props$type === void 0 ? 'text' : _props$type, other = _objectWithoutPropertiesDefault.default(props, [
        "classes",
        "fullWidth",
        "inputComponent",
        "label",
        "labelWidth",
        "multiline",
        "notched",
        "type"
    ]);
    return /*#__PURE__*/ _react.createElement(_inputBaseDefault.default, _extendsDefault.default({
        renderSuffix: function renderSuffix(state) {
            return /*#__PURE__*/ _react.createElement(_notchedOutlineDefault.default, {
                className: classes.notchedOutline,
                label: label,
                labelWidth: labelWidth,
                notched: typeof notched !== 'undefined' ? notched : Boolean(state.startAdornment || state.filled || state.focused)
            });
        },
        classes: _extendsDefault.default({}, classes, {
            root: _clsxDefault.default(classes.root, classes.underline),
            notchedOutline: null
        }),
        fullWidth: fullWidth,
        inputComponent: inputComponent,
        multiline: multiline,
        ref: ref,
        type: type
    }, other));
});
OutlinedInput.propTypes = {
    // ----------------------------- Warning --------------------------------
    // | These PropTypes are generated from the TypeScript type definitions |
    // |     To update them edit the d.ts file and run "yarn proptypes"     |
    // ----------------------------------------------------------------------
    /**
   * This prop helps users to fill forms faster, especially on mobile devices.
   * The name can be confusing, as it's more like an autofill.
   * You can learn more about it [following the specification](https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#autofill).
   */ autoComplete: _propTypesDefault.default.string,
    /**
   * If `true`, the `input` element will be focused during the first mount.
   */ autoFocus: _propTypesDefault.default.bool,
    /**
   * Override or extend the styles applied to the component.
   * See [CSS API](#css) below for more details.
   */ classes: _propTypesDefault.default.object,
    /**
   * The color of the component. It supports those theme colors that make sense for this component.
   */ color: _propTypesDefault.default.oneOf([
        'primary',
        'secondary'
    ]),
    /**
   * The default `input` element value. Use when the component is not controlled.
   */ defaultValue: _propTypesDefault.default.any,
    /**
   * If `true`, the `input` element will be disabled.
   */ disabled: _propTypesDefault.default.bool,
    /**
   * End `InputAdornment` for this component.
   */ endAdornment: _propTypesDefault.default.node,
    /**
   * If `true`, the input will indicate an error. This is normally obtained via context from
   * FormControl.
   */ error: _propTypesDefault.default.bool,
    /**
   * If `true`, the input will take up the full width of its container.
   */ fullWidth: _propTypesDefault.default.bool,
    /**
   * The id of the `input` element.
   */ id: _propTypesDefault.default.string,
    /**
   * The component used for the `input` element.
   * Either a string to use a HTML element or a component.
   */ inputComponent: _propTypesDefault.default.elementType,
    /**
   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.
   */ inputProps: _propTypesDefault.default.object,
    /**
   * Pass a ref to the `input` element.
   */ inputRef: _utils.refType,
    /**
   * The label of the input. It is only used for layout. The actual labelling
   * is handled by `InputLabel`. If specified `labelWidth` is ignored.
   */ label: _propTypesDefault.default.node,
    /**
   * The width of the label. Is ignored if `label` is provided. Prefer `label`
   * if the input label appears with a strike through.
   */ labelWidth: _propTypesDefault.default.number,
    /**
   * If `dense`, will adjust vertical spacing. This is normally obtained via context from
   * FormControl.
   */ margin: _propTypesDefault.default.oneOf([
        'dense',
        'none'
    ]),
    /**
   * Maximum number of rows to display when multiline option is set to true.
   */ maxRows: _propTypesDefault.default.oneOfType([
        _propTypesDefault.default.number,
        _propTypesDefault.default.string
    ]),
    /**
   * If `true`, a textarea element will be rendered.
   */ multiline: _propTypesDefault.default.bool,
    /**
   * Name attribute of the `input` element.
   */ name: _propTypesDefault.default.string,
    /**
   * If `true`, the outline is notched to accommodate the label.
   */ notched: _propTypesDefault.default.bool,
    /**
   * Callback fired when the value is changed.
   *
   * @param {object} event The event source of the callback.
   * You can pull out the new value by accessing `event.target.value` (string).
   */ onChange: _propTypesDefault.default.func,
    /**
   * The short hint displayed in the input before the user enters a value.
   */ placeholder: _propTypesDefault.default.string,
    /**
   * It prevents the user from changing the value of the field
   * (not from interacting with the field).
   */ readOnly: _propTypesDefault.default.bool,
    /**
   * If `true`, the `input` element will be required.
   */ required: _propTypesDefault.default.bool,
    /**
   * Number of rows to display when multiline option is set to true.
   */ rows: _propTypesDefault.default.oneOfType([
        _propTypesDefault.default.number,
        _propTypesDefault.default.string
    ]),
    /**
   * Start `InputAdornment` for this component.
   */ startAdornment: _propTypesDefault.default.node,
    /**
   * Type of the `input` element. It should be [a valid HTML5 input type](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Form_%3Cinput%3E_types).
   */ type: _propTypesDefault.default.string,
    /**
   * The value of the `input` element, required for a controlled component.
   */ value: _propTypesDefault.default.any
};
OutlinedInput.muiName = 'Input';
exports.default = _withStylesDefault.default(styles, {
    name: 'MuiOutlinedInput'
})(OutlinedInput);

},{"@babel/runtime/helpers/esm/extends":"fTBFS","@babel/runtime/helpers/esm/objectWithoutProperties":"25tJ4","react":"21dqq","prop-types":"7wKI2","clsx":"83C22","@material-ui/utils":"54RkF","../InputBase":"4MrXd","./NotchedOutline":"eZA8N","../styles/withStyles":"7U0iM","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"eZA8N":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "styles", ()=>styles
);
var _defineProperty = require("@babel/runtime/helpers/esm/defineProperty");
var _definePropertyDefault = parcelHelpers.interopDefault(_defineProperty);
var _extends = require("@babel/runtime/helpers/esm/extends");
var _extendsDefault = parcelHelpers.interopDefault(_extends);
var _objectWithoutProperties = require("@babel/runtime/helpers/esm/objectWithoutProperties");
var _objectWithoutPropertiesDefault = parcelHelpers.interopDefault(_objectWithoutProperties);
var _react = require("react");
var _propTypes = require("prop-types");
var _propTypesDefault = parcelHelpers.interopDefault(_propTypes);
var _clsx = require("clsx");
var _clsxDefault = parcelHelpers.interopDefault(_clsx);
var _withStyles = require("../styles/withStyles");
var _withStylesDefault = parcelHelpers.interopDefault(_withStyles);
var _useTheme = require("../styles/useTheme");
var _useThemeDefault = parcelHelpers.interopDefault(_useTheme);
var _capitalize = require("../utils/capitalize");
var _capitalizeDefault = parcelHelpers.interopDefault(_capitalize);
var styles = function styles(theme) {
    return {
        /* Styles applied to the root element. */ root: {
            position: 'absolute',
            bottom: 0,
            right: 0,
            top: -5,
            left: 0,
            margin: 0,
            padding: '0 8px',
            pointerEvents: 'none',
            borderRadius: 'inherit',
            borderStyle: 'solid',
            borderWidth: 1,
            overflow: 'hidden'
        },
        /* Styles applied to the legend element when `labelWidth` is provided. */ legend: {
            textAlign: 'left',
            padding: 0,
            lineHeight: '11px',
            // sync with `height` in `legend` styles
            transition: theme.transitions.create('width', {
                duration: 150,
                easing: theme.transitions.easing.easeOut
            })
        },
        /* Styles applied to the legend element. */ legendLabelled: {
            display: 'block',
            width: 'auto',
            textAlign: 'left',
            padding: 0,
            height: 11,
            // sync with `lineHeight` in `legend` styles
            fontSize: '0.75em',
            visibility: 'hidden',
            maxWidth: 0.01,
            transition: theme.transitions.create('max-width', {
                duration: 50,
                easing: theme.transitions.easing.easeOut
            }),
            '& > span': {
                paddingLeft: 5,
                paddingRight: 5,
                display: 'inline-block'
            }
        },
        /* Styles applied to the legend element is notched. */ legendNotched: {
            maxWidth: 1000,
            transition: theme.transitions.create('max-width', {
                duration: 100,
                easing: theme.transitions.easing.easeOut,
                delay: 50
            })
        }
    };
};
/**
 * @ignore - internal component.
 */ var NotchedOutline = /*#__PURE__*/ _react.forwardRef(function NotchedOutline(props, ref) {
    var children = props.children, classes = props.classes, className = props.className, label = props.label, labelWidthProp = props.labelWidth, notched = props.notched, style = props.style, other = _objectWithoutPropertiesDefault.default(props, [
        "children",
        "classes",
        "className",
        "label",
        "labelWidth",
        "notched",
        "style"
    ]);
    var theme = _useThemeDefault.default();
    var align = theme.direction === 'rtl' ? 'right' : 'left';
    if (label !== undefined) return /*#__PURE__*/ _react.createElement("fieldset", _extendsDefault.default({
        "aria-hidden": true,
        className: _clsxDefault.default(classes.root, className),
        ref: ref,
        style: style
    }, other), /*#__PURE__*/ _react.createElement("legend", {
        className: _clsxDefault.default(classes.legendLabelled, notched && classes.legendNotched)
    }, label ? /*#__PURE__*/ _react.createElement("span", null, label) : /*#__PURE__*/ _react.createElement("span", {
        dangerouslySetInnerHTML: {
            __html: '&#8203;'
        }
    })));
    var labelWidth = labelWidthProp > 0 ? labelWidthProp * 0.75 + 8 : 0.01;
    return /*#__PURE__*/ _react.createElement("fieldset", _extendsDefault.default({
        "aria-hidden": true,
        style: _extendsDefault.default(_definePropertyDefault.default({}, "padding".concat(_capitalizeDefault.default(align)), 8), style),
        className: _clsxDefault.default(classes.root, className),
        ref: ref
    }, other), /*#__PURE__*/ _react.createElement("legend", {
        className: classes.legend,
        style: {
            // IE 11: fieldset with legend does not render
            // a border radius. This maintains consistency
            // by always having a legend rendered
            width: notched ? labelWidth : 0.01
        }
    }, /*#__PURE__*/ _react.createElement("span", {
        dangerouslySetInnerHTML: {
            __html: '&#8203;'
        }
    })));
});
NotchedOutline.propTypes = {
    /**
   * The content of the component.
   */ children: _propTypesDefault.default.node,
    /**
   * Override or extend the styles applied to the component.
   * See [CSS API](#css) below for more details.
   */ classes: _propTypesDefault.default.object,
    /**
   * @ignore
   */ className: _propTypesDefault.default.string,
    /**
   * The label.
   */ label: _propTypesDefault.default.node,
    /**
   * The width of the label.
   */ labelWidth: _propTypesDefault.default.number.isRequired,
    /**
   * If `true`, the outline is notched to accommodate the label.
   */ notched: _propTypesDefault.default.bool.isRequired,
    /**
   * @ignore
   */ style: _propTypesDefault.default.object
};
exports.default = _withStylesDefault.default(styles, {
    name: 'PrivateNotchedOutline'
})(NotchedOutline);

},{"@babel/runtime/helpers/esm/defineProperty":"hbmCA","@babel/runtime/helpers/esm/extends":"fTBFS","@babel/runtime/helpers/esm/objectWithoutProperties":"25tJ4","react":"21dqq","prop-types":"7wKI2","clsx":"83C22","../styles/withStyles":"7U0iM","../styles/useTheme":"kWUCn","../utils/capitalize":"5AJVX","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"6FXHT":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>_popperDefault.default
);
var _popper = require("./Popper");
var _popperDefault = parcelHelpers.interopDefault(_popper);

},{"./Popper":"hhrxF","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"hhrxF":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _extends = require("@babel/runtime/helpers/esm/extends");
var _extendsDefault = parcelHelpers.interopDefault(_extends);
var _objectWithoutProperties = require("@babel/runtime/helpers/esm/objectWithoutProperties");
var _objectWithoutPropertiesDefault = parcelHelpers.interopDefault(_objectWithoutProperties);
var _react = require("react");
var _propTypes = require("prop-types");
var _propTypesDefault = parcelHelpers.interopDefault(_propTypes);
var _popperJs = require("popper.js");
var _popperJsDefault = parcelHelpers.interopDefault(_popperJs);
var _utils = require("@material-ui/utils");
var _styles = require("@material-ui/styles");
var _portal = require("../Portal");
var _portalDefault = parcelHelpers.interopDefault(_portal);
var _createChainedFunction = require("../utils/createChainedFunction");
var _createChainedFunctionDefault = parcelHelpers.interopDefault(_createChainedFunction);
var _setRef = require("../utils/setRef");
var _setRefDefault = parcelHelpers.interopDefault(_setRef);
var _useForkRef = require("../utils/useForkRef");
var _useForkRefDefault = parcelHelpers.interopDefault(_useForkRef);
function flipPlacement(placement, theme) {
    var direction = theme && theme.direction || 'ltr';
    if (direction === 'ltr') return placement;
    switch(placement){
        case 'bottom-end':
            return 'bottom-start';
        case 'bottom-start':
            return 'bottom-end';
        case 'top-end':
            return 'top-start';
        case 'top-start':
            return 'top-end';
        default:
            return placement;
    }
}
function getAnchorEl(anchorEl) {
    return typeof anchorEl === 'function' ? anchorEl() : anchorEl;
}
var useEnhancedEffect = typeof window !== 'undefined' ? _react.useLayoutEffect : _react.useEffect;
var defaultPopperOptions = {};
/**
 * Poppers rely on the 3rd party library [Popper.js](https://popper.js.org/docs/v1/) for positioning.
 */ var Popper = /*#__PURE__*/ _react.forwardRef(function Popper(props, ref) {
    var anchorEl = props.anchorEl, children = props.children, container = props.container, _props$disablePortal = props.disablePortal, disablePortal = _props$disablePortal === void 0 ? false : _props$disablePortal, _props$keepMounted = props.keepMounted, keepMounted = _props$keepMounted === void 0 ? false : _props$keepMounted, modifiers = props.modifiers, open = props.open, _props$placement = props.placement, initialPlacement = _props$placement === void 0 ? 'bottom' : _props$placement, _props$popperOptions = props.popperOptions, popperOptions = _props$popperOptions === void 0 ? defaultPopperOptions : _props$popperOptions, popperRefProp = props.popperRef, style = props.style, _props$transition = props.transition, transition = _props$transition === void 0 ? false : _props$transition, other = _objectWithoutPropertiesDefault.default(props, [
        "anchorEl",
        "children",
        "container",
        "disablePortal",
        "keepMounted",
        "modifiers",
        "open",
        "placement",
        "popperOptions",
        "popperRef",
        "style",
        "transition"
    ]);
    var tooltipRef = _react.useRef(null);
    var ownRef = _useForkRefDefault.default(tooltipRef, ref);
    var popperRef = _react.useRef(null);
    var handlePopperRef = _useForkRefDefault.default(popperRef, popperRefProp);
    var handlePopperRefRef = _react.useRef(handlePopperRef);
    useEnhancedEffect(function() {
        handlePopperRefRef.current = handlePopperRef;
    }, [
        handlePopperRef
    ]);
    _react.useImperativeHandle(popperRefProp, function() {
        return popperRef.current;
    }, []);
    var _React$useState = _react.useState(true), exited = _React$useState[0], setExited = _React$useState[1];
    var theme = _styles.useTheme();
    var rtlPlacement = flipPlacement(initialPlacement, theme);
    /**
   * placement initialized from prop but can change during lifetime if modifiers.flip.
   * modifiers.flip is essentially a flip for controlled/uncontrolled behavior
   */ var _React$useState2 = _react.useState(rtlPlacement), placement = _React$useState2[0], setPlacement = _React$useState2[1];
    _react.useEffect(function() {
        if (popperRef.current) popperRef.current.update();
    });
    var handleOpen = _react.useCallback(function() {
        if (!tooltipRef.current || !anchorEl || !open) return;
        if (popperRef.current) {
            popperRef.current.destroy();
            handlePopperRefRef.current(null);
        }
        var handlePopperUpdate = function handlePopperUpdate(data) {
            setPlacement(data.placement);
        };
        var resolvedAnchorEl = getAnchorEl(anchorEl);
        if (resolvedAnchorEl && resolvedAnchorEl.nodeType === 1) {
            var box = resolvedAnchorEl.getBoundingClientRect();
            if (box.top === 0 && box.left === 0 && box.right === 0 && box.bottom === 0) console.warn([
                'Material-UI: The `anchorEl` prop provided to the component is invalid.',
                'The anchor element should be part of the document layout.',
                "Make sure the element is present in the document or that it's not display none."
            ].join('\n'));
        }
        var popper = new _popperJsDefault.default(getAnchorEl(anchorEl), tooltipRef.current, _extendsDefault.default({
            placement: rtlPlacement
        }, popperOptions, {
            modifiers: _extendsDefault.default({}, disablePortal ? {} : {
                // It's using scrollParent by default, we can use the viewport when using a portal.
                preventOverflow: {
                    boundariesElement: 'window'
                }
            }, modifiers, popperOptions.modifiers),
            // We could have been using a custom modifier like react-popper is doing.
            // But it seems this is the best public API for this use case.
            onCreate: _createChainedFunctionDefault.default(handlePopperUpdate, popperOptions.onCreate),
            onUpdate: _createChainedFunctionDefault.default(handlePopperUpdate, popperOptions.onUpdate)
        }));
        handlePopperRefRef.current(popper);
    }, [
        anchorEl,
        disablePortal,
        modifiers,
        open,
        rtlPlacement,
        popperOptions
    ]);
    var handleRef = _react.useCallback(function(node) {
        _setRefDefault.default(ownRef, node);
        handleOpen();
    }, [
        ownRef,
        handleOpen
    ]);
    var handleEnter = function handleEnter() {
        setExited(false);
    };
    var handleClose = function handleClose() {
        if (!popperRef.current) return;
        popperRef.current.destroy();
        handlePopperRefRef.current(null);
    };
    var handleExited = function handleExited() {
        setExited(true);
        handleClose();
    };
    _react.useEffect(function() {
        return function() {
            handleClose();
        };
    }, []);
    _react.useEffect(function() {
        if (!open && !transition) // Otherwise handleExited will call this.
        handleClose();
    }, [
        open,
        transition
    ]);
    if (!keepMounted && !open && (!transition || exited)) return null;
    var childProps = {
        placement: placement
    };
    if (transition) childProps.TransitionProps = {
        in: open,
        onEnter: handleEnter,
        onExited: handleExited
    };
    return /*#__PURE__*/ _react.createElement(_portalDefault.default, {
        disablePortal: disablePortal,
        container: container
    }, /*#__PURE__*/ _react.createElement("div", _extendsDefault.default({
        ref: handleRef,
        role: "tooltip"
    }, other, {
        style: _extendsDefault.default({
            // Prevents scroll issue, waiting for Popper.js to add this style once initiated.
            position: 'fixed',
            // Fix Popper.js display issue
            top: 0,
            left: 0,
            display: !open && keepMounted && !transition ? 'none' : null
        }, style)
    }), typeof children === 'function' ? children(childProps) : children));
});
Popper.propTypes = {
    // ----------------------------- Warning --------------------------------
    // | These PropTypes are generated from the TypeScript type definitions |
    // |     To update them edit the d.ts file and run "yarn proptypes"     |
    // ----------------------------------------------------------------------
    /**
   * A HTML element, [referenceObject](https://popper.js.org/docs/v1/#referenceObject),
   * or a function that returns either.
   * It's used to set the position of the popper.
   * The return value will passed as the reference object of the Popper instance.
   */ anchorEl: _utils.chainPropTypes(_propTypesDefault.default.oneOfType([
        _utils.HTMLElementType,
        _propTypesDefault.default.object,
        _propTypesDefault.default.func
    ]), function(props) {
        if (props.open) {
            var resolvedAnchorEl = getAnchorEl(props.anchorEl);
            if (resolvedAnchorEl && resolvedAnchorEl.nodeType === 1) {
                var box = resolvedAnchorEl.getBoundingClientRect();
                if (box.top === 0 && box.left === 0 && box.right === 0 && box.bottom === 0) return new Error([
                    'Material-UI: The `anchorEl` prop provided to the component is invalid.',
                    'The anchor element should be part of the document layout.',
                    "Make sure the element is present in the document or that it's not display none."
                ].join('\n'));
            } else if (!resolvedAnchorEl || typeof resolvedAnchorEl.clientWidth !== 'number' || typeof resolvedAnchorEl.clientHeight !== 'number' || typeof resolvedAnchorEl.getBoundingClientRect !== 'function') return new Error([
                'Material-UI: The `anchorEl` prop provided to the component is invalid.',
                'It should be an HTML element instance or a referenceObject ',
                '(https://popper.js.org/docs/v1/#referenceObject).'
            ].join('\n'));
        }
        return null;
    }),
    /**
   * Popper render function or node.
   */ children: _propTypesDefault.default/* @typescript-to-proptypes-ignore */ .oneOfType([
        _propTypesDefault.default.node,
        _propTypesDefault.default.func
    ]).isRequired,
    /**
   * A HTML element, component instance, or function that returns either.
   * The `container` will have the portal children appended to it.
   *
   * By default, it uses the body of the top-level document object,
   * so it's simply `document.body` most of the time.
   */ container: _propTypesDefault.default/* @typescript-to-proptypes-ignore */ .oneOfType([
        _utils.HTMLElementType,
        _propTypesDefault.default.instanceOf(_react.Component),
        _propTypesDefault.default.func
    ]),
    /**
   * Disable the portal behavior.
   * The children stay within it's parent DOM hierarchy.
   */ disablePortal: _propTypesDefault.default.bool,
    /**
   * Always keep the children in the DOM.
   * This prop can be useful in SEO situation or
   * when you want to maximize the responsiveness of the Popper.
   */ keepMounted: _propTypesDefault.default.bool,
    /**
   * Popper.js is based on a "plugin-like" architecture,
   * most of its features are fully encapsulated "modifiers".
   *
   * A modifier is a function that is called each time Popper.js needs to
   * compute the position of the popper.
   * For this reason, modifiers should be very performant to avoid bottlenecks.
   * To learn how to create a modifier, [read the modifiers documentation](https://popper.js.org/docs/v1/#modifiers).
   */ modifiers: _propTypesDefault.default.object,
    /**
   * If `true`, the popper is visible.
   */ open: _propTypesDefault.default.bool.isRequired,
    /**
   * Popper placement.
   */ placement: _propTypesDefault.default.oneOf([
        'bottom-end',
        'bottom-start',
        'bottom',
        'left-end',
        'left-start',
        'left',
        'right-end',
        'right-start',
        'right',
        'top-end',
        'top-start',
        'top'
    ]),
    /**
   * Options provided to the [`popper.js`](https://popper.js.org/docs/v1/) instance.
   */ popperOptions: _propTypesDefault.default.object,
    /**
   * A ref that points to the used popper instance.
   */ popperRef: _utils.refType,
    /**
   * @ignore
   */ style: _propTypesDefault.default.object,
    /**
   * Help supporting a react-transition-group/Transition component.
   */ transition: _propTypesDefault.default.bool
};
exports.default = Popper;

},{"@babel/runtime/helpers/esm/extends":"fTBFS","@babel/runtime/helpers/esm/objectWithoutProperties":"25tJ4","react":"21dqq","prop-types":"7wKI2","popper.js":"dj939","@material-ui/utils":"54RkF","@material-ui/styles":"1TOv0","../Portal":"dBY21","../utils/createChainedFunction":"BNP7Q","../utils/setRef":"6f9nb","../utils/useForkRef":"kUpGa","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"dj939":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var global = arguments[3];
/**!
 * @fileOverview Kickass library to create and place poppers near their reference elements.
 * @version 1.16.1-lts
 * @license
 * Copyright (c) 2016 Federico Zivolo and contributors
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */ var isBrowser = typeof window !== 'undefined' && typeof document !== 'undefined' && typeof navigator !== 'undefined';
var timeoutDuration = function() {
    var longerTimeoutBrowsers = [
        'Edge',
        'Trident',
        'Firefox'
    ];
    for(var i = 0; i < longerTimeoutBrowsers.length; i += 1){
        if (isBrowser && navigator.userAgent.indexOf(longerTimeoutBrowsers[i]) >= 0) return 1;
    }
    return 0;
}();
function microtaskDebounce(fn) {
    var called = false;
    return function() {
        if (called) return;
        called = true;
        window.Promise.resolve().then(function() {
            called = false;
            fn();
        });
    };
}
function taskDebounce(fn) {
    var scheduled = false;
    return function() {
        if (!scheduled) {
            scheduled = true;
            setTimeout(function() {
                scheduled = false;
                fn();
            }, timeoutDuration);
        }
    };
}
var supportsMicroTasks = isBrowser && window.Promise;
/**
* Create a debounced version of a method, that's asynchronously deferred
* but called in the minimum time possible.
*
* @method
* @memberof Popper.Utils
* @argument {Function} fn
* @returns {Function}
*/ var debounce = supportsMicroTasks ? microtaskDebounce : taskDebounce;
/**
 * Check if the given variable is a function
 * @method
 * @memberof Popper.Utils
 * @argument {Any} functionToCheck - variable to check
 * @returns {Boolean} answer to: is a function?
 */ function isFunction(functionToCheck) {
    var getType = {};
    return functionToCheck && getType.toString.call(functionToCheck) === '[object Function]';
}
/**
 * Get CSS computed property of the given element
 * @method
 * @memberof Popper.Utils
 * @argument {Eement} element
 * @argument {String} property
 */ function getStyleComputedProperty(element, property) {
    if (element.nodeType !== 1) return [];
    // NOTE: 1 DOM access here
    var window = element.ownerDocument.defaultView;
    var css = window.getComputedStyle(element, null);
    return property ? css[property] : css;
}
/**
 * Returns the parentNode or the host of the element
 * @method
 * @memberof Popper.Utils
 * @argument {Element} element
 * @returns {Element} parent
 */ function getParentNode(element) {
    if (element.nodeName === 'HTML') return element;
    return element.parentNode || element.host;
}
/**
 * Returns the scrolling parent of the given element
 * @method
 * @memberof Popper.Utils
 * @argument {Element} element
 * @returns {Element} scroll parent
 */ function getScrollParent(element) {
    // Return body, `getScroll` will take care to get the correct `scrollTop` from it
    if (!element) return document.body;
    switch(element.nodeName){
        case 'HTML':
        case 'BODY':
            return element.ownerDocument.body;
        case '#document':
            return element.body;
    }
    // Firefox want us to check `-x` and `-y` variations as well
    var _getStyleComputedProp = getStyleComputedProperty(element), overflow = _getStyleComputedProp.overflow, overflowX = _getStyleComputedProp.overflowX, overflowY = _getStyleComputedProp.overflowY;
    if (/(auto|scroll|overlay)/.test(overflow + overflowY + overflowX)) return element;
    return getScrollParent(getParentNode(element));
}
/**
 * Returns the reference node of the reference object, or the reference object itself.
 * @method
 * @memberof Popper.Utils
 * @param {Element|Object} reference - the reference element (the popper will be relative to this)
 * @returns {Element} parent
 */ function getReferenceNode(reference) {
    return reference && reference.referenceNode ? reference.referenceNode : reference;
}
var isIE11 = isBrowser && !!(window.MSInputMethodContext && document.documentMode);
var isIE10 = isBrowser && /MSIE 10/.test(navigator.userAgent);
/**
 * Determines if the browser is Internet Explorer
 * @method
 * @memberof Popper.Utils
 * @param {Number} version to check
 * @returns {Boolean} isIE
 */ function isIE(version) {
    if (version === 11) return isIE11;
    if (version === 10) return isIE10;
    return isIE11 || isIE10;
}
/**
 * Returns the offset parent of the given element
 * @method
 * @memberof Popper.Utils
 * @argument {Element} element
 * @returns {Element} offset parent
 */ function getOffsetParent(element) {
    if (!element) return document.documentElement;
    var noOffsetParent = isIE(10) ? document.body : null;
    // NOTE: 1 DOM access here
    var offsetParent = element.offsetParent || null;
    // Skip hidden elements which don't have an offsetParent
    while(offsetParent === noOffsetParent && element.nextElementSibling)offsetParent = (element = element.nextElementSibling).offsetParent;
    var nodeName = offsetParent && offsetParent.nodeName;
    if (!nodeName || nodeName === 'BODY' || nodeName === 'HTML') return element ? element.ownerDocument.documentElement : document.documentElement;
    // .offsetParent will return the closest TH, TD or TABLE in case
    // no offsetParent is present, I hate this job...
    if ([
        'TH',
        'TD',
        'TABLE'
    ].indexOf(offsetParent.nodeName) !== -1 && getStyleComputedProperty(offsetParent, 'position') === 'static') return getOffsetParent(offsetParent);
    return offsetParent;
}
function isOffsetContainer(element) {
    var nodeName = element.nodeName;
    if (nodeName === 'BODY') return false;
    return nodeName === 'HTML' || getOffsetParent(element.firstElementChild) === element;
}
/**
 * Finds the root node (document, shadowDOM root) of the given element
 * @method
 * @memberof Popper.Utils
 * @argument {Element} node
 * @returns {Element} root node
 */ function getRoot(node) {
    if (node.parentNode !== null) return getRoot(node.parentNode);
    return node;
}
/**
 * Finds the offset parent common to the two provided nodes
 * @method
 * @memberof Popper.Utils
 * @argument {Element} element1
 * @argument {Element} element2
 * @returns {Element} common offset parent
 */ function findCommonOffsetParent(element1, element2) {
    // This check is needed to avoid errors in case one of the elements isn't defined for any reason
    if (!element1 || !element1.nodeType || !element2 || !element2.nodeType) return document.documentElement;
    // Here we make sure to give as "start" the element that comes first in the DOM
    var order = element1.compareDocumentPosition(element2) & Node.DOCUMENT_POSITION_FOLLOWING;
    var start = order ? element1 : element2;
    var end = order ? element2 : element1;
    // Get common ancestor container
    var range = document.createRange();
    range.setStart(start, 0);
    range.setEnd(end, 0);
    var commonAncestorContainer = range.commonAncestorContainer;
    // Both nodes are inside #document
    if (element1 !== commonAncestorContainer && element2 !== commonAncestorContainer || start.contains(end)) {
        if (isOffsetContainer(commonAncestorContainer)) return commonAncestorContainer;
        return getOffsetParent(commonAncestorContainer);
    }
    // one of the nodes is inside shadowDOM, find which one
    var element1root = getRoot(element1);
    if (element1root.host) return findCommonOffsetParent(element1root.host, element2);
    else return findCommonOffsetParent(element1, getRoot(element2).host);
}
/**
 * Gets the scroll value of the given element in the given side (top and left)
 * @method
 * @memberof Popper.Utils
 * @argument {Element} element
 * @argument {String} side `top` or `left`
 * @returns {number} amount of scrolled pixels
 */ function getScroll(element) {
    var side = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'top';
    var upperSide = side === 'top' ? 'scrollTop' : 'scrollLeft';
    var nodeName = element.nodeName;
    if (nodeName === 'BODY' || nodeName === 'HTML') {
        var html = element.ownerDocument.documentElement;
        var scrollingElement = element.ownerDocument.scrollingElement || html;
        return scrollingElement[upperSide];
    }
    return element[upperSide];
}
/*
 * Sum or subtract the element scroll values (left and top) from a given rect object
 * @method
 * @memberof Popper.Utils
 * @param {Object} rect - Rect object you want to change
 * @param {HTMLElement} element - The element from the function reads the scroll values
 * @param {Boolean} subtract - set to true if you want to subtract the scroll values
 * @return {Object} rect - The modifier rect object
 */ function includeScroll(rect, element) {
    var subtract = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
    var scrollTop = getScroll(element, 'top');
    var scrollLeft = getScroll(element, 'left');
    var modifier = subtract ? -1 : 1;
    rect.top += scrollTop * modifier;
    rect.bottom += scrollTop * modifier;
    rect.left += scrollLeft * modifier;
    rect.right += scrollLeft * modifier;
    return rect;
}
/*
 * Helper to detect borders of a given element
 * @method
 * @memberof Popper.Utils
 * @param {CSSStyleDeclaration} styles
 * Result of `getStyleComputedProperty` on the given element
 * @param {String} axis - `x` or `y`
 * @return {number} borders - The borders size of the given axis
 */ function getBordersSize(styles, axis) {
    var sideA = axis === 'x' ? 'Left' : 'Top';
    var sideB = sideA === 'Left' ? 'Right' : 'Bottom';
    return parseFloat(styles['border' + sideA + 'Width']) + parseFloat(styles['border' + sideB + 'Width']);
}
function getSize(axis, body, html, computedStyle) {
    return Math.max(body['offset' + axis], body['scroll' + axis], html['client' + axis], html['offset' + axis], html['scroll' + axis], isIE(10) ? parseInt(html['offset' + axis]) + parseInt(computedStyle['margin' + (axis === 'Height' ? 'Top' : 'Left')]) + parseInt(computedStyle['margin' + (axis === 'Height' ? 'Bottom' : 'Right')]) : 0);
}
function getWindowSizes(document) {
    var body = document.body;
    var html = document.documentElement;
    var computedStyle = isIE(10) && getComputedStyle(html);
    return {
        height: getSize('Height', body, html, computedStyle),
        width: getSize('Width', body, html, computedStyle)
    };
}
var classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) throw new TypeError("Cannot call a class as a function");
};
var createClass = function() {
    function defineProperties(target, props) {
        for(var i = 0; i < props.length; i++){
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ("value" in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
        }
    }
    return function(Constructor, protoProps, staticProps) {
        if (protoProps) defineProperties(Constructor.prototype, protoProps);
        if (staticProps) defineProperties(Constructor, staticProps);
        return Constructor;
    };
}();
var defineProperty = function(obj, key, value) {
    if (key in obj) Object.defineProperty(obj, key, {
        value: value,
        enumerable: true,
        configurable: true,
        writable: true
    });
    else obj[key] = value;
    return obj;
};
var _extends = Object.assign || function(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i];
        for(var key in source)if (Object.prototype.hasOwnProperty.call(source, key)) target[key] = source[key];
    }
    return target;
};
/**
 * Given element offsets, generate an output similar to getBoundingClientRect
 * @method
 * @memberof Popper.Utils
 * @argument {Object} offsets
 * @returns {Object} ClientRect like output
 */ function getClientRect(offsets) {
    return _extends({}, offsets, {
        right: offsets.left + offsets.width,
        bottom: offsets.top + offsets.height
    });
}
/**
 * Get bounding client rect of given element
 * @method
 * @memberof Popper.Utils
 * @param {HTMLElement} element
 * @return {Object} client rect
 */ function getBoundingClientRect(element) {
    var rect = {};
    // IE10 10 FIX: Please, don't ask, the element isn't
    // considered in DOM in some circumstances...
    // This isn't reproducible in IE10 compatibility mode of IE11
    try {
        if (isIE(10)) {
            rect = element.getBoundingClientRect();
            var scrollTop = getScroll(element, 'top');
            var scrollLeft = getScroll(element, 'left');
            rect.top += scrollTop;
            rect.left += scrollLeft;
            rect.bottom += scrollTop;
            rect.right += scrollLeft;
        } else rect = element.getBoundingClientRect();
    } catch (e) {}
    var result = {
        left: rect.left,
        top: rect.top,
        width: rect.right - rect.left,
        height: rect.bottom - rect.top
    };
    // subtract scrollbar size from sizes
    var sizes = element.nodeName === 'HTML' ? getWindowSizes(element.ownerDocument) : {};
    var width = sizes.width || element.clientWidth || result.width;
    var height = sizes.height || element.clientHeight || result.height;
    var horizScrollbar = element.offsetWidth - width;
    var vertScrollbar = element.offsetHeight - height;
    // if an hypothetical scrollbar is detected, we must be sure it's not a `border`
    // we make this check conditional for performance reasons
    if (horizScrollbar || vertScrollbar) {
        var styles = getStyleComputedProperty(element);
        horizScrollbar -= getBordersSize(styles, 'x');
        vertScrollbar -= getBordersSize(styles, 'y');
        result.width -= horizScrollbar;
        result.height -= vertScrollbar;
    }
    return getClientRect(result);
}
function getOffsetRectRelativeToArbitraryNode(children, parent) {
    var fixedPosition = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
    var isIE101 = isIE(10);
    var isHTML = parent.nodeName === 'HTML';
    var childrenRect = getBoundingClientRect(children);
    var parentRect = getBoundingClientRect(parent);
    var scrollParent = getScrollParent(children);
    var styles = getStyleComputedProperty(parent);
    var borderTopWidth = parseFloat(styles.borderTopWidth);
    var borderLeftWidth = parseFloat(styles.borderLeftWidth);
    // In cases where the parent is fixed, we must ignore negative scroll in offset calc
    if (fixedPosition && isHTML) {
        parentRect.top = Math.max(parentRect.top, 0);
        parentRect.left = Math.max(parentRect.left, 0);
    }
    var offsets = getClientRect({
        top: childrenRect.top - parentRect.top - borderTopWidth,
        left: childrenRect.left - parentRect.left - borderLeftWidth,
        width: childrenRect.width,
        height: childrenRect.height
    });
    offsets.marginTop = 0;
    offsets.marginLeft = 0;
    // Subtract margins of documentElement in case it's being used as parent
    // we do this only on HTML because it's the only element that behaves
    // differently when margins are applied to it. The margins are included in
    // the box of the documentElement, in the other cases not.
    if (!isIE101 && isHTML) {
        var marginTop = parseFloat(styles.marginTop);
        var marginLeft = parseFloat(styles.marginLeft);
        offsets.top -= borderTopWidth - marginTop;
        offsets.bottom -= borderTopWidth - marginTop;
        offsets.left -= borderLeftWidth - marginLeft;
        offsets.right -= borderLeftWidth - marginLeft;
        // Attach marginTop and marginLeft because in some circumstances we may need them
        offsets.marginTop = marginTop;
        offsets.marginLeft = marginLeft;
    }
    if (isIE101 && !fixedPosition ? parent.contains(scrollParent) : parent === scrollParent && scrollParent.nodeName !== 'BODY') offsets = includeScroll(offsets, parent);
    return offsets;
}
function getViewportOffsetRectRelativeToArtbitraryNode(element) {
    var excludeScroll = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
    var html = element.ownerDocument.documentElement;
    var relativeOffset = getOffsetRectRelativeToArbitraryNode(element, html);
    var width = Math.max(html.clientWidth, window.innerWidth || 0);
    var height = Math.max(html.clientHeight, window.innerHeight || 0);
    var scrollTop = !excludeScroll ? getScroll(html) : 0;
    var scrollLeft = !excludeScroll ? getScroll(html, 'left') : 0;
    var offset1 = {
        top: scrollTop - relativeOffset.top + relativeOffset.marginTop,
        left: scrollLeft - relativeOffset.left + relativeOffset.marginLeft,
        width: width,
        height: height
    };
    return getClientRect(offset1);
}
/**
 * Check if the given element is fixed or is inside a fixed parent
 * @method
 * @memberof Popper.Utils
 * @argument {Element} element
 * @argument {Element} customContainer
 * @returns {Boolean} answer to "isFixed?"
 */ function isFixed(element) {
    var nodeName = element.nodeName;
    if (nodeName === 'BODY' || nodeName === 'HTML') return false;
    if (getStyleComputedProperty(element, 'position') === 'fixed') return true;
    var parentNode = getParentNode(element);
    if (!parentNode) return false;
    return isFixed(parentNode);
}
/**
 * Finds the first parent of an element that has a transformed property defined
 * @method
 * @memberof Popper.Utils
 * @argument {Element} element
 * @returns {Element} first transformed parent or documentElement
 */ function getFixedPositionOffsetParent(element) {
    // This check is needed to avoid errors in case one of the elements isn't defined for any reason
    if (!element || !element.parentElement || isIE()) return document.documentElement;
    var el = element.parentElement;
    while(el && getStyleComputedProperty(el, 'transform') === 'none')el = el.parentElement;
    return el || document.documentElement;
}
/**
 * Computed the boundaries limits and return them
 * @method
 * @memberof Popper.Utils
 * @param {HTMLElement} popper
 * @param {HTMLElement} reference
 * @param {number} padding
 * @param {HTMLElement} boundariesElement - Element used to define the boundaries
 * @param {Boolean} fixedPosition - Is in fixed position mode
 * @returns {Object} Coordinates of the boundaries
 */ function getBoundaries(popper, reference, padding, boundariesElement) {
    var fixedPosition = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;
    // NOTE: 1 DOM access here
    var boundaries = {
        top: 0,
        left: 0
    };
    var offsetParent = fixedPosition ? getFixedPositionOffsetParent(popper) : findCommonOffsetParent(popper, getReferenceNode(reference));
    // Handle viewport case
    if (boundariesElement === 'viewport') boundaries = getViewportOffsetRectRelativeToArtbitraryNode(offsetParent, fixedPosition);
    else {
        // Handle other cases based on DOM element used as boundaries
        var boundariesNode = void 0;
        if (boundariesElement === 'scrollParent') {
            boundariesNode = getScrollParent(getParentNode(reference));
            if (boundariesNode.nodeName === 'BODY') boundariesNode = popper.ownerDocument.documentElement;
        } else if (boundariesElement === 'window') boundariesNode = popper.ownerDocument.documentElement;
        else boundariesNode = boundariesElement;
        var offsets = getOffsetRectRelativeToArbitraryNode(boundariesNode, offsetParent, fixedPosition);
        // In case of HTML, we need a different computation
        if (boundariesNode.nodeName === 'HTML' && !isFixed(offsetParent)) {
            var _getWindowSizes = getWindowSizes(popper.ownerDocument), height = _getWindowSizes.height, width = _getWindowSizes.width;
            boundaries.top += offsets.top - offsets.marginTop;
            boundaries.bottom = height + offsets.top;
            boundaries.left += offsets.left - offsets.marginLeft;
            boundaries.right = width + offsets.left;
        } else // for all the other DOM elements, this one is good
        boundaries = offsets;
    }
    // Add paddings
    padding = padding || 0;
    var isPaddingNumber = typeof padding === 'number';
    boundaries.left += isPaddingNumber ? padding : padding.left || 0;
    boundaries.top += isPaddingNumber ? padding : padding.top || 0;
    boundaries.right -= isPaddingNumber ? padding : padding.right || 0;
    boundaries.bottom -= isPaddingNumber ? padding : padding.bottom || 0;
    return boundaries;
}
function getArea(_ref) {
    var width = _ref.width, height = _ref.height;
    return width * height;
}
/**
 * Utility used to transform the `auto` placement to the placement with more
 * available space.
 * @method
 * @memberof Popper.Utils
 * @argument {Object} data - The data object generated by update method
 * @argument {Object} options - Modifiers configuration and options
 * @returns {Object} The data object, properly modified
 */ function computeAutoPlacement(placement, refRect, popper, reference, boundariesElement) {
    var padding = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 0;
    if (placement.indexOf('auto') === -1) return placement;
    var boundaries = getBoundaries(popper, reference, padding, boundariesElement);
    var rects = {
        top: {
            width: boundaries.width,
            height: refRect.top - boundaries.top
        },
        right: {
            width: boundaries.right - refRect.right,
            height: boundaries.height
        },
        bottom: {
            width: boundaries.width,
            height: boundaries.bottom - refRect.bottom
        },
        left: {
            width: refRect.left - boundaries.left,
            height: boundaries.height
        }
    };
    var sortedAreas = Object.keys(rects).map(function(key) {
        return _extends({
            key: key
        }, rects[key], {
            area: getArea(rects[key])
        });
    }).sort(function(a, b) {
        return b.area - a.area;
    });
    var filteredAreas = sortedAreas.filter(function(_ref2) {
        var width = _ref2.width, height = _ref2.height;
        return width >= popper.clientWidth && height >= popper.clientHeight;
    });
    var computedPlacement = filteredAreas.length > 0 ? filteredAreas[0].key : sortedAreas[0].key;
    var variation = placement.split('-')[1];
    return computedPlacement + (variation ? '-' + variation : '');
}
/**
 * Get offsets to the reference element
 * @method
 * @memberof Popper.Utils
 * @param {Object} state
 * @param {Element} popper - the popper element
 * @param {Element} reference - the reference element (the popper will be relative to this)
 * @param {Element} fixedPosition - is in fixed position mode
 * @returns {Object} An object containing the offsets which will be applied to the popper
 */ function getReferenceOffsets(state, popper, reference) {
    var fixedPosition = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;
    var commonOffsetParent = fixedPosition ? getFixedPositionOffsetParent(popper) : findCommonOffsetParent(popper, getReferenceNode(reference));
    return getOffsetRectRelativeToArbitraryNode(reference, commonOffsetParent, fixedPosition);
}
/**
 * Get the outer sizes of the given element (offset size + margins)
 * @method
 * @memberof Popper.Utils
 * @argument {Element} element
 * @returns {Object} object containing width and height properties
 */ function getOuterSizes(element) {
    var window = element.ownerDocument.defaultView;
    var styles = window.getComputedStyle(element);
    var x = parseFloat(styles.marginTop || 0) + parseFloat(styles.marginBottom || 0);
    var y = parseFloat(styles.marginLeft || 0) + parseFloat(styles.marginRight || 0);
    var result = {
        width: element.offsetWidth + y,
        height: element.offsetHeight + x
    };
    return result;
}
/**
 * Get the opposite placement of the given one
 * @method
 * @memberof Popper.Utils
 * @argument {String} placement
 * @returns {String} flipped placement
 */ function getOppositePlacement(placement) {
    var hash = {
        left: 'right',
        right: 'left',
        bottom: 'top',
        top: 'bottom'
    };
    return placement.replace(/left|right|bottom|top/g, function(matched) {
        return hash[matched];
    });
}
/**
 * Get offsets to the popper
 * @method
 * @memberof Popper.Utils
 * @param {Object} position - CSS position the Popper will get applied
 * @param {HTMLElement} popper - the popper element
 * @param {Object} referenceOffsets - the reference offsets (the popper will be relative to this)
 * @param {String} placement - one of the valid placement options
 * @returns {Object} popperOffsets - An object containing the offsets which will be applied to the popper
 */ function getPopperOffsets(popper, referenceOffsets, placement) {
    placement = placement.split('-')[0];
    // Get popper node sizes
    var popperRect = getOuterSizes(popper);
    // Add position, width and height to our offsets object
    var popperOffsets = {
        width: popperRect.width,
        height: popperRect.height
    };
    // depending by the popper placement we have to compute its offsets slightly differently
    var isHoriz = [
        'right',
        'left'
    ].indexOf(placement) !== -1;
    var mainSide = isHoriz ? 'top' : 'left';
    var secondarySide = isHoriz ? 'left' : 'top';
    var measurement = isHoriz ? 'height' : 'width';
    var secondaryMeasurement = !isHoriz ? 'height' : 'width';
    popperOffsets[mainSide] = referenceOffsets[mainSide] + referenceOffsets[measurement] / 2 - popperRect[measurement] / 2;
    if (placement === secondarySide) popperOffsets[secondarySide] = referenceOffsets[secondarySide] - popperRect[secondaryMeasurement];
    else popperOffsets[secondarySide] = referenceOffsets[getOppositePlacement(secondarySide)];
    return popperOffsets;
}
/**
 * Mimics the `find` method of Array
 * @method
 * @memberof Popper.Utils
 * @argument {Array} arr
 * @argument prop
 * @argument value
 * @returns index or -1
 */ function find(arr, check) {
    // use native find if supported
    if (Array.prototype.find) return arr.find(check);
    // use `filter` to obtain the same behavior of `find`
    return arr.filter(check)[0];
}
/**
 * Return the index of the matching object
 * @method
 * @memberof Popper.Utils
 * @argument {Array} arr
 * @argument prop
 * @argument value
 * @returns index or -1
 */ function findIndex(arr, prop, value) {
    // use native findIndex if supported
    if (Array.prototype.findIndex) return arr.findIndex(function(cur) {
        return cur[prop] === value;
    });
    // use `find` + `indexOf` if `findIndex` isn't supported
    var match = find(arr, function(obj) {
        return obj[prop] === value;
    });
    return arr.indexOf(match);
}
/**
 * Loop trough the list of modifiers and run them in order,
 * each of them will then edit the data object.
 * @method
 * @memberof Popper.Utils
 * @param {dataObject} data
 * @param {Array} modifiers
 * @param {String} ends - Optional modifier name used as stopper
 * @returns {dataObject}
 */ function runModifiers(modifiers1, data, ends) {
    var modifiersToRun = ends === undefined ? modifiers1 : modifiers1.slice(0, findIndex(modifiers1, 'name', ends));
    modifiersToRun.forEach(function(modifier) {
        if (modifier['function']) // eslint-disable-line dot-notation
        console.warn('`modifier.function` is deprecated, use `modifier.fn`!');
        var fn = modifier['function'] || modifier.fn; // eslint-disable-line dot-notation
        if (modifier.enabled && isFunction(fn)) {
            // Add properties to offsets to make them a complete clientRect object
            // we do this before each modifier to make sure the previous one doesn't
            // mess with these values
            data.offsets.popper = getClientRect(data.offsets.popper);
            data.offsets.reference = getClientRect(data.offsets.reference);
            data = fn(data, modifier);
        }
    });
    return data;
}
/**
 * Updates the position of the popper, computing the new offsets and applying
 * the new style.<br />
 * Prefer `scheduleUpdate` over `update` because of performance reasons.
 * @method
 * @memberof Popper
 */ function update() {
    // if popper is destroyed, don't perform any further update
    if (this.state.isDestroyed) return;
    var data = {
        instance: this,
        styles: {},
        arrowStyles: {},
        attributes: {},
        flipped: false,
        offsets: {}
    };
    // compute reference element offsets
    data.offsets.reference = getReferenceOffsets(this.state, this.popper, this.reference, this.options.positionFixed);
    // compute auto placement, store placement inside the data object,
    // modifiers will be able to edit `placement` if needed
    // and refer to originalPlacement to know the original value
    data.placement = computeAutoPlacement(this.options.placement, data.offsets.reference, this.popper, this.reference, this.options.modifiers.flip.boundariesElement, this.options.modifiers.flip.padding);
    // store the computed placement inside `originalPlacement`
    data.originalPlacement = data.placement;
    data.positionFixed = this.options.positionFixed;
    // compute the popper offsets
    data.offsets.popper = getPopperOffsets(this.popper, data.offsets.reference, data.placement);
    data.offsets.popper.position = this.options.positionFixed ? 'fixed' : 'absolute';
    // run the modifiers
    data = runModifiers(this.modifiers, data);
    // the first `update` will call `onCreate` callback
    // the other ones will call `onUpdate` callback
    if (!this.state.isCreated) {
        this.state.isCreated = true;
        this.options.onCreate(data);
    } else this.options.onUpdate(data);
}
/**
 * Helper used to know if the given modifier is enabled.
 * @method
 * @memberof Popper.Utils
 * @returns {Boolean}
 */ function isModifierEnabled(modifiers2, modifierName) {
    return modifiers2.some(function(_ref) {
        var name = _ref.name, enabled = _ref.enabled;
        return enabled && name === modifierName;
    });
}
/**
 * Get the prefixed supported property name
 * @method
 * @memberof Popper.Utils
 * @argument {String} property (camelCase)
 * @returns {String} prefixed property (camelCase or PascalCase, depending on the vendor prefix)
 */ function getSupportedPropertyName(property) {
    var prefixes = [
        false,
        'ms',
        'Webkit',
        'Moz',
        'O'
    ];
    var upperProp = property.charAt(0).toUpperCase() + property.slice(1);
    for(var i = 0; i < prefixes.length; i++){
        var prefix = prefixes[i];
        var toCheck = prefix ? '' + prefix + upperProp : property;
        if (typeof document.body.style[toCheck] !== 'undefined') return toCheck;
    }
    return null;
}
/**
 * Destroys the popper.
 * @method
 * @memberof Popper
 */ function destroy() {
    this.state.isDestroyed = true;
    // touch DOM only if `applyStyle` modifier is enabled
    if (isModifierEnabled(this.modifiers, 'applyStyle')) {
        this.popper.removeAttribute('x-placement');
        this.popper.style.position = '';
        this.popper.style.top = '';
        this.popper.style.left = '';
        this.popper.style.right = '';
        this.popper.style.bottom = '';
        this.popper.style.willChange = '';
        this.popper.style[getSupportedPropertyName('transform')] = '';
    }
    this.disableEventListeners();
    // remove the popper if user explicitly asked for the deletion on destroy
    // do not use `remove` because IE11 doesn't support it
    if (this.options.removeOnDestroy) this.popper.parentNode.removeChild(this.popper);
    return this;
}
/**
 * Get the window associated with the element
 * @argument {Element} element
 * @returns {Window}
 */ function getWindow(element) {
    var ownerDocument = element.ownerDocument;
    return ownerDocument ? ownerDocument.defaultView : window;
}
function attachToScrollParents(scrollParent, event, callback, scrollParents) {
    var isBody = scrollParent.nodeName === 'BODY';
    var target = isBody ? scrollParent.ownerDocument.defaultView : scrollParent;
    target.addEventListener(event, callback, {
        passive: true
    });
    if (!isBody) attachToScrollParents(getScrollParent(target.parentNode), event, callback, scrollParents);
    scrollParents.push(target);
}
/**
 * Setup needed event listeners used to update the popper position
 * @method
 * @memberof Popper.Utils
 * @private
 */ function setupEventListeners(reference, options, state, updateBound) {
    // Resize event listener on window
    state.updateBound = updateBound;
    getWindow(reference).addEventListener('resize', state.updateBound, {
        passive: true
    });
    // Scroll event listener on scroll parents
    var scrollElement = getScrollParent(reference);
    attachToScrollParents(scrollElement, 'scroll', state.updateBound, state.scrollParents);
    state.scrollElement = scrollElement;
    state.eventsEnabled = true;
    return state;
}
/**
 * It will add resize/scroll events and start recalculating
 * position of the popper element when they are triggered.
 * @method
 * @memberof Popper
 */ function enableEventListeners() {
    if (!this.state.eventsEnabled) this.state = setupEventListeners(this.reference, this.options, this.state, this.scheduleUpdate);
}
/**
 * Remove event listeners used to update the popper position
 * @method
 * @memberof Popper.Utils
 * @private
 */ function removeEventListeners(reference, state) {
    // Remove resize event listener on window
    getWindow(reference).removeEventListener('resize', state.updateBound);
    // Remove scroll event listener on scroll parents
    state.scrollParents.forEach(function(target) {
        target.removeEventListener('scroll', state.updateBound);
    });
    // Reset state
    state.updateBound = null;
    state.scrollParents = [];
    state.scrollElement = null;
    state.eventsEnabled = false;
    return state;
}
/**
 * It will remove resize/scroll events and won't recalculate popper position
 * when they are triggered. It also won't trigger `onUpdate` callback anymore,
 * unless you call `update` method manually.
 * @method
 * @memberof Popper
 */ function disableEventListeners() {
    if (this.state.eventsEnabled) {
        cancelAnimationFrame(this.scheduleUpdate);
        this.state = removeEventListeners(this.reference, this.state);
    }
}
/**
 * Tells if a given input is a number
 * @method
 * @memberof Popper.Utils
 * @param {*} input to check
 * @return {Boolean}
 */ function isNumeric(n) {
    return n !== '' && !isNaN(parseFloat(n)) && isFinite(n);
}
/**
 * Set the style to the given popper
 * @method
 * @memberof Popper.Utils
 * @argument {Element} element - Element to apply the style to
 * @argument {Object} styles
 * Object with a list of properties and values which will be applied to the element
 */ function setStyles(element, styles) {
    Object.keys(styles).forEach(function(prop) {
        var unit = '';
        // add unit if the value is numeric and is one of the following
        if ([
            'width',
            'height',
            'top',
            'right',
            'bottom',
            'left'
        ].indexOf(prop) !== -1 && isNumeric(styles[prop])) unit = 'px';
        element.style[prop] = styles[prop] + unit;
    });
}
/**
 * Set the attributes to the given popper
 * @method
 * @memberof Popper.Utils
 * @argument {Element} element - Element to apply the attributes to
 * @argument {Object} styles
 * Object with a list of properties and values which will be applied to the element
 */ function setAttributes(element, attributes) {
    Object.keys(attributes).forEach(function(prop) {
        var value = attributes[prop];
        if (value !== false) element.setAttribute(prop, attributes[prop]);
        else element.removeAttribute(prop);
    });
}
/**
 * @function
 * @memberof Modifiers
 * @argument {Object} data - The data object generated by `update` method
 * @argument {Object} data.styles - List of style properties - values to apply to popper element
 * @argument {Object} data.attributes - List of attribute properties - values to apply to popper element
 * @argument {Object} options - Modifiers configuration and options
 * @returns {Object} The same data object
 */ function applyStyle(data) {
    // any property present in `data.styles` will be applied to the popper,
    // in this way we can make the 3rd party modifiers add custom styles to it
    // Be aware, modifiers could override the properties defined in the previous
    // lines of this modifier!
    setStyles(data.instance.popper, data.styles);
    // any property present in `data.attributes` will be applied to the popper,
    // they will be set as HTML attributes of the element
    setAttributes(data.instance.popper, data.attributes);
    // if arrowElement is defined and arrowStyles has some properties
    if (data.arrowElement && Object.keys(data.arrowStyles).length) setStyles(data.arrowElement, data.arrowStyles);
    return data;
}
/**
 * Set the x-placement attribute before everything else because it could be used
 * to add margins to the popper margins needs to be calculated to get the
 * correct popper offsets.
 * @method
 * @memberof Popper.modifiers
 * @param {HTMLElement} reference - The reference element used to position the popper
 * @param {HTMLElement} popper - The HTML element used as popper
 * @param {Object} options - Popper.js options
 */ function applyStyleOnLoad(reference, popper, options, modifierOptions, state) {
    // compute reference element offsets
    var referenceOffsets = getReferenceOffsets(state, popper, reference, options.positionFixed);
    // compute auto placement, store placement inside the data object,
    // modifiers will be able to edit `placement` if needed
    // and refer to originalPlacement to know the original value
    var placement = computeAutoPlacement(options.placement, referenceOffsets, popper, reference, options.modifiers.flip.boundariesElement, options.modifiers.flip.padding);
    popper.setAttribute('x-placement', placement);
    // Apply `position` to popper before anything else because
    // without the position applied we can't guarantee correct computations
    setStyles(popper, {
        position: options.positionFixed ? 'fixed' : 'absolute'
    });
    return options;
}
/**
 * @function
 * @memberof Popper.Utils
 * @argument {Object} data - The data object generated by `update` method
 * @argument {Boolean} shouldRound - If the offsets should be rounded at all
 * @returns {Object} The popper's position offsets rounded
 *
 * The tale of pixel-perfect positioning. It's still not 100% perfect, but as
 * good as it can be within reason.
 * Discussion here: https://github.com/FezVrasta/popper.js/pull/715
 *
 * Low DPI screens cause a popper to be blurry if not using full pixels (Safari
 * as well on High DPI screens).
 *
 * Firefox prefers no rounding for positioning and does not have blurriness on
 * high DPI screens.
 *
 * Only horizontal placement and left/right values need to be considered.
 */ function getRoundedOffsets(data, shouldRound) {
    var _data$offsets = data.offsets, popper = _data$offsets.popper, reference = _data$offsets.reference;
    var round = Math.round, floor = Math.floor;
    var noRound = function noRound(v) {
        return v;
    };
    var referenceWidth = round(reference.width);
    var popperWidth = round(popper.width);
    var isVertical = [
        'left',
        'right'
    ].indexOf(data.placement) !== -1;
    var isVariation = data.placement.indexOf('-') !== -1;
    var sameWidthParity = referenceWidth % 2 === popperWidth % 2;
    var bothOddWidth = referenceWidth % 2 === 1 && popperWidth % 2 === 1;
    var horizontalToInteger = !shouldRound ? noRound : isVertical || isVariation || sameWidthParity ? round : floor;
    var verticalToInteger = !shouldRound ? noRound : round;
    return {
        left: horizontalToInteger(bothOddWidth && !isVariation && shouldRound ? popper.left - 1 : popper.left),
        top: verticalToInteger(popper.top),
        bottom: verticalToInteger(popper.bottom),
        right: horizontalToInteger(popper.right)
    };
}
var isFirefox = isBrowser && /Firefox/i.test(navigator.userAgent);
/**
 * @function
 * @memberof Modifiers
 * @argument {Object} data - The data object generated by `update` method
 * @argument {Object} options - Modifiers configuration and options
 * @returns {Object} The data object, properly modified
 */ function computeStyle(data, options) {
    var x = options.x, y = options.y;
    var popper = data.offsets.popper;
    // Remove this legacy support in Popper.js v2
    var legacyGpuAccelerationOption = find(data.instance.modifiers, function(modifier) {
        return modifier.name === 'applyStyle';
    }).gpuAcceleration;
    if (legacyGpuAccelerationOption !== undefined) console.warn('WARNING: `gpuAcceleration` option moved to `computeStyle` modifier and will not be supported in future versions of Popper.js!');
    var gpuAcceleration = legacyGpuAccelerationOption !== undefined ? legacyGpuAccelerationOption : options.gpuAcceleration;
    var offsetParent = getOffsetParent(data.instance.popper);
    var offsetParentRect = getBoundingClientRect(offsetParent);
    // Styles
    var styles = {
        position: popper.position
    };
    var offsets = getRoundedOffsets(data, window.devicePixelRatio < 2 || !isFirefox);
    var sideA = x === 'bottom' ? 'top' : 'bottom';
    var sideB = y === 'right' ? 'left' : 'right';
    // if gpuAcceleration is set to `true` and transform is supported,
    //  we use `translate3d` to apply the position to the popper we
    // automatically use the supported prefixed version if needed
    var prefixedProperty = getSupportedPropertyName('transform');
    // now, let's make a step back and look at this code closely (wtf?)
    // If the content of the popper grows once it's been positioned, it
    // may happen that the popper gets misplaced because of the new content
    // overflowing its reference element
    // To avoid this problem, we provide two options (x and y), which allow
    // the consumer to define the offset origin.
    // If we position a popper on top of a reference element, we can set
    // `x` to `top` to make the popper grow towards its top instead of
    // its bottom.
    var left = void 0, top = void 0;
    if (sideA === 'bottom') {
        // when offsetParent is <html> the positioning is relative to the bottom of the screen (excluding the scrollbar)
        // and not the bottom of the html element
        if (offsetParent.nodeName === 'HTML') top = -offsetParent.clientHeight + offsets.bottom;
        else top = -offsetParentRect.height + offsets.bottom;
    } else top = offsets.top;
    if (sideB === 'right') {
        if (offsetParent.nodeName === 'HTML') left = -offsetParent.clientWidth + offsets.right;
        else left = -offsetParentRect.width + offsets.right;
    } else left = offsets.left;
    if (gpuAcceleration && prefixedProperty) {
        styles[prefixedProperty] = 'translate3d(' + left + 'px, ' + top + 'px, 0)';
        styles[sideA] = 0;
        styles[sideB] = 0;
        styles.willChange = 'transform';
    } else {
        // othwerise, we use the standard `top`, `left`, `bottom` and `right` properties
        var invertTop = sideA === 'bottom' ? -1 : 1;
        var invertLeft = sideB === 'right' ? -1 : 1;
        styles[sideA] = top * invertTop;
        styles[sideB] = left * invertLeft;
        styles.willChange = sideA + ', ' + sideB;
    }
    // Attributes
    var attributes = {
        'x-placement': data.placement
    };
    // Update `data` attributes, styles and arrowStyles
    data.attributes = _extends({}, attributes, data.attributes);
    data.styles = _extends({}, styles, data.styles);
    data.arrowStyles = _extends({}, data.offsets.arrow, data.arrowStyles);
    return data;
}
/**
 * Helper used to know if the given modifier depends from another one.<br />
 * It checks if the needed modifier is listed and enabled.
 * @method
 * @memberof Popper.Utils
 * @param {Array} modifiers - list of modifiers
 * @param {String} requestingName - name of requesting modifier
 * @param {String} requestedName - name of requested modifier
 * @returns {Boolean}
 */ function isModifierRequired(modifiers3, requestingName, requestedName) {
    var requesting = find(modifiers3, function(_ref) {
        var name = _ref.name;
        return name === requestingName;
    });
    var isRequired = !!requesting && modifiers3.some(function(modifier) {
        return modifier.name === requestedName && modifier.enabled && modifier.order < requesting.order;
    });
    if (!isRequired) {
        var _requesting = '`' + requestingName + '`';
        var requested = '`' + requestedName + '`';
        console.warn(requested + ' modifier is required by ' + _requesting + ' modifier in order to work, be sure to include it before ' + _requesting + '!');
    }
    return isRequired;
}
/**
 * @function
 * @memberof Modifiers
 * @argument {Object} data - The data object generated by update method
 * @argument {Object} options - Modifiers configuration and options
 * @returns {Object} The data object, properly modified
 */ function arrow(data, options) {
    var _data$offsets$arrow;
    // arrow depends on keepTogether in order to work
    if (!isModifierRequired(data.instance.modifiers, 'arrow', 'keepTogether')) return data;
    var arrowElement = options.element;
    // if arrowElement is a string, suppose it's a CSS selector
    if (typeof arrowElement === 'string') {
        arrowElement = data.instance.popper.querySelector(arrowElement);
        // if arrowElement is not found, don't run the modifier
        if (!arrowElement) return data;
    } else // if the arrowElement isn't a query selector we must check that the
    // provided DOM node is child of its popper node
    if (!data.instance.popper.contains(arrowElement)) {
        console.warn('WARNING: `arrow.element` must be child of its popper element!');
        return data;
    }
    var placement = data.placement.split('-')[0];
    var _data$offsets = data.offsets, popper = _data$offsets.popper, reference = _data$offsets.reference;
    var isVertical = [
        'left',
        'right'
    ].indexOf(placement) !== -1;
    var len = isVertical ? 'height' : 'width';
    var sideCapitalized = isVertical ? 'Top' : 'Left';
    var side = sideCapitalized.toLowerCase();
    var altSide = isVertical ? 'left' : 'top';
    var opSide = isVertical ? 'bottom' : 'right';
    var arrowElementSize = getOuterSizes(arrowElement)[len];
    //
    // extends keepTogether behavior making sure the popper and its
    // reference have enough pixels in conjunction
    //
    // top/left side
    if (reference[opSide] - arrowElementSize < popper[side]) data.offsets.popper[side] -= popper[side] - (reference[opSide] - arrowElementSize);
    // bottom/right side
    if (reference[side] + arrowElementSize > popper[opSide]) data.offsets.popper[side] += reference[side] + arrowElementSize - popper[opSide];
    data.offsets.popper = getClientRect(data.offsets.popper);
    // compute center of the popper
    var center = reference[side] + reference[len] / 2 - arrowElementSize / 2;
    // Compute the sideValue using the updated popper offsets
    // take popper margin in account because we don't have this info available
    var css = getStyleComputedProperty(data.instance.popper);
    var popperMarginSide = parseFloat(css['margin' + sideCapitalized]);
    var popperBorderSide = parseFloat(css['border' + sideCapitalized + 'Width']);
    var sideValue = center - data.offsets.popper[side] - popperMarginSide - popperBorderSide;
    // prevent arrowElement from being placed not contiguously to its popper
    sideValue = Math.max(Math.min(popper[len] - arrowElementSize, sideValue), 0);
    data.arrowElement = arrowElement;
    data.offsets.arrow = (_data$offsets$arrow = {}, defineProperty(_data$offsets$arrow, side, Math.round(sideValue)), defineProperty(_data$offsets$arrow, altSide, ''), _data$offsets$arrow);
    return data;
}
/**
 * Get the opposite placement variation of the given one
 * @method
 * @memberof Popper.Utils
 * @argument {String} placement variation
 * @returns {String} flipped placement variation
 */ function getOppositeVariation(variation) {
    if (variation === 'end') return 'start';
    else if (variation === 'start') return 'end';
    return variation;
}
/**
 * List of accepted placements to use as values of the `placement` option.<br />
 * Valid placements are:
 * - `auto`
 * - `top`
 * - `right`
 * - `bottom`
 * - `left`
 *
 * Each placement can have a variation from this list:
 * - `-start`
 * - `-end`
 *
 * Variations are interpreted easily if you think of them as the left to right
 * written languages. Horizontally (`top` and `bottom`), `start` is left and `end`
 * is right.<br />
 * Vertically (`left` and `right`), `start` is top and `end` is bottom.
 *
 * Some valid examples are:
 * - `top-end` (on top of reference, right aligned)
 * - `right-start` (on right of reference, top aligned)
 * - `bottom` (on bottom, centered)
 * - `auto-end` (on the side with more space available, alignment depends by placement)
 *
 * @static
 * @type {Array}
 * @enum {String}
 * @readonly
 * @method placements
 * @memberof Popper
 */ var placements = [
    'auto-start',
    'auto',
    'auto-end',
    'top-start',
    'top',
    'top-end',
    'right-start',
    'right',
    'right-end',
    'bottom-end',
    'bottom',
    'bottom-start',
    'left-end',
    'left',
    'left-start'
];
// Get rid of `auto` `auto-start` and `auto-end`
var validPlacements = placements.slice(3);
/**
 * Given an initial placement, returns all the subsequent placements
 * clockwise (or counter-clockwise).
 *
 * @method
 * @memberof Popper.Utils
 * @argument {String} placement - A valid placement (it accepts variations)
 * @argument {Boolean} counter - Set to true to walk the placements counterclockwise
 * @returns {Array} placements including their variations
 */ function clockwise(placement) {
    var counter = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
    var index = validPlacements.indexOf(placement);
    var arr = validPlacements.slice(index + 1).concat(validPlacements.slice(0, index));
    return counter ? arr.reverse() : arr;
}
var BEHAVIORS = {
    FLIP: 'flip',
    CLOCKWISE: 'clockwise',
    COUNTERCLOCKWISE: 'counterclockwise'
};
/**
 * @function
 * @memberof Modifiers
 * @argument {Object} data - The data object generated by update method
 * @argument {Object} options - Modifiers configuration and options
 * @returns {Object} The data object, properly modified
 */ function flip(data, options) {
    // if `inner` modifier is enabled, we can't use the `flip` modifier
    if (isModifierEnabled(data.instance.modifiers, 'inner')) return data;
    if (data.flipped && data.placement === data.originalPlacement) // seems like flip is trying to loop, probably there's not enough space on any of the flippable sides
    return data;
    var boundaries = getBoundaries(data.instance.popper, data.instance.reference, options.padding, options.boundariesElement, data.positionFixed);
    var placement = data.placement.split('-')[0];
    var placementOpposite = getOppositePlacement(placement);
    var variation = data.placement.split('-')[1] || '';
    var flipOrder = [];
    switch(options.behavior){
        case BEHAVIORS.FLIP:
            flipOrder = [
                placement,
                placementOpposite
            ];
            break;
        case BEHAVIORS.CLOCKWISE:
            flipOrder = clockwise(placement);
            break;
        case BEHAVIORS.COUNTERCLOCKWISE:
            flipOrder = clockwise(placement, true);
            break;
        default:
            flipOrder = options.behavior;
    }
    flipOrder.forEach(function(step, index) {
        if (placement !== step || flipOrder.length === index + 1) return data;
        placement = data.placement.split('-')[0];
        placementOpposite = getOppositePlacement(placement);
        var popperOffsets = data.offsets.popper;
        var refOffsets = data.offsets.reference;
        // using floor because the reference offsets may contain decimals we are not going to consider here
        var floor = Math.floor;
        var overlapsRef = placement === 'left' && floor(popperOffsets.right) > floor(refOffsets.left) || placement === 'right' && floor(popperOffsets.left) < floor(refOffsets.right) || placement === 'top' && floor(popperOffsets.bottom) > floor(refOffsets.top) || placement === 'bottom' && floor(popperOffsets.top) < floor(refOffsets.bottom);
        var overflowsLeft = floor(popperOffsets.left) < floor(boundaries.left);
        var overflowsRight = floor(popperOffsets.right) > floor(boundaries.right);
        var overflowsTop = floor(popperOffsets.top) < floor(boundaries.top);
        var overflowsBottom = floor(popperOffsets.bottom) > floor(boundaries.bottom);
        var overflowsBoundaries = placement === 'left' && overflowsLeft || placement === 'right' && overflowsRight || placement === 'top' && overflowsTop || placement === 'bottom' && overflowsBottom;
        // flip the variation if required
        var isVertical = [
            'top',
            'bottom'
        ].indexOf(placement) !== -1;
        // flips variation if reference element overflows boundaries
        var flippedVariationByRef = !!options.flipVariations && (isVertical && variation === 'start' && overflowsLeft || isVertical && variation === 'end' && overflowsRight || !isVertical && variation === 'start' && overflowsTop || !isVertical && variation === 'end' && overflowsBottom);
        // flips variation if popper content overflows boundaries
        var flippedVariationByContent = !!options.flipVariationsByContent && (isVertical && variation === 'start' && overflowsRight || isVertical && variation === 'end' && overflowsLeft || !isVertical && variation === 'start' && overflowsBottom || !isVertical && variation === 'end' && overflowsTop);
        var flippedVariation = flippedVariationByRef || flippedVariationByContent;
        if (overlapsRef || overflowsBoundaries || flippedVariation) {
            // this boolean to detect any flip loop
            data.flipped = true;
            if (overlapsRef || overflowsBoundaries) placement = flipOrder[index + 1];
            if (flippedVariation) variation = getOppositeVariation(variation);
            data.placement = placement + (variation ? '-' + variation : '');
            // this object contains `position`, we want to preserve it along with
            // any additional property we may add in the future
            data.offsets.popper = _extends({}, data.offsets.popper, getPopperOffsets(data.instance.popper, data.offsets.reference, data.placement));
            data = runModifiers(data.instance.modifiers, data, 'flip');
        }
    });
    return data;
}
/**
 * @function
 * @memberof Modifiers
 * @argument {Object} data - The data object generated by update method
 * @argument {Object} options - Modifiers configuration and options
 * @returns {Object} The data object, properly modified
 */ function keepTogether(data) {
    var _data$offsets = data.offsets, popper = _data$offsets.popper, reference = _data$offsets.reference;
    var placement = data.placement.split('-')[0];
    var floor = Math.floor;
    var isVertical = [
        'top',
        'bottom'
    ].indexOf(placement) !== -1;
    var side = isVertical ? 'right' : 'bottom';
    var opSide = isVertical ? 'left' : 'top';
    var measurement = isVertical ? 'width' : 'height';
    if (popper[side] < floor(reference[opSide])) data.offsets.popper[opSide] = floor(reference[opSide]) - popper[measurement];
    if (popper[opSide] > floor(reference[side])) data.offsets.popper[opSide] = floor(reference[side]);
    return data;
}
/**
 * Converts a string containing value + unit into a px value number
 * @function
 * @memberof {modifiers~offset}
 * @private
 * @argument {String} str - Value + unit string
 * @argument {String} measurement - `height` or `width`
 * @argument {Object} popperOffsets
 * @argument {Object} referenceOffsets
 * @returns {Number|String}
 * Value in pixels, or original string if no values were extracted
 */ function toValue(str, measurement, popperOffsets, referenceOffsets) {
    // separate value from unit
    var split = str.match(/((?:\-|\+)?\d*\.?\d*)(.*)/);
    var value = +split[1];
    var unit = split[2];
    // If it's not a number it's an operator, I guess
    if (!value) return str;
    if (unit.indexOf('%') === 0) {
        var element = void 0;
        switch(unit){
            case '%p':
                element = popperOffsets;
                break;
            case '%':
            case '%r':
            default:
                element = referenceOffsets;
        }
        var rect = getClientRect(element);
        return rect[measurement] / 100 * value;
    } else if (unit === 'vh' || unit === 'vw') {
        // if is a vh or vw, we calculate the size based on the viewport
        var size = void 0;
        if (unit === 'vh') size = Math.max(document.documentElement.clientHeight, window.innerHeight || 0);
        else size = Math.max(document.documentElement.clientWidth, window.innerWidth || 0);
        return size / 100 * value;
    } else // if is an explicit pixel unit, we get rid of the unit and keep the value
    // if is an implicit unit, it's px, and we return just the value
    return value;
}
/**
 * Parse an `offset` string to extrapolate `x` and `y` numeric offsets.
 * @function
 * @memberof {modifiers~offset}
 * @private
 * @argument {String} offset
 * @argument {Object} popperOffsets
 * @argument {Object} referenceOffsets
 * @argument {String} basePlacement
 * @returns {Array} a two cells array with x and y offsets in numbers
 */ function parseOffset(offset2, popperOffsets, referenceOffsets, basePlacement) {
    var offsets = [
        0,
        0
    ];
    // Use height if placement is left or right and index is 0 otherwise use width
    // in this way the first offset will use an axis and the second one
    // will use the other one
    var useHeight = [
        'right',
        'left'
    ].indexOf(basePlacement) !== -1;
    // Split the offset string to obtain a list of values and operands
    // The regex addresses values with the plus or minus sign in front (+10, -20, etc)
    var fragments = offset2.split(/(\+|\-)/).map(function(frag) {
        return frag.trim();
    });
    // Detect if the offset string contains a pair of values or a single one
    // they could be separated by comma or space
    var divider = fragments.indexOf(find(fragments, function(frag) {
        return frag.search(/,|\s/) !== -1;
    }));
    if (fragments[divider] && fragments[divider].indexOf(',') === -1) console.warn('Offsets separated by white space(s) are deprecated, use a comma (,) instead.');
    // If divider is found, we divide the list of values and operands to divide
    // them by ofset X and Y.
    var splitRegex = /\s*,\s*|\s+/;
    var ops = divider !== -1 ? [
        fragments.slice(0, divider).concat([
            fragments[divider].split(splitRegex)[0]
        ]),
        [
            fragments[divider].split(splitRegex)[1]
        ].concat(fragments.slice(divider + 1))
    ] : [
        fragments
    ];
    // Convert the values with units to absolute pixels to allow our computations
    ops = ops.map(function(op, index) {
        // Most of the units rely on the orientation of the popper
        var measurement = (index === 1 ? !useHeight : useHeight) ? 'height' : 'width';
        var mergeWithPrevious = false;
        return op// This aggregates any `+` or `-` sign that aren't considered operators
        // e.g.: 10 + +5 => [10, +, +5]
        .reduce(function(a, b) {
            if (a[a.length - 1] === '' && [
                '+',
                '-'
            ].indexOf(b) !== -1) {
                a[a.length - 1] = b;
                mergeWithPrevious = true;
                return a;
            } else if (mergeWithPrevious) {
                a[a.length - 1] += b;
                mergeWithPrevious = false;
                return a;
            } else return a.concat(b);
        }, [])// Here we convert the string values into number values (in px)
        .map(function(str) {
            return toValue(str, measurement, popperOffsets, referenceOffsets);
        });
    });
    // Loop trough the offsets arrays and execute the operations
    ops.forEach(function(op, index) {
        op.forEach(function(frag, index2) {
            if (isNumeric(frag)) offsets[index] += frag * (op[index2 - 1] === '-' ? -1 : 1);
        });
    });
    return offsets;
}
/**
 * @function
 * @memberof Modifiers
 * @argument {Object} data - The data object generated by update method
 * @argument {Object} options - Modifiers configuration and options
 * @argument {Number|String} options.offset=0
 * The offset value as described in the modifier description
 * @returns {Object} The data object, properly modified
 */ function offset(data, _ref) {
    var offset3 = _ref.offset;
    var placement = data.placement, _data$offsets = data.offsets, popper = _data$offsets.popper, reference = _data$offsets.reference;
    var basePlacement = placement.split('-')[0];
    var offsets = void 0;
    if (isNumeric(+offset3)) offsets = [
        +offset3,
        0
    ];
    else offsets = parseOffset(offset3, popper, reference, basePlacement);
    if (basePlacement === 'left') {
        popper.top += offsets[0];
        popper.left -= offsets[1];
    } else if (basePlacement === 'right') {
        popper.top += offsets[0];
        popper.left += offsets[1];
    } else if (basePlacement === 'top') {
        popper.left += offsets[0];
        popper.top -= offsets[1];
    } else if (basePlacement === 'bottom') {
        popper.left += offsets[0];
        popper.top += offsets[1];
    }
    data.popper = popper;
    return data;
}
/**
 * @function
 * @memberof Modifiers
 * @argument {Object} data - The data object generated by `update` method
 * @argument {Object} options - Modifiers configuration and options
 * @returns {Object} The data object, properly modified
 */ function preventOverflow(data, options) {
    var boundariesElement = options.boundariesElement || getOffsetParent(data.instance.popper);
    // If offsetParent is the reference element, we really want to
    // go one step up and use the next offsetParent as reference to
    // avoid to make this modifier completely useless and look like broken
    if (data.instance.reference === boundariesElement) boundariesElement = getOffsetParent(boundariesElement);
    // NOTE: DOM access here
    // resets the popper's position so that the document size can be calculated excluding
    // the size of the popper element itself
    var transformProp = getSupportedPropertyName('transform');
    var popperStyles = data.instance.popper.style; // assignment to help minification
    var top = popperStyles.top, left = popperStyles.left, transform = popperStyles[transformProp];
    popperStyles.top = '';
    popperStyles.left = '';
    popperStyles[transformProp] = '';
    var boundaries = getBoundaries(data.instance.popper, data.instance.reference, options.padding, boundariesElement, data.positionFixed);
    // NOTE: DOM access here
    // restores the original style properties after the offsets have been computed
    popperStyles.top = top;
    popperStyles.left = left;
    popperStyles[transformProp] = transform;
    options.boundaries = boundaries;
    var order = options.priority;
    var popper = data.offsets.popper;
    var check = {
        primary: function primary(placement) {
            var value = popper[placement];
            if (popper[placement] < boundaries[placement] && !options.escapeWithReference) value = Math.max(popper[placement], boundaries[placement]);
            return defineProperty({}, placement, value);
        },
        secondary: function secondary(placement) {
            var mainSide = placement === 'right' ? 'left' : 'top';
            var value = popper[mainSide];
            if (popper[placement] > boundaries[placement] && !options.escapeWithReference) value = Math.min(popper[mainSide], boundaries[placement] - (placement === 'right' ? popper.width : popper.height));
            return defineProperty({}, mainSide, value);
        }
    };
    order.forEach(function(placement) {
        var side = [
            'left',
            'top'
        ].indexOf(placement) !== -1 ? 'primary' : 'secondary';
        popper = _extends({}, popper, check[side](placement));
    });
    data.offsets.popper = popper;
    return data;
}
/**
 * @function
 * @memberof Modifiers
 * @argument {Object} data - The data object generated by `update` method
 * @argument {Object} options - Modifiers configuration and options
 * @returns {Object} The data object, properly modified
 */ function shift(data) {
    var placement = data.placement;
    var basePlacement = placement.split('-')[0];
    var shiftvariation = placement.split('-')[1];
    // if shift shiftvariation is specified, run the modifier
    if (shiftvariation) {
        var _data$offsets = data.offsets, reference = _data$offsets.reference, popper = _data$offsets.popper;
        var isVertical = [
            'bottom',
            'top'
        ].indexOf(basePlacement) !== -1;
        var side = isVertical ? 'left' : 'top';
        var measurement = isVertical ? 'width' : 'height';
        var shiftOffsets = {
            start: defineProperty({}, side, reference[side]),
            end: defineProperty({}, side, reference[side] + reference[measurement] - popper[measurement])
        };
        data.offsets.popper = _extends({}, popper, shiftOffsets[shiftvariation]);
    }
    return data;
}
/**
 * @function
 * @memberof Modifiers
 * @argument {Object} data - The data object generated by update method
 * @argument {Object} options - Modifiers configuration and options
 * @returns {Object} The data object, properly modified
 */ function hide(data) {
    if (!isModifierRequired(data.instance.modifiers, 'hide', 'preventOverflow')) return data;
    var refRect = data.offsets.reference;
    var bound = find(data.instance.modifiers, function(modifier) {
        return modifier.name === 'preventOverflow';
    }).boundaries;
    if (refRect.bottom < bound.top || refRect.left > bound.right || refRect.top > bound.bottom || refRect.right < bound.left) {
        // Avoid unnecessary DOM access if visibility hasn't changed
        if (data.hide === true) return data;
        data.hide = true;
        data.attributes['x-out-of-boundaries'] = '';
    } else {
        // Avoid unnecessary DOM access if visibility hasn't changed
        if (data.hide === false) return data;
        data.hide = false;
        data.attributes['x-out-of-boundaries'] = false;
    }
    return data;
}
/**
 * @function
 * @memberof Modifiers
 * @argument {Object} data - The data object generated by `update` method
 * @argument {Object} options - Modifiers configuration and options
 * @returns {Object} The data object, properly modified
 */ function inner(data) {
    var placement = data.placement;
    var basePlacement = placement.split('-')[0];
    var _data$offsets = data.offsets, popper = _data$offsets.popper, reference = _data$offsets.reference;
    var isHoriz = [
        'left',
        'right'
    ].indexOf(basePlacement) !== -1;
    var subtractLength = [
        'top',
        'left'
    ].indexOf(basePlacement) === -1;
    popper[isHoriz ? 'left' : 'top'] = reference[basePlacement] - (subtractLength ? popper[isHoriz ? 'width' : 'height'] : 0);
    data.placement = getOppositePlacement(placement);
    data.offsets.popper = getClientRect(popper);
    return data;
}
/**
 * Modifier function, each modifier can have a function of this type assigned
 * to its `fn` property.<br />
 * These functions will be called on each update, this means that you must
 * make sure they are performant enough to avoid performance bottlenecks.
 *
 * @function ModifierFn
 * @argument {dataObject} data - The data object generated by `update` method
 * @argument {Object} options - Modifiers configuration and options
 * @returns {dataObject} The data object, properly modified
 */ /**
 * Modifiers are plugins used to alter the behavior of your poppers.<br />
 * Popper.js uses a set of 9 modifiers to provide all the basic functionalities
 * needed by the library.
 *
 * Usually you don't want to override the `order`, `fn` and `onLoad` props.
 * All the other properties are configurations that could be tweaked.
 * @namespace modifiers
 */ var modifiers = {
    /**
   * Modifier used to shift the popper on the start or end of its reference
   * element.<br />
   * It will read the variation of the `placement` property.<br />
   * It can be one either `-end` or `-start`.
   * @memberof modifiers
   * @inner
   */ shift: {
        /** @prop {number} order=100 - Index used to define the order of execution */ order: 100,
        /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */ enabled: true,
        /** @prop {ModifierFn} */ fn: shift
    },
    /**
   * The `offset` modifier can shift your popper on both its axis.
   *
   * It accepts the following units:
   * - `px` or unit-less, interpreted as pixels
   * - `%` or `%r`, percentage relative to the length of the reference element
   * - `%p`, percentage relative to the length of the popper element
   * - `vw`, CSS viewport width unit
   * - `vh`, CSS viewport height unit
   *
   * For length is intended the main axis relative to the placement of the popper.<br />
   * This means that if the placement is `top` or `bottom`, the length will be the
   * `width`. In case of `left` or `right`, it will be the `height`.
   *
   * You can provide a single value (as `Number` or `String`), or a pair of values
   * as `String` divided by a comma or one (or more) white spaces.<br />
   * The latter is a deprecated method because it leads to confusion and will be
   * removed in v2.<br />
   * Additionally, it accepts additions and subtractions between different units.
   * Note that multiplications and divisions aren't supported.
   *
   * Valid examples are:
   * ```
   * 10
   * '10%'
   * '10, 10'
   * '10%, 10'
   * '10 + 10%'
   * '10 - 5vh + 3%'
   * '-10px + 5vh, 5px - 6%'
   * ```
   * > **NB**: If you desire to apply offsets to your poppers in a way that may make them overlap
   * > with their reference element, unfortunately, you will have to disable the `flip` modifier.
   * > You can read more on this at this [issue](https://github.com/FezVrasta/popper.js/issues/373).
   *
   * @memberof modifiers
   * @inner
   */ offset: {
        /** @prop {number} order=200 - Index used to define the order of execution */ order: 200,
        /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */ enabled: true,
        /** @prop {ModifierFn} */ fn: offset,
        /** @prop {Number|String} offset=0
     * The offset value as described in the modifier description
     */ offset: 0
    },
    /**
   * Modifier used to prevent the popper from being positioned outside the boundary.
   *
   * A scenario exists where the reference itself is not within the boundaries.<br />
   * We can say it has "escaped the boundaries" — or just "escaped".<br />
   * In this case we need to decide whether the popper should either:
   *
   * - detach from the reference and remain "trapped" in the boundaries, or
   * - if it should ignore the boundary and "escape with its reference"
   *
   * When `escapeWithReference` is set to`true` and reference is completely
   * outside its boundaries, the popper will overflow (or completely leave)
   * the boundaries in order to remain attached to the edge of the reference.
   *
   * @memberof modifiers
   * @inner
   */ preventOverflow: {
        /** @prop {number} order=300 - Index used to define the order of execution */ order: 300,
        /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */ enabled: true,
        /** @prop {ModifierFn} */ fn: preventOverflow,
        /**
     * @prop {Array} [priority=['left','right','top','bottom']]
     * Popper will try to prevent overflow following these priorities by default,
     * then, it could overflow on the left and on top of the `boundariesElement`
     */ priority: [
            'left',
            'right',
            'top',
            'bottom'
        ],
        /**
     * @prop {number} padding=5
     * Amount of pixel used to define a minimum distance between the boundaries
     * and the popper. This makes sure the popper always has a little padding
     * between the edges of its container
     */ padding: 5,
        /**
     * @prop {String|HTMLElement} boundariesElement='scrollParent'
     * Boundaries used by the modifier. Can be `scrollParent`, `window`,
     * `viewport` or any DOM element.
     */ boundariesElement: 'scrollParent'
    },
    /**
   * Modifier used to make sure the reference and its popper stay near each other
   * without leaving any gap between the two. Especially useful when the arrow is
   * enabled and you want to ensure that it points to its reference element.
   * It cares only about the first axis. You can still have poppers with margin
   * between the popper and its reference element.
   * @memberof modifiers
   * @inner
   */ keepTogether: {
        /** @prop {number} order=400 - Index used to define the order of execution */ order: 400,
        /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */ enabled: true,
        /** @prop {ModifierFn} */ fn: keepTogether
    },
    /**
   * This modifier is used to move the `arrowElement` of the popper to make
   * sure it is positioned between the reference element and its popper element.
   * It will read the outer size of the `arrowElement` node to detect how many
   * pixels of conjunction are needed.
   *
   * It has no effect if no `arrowElement` is provided.
   * @memberof modifiers
   * @inner
   */ arrow: {
        /** @prop {number} order=500 - Index used to define the order of execution */ order: 500,
        /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */ enabled: true,
        /** @prop {ModifierFn} */ fn: arrow,
        /** @prop {String|HTMLElement} element='[x-arrow]' - Selector or node used as arrow */ element: '[x-arrow]'
    },
    /**
   * Modifier used to flip the popper's placement when it starts to overlap its
   * reference element.
   *
   * Requires the `preventOverflow` modifier before it in order to work.
   *
   * **NOTE:** this modifier will interrupt the current update cycle and will
   * restart it if it detects the need to flip the placement.
   * @memberof modifiers
   * @inner
   */ flip: {
        /** @prop {number} order=600 - Index used to define the order of execution */ order: 600,
        /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */ enabled: true,
        /** @prop {ModifierFn} */ fn: flip,
        /**
     * @prop {String|Array} behavior='flip'
     * The behavior used to change the popper's placement. It can be one of
     * `flip`, `clockwise`, `counterclockwise` or an array with a list of valid
     * placements (with optional variations)
     */ behavior: 'flip',
        /**
     * @prop {number} padding=5
     * The popper will flip if it hits the edges of the `boundariesElement`
     */ padding: 5,
        /**
     * @prop {String|HTMLElement} boundariesElement='viewport'
     * The element which will define the boundaries of the popper position.
     * The popper will never be placed outside of the defined boundaries
     * (except if `keepTogether` is enabled)
     */ boundariesElement: 'viewport',
        /**
     * @prop {Boolean} flipVariations=false
     * The popper will switch placement variation between `-start` and `-end` when
     * the reference element overlaps its boundaries.
     *
     * The original placement should have a set variation.
     */ flipVariations: false,
        /**
     * @prop {Boolean} flipVariationsByContent=false
     * The popper will switch placement variation between `-start` and `-end` when
     * the popper element overlaps its reference boundaries.
     *
     * The original placement should have a set variation.
     */ flipVariationsByContent: false
    },
    /**
   * Modifier used to make the popper flow toward the inner of the reference element.
   * By default, when this modifier is disabled, the popper will be placed outside
   * the reference element.
   * @memberof modifiers
   * @inner
   */ inner: {
        /** @prop {number} order=700 - Index used to define the order of execution */ order: 700,
        /** @prop {Boolean} enabled=false - Whether the modifier is enabled or not */ enabled: false,
        /** @prop {ModifierFn} */ fn: inner
    },
    /**
   * Modifier used to hide the popper when its reference element is outside of the
   * popper boundaries. It will set a `x-out-of-boundaries` attribute which can
   * be used to hide with a CSS selector the popper when its reference is
   * out of boundaries.
   *
   * Requires the `preventOverflow` modifier before it in order to work.
   * @memberof modifiers
   * @inner
   */ hide: {
        /** @prop {number} order=800 - Index used to define the order of execution */ order: 800,
        /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */ enabled: true,
        /** @prop {ModifierFn} */ fn: hide
    },
    /**
   * Computes the style that will be applied to the popper element to gets
   * properly positioned.
   *
   * Note that this modifier will not touch the DOM, it just prepares the styles
   * so that `applyStyle` modifier can apply it. This separation is useful
   * in case you need to replace `applyStyle` with a custom implementation.
   *
   * This modifier has `850` as `order` value to maintain backward compatibility
   * with previous versions of Popper.js. Expect the modifiers ordering method
   * to change in future major versions of the library.
   *
   * @memberof modifiers
   * @inner
   */ computeStyle: {
        /** @prop {number} order=850 - Index used to define the order of execution */ order: 850,
        /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */ enabled: true,
        /** @prop {ModifierFn} */ fn: computeStyle,
        /**
     * @prop {Boolean} gpuAcceleration=true
     * If true, it uses the CSS 3D transformation to position the popper.
     * Otherwise, it will use the `top` and `left` properties
     */ gpuAcceleration: true,
        /**
     * @prop {string} [x='bottom']
     * Where to anchor the X axis (`bottom` or `top`). AKA X offset origin.
     * Change this if your popper should grow in a direction different from `bottom`
     */ x: 'bottom',
        /**
     * @prop {string} [x='left']
     * Where to anchor the Y axis (`left` or `right`). AKA Y offset origin.
     * Change this if your popper should grow in a direction different from `right`
     */ y: 'right'
    },
    /**
   * Applies the computed styles to the popper element.
   *
   * All the DOM manipulations are limited to this modifier. This is useful in case
   * you want to integrate Popper.js inside a framework or view library and you
   * want to delegate all the DOM manipulations to it.
   *
   * Note that if you disable this modifier, you must make sure the popper element
   * has its position set to `absolute` before Popper.js can do its work!
   *
   * Just disable this modifier and define your own to achieve the desired effect.
   *
   * @memberof modifiers
   * @inner
   */ applyStyle: {
        /** @prop {number} order=900 - Index used to define the order of execution */ order: 900,
        /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */ enabled: true,
        /** @prop {ModifierFn} */ fn: applyStyle,
        /** @prop {Function} */ onLoad: applyStyleOnLoad,
        /**
     * @deprecated since version 1.10.0, the property moved to `computeStyle` modifier
     * @prop {Boolean} gpuAcceleration=true
     * If true, it uses the CSS 3D transformation to position the popper.
     * Otherwise, it will use the `top` and `left` properties
     */ gpuAcceleration: undefined
    }
};
/**
 * The `dataObject` is an object containing all the information used by Popper.js.
 * This object is passed to modifiers and to the `onCreate` and `onUpdate` callbacks.
 * @name dataObject
 * @property {Object} data.instance The Popper.js instance
 * @property {String} data.placement Placement applied to popper
 * @property {String} data.originalPlacement Placement originally defined on init
 * @property {Boolean} data.flipped True if popper has been flipped by flip modifier
 * @property {Boolean} data.hide True if the reference element is out of boundaries, useful to know when to hide the popper
 * @property {HTMLElement} data.arrowElement Node used as arrow by arrow modifier
 * @property {Object} data.styles Any CSS property defined here will be applied to the popper. It expects the JavaScript nomenclature (eg. `marginBottom`)
 * @property {Object} data.arrowStyles Any CSS property defined here will be applied to the popper arrow. It expects the JavaScript nomenclature (eg. `marginBottom`)
 * @property {Object} data.boundaries Offsets of the popper boundaries
 * @property {Object} data.offsets The measurements of popper, reference and arrow elements
 * @property {Object} data.offsets.popper `top`, `left`, `width`, `height` values
 * @property {Object} data.offsets.reference `top`, `left`, `width`, `height` values
 * @property {Object} data.offsets.arrow] `top` and `left` offsets, only one of them will be different from 0
 */ /**
 * Default options provided to Popper.js constructor.<br />
 * These can be overridden using the `options` argument of Popper.js.<br />
 * To override an option, simply pass an object with the same
 * structure of the `options` object, as the 3rd argument. For example:
 * ```
 * new Popper(ref, pop, {
 *   modifiers: {
 *     preventOverflow: { enabled: false }
 *   }
 * })
 * ```
 * @type {Object}
 * @static
 * @memberof Popper
 */ var Defaults = {
    /**
   * Popper's placement.
   * @prop {Popper.placements} placement='bottom'
   */ placement: 'bottom',
    /**
   * Set this to true if you want popper to position it self in 'fixed' mode
   * @prop {Boolean} positionFixed=false
   */ positionFixed: false,
    /**
   * Whether events (resize, scroll) are initially enabled.
   * @prop {Boolean} eventsEnabled=true
   */ eventsEnabled: true,
    /**
   * Set to true if you want to automatically remove the popper when
   * you call the `destroy` method.
   * @prop {Boolean} removeOnDestroy=false
   */ removeOnDestroy: false,
    /**
   * Callback called when the popper is created.<br />
   * By default, it is set to no-op.<br />
   * Access Popper.js instance with `data.instance`.
   * @prop {onCreate}
   */ onCreate: function onCreate() {},
    /**
   * Callback called when the popper is updated. This callback is not called
   * on the initialization/creation of the popper, but only on subsequent
   * updates.<br />
   * By default, it is set to no-op.<br />
   * Access Popper.js instance with `data.instance`.
   * @prop {onUpdate}
   */ onUpdate: function onUpdate() {},
    /**
   * List of modifiers used to modify the offsets before they are applied to the popper.
   * They provide most of the functionalities of Popper.js.
   * @prop {modifiers}
   */ modifiers: modifiers
};
/**
 * @callback onCreate
 * @param {dataObject} data
 */ /**
 * @callback onUpdate
 * @param {dataObject} data
 */ // Utils
// Methods
var Popper = function() {
    /**
   * Creates a new Popper.js instance.
   * @class Popper
   * @param {Element|referenceObject} reference - The reference element used to position the popper
   * @param {Element} popper - The HTML / XML element used as the popper
   * @param {Object} options - Your custom options to override the ones defined in [Defaults](#defaults)
   * @return {Object} instance - The generated Popper.js instance
   */ function Popper1(reference, popper) {
        var _this = this;
        var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
        classCallCheck(this, Popper1);
        this.scheduleUpdate = function() {
            return requestAnimationFrame(_this.update);
        };
        // make update() debounced, so that it only runs at most once-per-tick
        this.update = debounce(this.update.bind(this));
        // with {} we create a new object with the options inside it
        this.options = _extends({}, Popper1.Defaults, options);
        // init state
        this.state = {
            isDestroyed: false,
            isCreated: false,
            scrollParents: []
        };
        // get reference and popper elements (allow jQuery wrappers)
        this.reference = reference && reference.jquery ? reference[0] : reference;
        this.popper = popper && popper.jquery ? popper[0] : popper;
        // Deep merge modifiers options
        this.options.modifiers = {};
        Object.keys(_extends({}, Popper1.Defaults.modifiers, options.modifiers)).forEach(function(name) {
            _this.options.modifiers[name] = _extends({}, Popper1.Defaults.modifiers[name] || {}, options.modifiers ? options.modifiers[name] : {});
        });
        // Refactoring modifiers' list (Object => Array)
        this.modifiers = Object.keys(this.options.modifiers).map(function(name) {
            return _extends({
                name: name
            }, _this.options.modifiers[name]);
        })// sort the modifiers by order
        .sort(function(a, b) {
            return a.order - b.order;
        });
        // modifiers have the ability to execute arbitrary code when Popper.js get inited
        // such code is executed in the same order of its modifier
        // they could add new properties to their options configuration
        // BE AWARE: don't add options to `options.modifiers.name` but to `modifierOptions`!
        this.modifiers.forEach(function(modifierOptions) {
            if (modifierOptions.enabled && isFunction(modifierOptions.onLoad)) modifierOptions.onLoad(_this.reference, _this.popper, _this.options, modifierOptions, _this.state);
        });
        // fire the first update to position the popper in the right place
        this.update();
        var eventsEnabled = this.options.eventsEnabled;
        if (eventsEnabled) // setup event listeners, they will take care of update the position in specific situations
        this.enableEventListeners();
        this.state.eventsEnabled = eventsEnabled;
    }
    // We can't use class properties because they don't get listed in the
    // class prototype and break stuff like Sinon stubs
    createClass(Popper1, [
        {
            key: 'update',
            value: function update$$1() {
                return update.call(this);
            }
        },
        {
            key: 'destroy',
            value: function destroy$$1() {
                return destroy.call(this);
            }
        },
        {
            key: 'enableEventListeners',
            value: function enableEventListeners$$1() {
                return enableEventListeners.call(this);
            }
        },
        {
            key: 'disableEventListeners',
            value: function disableEventListeners$$1() {
                return disableEventListeners.call(this);
            }
        }
    ]);
    return Popper1;
}();
/**
 * The `referenceObject` is an object that provides an interface compatible with Popper.js
 * and lets you use it as replacement of a real DOM node.<br />
 * You can use this method to position a popper relatively to a set of coordinates
 * in case you don't have a DOM node to use as reference.
 *
 * ```
 * new Popper(referenceObject, popperNode);
 * ```
 *
 * NB: This feature isn't supported in Internet Explorer 10.
 * @name referenceObject
 * @property {Function} data.getBoundingClientRect
 * A function that returns a set of coordinates compatible with the native `getBoundingClientRect` method.
 * @property {number} data.clientWidth
 * An ES6 getter that will return the width of the virtual reference element.
 * @property {number} data.clientHeight
 * An ES6 getter that will return the height of the virtual reference element.
 */ Popper.Utils = (typeof window !== 'undefined' ? window : global).PopperUtils;
Popper.placements = placements;
Popper.Defaults = Defaults;
exports.default = Popper;

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"ixjgi":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>_radioDefault.default
);
var _radio = require("./Radio");
var _radioDefault = parcelHelpers.interopDefault(_radio);

},{"./Radio":"6IVa3","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"6IVa3":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "styles", ()=>styles
);
var _extends = require("@babel/runtime/helpers/esm/extends");
var _extendsDefault = parcelHelpers.interopDefault(_extends);
var _objectWithoutProperties = require("@babel/runtime/helpers/esm/objectWithoutProperties");
var _objectWithoutPropertiesDefault = parcelHelpers.interopDefault(_objectWithoutProperties);
var _react = require("react");
var _propTypes = require("prop-types");
var _propTypesDefault = parcelHelpers.interopDefault(_propTypes);
var _clsx = require("clsx");
var _clsxDefault = parcelHelpers.interopDefault(_clsx);
var _utils = require("@material-ui/utils");
var _switchBase = require("../internal/SwitchBase");
var _switchBaseDefault = parcelHelpers.interopDefault(_switchBase);
var _radioButtonIcon = require("./RadioButtonIcon");
var _radioButtonIconDefault = parcelHelpers.interopDefault(_radioButtonIcon);
var _colorManipulator = require("../styles/colorManipulator");
var _capitalize = require("../utils/capitalize");
var _capitalizeDefault = parcelHelpers.interopDefault(_capitalize);
var _createChainedFunction = require("../utils/createChainedFunction");
var _createChainedFunctionDefault = parcelHelpers.interopDefault(_createChainedFunction);
var _withStyles = require("../styles/withStyles");
var _withStylesDefault = parcelHelpers.interopDefault(_withStyles);
var _useRadioGroup = require("../RadioGroup/useRadioGroup");
var _useRadioGroupDefault = parcelHelpers.interopDefault(_useRadioGroup);
var styles = function styles(theme) {
    return {
        /* Styles applied to the root element. */ root: {
            color: theme.palette.text.secondary
        },
        /* Pseudo-class applied to the root element if `checked={true}`. */ checked: {},
        /* Pseudo-class applied to the root element if `disabled={true}`. */ disabled: {},
        /* Styles applied to the root element if `color="primary"`. */ colorPrimary: {
            '&$checked': {
                color: theme.palette.primary.main,
                '&:hover': {
                    backgroundColor: _colorManipulator.alpha(theme.palette.primary.main, theme.palette.action.hoverOpacity),
                    // Reset on touch devices, it doesn't add specificity
                    '@media (hover: none)': {
                        backgroundColor: 'transparent'
                    }
                }
            },
            '&$disabled': {
                color: theme.palette.action.disabled
            }
        },
        /* Styles applied to the root element if `color="secondary"`. */ colorSecondary: {
            '&$checked': {
                color: theme.palette.secondary.main,
                '&:hover': {
                    backgroundColor: _colorManipulator.alpha(theme.palette.secondary.main, theme.palette.action.hoverOpacity),
                    // Reset on touch devices, it doesn't add specificity
                    '@media (hover: none)': {
                        backgroundColor: 'transparent'
                    }
                }
            },
            '&$disabled': {
                color: theme.palette.action.disabled
            }
        }
    };
};
var defaultCheckedIcon = /*#__PURE__*/ _react.createElement(_radioButtonIconDefault.default, {
    checked: true
});
var defaultIcon = /*#__PURE__*/ _react.createElement(_radioButtonIconDefault.default, null);
var Radio = /*#__PURE__*/ _react.forwardRef(function Radio(props, ref) {
    var checkedProp = props.checked, classes = props.classes, _props$color = props.color, color = _props$color === void 0 ? 'secondary' : _props$color, nameProp = props.name, onChangeProp = props.onChange, _props$size = props.size, size = _props$size === void 0 ? 'medium' : _props$size, other = _objectWithoutPropertiesDefault.default(props, [
        "checked",
        "classes",
        "color",
        "name",
        "onChange",
        "size"
    ]);
    var radioGroup = _useRadioGroupDefault.default();
    var checked = checkedProp;
    var onChange = _createChainedFunctionDefault.default(onChangeProp, radioGroup && radioGroup.onChange);
    var name = nameProp;
    if (radioGroup) {
        if (typeof checked === 'undefined') checked = radioGroup.value === props.value;
        if (typeof name === 'undefined') name = radioGroup.name;
    }
    return /*#__PURE__*/ _react.createElement(_switchBaseDefault.default, _extendsDefault.default({
        color: color,
        type: "radio",
        icon: /*#__PURE__*/ _react.cloneElement(defaultIcon, {
            fontSize: size === 'small' ? 'small' : 'medium'
        }),
        checkedIcon: /*#__PURE__*/ _react.cloneElement(defaultCheckedIcon, {
            fontSize: size === 'small' ? 'small' : 'medium'
        }),
        classes: {
            root: _clsxDefault.default(classes.root, classes["color".concat(_capitalizeDefault.default(color))]),
            checked: classes.checked,
            disabled: classes.disabled
        },
        name: name,
        checked: checked,
        onChange: onChange,
        ref: ref
    }, other));
});
Radio.propTypes = {
    // ----------------------------- Warning --------------------------------
    // | These PropTypes are generated from the TypeScript type definitions |
    // |     To update them edit the d.ts file and run "yarn proptypes"     |
    // ----------------------------------------------------------------------
    /**
   * If `true`, the component is checked.
   */ checked: _propTypesDefault.default.bool,
    /**
   * The icon to display when the component is checked.
   */ checkedIcon: _propTypesDefault.default.node,
    /**
   * Override or extend the styles applied to the component.
   * See [CSS API](#css) below for more details.
   */ classes: _propTypesDefault.default.object,
    /**
   * The color of the component. It supports those theme colors that make sense for this component.
   */ color: _propTypesDefault.default.oneOf([
        'default',
        'primary',
        'secondary'
    ]),
    /**
   * If `true`, the radio will be disabled.
   */ disabled: _propTypesDefault.default.bool,
    /**
   * If `true`, the ripple effect will be disabled.
   */ disableRipple: _propTypesDefault.default.bool,
    /**
   * The icon to display when the component is unchecked.
   */ icon: _propTypesDefault.default.node,
    /**
   * The id of the `input` element.
   */ id: _propTypesDefault.default.string,
    /**
   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.
   */ inputProps: _propTypesDefault.default.object,
    /**
   * Pass a ref to the `input` element.
   */ inputRef: _utils.refType,
    /**
   * Name attribute of the `input` element.
   */ name: _propTypesDefault.default.string,
    /**
   * Callback fired when the state is changed.
   *
   * @param {object} event The event source of the callback.
   * You can pull out the new value by accessing `event.target.value` (string).
   * You can pull out the new checked state by accessing `event.target.checked` (boolean).
   */ onChange: _propTypesDefault.default.func,
    /**
   * If `true`, the `input` element will be required.
   */ required: _propTypesDefault.default.bool,
    /**
   * The size of the radio.
   * `small` is equivalent to the dense radio styling.
   */ size: _propTypesDefault.default.oneOf([
        'medium',
        'small'
    ]),
    /**
   * The value of the component. The DOM API casts this to a string.
   */ value: _propTypesDefault.default.any
};
exports.default = _withStylesDefault.default(styles, {
    name: 'MuiRadio'
})(Radio);

},{"@babel/runtime/helpers/esm/extends":"fTBFS","@babel/runtime/helpers/esm/objectWithoutProperties":"25tJ4","react":"21dqq","prop-types":"7wKI2","clsx":"83C22","@material-ui/utils":"54RkF","../internal/SwitchBase":"bONuw","./RadioButtonIcon":"gvPh6","../styles/colorManipulator":"iz48G","../utils/capitalize":"5AJVX","../utils/createChainedFunction":"BNP7Q","../styles/withStyles":"7U0iM","../RadioGroup/useRadioGroup":"9M7Rg","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"gvPh6":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "styles", ()=>styles
);
var _react = require("react");
var _propTypes = require("prop-types");
var _propTypesDefault = parcelHelpers.interopDefault(_propTypes);
var _clsx = require("clsx");
var _clsxDefault = parcelHelpers.interopDefault(_clsx);
var _radioButtonUnchecked = require("../internal/svg-icons/RadioButtonUnchecked");
var _radioButtonUncheckedDefault = parcelHelpers.interopDefault(_radioButtonUnchecked);
var _radioButtonChecked = require("../internal/svg-icons/RadioButtonChecked");
var _radioButtonCheckedDefault = parcelHelpers.interopDefault(_radioButtonChecked);
var _withStyles = require("../styles/withStyles");
var _withStylesDefault = parcelHelpers.interopDefault(_withStyles);
var styles = function styles(theme) {
    return {
        root: {
            position: 'relative',
            display: 'flex',
            '&$checked $layer': {
                transform: 'scale(1)',
                transition: theme.transitions.create('transform', {
                    easing: theme.transitions.easing.easeOut,
                    duration: theme.transitions.duration.shortest
                })
            }
        },
        layer: {
            left: 0,
            position: 'absolute',
            transform: 'scale(0)',
            transition: theme.transitions.create('transform', {
                easing: theme.transitions.easing.easeIn,
                duration: theme.transitions.duration.shortest
            })
        },
        checked: {}
    };
};
/**
 * @ignore - internal component.
 */ function RadioButtonIcon(props) {
    var checked = props.checked, classes = props.classes, fontSize = props.fontSize;
    return /*#__PURE__*/ _react.createElement("div", {
        className: _clsxDefault.default(classes.root, checked && classes.checked)
    }, /*#__PURE__*/ _react.createElement(_radioButtonUncheckedDefault.default, {
        fontSize: fontSize
    }), /*#__PURE__*/ _react.createElement(_radioButtonCheckedDefault.default, {
        fontSize: fontSize,
        className: classes.layer
    }));
}
RadioButtonIcon.propTypes = {
    /**
   * If `true`, the component is checked.
   */ checked: _propTypesDefault.default.bool,
    /**
   * Override or extend the styles applied to the component.
   * See [CSS API](#css) below for more details.
   */ classes: _propTypesDefault.default.object.isRequired,
    /**
   * The size of the radio.
   * `small` is equivalent to the dense radio styling.
   */ fontSize: _propTypesDefault.default.oneOf([
        'small',
        'medium'
    ])
};
exports.default = _withStylesDefault.default(styles, {
    name: 'PrivateRadioButtonIcon'
})(RadioButtonIcon);

},{"react":"21dqq","prop-types":"7wKI2","clsx":"83C22","../internal/svg-icons/RadioButtonUnchecked":"1uxjD","../internal/svg-icons/RadioButtonChecked":"hDQXb","../styles/withStyles":"7U0iM","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"1uxjD":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _react = require("react");
var _createSvgIcon = require("../../utils/createSvgIcon");
var _createSvgIconDefault = parcelHelpers.interopDefault(_createSvgIcon);
/**
 * @ignore - internal component.
 */ exports.default = _createSvgIconDefault.default(/*#__PURE__*/ _react.createElement("path", {
    d: "M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z"
}), 'RadioButtonUnchecked');

},{"react":"21dqq","../../utils/createSvgIcon":"lVBTd","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"hDQXb":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _react = require("react");
var _createSvgIcon = require("../../utils/createSvgIcon");
var _createSvgIconDefault = parcelHelpers.interopDefault(_createSvgIcon);
/**
 * @ignore - internal component.
 */ exports.default = _createSvgIconDefault.default(/*#__PURE__*/ _react.createElement("path", {
    d: "M8.465 8.465C9.37 7.56 10.62 7 12 7C14.76 7 17 9.24 17 12C17 13.38 16.44 14.63 15.535 15.535C14.63 16.44 13.38 17 12 17C9.24 17 7 14.76 7 12C7 10.62 7.56 9.37 8.465 8.465Z"
}), 'RadioButtonChecked');

},{"react":"21dqq","../../utils/createSvgIcon":"lVBTd","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"9M7Rg":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _react = require("react");
var _radioGroupContext = require("./RadioGroupContext");
var _radioGroupContextDefault = parcelHelpers.interopDefault(_radioGroupContext);
function useRadioGroup() {
    return _react.useContext(_radioGroupContextDefault.default);
}
exports.default = useRadioGroup;

},{"react":"21dqq","./RadioGroupContext":"03Ibd","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"03Ibd":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _react = require("react");
/**
 * @ignore - internal component.
 */ var RadioGroupContext = _react.createContext();
RadioGroupContext.displayName = 'RadioGroupContext';
exports.default = RadioGroupContext;

},{"react":"21dqq","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"hhN1b":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>_radioGroupDefault.default
);
parcelHelpers.export(exports, "useRadioGroup", ()=>_useRadioGroupDefault.default
);
var _radioGroup = require("./RadioGroup");
var _radioGroupDefault = parcelHelpers.interopDefault(_radioGroup);
var _useRadioGroup = require("./useRadioGroup");
var _useRadioGroupDefault = parcelHelpers.interopDefault(_useRadioGroup);

},{"./RadioGroup":"370lo","./useRadioGroup":"9M7Rg","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"370lo":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _extends = require("@babel/runtime/helpers/esm/extends");
var _extendsDefault = parcelHelpers.interopDefault(_extends);
var _slicedToArray = require("@babel/runtime/helpers/esm/slicedToArray");
var _slicedToArrayDefault = parcelHelpers.interopDefault(_slicedToArray);
var _objectWithoutProperties = require("@babel/runtime/helpers/esm/objectWithoutProperties");
var _objectWithoutPropertiesDefault = parcelHelpers.interopDefault(_objectWithoutProperties);
var _react = require("react");
var _propTypes = require("prop-types");
var _propTypesDefault = parcelHelpers.interopDefault(_propTypes);
var _formGroup = require("../FormGroup");
var _formGroupDefault = parcelHelpers.interopDefault(_formGroup);
var _useForkRef = require("../utils/useForkRef");
var _useForkRefDefault = parcelHelpers.interopDefault(_useForkRef);
var _useControlled = require("../utils/useControlled");
var _useControlledDefault = parcelHelpers.interopDefault(_useControlled);
var _radioGroupContext = require("./RadioGroupContext");
var _radioGroupContextDefault = parcelHelpers.interopDefault(_radioGroupContext);
var _unstableUseId = require("../utils/unstable_useId");
var _unstableUseIdDefault = parcelHelpers.interopDefault(_unstableUseId);
var RadioGroup = /*#__PURE__*/ _react.forwardRef(function RadioGroup(props, ref) {
    var actions = props.actions, children = props.children, nameProp = props.name, valueProp = props.value, onChange = props.onChange, other = _objectWithoutPropertiesDefault.default(props, [
        "actions",
        "children",
        "name",
        "value",
        "onChange"
    ]);
    var rootRef = _react.useRef(null);
    var _useControlled1 = _useControlledDefault.default({
        controlled: valueProp,
        default: props.defaultValue,
        name: 'RadioGroup'
    }), _useControlled2 = _slicedToArrayDefault.default(_useControlled1, 2), value = _useControlled2[0], setValue = _useControlled2[1];
    _react.useImperativeHandle(actions, function() {
        return {
            focus: function focus() {
                var input = rootRef.current.querySelector('input:not(:disabled):checked');
                if (!input) input = rootRef.current.querySelector('input:not(:disabled)');
                if (input) input.focus();
            }
        };
    }, []);
    var handleRef = _useForkRefDefault.default(ref, rootRef);
    var handleChange = function handleChange(event) {
        setValue(event.target.value);
        if (onChange) onChange(event, event.target.value);
    };
    var name = _unstableUseIdDefault.default(nameProp);
    return /*#__PURE__*/ _react.createElement(_radioGroupContextDefault.default.Provider, {
        value: {
            name: name,
            onChange: handleChange,
            value: value
        }
    }, /*#__PURE__*/ _react.createElement(_formGroupDefault.default, _extendsDefault.default({
        role: "radiogroup",
        ref: handleRef
    }, other), children));
});
RadioGroup.propTypes = {
    // ----------------------------- Warning --------------------------------
    // | These PropTypes are generated from the TypeScript type definitions |
    // |     To update them edit the d.ts file and run "yarn proptypes"     |
    // ----------------------------------------------------------------------
    /**
   * The content of the component.
   */ children: _propTypesDefault.default.node,
    /**
   * The default `input` element value. Use when the component is not controlled.
   */ defaultValue: _propTypesDefault.default.oneOfType([
        _propTypesDefault.default.arrayOf(_propTypesDefault.default.string),
        _propTypesDefault.default.number,
        _propTypesDefault.default.string
    ]),
    /**
   * The name used to reference the value of the control.
   * If you don't provide this prop, it falls back to a randomly generated name.
   */ name: _propTypesDefault.default.string,
    /**
   * Callback fired when a radio button is selected.
   *
   * @param {object} event The event source of the callback.
   * You can pull out the new value by accessing `event.target.value` (string).
   */ onChange: _propTypesDefault.default.func,
    /**
   * Value of the selected radio button. The DOM API casts this to a string.
   */ value: _propTypesDefault.default.any
};
exports.default = RadioGroup;

},{"@babel/runtime/helpers/esm/extends":"fTBFS","@babel/runtime/helpers/esm/slicedToArray":"cBZWN","@babel/runtime/helpers/esm/objectWithoutProperties":"25tJ4","react":"21dqq","prop-types":"7wKI2","../FormGroup":"03BFX","../utils/useForkRef":"kUpGa","../utils/useControlled":"1ORwD","./RadioGroupContext":"03Ibd","../utils/unstable_useId":"crGfn","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"5AvqD":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>_rootRefDefault.default
);
var _rootRef = require("./RootRef");
var _rootRefDefault = parcelHelpers.interopDefault(_rootRef);

},{"./RootRef":"e04nZ","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"e04nZ":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _classCallCheck = require("@babel/runtime/helpers/esm/classCallCheck");
var _classCallCheckDefault = parcelHelpers.interopDefault(_classCallCheck);
var _createClass = require("@babel/runtime/helpers/esm/createClass");
var _createClassDefault = parcelHelpers.interopDefault(_createClass);
var _inherits = require("@babel/runtime/helpers/esm/inherits");
var _inheritsDefault = parcelHelpers.interopDefault(_inherits);
var _possibleConstructorReturn = require("@babel/runtime/helpers/esm/possibleConstructorReturn");
var _possibleConstructorReturnDefault = parcelHelpers.interopDefault(_possibleConstructorReturn);
var _getPrototypeOf = require("@babel/runtime/helpers/esm/getPrototypeOf");
var _getPrototypeOfDefault = parcelHelpers.interopDefault(_getPrototypeOf);
var _react = require("react");
var _reactDom = require("react-dom");
var _propTypes = require("prop-types");
var _propTypesDefault = parcelHelpers.interopDefault(_propTypes);
var _utils = require("@material-ui/utils");
var _setRef = require("../utils/setRef");
var _setRefDefault = parcelHelpers.interopDefault(_setRef);
function _createSuper(Derived) {
    var hasNativeReflectConstruct = _isNativeReflectConstruct();
    return function _createSuperInternal() {
        var Super = _getPrototypeOfDefault.default(Derived), result;
        if (hasNativeReflectConstruct) {
            var NewTarget = _getPrototypeOfDefault.default(this).constructor;
            result = Reflect.construct(Super, arguments, NewTarget);
        } else result = Super.apply(this, arguments);
        return _possibleConstructorReturnDefault.default(this, result);
    };
}
function _isNativeReflectConstruct() {
    if (typeof Reflect === "undefined" || !Reflect.construct) return false;
    if (Reflect.construct.sham) return false;
    if (typeof Proxy === "function") return true;
    try {
        Date.prototype.toString.call(Reflect.construct(Date, [], function() {}));
        return true;
    } catch (e) {
        return false;
    }
}
var warnedOnce = false;
/**
 * ⚠️⚠️⚠️
 * If you want the DOM element of a Material-UI component check out
 * [FAQ: How can I access the DOM element?](/getting-started/faq/#how-can-i-access-the-dom-element)
 * first.
 *
 * This component uses `findDOMNode` which is deprecated in React.StrictMode.
 *
 * Helper component to allow attaching a ref to a
 * wrapped element to access the underlying DOM element.
 *
 * It's highly inspired by https://github.com/facebook/react/issues/11401#issuecomment-340543801.
 * For example:
 * ```jsx
 * import React from 'react';
 * import RootRef from '@material-ui/core/RootRef';
 *
 * function MyComponent() {
 *   const domRef = React.useRef();
 *
 *   React.useEffect(() => {
 *     console.log(domRef.current); // DOM node
 *   }, []);
 *
 *   return (
 *     <RootRef rootRef={domRef}>
 *       <SomeChildComponent />
 *     </RootRef>
 *   );
 * }
 * ```
 *
 * @deprecated
 */ var RootRef = /*#__PURE__*/ function(_React$Component) {
    _inheritsDefault.default(RootRef1, _React$Component);
    var _super = _createSuper(RootRef1);
    function RootRef1() {
        _classCallCheckDefault.default(this, RootRef1);
        return _super.apply(this, arguments);
    }
    _createClassDefault.default(RootRef1, [
        {
            key: "componentDidMount",
            value: function componentDidMount() {
                this.ref = _reactDom.findDOMNode(this);
                _setRefDefault.default(this.props.rootRef, this.ref);
            }
        },
        {
            key: "componentDidUpdate",
            value: function componentDidUpdate(prevProps) {
                var ref = _reactDom.findDOMNode(this);
                if (prevProps.rootRef !== this.props.rootRef || this.ref !== ref) {
                    if (prevProps.rootRef !== this.props.rootRef) _setRefDefault.default(prevProps.rootRef, null);
                    this.ref = ref;
                    _setRefDefault.default(this.props.rootRef, this.ref);
                }
            }
        },
        {
            key: "componentWillUnmount",
            value: function componentWillUnmount() {
                this.ref = null;
                _setRefDefault.default(this.props.rootRef, null);
            }
        },
        {
            key: "render",
            value: function render() {
                if (!warnedOnce) {
                    warnedOnce = true;
                    console.warn([
                        'Material-UI: The RootRef component is deprecated.',
                        'The component relies on the ReactDOM.findDOMNode API which is deprecated in React.StrictMode.',
                        'Instead, you can get a reference to the underlying DOM node of the components via the `ref` prop.'
                    ].join('/n'));
                }
                return this.props.children;
            }
        }
    ]);
    return RootRef1;
}(_react.Component);
RootRef.propTypes = {
    /**
   * The wrapped element.
   */ children: _propTypesDefault.default.element.isRequired,
    /**
   * A ref that points to the first DOM node of the wrapped element.
   */ rootRef: _utils.refType.isRequired
};
RootRef.propTypes = _utils.exactProp(RootRef.propTypes);
exports.default = RootRef;

},{"@babel/runtime/helpers/esm/classCallCheck":"aNx1x","@babel/runtime/helpers/esm/createClass":"kZyth","@babel/runtime/helpers/esm/inherits":"drFw3","@babel/runtime/helpers/esm/possibleConstructorReturn":"jIBiB","@babel/runtime/helpers/esm/getPrototypeOf":"edBWC","react":"21dqq","react-dom":"j6uA9","prop-types":"7wKI2","@material-ui/utils":"54RkF","../utils/setRef":"6f9nb","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"drFw3":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _setPrototypeOfJs = require("./setPrototypeOf.js");
var _setPrototypeOfJsDefault = parcelHelpers.interopDefault(_setPrototypeOfJs);
function _inherits(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) throw new TypeError("Super expression must either be null or a function");
    subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
            value: subClass,
            writable: true,
            configurable: true
        }
    });
    if (superClass) _setPrototypeOfJsDefault.default(subClass, superClass);
}
exports.default = _inherits;

},{"./setPrototypeOf.js":"3XDFA","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"jIBiB":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _typeof = require("@babel/runtime/helpers/typeof");
var _typeofDefault = parcelHelpers.interopDefault(_typeof);
var _assertThisInitializedJs = require("./assertThisInitialized.js");
var _assertThisInitializedJsDefault = parcelHelpers.interopDefault(_assertThisInitializedJs);
function _possibleConstructorReturn(self, call) {
    if (call && (_typeofDefault.default(call) === "object" || typeof call === "function")) return call;
    else if (call !== void 0) throw new TypeError("Derived constructors may only return object or undefined");
    return _assertThisInitializedJsDefault.default(self);
}
exports.default = _possibleConstructorReturn;

},{"@babel/runtime/helpers/typeof":"jgQjt","./assertThisInitialized.js":"iy3su","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"jgQjt":[function(require,module,exports) {
function _typeof(obj1) {
    if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
        module.exports = _typeof = function _typeof(obj) {
            return typeof obj;
        };
        module.exports["default"] = module.exports, module.exports.__esModule = true;
    } else {
        module.exports = _typeof = function _typeof(obj) {
            return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
        };
        module.exports["default"] = module.exports, module.exports.__esModule = true;
    }
    return _typeof(obj1);
}
module.exports = _typeof;
module.exports["default"] = module.exports, module.exports.__esModule = true;

},{}],"edBWC":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
function _getPrototypeOf(o1) {
    _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
        return o.__proto__ || Object.getPrototypeOf(o);
    };
    return _getPrototypeOf(o1);
}
exports.default = _getPrototypeOf;

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"fDj29":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>_selectDefault.default
);
var _select = require("./Select");
var _selectDefault = parcelHelpers.interopDefault(_select);

},{"./Select":"gwFy9","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"gwFy9":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "styles", ()=>styles
);
var _extends = require("@babel/runtime/helpers/esm/extends");
var _extendsDefault = parcelHelpers.interopDefault(_extends);
var _objectWithoutProperties = require("@babel/runtime/helpers/esm/objectWithoutProperties");
var _objectWithoutPropertiesDefault = parcelHelpers.interopDefault(_objectWithoutProperties);
var _react = require("react");
var _propTypes = require("prop-types");
var _propTypesDefault = parcelHelpers.interopDefault(_propTypes);
var _styles = require("@material-ui/styles");
var _selectInput = require("./SelectInput");
var _selectInputDefault = parcelHelpers.interopDefault(_selectInput);
var _formControlState = require("../FormControl/formControlState");
var _formControlStateDefault = parcelHelpers.interopDefault(_formControlState);
var _useFormControl = require("../FormControl/useFormControl");
var _useFormControlDefault = parcelHelpers.interopDefault(_useFormControl);
var _withStyles = require("../styles/withStyles");
var _withStylesDefault = parcelHelpers.interopDefault(_withStyles);
var _arrowDropDown = require("../internal/svg-icons/ArrowDropDown");
var _arrowDropDownDefault = parcelHelpers.interopDefault(_arrowDropDown);
var _input = require("../Input");
var _inputDefault = parcelHelpers.interopDefault(_input);
var _nativeSelect = require("../NativeSelect/NativeSelect");
var _nativeSelectInput = require("../NativeSelect/NativeSelectInput");
var _nativeSelectInputDefault = parcelHelpers.interopDefault(_nativeSelectInput);
var _filledInput = require("../FilledInput");
var _filledInputDefault = parcelHelpers.interopDefault(_filledInput);
var _outlinedInput = require("../OutlinedInput");
var _outlinedInputDefault = parcelHelpers.interopDefault(_outlinedInput);
var styles = _nativeSelect.styles;
var _ref = /*#__PURE__*/ _react.createElement(_inputDefault.default, null);
var _ref2 = /*#__PURE__*/ _react.createElement(_filledInputDefault.default, null);
var Select = /*#__PURE__*/ _react.forwardRef(function Select1(props, ref) {
    var _props$autoWidth = props.autoWidth, autoWidth = _props$autoWidth === void 0 ? false : _props$autoWidth, children = props.children, classes = props.classes, _props$displayEmpty = props.displayEmpty, displayEmpty = _props$displayEmpty === void 0 ? false : _props$displayEmpty, _props$IconComponent = props.IconComponent, IconComponent = _props$IconComponent === void 0 ? _arrowDropDownDefault.default : _props$IconComponent, id = props.id, input = props.input, inputProps = props.inputProps, label = props.label, labelId = props.labelId, _props$labelWidth = props.labelWidth, labelWidth = _props$labelWidth === void 0 ? 0 : _props$labelWidth, MenuProps = props.MenuProps, _props$multiple = props.multiple, multiple = _props$multiple === void 0 ? false : _props$multiple, _props$native = props.native, native = _props$native === void 0 ? false : _props$native, onClose = props.onClose, onOpen = props.onOpen, open = props.open, renderValue = props.renderValue, SelectDisplayProps = props.SelectDisplayProps, _props$variant = props.variant, variantProps = _props$variant === void 0 ? 'standard' : _props$variant, other = _objectWithoutPropertiesDefault.default(props, [
        "autoWidth",
        "children",
        "classes",
        "displayEmpty",
        "IconComponent",
        "id",
        "input",
        "inputProps",
        "label",
        "labelId",
        "labelWidth",
        "MenuProps",
        "multiple",
        "native",
        "onClose",
        "onOpen",
        "open",
        "renderValue",
        "SelectDisplayProps",
        "variant"
    ]);
    var inputComponent = native ? _nativeSelectInputDefault.default : _selectInputDefault.default;
    var muiFormControl = _useFormControlDefault.default();
    var fcs = _formControlStateDefault.default({
        props: props,
        muiFormControl: muiFormControl,
        states: [
            'variant'
        ]
    });
    var variant = fcs.variant || variantProps;
    var InputComponent = input || ({
        standard: _ref,
        outlined: /*#__PURE__*/ _react.createElement(_outlinedInputDefault.default, {
            label: label,
            labelWidth: labelWidth
        }),
        filled: _ref2
    })[variant];
    return /*#__PURE__*/ _react.cloneElement(InputComponent, _extendsDefault.default({
        // Most of the logic is implemented in `SelectInput`.
        // The `Select` component is a simple API wrapper to expose something better to play with.
        inputComponent: inputComponent,
        inputProps: _extendsDefault.default({
            children: children,
            IconComponent: IconComponent,
            variant: variant,
            type: undefined,
            // We render a select. We can ignore the type provided by the `Input`.
            multiple: multiple
        }, native ? {
            id: id
        } : {
            autoWidth: autoWidth,
            displayEmpty: displayEmpty,
            labelId: labelId,
            MenuProps: MenuProps,
            onClose: onClose,
            onOpen: onOpen,
            open: open,
            renderValue: renderValue,
            SelectDisplayProps: _extendsDefault.default({
                id: id
            }, SelectDisplayProps)
        }, inputProps, {
            classes: inputProps ? _styles.mergeClasses({
                baseClasses: classes,
                newClasses: inputProps.classes,
                Component: Select1
            }) : classes
        }, input ? input.props.inputProps : {}),
        ref: ref
    }, other));
});
Select.propTypes = {
    // ----------------------------- Warning --------------------------------
    // | These PropTypes are generated from the TypeScript type definitions |
    // |     To update them edit the d.ts file and run "yarn proptypes"     |
    // ----------------------------------------------------------------------
    /**
   * If `true`, the width of the popover will automatically be set according to the items inside the
   * menu, otherwise it will be at least the width of the select input.
   */ autoWidth: _propTypesDefault.default.bool,
    /**
   * The option elements to populate the select with.
   * Can be some `MenuItem` when `native` is false and `option` when `native` is true.
   *
   * ⚠️The `MenuItem` elements **must** be direct descendants when `native` is false.
   */ children: _propTypesDefault.default.node,
    /**
   * Override or extend the styles applied to the component.
   * See [CSS API](#css) below for more details.
   */ classes: _propTypesDefault.default.object,
    /**
   * The default element value. Use when the component is not controlled.
   */ defaultValue: _propTypesDefault.default.any,
    /**
   * If `true`, a value is displayed even if no items are selected.
   *
   * In order to display a meaningful value, a function should be passed to the `renderValue` prop which returns the value to be displayed when no items are selected.
   * You can only use it when the `native` prop is `false` (default).
   */ displayEmpty: _propTypesDefault.default.bool,
    /**
   * The icon that displays the arrow.
   */ IconComponent: _propTypesDefault.default.elementType,
    /**
   * The `id` of the wrapper element or the `select` element when `native`.
   */ id: _propTypesDefault.default.string,
    /**
   * An `Input` element; does not have to be a material-ui specific `Input`.
   */ input: _propTypesDefault.default.element,
    /**
   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.
   * When `native` is `true`, the attributes are applied on the `select` element.
   */ inputProps: _propTypesDefault.default.object,
    /**
   * See [OutlinedInput#label](/api/outlined-input/#props)
   */ label: _propTypesDefault.default.node,
    /**
   * The ID of an element that acts as an additional label. The Select will
   * be labelled by the additional label and the selected value.
   */ labelId: _propTypesDefault.default.string,
    /**
   * See [OutlinedInput#label](/api/outlined-input/#props)
   */ labelWidth: _propTypesDefault.default.number,
    /**
   * Props applied to the [`Menu`](/api/menu/) element.
   */ MenuProps: _propTypesDefault.default.object,
    /**
   * If `true`, `value` must be an array and the menu will support multiple selections.
   */ multiple: _propTypesDefault.default.bool,
    /**
   * If `true`, the component will be using a native `select` element.
   */ native: _propTypesDefault.default.bool,
    /**
   * Callback function fired when a menu item is selected.
   *
   * @param {object} event The event source of the callback.
   * You can pull out the new value by accessing `event.target.value` (any).
   * @param {object} [child] The react element that was selected when `native` is `false` (default).
   */ onChange: _propTypesDefault.default.func,
    /**
   * Callback fired when the component requests to be closed.
   * Use in controlled mode (see open).
   *
   * @param {object} event The event source of the callback.
   */ onClose: _propTypesDefault.default.func,
    /**
   * Callback fired when the component requests to be opened.
   * Use in controlled mode (see open).
   *
   * @param {object} event The event source of the callback.
   */ onOpen: _propTypesDefault.default.func,
    /**
   * Control `select` open state.
   * You can only use it when the `native` prop is `false` (default).
   */ open: _propTypesDefault.default.bool,
    /**
   * Render the selected value.
   * You can only use it when the `native` prop is `false` (default).
   *
   * @param {any} value The `value` provided to the component.
   * @returns {ReactNode}
   */ renderValue: _propTypesDefault.default.func,
    /**
   * Props applied to the clickable div element.
   */ SelectDisplayProps: _propTypesDefault.default.object,
    /**
   * The input value. Providing an empty string will select no options.
   * This prop is required when the `native` prop is `false` (default).
   * Set to an empty string `''` if you don't want any of the available options to be selected.
   *
   * If the value is an object it must have reference equality with the option in order to be selected.
   * If the value is not an object, the string representation must match with the string representation of the option in order to be selected.
   */ value: _propTypesDefault.default.any,
    /**
   * The variant to use.
   */ variant: _propTypesDefault.default.oneOf([
        'filled',
        'outlined',
        'standard'
    ])
};
Select.muiName = 'Select';
exports.default = _withStylesDefault.default(styles, {
    name: 'MuiSelect'
})(Select);

},{"@babel/runtime/helpers/esm/extends":"fTBFS","@babel/runtime/helpers/esm/objectWithoutProperties":"25tJ4","react":"21dqq","prop-types":"7wKI2","@material-ui/styles":"1TOv0","./SelectInput":"eCcql","../FormControl/formControlState":"dZti6","../FormControl/useFormControl":"eKmPJ","../styles/withStyles":"7U0iM","../internal/svg-icons/ArrowDropDown":"e9OoL","../Input":"41TRI","../NativeSelect/NativeSelect":"f32Br","../NativeSelect/NativeSelectInput":"5ZzuK","../FilledInput":"clmGe","../OutlinedInput":"kLI7K","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"eCcql":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _extends = require("@babel/runtime/helpers/esm/extends");
var _extendsDefault = parcelHelpers.interopDefault(_extends);
var _slicedToArray = require("@babel/runtime/helpers/esm/slicedToArray");
var _slicedToArrayDefault = parcelHelpers.interopDefault(_slicedToArray);
var _objectWithoutProperties = require("@babel/runtime/helpers/esm/objectWithoutProperties");
var _objectWithoutPropertiesDefault = parcelHelpers.interopDefault(_objectWithoutProperties);
var _typeof = require("@babel/runtime/helpers/esm/typeof");
var _typeofDefault = parcelHelpers.interopDefault(_typeof);
var _utils = require("@material-ui/utils");
var _react = require("react");
var _reactIs = require("react-is");
var _propTypes = require("prop-types");
var _propTypesDefault = parcelHelpers.interopDefault(_propTypes);
var _clsx = require("clsx");
var _clsxDefault = parcelHelpers.interopDefault(_clsx);
var _ownerDocument = require("../utils/ownerDocument");
var _ownerDocumentDefault = parcelHelpers.interopDefault(_ownerDocument);
var _capitalize = require("../utils/capitalize");
var _capitalizeDefault = parcelHelpers.interopDefault(_capitalize);
var _menu = require("../Menu/Menu");
var _menuDefault = parcelHelpers.interopDefault(_menu);
var _utils1 = require("../InputBase/utils");
var _useForkRef = require("../utils/useForkRef");
var _useForkRefDefault = parcelHelpers.interopDefault(_useForkRef);
var _useControlled = require("../utils/useControlled");
var _useControlledDefault = parcelHelpers.interopDefault(_useControlled);
function areEqualValues(a, b) {
    if (_typeofDefault.default(b) === 'object' && b !== null) return a === b;
    return String(a) === String(b);
}
function isEmpty(display) {
    return display == null || typeof display === 'string' && !display.trim();
}
/**
 * @ignore - internal component.
 */ var SelectInput = /*#__PURE__*/ _react.forwardRef(function SelectInput(props, ref) {
    var ariaLabel = props['aria-label'], autoFocus = props.autoFocus, autoWidth = props.autoWidth, children = props.children, classes = props.classes, className = props.className, defaultValue = props.defaultValue, disabled = props.disabled, displayEmpty = props.displayEmpty, IconComponent = props.IconComponent, inputRefProp = props.inputRef, labelId = props.labelId, _props$MenuProps = props.MenuProps, MenuProps = _props$MenuProps === void 0 ? {} : _props$MenuProps, multiple = props.multiple, name = props.name, onBlur = props.onBlur, onChange = props.onChange, onClose = props.onClose, onFocus = props.onFocus, onOpen = props.onOpen, openProp = props.open, readOnly = props.readOnly, renderValue = props.renderValue, _props$SelectDisplayP = props.SelectDisplayProps, SelectDisplayProps = _props$SelectDisplayP === void 0 ? {} : _props$SelectDisplayP, tabIndexProp = props.tabIndex, type = props.type, valueProp = props.value, _props$variant = props.variant, variant = _props$variant === void 0 ? 'standard' : _props$variant, other = _objectWithoutPropertiesDefault.default(props, [
        "aria-label",
        "autoFocus",
        "autoWidth",
        "children",
        "classes",
        "className",
        "defaultValue",
        "disabled",
        "displayEmpty",
        "IconComponent",
        "inputRef",
        "labelId",
        "MenuProps",
        "multiple",
        "name",
        "onBlur",
        "onChange",
        "onClose",
        "onFocus",
        "onOpen",
        "open",
        "readOnly",
        "renderValue",
        "SelectDisplayProps",
        "tabIndex",
        "type",
        "value",
        "variant"
    ]);
    var _useControlled1 = _useControlledDefault.default({
        controlled: valueProp,
        default: defaultValue,
        name: 'Select'
    }), _useControlled2 = _slicedToArrayDefault.default(_useControlled1, 2), value = _useControlled2[0], setValue = _useControlled2[1];
    var inputRef = _react.useRef(null);
    var _React$useState = _react.useState(null), displayNode = _React$useState[0], setDisplayNode = _React$useState[1];
    var _React$useRef = _react.useRef(openProp != null), isOpenControlled = _React$useRef.current;
    var _React$useState2 = _react.useState(), menuMinWidthState = _React$useState2[0], setMenuMinWidthState = _React$useState2[1];
    var _React$useState3 = _react.useState(false), openState = _React$useState3[0], setOpenState = _React$useState3[1];
    var handleRef = _useForkRefDefault.default(ref, inputRefProp);
    _react.useImperativeHandle(handleRef, function() {
        return {
            focus: function focus() {
                displayNode.focus();
            },
            node: inputRef.current,
            value: value
        };
    }, [
        displayNode,
        value
    ]);
    _react.useEffect(function() {
        if (autoFocus && displayNode) displayNode.focus();
    }, [
        autoFocus,
        displayNode
    ]);
    _react.useEffect(function() {
        if (displayNode) {
            var label = _ownerDocumentDefault.default(displayNode).getElementById(labelId);
            if (label) {
                var handler = function handler() {
                    if (getSelection().isCollapsed) displayNode.focus();
                };
                label.addEventListener('click', handler);
                return function() {
                    label.removeEventListener('click', handler);
                };
            }
        }
        return undefined;
    }, [
        labelId,
        displayNode
    ]);
    var update = function update(open, event) {
        if (open) {
            if (onOpen) onOpen(event);
        } else if (onClose) onClose(event);
        if (!isOpenControlled) {
            setMenuMinWidthState(autoWidth ? null : displayNode.clientWidth);
            setOpenState(open);
        }
    };
    var handleMouseDown = function handleMouseDown(event) {
        // Ignore everything but left-click
        if (event.button !== 0) return;
         // Hijack the default focus behavior.
        event.preventDefault();
        displayNode.focus();
        update(true, event);
    };
    var handleClose = function handleClose(event) {
        update(false, event);
    };
    var childrenArray = _react.Children.toArray(children); // Support autofill.
    var handleChange = function handleChange(event) {
        var index = childrenArray.map(function(child) {
            return child.props.value;
        }).indexOf(event.target.value);
        if (index === -1) return;
        var child1 = childrenArray[index];
        setValue(child1.props.value);
        if (onChange) onChange(event, child1);
    };
    var handleItemClick = function handleItemClick(child) {
        return function(event) {
            if (!multiple) update(false, event);
            var newValue;
            if (multiple) {
                newValue = Array.isArray(value) ? value.slice() : [];
                var itemIndex = value.indexOf(child.props.value);
                if (itemIndex === -1) newValue.push(child.props.value);
                else newValue.splice(itemIndex, 1);
            } else newValue = child.props.value;
            if (child.props.onClick) child.props.onClick(event);
            if (value === newValue) return;
            setValue(newValue);
            if (onChange) {
                event.persist(); // Preact support, target is read only property on a native event.
                Object.defineProperty(event, 'target', {
                    writable: true,
                    value: {
                        value: newValue,
                        name: name
                    }
                });
                onChange(event, child);
            }
        };
    };
    var handleKeyDown = function handleKeyDown(event) {
        if (!readOnly) {
            var validKeys = [
                ' ',
                'ArrowUp',
                'ArrowDown',
                // https://www.w3.org/TR/wai-aria-practices/examples/listbox/listbox-collapsible.html
                'Enter'
            ];
            if (validKeys.indexOf(event.key) !== -1) {
                event.preventDefault();
                update(true, event);
            }
        }
    };
    var open1 = displayNode !== null && (isOpenControlled ? openProp : openState);
    var handleBlur = function handleBlur(event) {
        // if open event.stopImmediatePropagation
        if (!open1 && onBlur) {
            event.persist(); // Preact support, target is read only property on a native event.
            Object.defineProperty(event, 'target', {
                writable: true,
                value: {
                    value: value,
                    name: name
                }
            });
            onBlur(event);
        }
    };
    delete other['aria-invalid'];
    var display;
    var displaySingle;
    var displayMultiple = [];
    var computeDisplay = false;
    var foundMatch = false; // No need to display any value if the field is empty.
    if (_utils1.isFilled({
        value: value
    }) || displayEmpty) {
        if (renderValue) display = renderValue(value);
        else computeDisplay = true;
    }
    var items = childrenArray.map(function(child) {
        if (!/*#__PURE__*/ _react.isValidElement(child)) return null;
        if (_reactIs.isFragment(child)) console.error([
            "Material-UI: The Select component doesn't accept a Fragment as a child.",
            'Consider providing an array instead.'
        ].join('\n'));
        var selected;
        if (multiple) {
            if (!Array.isArray(value)) throw new Error("Material-UI: The `value` prop must be an array when using the `Select` component with `multiple`.");
            selected = value.some(function(v) {
                return areEqualValues(v, child.props.value);
            });
            if (selected && computeDisplay) displayMultiple.push(child.props.children);
        } else {
            selected = areEqualValues(value, child.props.value);
            if (selected && computeDisplay) displaySingle = child.props.children;
        }
        if (selected) foundMatch = true;
        return /*#__PURE__*/ _react.cloneElement(child, {
            'aria-selected': selected ? 'true' : undefined,
            onClick: handleItemClick(child),
            onKeyUp: function onKeyUp(event) {
                if (event.key === ' ') // otherwise our MenuItems dispatches a click event
                // it's not behavior of the native <option> and causes
                // the select to close immediately since we open on space keydown
                event.preventDefault();
                if (child.props.onKeyUp) child.props.onKeyUp(event);
            },
            role: 'option',
            selected: selected,
            value: undefined,
            // The value is most likely not a valid HTML attribute.
            'data-value': child.props.value // Instead, we provide it as a data attribute.
        });
    });
    // eslint-disable-next-line react-hooks/rules-of-hooks
    _react.useEffect(function() {
        if (!foundMatch && !multiple && value !== '') {
            var values = childrenArray.map(function(child) {
                return child.props.value;
            });
            console.warn([
                "Material-UI: You have provided an out-of-range value `".concat(value, "` for the select ").concat(name ? "(name=\"".concat(name, "\") ") : '', "component."),
                "Consider providing a value that matches one of the available options or ''.",
                "The available values are ".concat(values.filter(function(x) {
                    return x != null;
                }).map(function(x) {
                    return "`".concat(x, "`");
                }).join(', ') || '""', ".")
            ].join('\n'));
        }
    }, [
        foundMatch,
        childrenArray,
        multiple,
        name,
        value
    ]);
    if (computeDisplay) display = multiple ? displayMultiple.join(', ') : displaySingle;
     // Avoid performing a layout computation in the render method.
    var menuMinWidth = menuMinWidthState;
    if (!autoWidth && isOpenControlled && displayNode) menuMinWidth = displayNode.clientWidth;
    var tabIndex;
    if (typeof tabIndexProp !== 'undefined') tabIndex = tabIndexProp;
    else tabIndex = disabled ? null : 0;
    var buttonId = SelectDisplayProps.id || (name ? "mui-component-select-".concat(name) : undefined);
    return /*#__PURE__*/ _react.createElement(_react.Fragment, null, /*#__PURE__*/ _react.createElement("div", _extendsDefault.default({
        className: _clsxDefault.default(classes.root, classes.select, classes.selectMenu, classes[variant], className, disabled && classes.disabled),
        ref: setDisplayNode,
        tabIndex: tabIndex,
        role: "button",
        "aria-disabled": disabled ? 'true' : undefined,
        "aria-expanded": open1 ? 'true' : undefined,
        "aria-haspopup": "listbox",
        "aria-label": ariaLabel,
        "aria-labelledby": [
            labelId,
            buttonId
        ].filter(Boolean).join(' ') || undefined,
        onKeyDown: handleKeyDown,
        onMouseDown: disabled || readOnly ? null : handleMouseDown,
        onBlur: handleBlur,
        onFocus: onFocus
    }, SelectDisplayProps, {
        // The id is required for proper a11y
        id: buttonId
    }), isEmpty(display) ? /*#__PURE__*/ // eslint-disable-next-line react/no-danger
    _react.createElement("span", {
        dangerouslySetInnerHTML: {
            __html: '&#8203;'
        }
    }) : display), /*#__PURE__*/ _react.createElement("input", _extendsDefault.default({
        value: Array.isArray(value) ? value.join(',') : value,
        name: name,
        ref: inputRef,
        "aria-hidden": true,
        onChange: handleChange,
        tabIndex: -1,
        className: classes.nativeInput,
        autoFocus: autoFocus
    }, other)), /*#__PURE__*/ _react.createElement(IconComponent, {
        className: _clsxDefault.default(classes.icon, classes["icon".concat(_capitalizeDefault.default(variant))], open1 && classes.iconOpen, disabled && classes.disabled)
    }), /*#__PURE__*/ _react.createElement(_menuDefault.default, _extendsDefault.default({
        id: "menu-".concat(name || ''),
        anchorEl: displayNode,
        open: open1,
        onClose: handleClose
    }, MenuProps, {
        MenuListProps: _extendsDefault.default({
            'aria-labelledby': labelId,
            role: 'listbox',
            disableListWrap: true
        }, MenuProps.MenuListProps),
        PaperProps: _extendsDefault.default({}, MenuProps.PaperProps, {
            style: _extendsDefault.default({
                minWidth: menuMinWidth
            }, MenuProps.PaperProps != null ? MenuProps.PaperProps.style : null)
        })
    }), items));
});
SelectInput.propTypes = {
    /**
   * @ignore
   */ 'aria-label': _propTypesDefault.default.string,
    /**
   * @ignore
   */ autoFocus: _propTypesDefault.default.bool,
    /**
   * If `true`, the width of the popover will automatically be set according to the items inside the
   * menu, otherwise it will be at least the width of the select input.
   */ autoWidth: _propTypesDefault.default.bool,
    /**
   * The option elements to populate the select with.
   * Can be some `<MenuItem>` elements.
   */ children: _propTypesDefault.default.node,
    /**
   * Override or extend the styles applied to the component.
   * See [CSS API](#css) below for more details.
   */ classes: _propTypesDefault.default.object.isRequired,
    /**
   * The CSS class name of the select element.
   */ className: _propTypesDefault.default.string,
    /**
   * The default element value. Use when the component is not controlled.
   */ defaultValue: _propTypesDefault.default.any,
    /**
   * If `true`, the select will be disabled.
   */ disabled: _propTypesDefault.default.bool,
    /**
   * If `true`, the selected item is displayed even if its value is empty.
   */ displayEmpty: _propTypesDefault.default.bool,
    /**
   * The icon that displays the arrow.
   */ IconComponent: _propTypesDefault.default.elementType.isRequired,
    /**
   * Imperative handle implementing `{ value: T, node: HTMLElement, focus(): void }`
   * Equivalent to `ref`
   */ inputRef: _utils.refType,
    /**
   * The ID of an element that acts as an additional label. The Select will
   * be labelled by the additional label and the selected value.
   */ labelId: _propTypesDefault.default.string,
    /**
   * Props applied to the [`Menu`](/api/menu/) element.
   */ MenuProps: _propTypesDefault.default.object,
    /**
   * If `true`, `value` must be an array and the menu will support multiple selections.
   */ multiple: _propTypesDefault.default.bool,
    /**
   * Name attribute of the `select` or hidden `input` element.
   */ name: _propTypesDefault.default.string,
    /**
   * @ignore
   */ onBlur: _propTypesDefault.default.func,
    /**
   * Callback function fired when a menu item is selected.
   *
   * @param {object} event The event source of the callback.
   * You can pull out the new value by accessing `event.target.value` (any).
   * @param {object} [child] The react element that was selected.
   */ onChange: _propTypesDefault.default.func,
    /**
   * Callback fired when the component requests to be closed.
   * Use in controlled mode (see open).
   *
   * @param {object} event The event source of the callback.
   */ onClose: _propTypesDefault.default.func,
    /**
   * @ignore
   */ onFocus: _propTypesDefault.default.func,
    /**
   * Callback fired when the component requests to be opened.
   * Use in controlled mode (see open).
   *
   * @param {object} event The event source of the callback.
   */ onOpen: _propTypesDefault.default.func,
    /**
   * Control `select` open state.
   */ open: _propTypesDefault.default.bool,
    /**
   * @ignore
   */ readOnly: _propTypesDefault.default.bool,
    /**
   * Render the selected value.
   *
   * @param {any} value The `value` provided to the component.
   * @returns {ReactNode}
   */ renderValue: _propTypesDefault.default.func,
    /**
   * Props applied to the clickable div element.
   */ SelectDisplayProps: _propTypesDefault.default.object,
    /**
   * @ignore
   */ tabIndex: _propTypesDefault.default.oneOfType([
        _propTypesDefault.default.number,
        _propTypesDefault.default.string
    ]),
    /**
   * @ignore
   */ type: _propTypesDefault.default.any,
    /**
   * The input value.
   */ value: _propTypesDefault.default.any,
    /**
   * The variant to use.
   */ variant: _propTypesDefault.default.oneOf([
        'standard',
        'outlined',
        'filled'
    ])
};
exports.default = SelectInput;

},{"@babel/runtime/helpers/esm/extends":"fTBFS","@babel/runtime/helpers/esm/slicedToArray":"cBZWN","@babel/runtime/helpers/esm/objectWithoutProperties":"25tJ4","@babel/runtime/helpers/esm/typeof":"i7HWY","@material-ui/utils":"54RkF","react":"21dqq","react-is":"63mDj","prop-types":"7wKI2","clsx":"83C22","../utils/ownerDocument":"lxJTm","../utils/capitalize":"5AJVX","../Menu/Menu":"aungz","../InputBase/utils":"dWKcr","../utils/useForkRef":"kUpGa","../utils/useControlled":"1ORwD","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"cxcNb":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>_sliderDefault.default
);
var _slider = require("./Slider");
var _sliderDefault = parcelHelpers.interopDefault(_slider);

},{"./Slider":"7pPnR","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"7pPnR":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "styles", ()=>styles
);
var _toConsumableArray = require("@babel/runtime/helpers/esm/toConsumableArray");
var _toConsumableArrayDefault = parcelHelpers.interopDefault(_toConsumableArray);
var _slicedToArray = require("@babel/runtime/helpers/esm/slicedToArray");
var _slicedToArrayDefault = parcelHelpers.interopDefault(_slicedToArray);
var _objectWithoutProperties = require("@babel/runtime/helpers/esm/objectWithoutProperties");
var _objectWithoutPropertiesDefault = parcelHelpers.interopDefault(_objectWithoutProperties);
var _extends = require("@babel/runtime/helpers/esm/extends");
var _extendsDefault = parcelHelpers.interopDefault(_extends);
var _react = require("react");
var _propTypes = require("prop-types");
var _propTypesDefault = parcelHelpers.interopDefault(_propTypes);
var _clsx = require("clsx");
var _clsxDefault = parcelHelpers.interopDefault(_clsx);
var _utils = require("@material-ui/utils");
var _withStyles = require("../styles/withStyles");
var _withStylesDefault = parcelHelpers.interopDefault(_withStyles);
var _useTheme = require("../styles/useTheme");
var _useThemeDefault = parcelHelpers.interopDefault(_useTheme);
var _colorManipulator = require("../styles/colorManipulator");
var _useIsFocusVisible = require("../utils/useIsFocusVisible");
var _useIsFocusVisibleDefault = parcelHelpers.interopDefault(_useIsFocusVisible);
var _ownerDocument = require("../utils/ownerDocument");
var _ownerDocumentDefault = parcelHelpers.interopDefault(_ownerDocument);
var _useEventCallback = require("../utils/useEventCallback");
var _useEventCallbackDefault = parcelHelpers.interopDefault(_useEventCallback);
var _useForkRef = require("../utils/useForkRef");
var _useForkRefDefault = parcelHelpers.interopDefault(_useForkRef);
var _capitalize = require("../utils/capitalize");
var _capitalizeDefault = parcelHelpers.interopDefault(_capitalize);
var _useControlled = require("../utils/useControlled");
var _useControlledDefault = parcelHelpers.interopDefault(_useControlled);
var _valueLabel = require("./ValueLabel");
var _valueLabelDefault = parcelHelpers.interopDefault(_valueLabel);
function asc(a, b) {
    return a - b;
}
function clamp(value, min, max) {
    return Math.min(Math.max(min, value), max);
}
function findClosest(values, currentValue) {
    var _values$reduce = values.reduce(function(acc, value, index) {
        var distance = Math.abs(currentValue - value);
        if (acc === null || distance < acc.distance || distance === acc.distance) return {
            distance: distance,
            index: index
        };
        return acc;
    }, null), closestIndex = _values$reduce.index;
    return closestIndex;
}
function trackFinger(event, touchId) {
    if (touchId.current !== undefined && event.changedTouches) {
        for(var i = 0; i < event.changedTouches.length; i += 1){
            var touch = event.changedTouches[i];
            if (touch.identifier === touchId.current) return {
                x: touch.clientX,
                y: touch.clientY
            };
        }
        return false;
    }
    return {
        x: event.clientX,
        y: event.clientY
    };
}
function valueToPercent(value, min, max) {
    return (value - min) * 100 / (max - min);
}
function percentToValue(percent, min, max) {
    return (max - min) * percent + min;
}
function getDecimalPrecision(num) {
    // This handles the case when num is very small (0.00000001), js will turn this into 1e-8.
    // When num is bigger than 1 or less than -1 it won't get converted to this notation so it's fine.
    if (Math.abs(num) < 1) {
        var parts = num.toExponential().split('e-');
        var matissaDecimalPart = parts[0].split('.')[1];
        return (matissaDecimalPart ? matissaDecimalPart.length : 0) + parseInt(parts[1], 10);
    }
    var decimalPart = num.toString().split('.')[1];
    return decimalPart ? decimalPart.length : 0;
}
function roundValueToStep(value, step, min) {
    var nearest = Math.round((value - min) / step) * step + min;
    return Number(nearest.toFixed(getDecimalPrecision(step)));
}
function setValueIndex(_ref) {
    var values = _ref.values, source = _ref.source, newValue = _ref.newValue, index = _ref.index;
    // Performance shortcut
    if (values[index] === newValue) return source;
    var output = values.slice();
    output[index] = newValue;
    return output;
}
function focusThumb(_ref2) {
    var sliderRef = _ref2.sliderRef, activeIndex = _ref2.activeIndex, setActive = _ref2.setActive;
    if (!sliderRef.current.contains(document.activeElement) || Number(document.activeElement.getAttribute('data-index')) !== activeIndex) sliderRef.current.querySelector("[role=\"slider\"][data-index=\"".concat(activeIndex, "\"]")).focus();
    if (setActive) setActive(activeIndex);
}
var axisProps = {
    horizontal: {
        offset: function offset(percent) {
            return {
                left: "".concat(percent, "%")
            };
        },
        leap: function leap(percent) {
            return {
                width: "".concat(percent, "%")
            };
        }
    },
    'horizontal-reverse': {
        offset: function offset(percent) {
            return {
                right: "".concat(percent, "%")
            };
        },
        leap: function leap(percent) {
            return {
                width: "".concat(percent, "%")
            };
        }
    },
    vertical: {
        offset: function offset(percent) {
            return {
                bottom: "".concat(percent, "%")
            };
        },
        leap: function leap(percent) {
            return {
                height: "".concat(percent, "%")
            };
        }
    }
};
var Identity = function Identity(x) {
    return x;
};
var styles = function styles(theme) {
    return {
        /* Styles applied to the root element. */ root: {
            height: 2,
            width: '100%',
            boxSizing: 'content-box',
            padding: '13px 0',
            display: 'inline-block',
            position: 'relative',
            cursor: 'pointer',
            touchAction: 'none',
            color: theme.palette.primary.main,
            WebkitTapHighlightColor: 'transparent',
            '&$disabled': {
                pointerEvents: 'none',
                cursor: 'default',
                color: theme.palette.grey[400]
            },
            '&$vertical': {
                width: 2,
                height: '100%',
                padding: '0 13px'
            },
            // The primary input mechanism of the device includes a pointing device of limited accuracy.
            '@media (pointer: coarse)': {
                // Reach 42px touch target, about ~8mm on screen.
                padding: '20px 0',
                '&$vertical': {
                    padding: '0 20px'
                }
            },
            '@media print': {
                colorAdjust: 'exact'
            }
        },
        /* Styles applied to the root element if `color="primary"`. */ colorPrimary: {},
        /* Styles applied to the root element if `color="secondary"`. */ colorSecondary: {
            color: theme.palette.secondary.main
        },
        /* Styles applied to the root element if `marks` is provided with at least one label. */ marked: {
            marginBottom: 20,
            '&$vertical': {
                marginBottom: 'auto',
                marginRight: 20
            }
        },
        /* Pseudo-class applied to the root element if `orientation="vertical"`. */ vertical: {},
        /* Pseudo-class applied to the root and thumb element if `disabled={true}`. */ disabled: {},
        /* Styles applied to the rail element. */ rail: {
            display: 'block',
            position: 'absolute',
            width: '100%',
            height: 2,
            borderRadius: 1,
            backgroundColor: 'currentColor',
            opacity: 0.38,
            '$vertical &': {
                height: '100%',
                width: 2
            }
        },
        /* Styles applied to the track element. */ track: {
            display: 'block',
            position: 'absolute',
            height: 2,
            borderRadius: 1,
            backgroundColor: 'currentColor',
            '$vertical &': {
                width: 2
            }
        },
        /* Styles applied to the track element if `track={false}`. */ trackFalse: {
            '& $track': {
                display: 'none'
            }
        },
        /* Styles applied to the track element if `track="inverted"`. */ trackInverted: {
            '& $track': {
                backgroundColor: theme.palette.type === 'light' ? _colorManipulator.lighten(theme.palette.primary.main, 0.62) : _colorManipulator.darken(theme.palette.primary.main, 0.5)
            },
            '& $rail': {
                opacity: 1
            }
        },
        /* Styles applied to the thumb element. */ thumb: {
            position: 'absolute',
            width: 12,
            height: 12,
            marginLeft: -6,
            marginTop: -5,
            boxSizing: 'border-box',
            borderRadius: '50%',
            outline: 0,
            backgroundColor: 'currentColor',
            display: 'flex',
            alignItems: 'center',
            justifyContent: 'center',
            transition: theme.transitions.create([
                'box-shadow'
            ], {
                duration: theme.transitions.duration.shortest
            }),
            '&::after': {
                position: 'absolute',
                content: '""',
                borderRadius: '50%',
                // reach 42px hit target (2 * 15 + thumb diameter)
                left: -15,
                top: -15,
                right: -15,
                bottom: -15
            },
            '&$focusVisible,&:hover': {
                boxShadow: "0px 0px 0px 8px ".concat(_colorManipulator.alpha(theme.palette.primary.main, 0.16)),
                '@media (hover: none)': {
                    boxShadow: 'none'
                }
            },
            '&$active': {
                boxShadow: "0px 0px 0px 14px ".concat(_colorManipulator.alpha(theme.palette.primary.main, 0.16))
            },
            '&$disabled': {
                width: 8,
                height: 8,
                marginLeft: -4,
                marginTop: -3,
                '&:hover': {
                    boxShadow: 'none'
                }
            },
            '$vertical &': {
                marginLeft: -5,
                marginBottom: -6
            },
            '$vertical &$disabled': {
                marginLeft: -3,
                marginBottom: -4
            }
        },
        /* Styles applied to the thumb element if `color="primary"`. */ thumbColorPrimary: {},
        /* Styles applied to the thumb element if `color="secondary"`. */ thumbColorSecondary: {
            '&$focusVisible,&:hover': {
                boxShadow: "0px 0px 0px 8px ".concat(_colorManipulator.alpha(theme.palette.secondary.main, 0.16))
            },
            '&$active': {
                boxShadow: "0px 0px 0px 14px ".concat(_colorManipulator.alpha(theme.palette.secondary.main, 0.16))
            }
        },
        /* Pseudo-class applied to the thumb element if it's active. */ active: {},
        /* Pseudo-class applied to the thumb element if keyboard focused. */ focusVisible: {},
        /* Styles applied to the thumb label element. */ valueLabel: {
            // IE 11 centering bug, to remove from the customization demos once no longer supported
            left: 'calc(-50% - 4px)'
        },
        /* Styles applied to the mark element. */ mark: {
            position: 'absolute',
            width: 2,
            height: 2,
            borderRadius: 1,
            backgroundColor: 'currentColor'
        },
        /* Styles applied to the mark element if active (depending on the value). */ markActive: {
            backgroundColor: theme.palette.background.paper,
            opacity: 0.8
        },
        /* Styles applied to the mark label element. */ markLabel: _extendsDefault.default({}, theme.typography.body2, {
            color: theme.palette.text.secondary,
            position: 'absolute',
            top: 26,
            transform: 'translateX(-50%)',
            whiteSpace: 'nowrap',
            '$vertical &': {
                top: 'auto',
                left: 26,
                transform: 'translateY(50%)'
            },
            '@media (pointer: coarse)': {
                top: 40,
                '$vertical &': {
                    left: 31
                }
            }
        }),
        /* Styles applied to the mark label element if active (depending on the value). */ markLabelActive: {
            color: theme.palette.text.primary
        }
    };
};
var Slider = /*#__PURE__*/ _react.forwardRef(function Slider(props, ref) {
    var ariaLabel = props['aria-label'], ariaLabelledby = props['aria-labelledby'], ariaValuetext = props['aria-valuetext'], classes = props.classes, className = props.className, _props$color = props.color, color = _props$color === void 0 ? 'primary' : _props$color, _props$component = props.component, Component = _props$component === void 0 ? 'span' : _props$component, defaultValue = props.defaultValue, _props$disabled = props.disabled, disabled = _props$disabled === void 0 ? false : _props$disabled, getAriaLabel = props.getAriaLabel, getAriaValueText = props.getAriaValueText, _props$marks = props.marks, marksProp = _props$marks === void 0 ? false : _props$marks, _props$max = props.max, max = _props$max === void 0 ? 100 : _props$max, _props$min = props.min, min = _props$min === void 0 ? 0 : _props$min, name = props.name, onChange = props.onChange, onChangeCommitted = props.onChangeCommitted, onMouseDown = props.onMouseDown, _props$orientation = props.orientation, orientation = _props$orientation === void 0 ? 'horizontal' : _props$orientation, _props$scale = props.scale, scale = _props$scale === void 0 ? Identity : _props$scale, _props$step = props.step, step = _props$step === void 0 ? 1 : _props$step, _props$ThumbComponent = props.ThumbComponent, ThumbComponent = _props$ThumbComponent === void 0 ? 'span' : _props$ThumbComponent, _props$track = props.track, track = _props$track === void 0 ? 'normal' : _props$track, valueProp = props.value, _props$ValueLabelComp = props.ValueLabelComponent, ValueLabelComponent = _props$ValueLabelComp === void 0 ? _valueLabelDefault.default : _props$ValueLabelComp, _props$valueLabelDisp = props.valueLabelDisplay, valueLabelDisplay = _props$valueLabelDisp === void 0 ? 'off' : _props$valueLabelDisp, _props$valueLabelForm = props.valueLabelFormat, valueLabelFormat = _props$valueLabelForm === void 0 ? Identity : _props$valueLabelForm, other = _objectWithoutPropertiesDefault.default(props, [
        "aria-label",
        "aria-labelledby",
        "aria-valuetext",
        "classes",
        "className",
        "color",
        "component",
        "defaultValue",
        "disabled",
        "getAriaLabel",
        "getAriaValueText",
        "marks",
        "max",
        "min",
        "name",
        "onChange",
        "onChangeCommitted",
        "onMouseDown",
        "orientation",
        "scale",
        "step",
        "ThumbComponent",
        "track",
        "value",
        "ValueLabelComponent",
        "valueLabelDisplay",
        "valueLabelFormat"
    ]);
    var theme = _useThemeDefault.default();
    var touchId = _react.useRef(); // We can't use the :active browser pseudo-classes.
    // - The active state isn't triggered when clicking on the rail.
    // - The active state isn't transfered when inversing a range slider.
    var _React$useState = _react.useState(-1), active = _React$useState[0], setActive = _React$useState[1];
    var _React$useState2 = _react.useState(-1), open = _React$useState2[0], setOpen = _React$useState2[1];
    var _useControlled1 = _useControlledDefault.default({
        controlled: valueProp,
        default: defaultValue,
        name: 'Slider'
    }), _useControlled2 = _slicedToArrayDefault.default(_useControlled1, 2), valueDerived = _useControlled2[0], setValueState = _useControlled2[1];
    var range = Array.isArray(valueDerived);
    var values = range ? valueDerived.slice().sort(asc) : [
        valueDerived
    ];
    values = values.map(function(value) {
        return clamp(value, min, max);
    });
    var marks = marksProp === true && step !== null ? _toConsumableArrayDefault.default(Array(Math.floor((max - min) / step) + 1)).map(function(_, index) {
        return {
            value: min + step * index
        };
    }) : marksProp || [];
    var _useIsFocusVisible1 = _useIsFocusVisibleDefault.default(), isFocusVisible = _useIsFocusVisible1.isFocusVisible, onBlurVisible = _useIsFocusVisible1.onBlurVisible, focusVisibleRef = _useIsFocusVisible1.ref;
    var _React$useState3 = _react.useState(-1), focusVisible = _React$useState3[0], setFocusVisible = _React$useState3[1];
    var sliderRef = _react.useRef();
    var handleFocusRef = _useForkRefDefault.default(focusVisibleRef, sliderRef);
    var handleRef = _useForkRefDefault.default(ref, handleFocusRef);
    var handleFocus = _useEventCallbackDefault.default(function(event) {
        var index = Number(event.currentTarget.getAttribute('data-index'));
        if (isFocusVisible(event)) setFocusVisible(index);
        setOpen(index);
    });
    var handleBlur = _useEventCallbackDefault.default(function() {
        if (focusVisible !== -1) {
            setFocusVisible(-1);
            onBlurVisible();
        }
        setOpen(-1);
    });
    var handleMouseOver = _useEventCallbackDefault.default(function(event) {
        var index = Number(event.currentTarget.getAttribute('data-index'));
        setOpen(index);
    });
    var handleMouseLeave = _useEventCallbackDefault.default(function() {
        setOpen(-1);
    });
    var isRtl = theme.direction === 'rtl';
    var handleKeyDown = _useEventCallbackDefault.default(function(event) {
        var index = Number(event.currentTarget.getAttribute('data-index'));
        var value = values[index];
        var tenPercents = (max - min) / 10;
        var marksValues = marks.map(function(mark) {
            return mark.value;
        });
        var marksIndex = marksValues.indexOf(value);
        var newValue;
        var increaseKey = isRtl ? 'ArrowLeft' : 'ArrowRight';
        var decreaseKey = isRtl ? 'ArrowRight' : 'ArrowLeft';
        switch(event.key){
            case 'Home':
                newValue = min;
                break;
            case 'End':
                newValue = max;
                break;
            case 'PageUp':
                if (step) newValue = value + tenPercents;
                break;
            case 'PageDown':
                if (step) newValue = value - tenPercents;
                break;
            case increaseKey:
            case 'ArrowUp':
                if (step) newValue = value + step;
                else newValue = marksValues[marksIndex + 1] || marksValues[marksValues.length - 1];
                break;
            case decreaseKey:
            case 'ArrowDown':
                if (step) newValue = value - step;
                else newValue = marksValues[marksIndex - 1] || marksValues[0];
                break;
            default:
                return;
        } // Prevent scroll of the page
        event.preventDefault();
        if (step) newValue = roundValueToStep(newValue, step, min);
        newValue = clamp(newValue, min, max);
        if (range) {
            var previousValue = newValue;
            newValue = setValueIndex({
                values: values,
                source: valueDerived,
                newValue: newValue,
                index: index
            }).sort(asc);
            focusThumb({
                sliderRef: sliderRef,
                activeIndex: newValue.indexOf(previousValue)
            });
        }
        setValueState(newValue);
        setFocusVisible(index);
        if (onChange) onChange(event, newValue);
        if (onChangeCommitted) onChangeCommitted(event, newValue);
    });
    var previousIndex = _react.useRef();
    var axis = orientation;
    if (isRtl && orientation !== "vertical") axis += '-reverse';
    var getFingerNewValue = function getFingerNewValue(_ref3) {
        var finger = _ref3.finger, _ref3$move = _ref3.move, move = _ref3$move === void 0 ? false : _ref3$move, values2 = _ref3.values, source = _ref3.source;
        var slider = sliderRef.current;
        var _slider$getBoundingCl = slider.getBoundingClientRect(), width = _slider$getBoundingCl.width, height = _slider$getBoundingCl.height, bottom = _slider$getBoundingCl.bottom, left = _slider$getBoundingCl.left;
        var percent;
        if (axis.indexOf('vertical') === 0) percent = (bottom - finger.y) / height;
        else percent = (finger.x - left) / width;
        if (axis.indexOf('-reverse') !== -1) percent = 1 - percent;
        var newValue;
        newValue = percentToValue(percent, min, max);
        if (step) newValue = roundValueToStep(newValue, step, min);
        else {
            var marksValues = marks.map(function(mark) {
                return mark.value;
            });
            var closestIndex = findClosest(marksValues, newValue);
            newValue = marksValues[closestIndex];
        }
        newValue = clamp(newValue, min, max);
        var activeIndex = 0;
        if (range) {
            if (!move) activeIndex = findClosest(values2, newValue);
            else activeIndex = previousIndex.current;
            var previousValue = newValue;
            newValue = setValueIndex({
                values: values2,
                source: source,
                newValue: newValue,
                index: activeIndex
            }).sort(asc);
            activeIndex = newValue.indexOf(previousValue);
            previousIndex.current = activeIndex;
        }
        return {
            newValue: newValue,
            activeIndex: activeIndex
        };
    };
    var handleTouchMove = _useEventCallbackDefault.default(function(event) {
        var finger = trackFinger(event, touchId);
        if (!finger) return;
        var _getFingerNewValue = getFingerNewValue({
            finger: finger,
            move: true,
            values: values,
            source: valueDerived
        }), newValue = _getFingerNewValue.newValue, activeIndex = _getFingerNewValue.activeIndex;
        focusThumb({
            sliderRef: sliderRef,
            activeIndex: activeIndex,
            setActive: setActive
        });
        setValueState(newValue);
        if (onChange) onChange(event, newValue);
    });
    var handleTouchEnd = _useEventCallbackDefault.default(function(event) {
        var finger = trackFinger(event, touchId);
        if (!finger) return;
        var _getFingerNewValue2 = getFingerNewValue({
            finger: finger,
            values: values,
            source: valueDerived
        }), newValue = _getFingerNewValue2.newValue;
        setActive(-1);
        if (event.type === 'touchend') setOpen(-1);
        if (onChangeCommitted) onChangeCommitted(event, newValue);
        touchId.current = undefined;
        var doc = _ownerDocumentDefault.default(sliderRef.current);
        doc.removeEventListener('mousemove', handleTouchMove);
        doc.removeEventListener('mouseup', handleTouchEnd);
        doc.removeEventListener('touchmove', handleTouchMove);
        doc.removeEventListener('touchend', handleTouchEnd);
    });
    var handleTouchStart = _useEventCallbackDefault.default(function(event) {
        // Workaround as Safari has partial support for touchAction: 'none'.
        event.preventDefault();
        var touch = event.changedTouches[0];
        if (touch != null) // A number that uniquely identifies the current finger in the touch session.
        touchId.current = touch.identifier;
        var finger = trackFinger(event, touchId);
        var _getFingerNewValue3 = getFingerNewValue({
            finger: finger,
            values: values,
            source: valueDerived
        }), newValue = _getFingerNewValue3.newValue, activeIndex = _getFingerNewValue3.activeIndex;
        focusThumb({
            sliderRef: sliderRef,
            activeIndex: activeIndex,
            setActive: setActive
        });
        setValueState(newValue);
        if (onChange) onChange(event, newValue);
        var doc = _ownerDocumentDefault.default(sliderRef.current);
        doc.addEventListener('touchmove', handleTouchMove);
        doc.addEventListener('touchend', handleTouchEnd);
    });
    _react.useEffect(function() {
        var slider = sliderRef.current;
        slider.addEventListener('touchstart', handleTouchStart);
        var doc = _ownerDocumentDefault.default(slider);
        return function() {
            slider.removeEventListener('touchstart', handleTouchStart);
            doc.removeEventListener('mousemove', handleTouchMove);
            doc.removeEventListener('mouseup', handleTouchEnd);
            doc.removeEventListener('touchmove', handleTouchMove);
            doc.removeEventListener('touchend', handleTouchEnd);
        };
    }, [
        handleTouchEnd,
        handleTouchMove,
        handleTouchStart
    ]);
    var handleMouseDown = _useEventCallbackDefault.default(function(event) {
        if (onMouseDown) onMouseDown(event);
        event.preventDefault();
        var finger = trackFinger(event, touchId);
        var _getFingerNewValue4 = getFingerNewValue({
            finger: finger,
            values: values,
            source: valueDerived
        }), newValue = _getFingerNewValue4.newValue, activeIndex = _getFingerNewValue4.activeIndex;
        focusThumb({
            sliderRef: sliderRef,
            activeIndex: activeIndex,
            setActive: setActive
        });
        setValueState(newValue);
        if (onChange) onChange(event, newValue);
        var doc = _ownerDocumentDefault.default(sliderRef.current);
        doc.addEventListener('mousemove', handleTouchMove);
        doc.addEventListener('mouseup', handleTouchEnd);
    });
    var trackOffset = valueToPercent(range ? values[0] : min, min, max);
    var trackLeap = valueToPercent(values[values.length - 1], min, max) - trackOffset;
    var trackStyle = _extendsDefault.default({}, axisProps[axis].offset(trackOffset), axisProps[axis].leap(trackLeap));
    return /*#__PURE__*/ _react.createElement(Component, _extendsDefault.default({
        ref: handleRef,
        className: _clsxDefault.default(classes.root, classes["color".concat(_capitalizeDefault.default(color))], className, disabled && classes.disabled, marks.length > 0 && marks.some(function(mark) {
            return mark.label;
        }) && classes.marked, track === false && classes.trackFalse, orientation === 'vertical' && classes.vertical, track === 'inverted' && classes.trackInverted),
        onMouseDown: handleMouseDown
    }, other), /*#__PURE__*/ _react.createElement("span", {
        className: classes.rail
    }), /*#__PURE__*/ _react.createElement("span", {
        className: classes.track,
        style: trackStyle
    }), /*#__PURE__*/ _react.createElement("input", {
        value: values.join(','),
        name: name,
        type: "hidden"
    }), marks.map(function(mark, index) {
        var percent = valueToPercent(mark.value, min, max);
        var style = axisProps[axis].offset(percent);
        var markActive;
        if (track === false) markActive = values.indexOf(mark.value) !== -1;
        else markActive = track === 'normal' && (range ? mark.value >= values[0] && mark.value <= values[values.length - 1] : mark.value <= values[0]) || track === 'inverted' && (range ? mark.value <= values[0] || mark.value >= values[values.length - 1] : mark.value >= values[0]);
        return /*#__PURE__*/ _react.createElement(_react.Fragment, {
            key: mark.value
        }, /*#__PURE__*/ _react.createElement("span", {
            style: style,
            "data-index": index,
            className: _clsxDefault.default(classes.mark, markActive && classes.markActive)
        }), mark.label != null ? /*#__PURE__*/ _react.createElement("span", {
            "aria-hidden": true,
            "data-index": index,
            style: style,
            className: _clsxDefault.default(classes.markLabel, markActive && classes.markLabelActive)
        }, mark.label) : null);
    }), values.map(function(value, index) {
        var percent = valueToPercent(value, min, max);
        var style = axisProps[axis].offset(percent);
        return /*#__PURE__*/ _react.createElement(ValueLabelComponent, {
            key: index,
            valueLabelFormat: valueLabelFormat,
            valueLabelDisplay: valueLabelDisplay,
            className: classes.valueLabel,
            value: typeof valueLabelFormat === 'function' ? valueLabelFormat(scale(value), index) : valueLabelFormat,
            index: index,
            open: open === index || active === index || valueLabelDisplay === 'on',
            disabled: disabled
        }, /*#__PURE__*/ _react.createElement(ThumbComponent, {
            className: _clsxDefault.default(classes.thumb, classes["thumbColor".concat(_capitalizeDefault.default(color))], active === index && classes.active, disabled && classes.disabled, focusVisible === index && classes.focusVisible),
            tabIndex: disabled ? null : 0,
            role: "slider",
            style: style,
            "data-index": index,
            "aria-label": getAriaLabel ? getAriaLabel(index) : ariaLabel,
            "aria-labelledby": ariaLabelledby,
            "aria-orientation": orientation,
            "aria-valuemax": scale(max),
            "aria-valuemin": scale(min),
            "aria-valuenow": scale(value),
            "aria-valuetext": getAriaValueText ? getAriaValueText(scale(value), index) : ariaValuetext,
            onKeyDown: handleKeyDown,
            onFocus: handleFocus,
            onBlur: handleBlur,
            onMouseOver: handleMouseOver,
            onMouseLeave: handleMouseLeave
        }));
    }));
});
Slider.propTypes = {
    /**
   * The label of the slider.
   */ 'aria-label': _utils.chainPropTypes(_propTypesDefault.default.string, function(props) {
        var range = Array.isArray(props.value || props.defaultValue);
        if (range && props['aria-label'] != null) return new Error('Material-UI: You need to use the `getAriaLabel` prop instead of `aria-label` when using a range slider.');
        return null;
    }),
    /**
   * The id of the element containing a label for the slider.
   */ 'aria-labelledby': _propTypesDefault.default.string,
    /**
   * A string value that provides a user-friendly name for the current value of the slider.
   */ 'aria-valuetext': _utils.chainPropTypes(_propTypesDefault.default.string, function(props) {
        var range = Array.isArray(props.value || props.defaultValue);
        if (range && props['aria-valuetext'] != null) return new Error('Material-UI: You need to use the `getAriaValueText` prop instead of `aria-valuetext` when using a range slider.');
        return null;
    }),
    /**
   * Override or extend the styles applied to the component.
   * See [CSS API](#css) below for more details.
   */ classes: _propTypesDefault.default.object.isRequired,
    /**
   * @ignore
   */ className: _propTypesDefault.default.string,
    /**
   * The color of the component. It supports those theme colors that make sense for this component.
   */ color: _propTypesDefault.default.oneOf([
        'primary',
        'secondary'
    ]),
    /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */ component: _propTypesDefault.default/* @typescript-to-proptypes-ignore */ .elementType,
    /**
   * The default element value. Use when the component is not controlled.
   */ defaultValue: _propTypesDefault.default.oneOfType([
        _propTypesDefault.default.number,
        _propTypesDefault.default.arrayOf(_propTypesDefault.default.number)
    ]),
    /**
   * If `true`, the slider will be disabled.
   */ disabled: _propTypesDefault.default.bool,
    /**
   * Accepts a function which returns a string value that provides a user-friendly name for the thumb labels of the slider.
   *
   * @param {number} index The thumb label's index to format.
   * @returns {string}
   */ getAriaLabel: _propTypesDefault.default.func,
    /**
   * Accepts a function which returns a string value that provides a user-friendly name for the current value of the slider.
   *
   * @param {number} value The thumb label's value to format.
   * @param {number} index The thumb label's index to format.
   * @returns {string}
   */ getAriaValueText: _propTypesDefault.default.func,
    /**
   * Marks indicate predetermined values to which the user can move the slider.
   * If `true` the marks will be spaced according the value of the `step` prop.
   * If an array, it should contain objects with `value` and an optional `label` keys.
   */ marks: _propTypesDefault.default.oneOfType([
        _propTypesDefault.default.bool,
        _propTypesDefault.default.array
    ]),
    /**
   * The maximum allowed value of the slider.
   * Should not be equal to min.
   */ max: _propTypesDefault.default.number,
    /**
   * The minimum allowed value of the slider.
   * Should not be equal to max.
   */ min: _propTypesDefault.default.number,
    /**
   * Name attribute of the hidden `input` element.
   */ name: _propTypesDefault.default.string,
    /**
   * Callback function that is fired when the slider's value changed.
   *
   * @param {object} event The event source of the callback.
   * @param {number | number[]} value The new value.
   */ onChange: _propTypesDefault.default.func,
    /**
   * Callback function that is fired when the `mouseup` is triggered.
   *
   * @param {object} event The event source of the callback.
   * @param {number | number[]} value The new value.
   */ onChangeCommitted: _propTypesDefault.default.func,
    /**
   * @ignore
   */ onMouseDown: _propTypesDefault.default.func,
    /**
   * The slider orientation.
   */ orientation: _propTypesDefault.default.oneOf([
        'horizontal',
        'vertical'
    ]),
    /**
   * A transformation function, to change the scale of the slider.
   */ scale: _propTypesDefault.default.func,
    /**
   * The granularity with which the slider can step through values. (A "discrete" slider.)
   * The `min` prop serves as the origin for the valid values.
   * We recommend (max - min) to be evenly divisible by the step.
   *
   * When step is `null`, the thumb can only be slid onto marks provided with the `marks` prop.
   */ step: _propTypesDefault.default.number,
    /**
   * The component used to display the value label.
   */ ThumbComponent: _propTypesDefault.default.elementType,
    /**
   * The track presentation:
   *
   * - `normal` the track will render a bar representing the slider value.
   * - `inverted` the track will render a bar representing the remaining slider value.
   * - `false` the track will render without a bar.
   */ track: _propTypesDefault.default.oneOf([
        'normal',
        false,
        'inverted'
    ]),
    /**
   * The value of the slider.
   * For ranged sliders, provide an array with two values.
   */ value: _propTypesDefault.default.oneOfType([
        _propTypesDefault.default.number,
        _propTypesDefault.default.arrayOf(_propTypesDefault.default.number)
    ]),
    /**
   * The value label component.
   */ ValueLabelComponent: _propTypesDefault.default.elementType,
    /**
   * Controls when the value label is displayed:
   *
   * - `auto` the value label will display when the thumb is hovered or focused.
   * - `on` will display persistently.
   * - `off` will never display.
   */ valueLabelDisplay: _propTypesDefault.default.oneOf([
        'on',
        'auto',
        'off'
    ]),
    /**
   * The format function the value label's value.
   *
   * When a function is provided, it should have the following signature:
   *
   * - {number} value The value label's value to format
   * - {number} index The value label's index to format
   */ valueLabelFormat: _propTypesDefault.default.oneOfType([
        _propTypesDefault.default.string,
        _propTypesDefault.default.func
    ])
};
exports.default = _withStylesDefault.default(styles, {
    name: 'MuiSlider'
})(Slider);

},{"@babel/runtime/helpers/esm/toConsumableArray":"bCmCj","@babel/runtime/helpers/esm/slicedToArray":"cBZWN","@babel/runtime/helpers/esm/objectWithoutProperties":"25tJ4","@babel/runtime/helpers/esm/extends":"fTBFS","react":"21dqq","prop-types":"7wKI2","clsx":"83C22","@material-ui/utils":"54RkF","../styles/withStyles":"7U0iM","../styles/useTheme":"kWUCn","../styles/colorManipulator":"iz48G","../utils/useIsFocusVisible":"lY4zJ","../utils/ownerDocument":"lxJTm","../utils/useEventCallback":"hPpih","../utils/useForkRef":"kUpGa","../utils/capitalize":"5AJVX","../utils/useControlled":"1ORwD","./ValueLabel":"i8c9h","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"i8c9h":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _extends = require("@babel/runtime/helpers/esm/extends");
var _extendsDefault = parcelHelpers.interopDefault(_extends);
var _react = require("react");
var _clsx = require("clsx");
var _clsxDefault = parcelHelpers.interopDefault(_clsx);
var _withStyles = require("../styles/withStyles");
var _withStylesDefault = parcelHelpers.interopDefault(_withStyles);
var styles = function styles(theme) {
    return {
        thumb: {
            '&$open': {
                '& $offset': {
                    transform: 'scale(1) translateY(-10px)'
                }
            }
        },
        open: {},
        offset: _extendsDefault.default({
            zIndex: 1
        }, theme.typography.body2, {
            fontSize: theme.typography.pxToRem(12),
            lineHeight: 1.2,
            transition: theme.transitions.create([
                'transform'
            ], {
                duration: theme.transitions.duration.shortest
            }),
            top: -34,
            transformOrigin: 'bottom center',
            transform: 'scale(0)',
            position: 'absolute'
        }),
        circle: {
            display: 'flex',
            alignItems: 'center',
            justifyContent: 'center',
            width: 32,
            height: 32,
            borderRadius: '50% 50% 50% 0',
            backgroundColor: 'currentColor',
            transform: 'rotate(-45deg)'
        },
        label: {
            color: theme.palette.primary.contrastText,
            transform: 'rotate(45deg)'
        }
    };
};
/**
 * @ignore - internal component.
 */ function ValueLabel(props) {
    var children = props.children, classes = props.classes, className = props.className, open = props.open, value = props.value, valueLabelDisplay = props.valueLabelDisplay;
    if (valueLabelDisplay === 'off') return children;
    return /*#__PURE__*/ _react.cloneElement(children, {
        className: _clsxDefault.default(children.props.className, (open || valueLabelDisplay === 'on') && classes.open, classes.thumb)
    }, /*#__PURE__*/ _react.createElement("span", {
        className: _clsxDefault.default(classes.offset, className)
    }, /*#__PURE__*/ _react.createElement("span", {
        className: classes.circle
    }, /*#__PURE__*/ _react.createElement("span", {
        className: classes.label
    }, value))));
}
exports.default = _withStylesDefault.default(styles, {
    name: 'PrivateValueLabel'
})(ValueLabel);

},{"@babel/runtime/helpers/esm/extends":"fTBFS","react":"21dqq","clsx":"83C22","../styles/withStyles":"7U0iM","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"g6YeW":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>_snackbarDefault.default
);
var _snackbar = require("./Snackbar");
var _snackbarDefault = parcelHelpers.interopDefault(_snackbar);

},{"./Snackbar":"jPznR","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"jPznR":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "styles", ()=>styles
);
var _objectWithoutProperties = require("@babel/runtime/helpers/esm/objectWithoutProperties");
var _objectWithoutPropertiesDefault = parcelHelpers.interopDefault(_objectWithoutProperties);
var _defineProperty = require("@babel/runtime/helpers/esm/defineProperty");
var _definePropertyDefault = parcelHelpers.interopDefault(_defineProperty);
var _extends = require("@babel/runtime/helpers/esm/extends");
var _extendsDefault = parcelHelpers.interopDefault(_extends);
var _react = require("react");
var _propTypes = require("prop-types");
var _propTypesDefault = parcelHelpers.interopDefault(_propTypes);
var _clsx = require("clsx");
var _clsxDefault = parcelHelpers.interopDefault(_clsx);
var _withStyles = require("../styles/withStyles");
var _withStylesDefault = parcelHelpers.interopDefault(_withStyles);
var _transitions = require("../styles/transitions");
var _clickAwayListener = require("../ClickAwayListener");
var _clickAwayListenerDefault = parcelHelpers.interopDefault(_clickAwayListener);
var _useEventCallback = require("../utils/useEventCallback");
var _useEventCallbackDefault = parcelHelpers.interopDefault(_useEventCallback);
var _capitalize = require("../utils/capitalize");
var _capitalizeDefault = parcelHelpers.interopDefault(_capitalize);
var _createChainedFunction = require("../utils/createChainedFunction");
var _createChainedFunctionDefault = parcelHelpers.interopDefault(_createChainedFunction);
var _deprecatedPropType = require("../utils/deprecatedPropType");
var _deprecatedPropTypeDefault = parcelHelpers.interopDefault(_deprecatedPropType);
var _grow = require("../Grow");
var _growDefault = parcelHelpers.interopDefault(_grow);
var _snackbarContent = require("../SnackbarContent");
var _snackbarContentDefault = parcelHelpers.interopDefault(_snackbarContent);
var styles = function styles(theme) {
    var top1 = {
        top: 8
    };
    var bottom1 = {
        bottom: 8
    };
    var right = {
        justifyContent: 'flex-end'
    };
    var left = {
        justifyContent: 'flex-start'
    };
    var top3 = {
        top: 24
    };
    var bottom3 = {
        bottom: 24
    };
    var right3 = {
        right: 24
    };
    var left3 = {
        left: 24
    };
    var center = {
        left: '50%',
        right: 'auto',
        transform: 'translateX(-50%)'
    };
    return {
        /* Styles applied to the root element. */ root: {
            zIndex: theme.zIndex.snackbar,
            position: 'fixed',
            display: 'flex',
            left: 8,
            right: 8,
            justifyContent: 'center',
            alignItems: 'center'
        },
        /* Styles applied to the root element if `anchorOrigin={{ 'top', 'center' }}`. */ anchorOriginTopCenter: _extendsDefault.default({}, top1, _definePropertyDefault.default({}, theme.breakpoints.up('sm'), _extendsDefault.default({}, top3, center))),
        /* Styles applied to the root element if `anchorOrigin={{ 'bottom', 'center' }}`. */ anchorOriginBottomCenter: _extendsDefault.default({}, bottom1, _definePropertyDefault.default({}, theme.breakpoints.up('sm'), _extendsDefault.default({}, bottom3, center))),
        /* Styles applied to the root element if `anchorOrigin={{ 'top', 'right' }}`. */ anchorOriginTopRight: _extendsDefault.default({}, top1, right, _definePropertyDefault.default({}, theme.breakpoints.up('sm'), _extendsDefault.default({
            left: 'auto'
        }, top3, right3))),
        /* Styles applied to the root element if `anchorOrigin={{ 'bottom', 'right' }}`. */ anchorOriginBottomRight: _extendsDefault.default({}, bottom1, right, _definePropertyDefault.default({}, theme.breakpoints.up('sm'), _extendsDefault.default({
            left: 'auto'
        }, bottom3, right3))),
        /* Styles applied to the root element if `anchorOrigin={{ 'top', 'left' }}`. */ anchorOriginTopLeft: _extendsDefault.default({}, top1, left, _definePropertyDefault.default({}, theme.breakpoints.up('sm'), _extendsDefault.default({
            right: 'auto'
        }, top3, left3))),
        /* Styles applied to the root element if `anchorOrigin={{ 'bottom', 'left' }}`. */ anchorOriginBottomLeft: _extendsDefault.default({}, bottom1, left, _definePropertyDefault.default({}, theme.breakpoints.up('sm'), _extendsDefault.default({
            right: 'auto'
        }, bottom3, left3)))
    };
};
var Snackbar = /*#__PURE__*/ _react.forwardRef(function Snackbar(props, ref) {
    var action = props.action, _props$anchorOrigin = props.anchorOrigin;
    _props$anchorOrigin = _props$anchorOrigin === void 0 ? {
        vertical: 'bottom',
        horizontal: 'center'
    } : _props$anchorOrigin;
    var vertical = _props$anchorOrigin.vertical, horizontal = _props$anchorOrigin.horizontal, _props$autoHideDurati = props.autoHideDuration, autoHideDuration = _props$autoHideDurati === void 0 ? null : _props$autoHideDurati, children = props.children, classes = props.classes, className = props.className, ClickAwayListenerProps = props.ClickAwayListenerProps, ContentProps = props.ContentProps, _props$disableWindowB = props.disableWindowBlurListener, disableWindowBlurListener = _props$disableWindowB === void 0 ? false : _props$disableWindowB, message = props.message, onClose = props.onClose, onEnter = props.onEnter, onEntered = props.onEntered, onEntering = props.onEntering, onExit = props.onExit, onExited = props.onExited, onExiting = props.onExiting, onMouseEnter = props.onMouseEnter, onMouseLeave = props.onMouseLeave, open = props.open, resumeHideDuration = props.resumeHideDuration, _props$TransitionComp = props.TransitionComponent, TransitionComponent = _props$TransitionComp === void 0 ? _growDefault.default : _props$TransitionComp, _props$transitionDura = props.transitionDuration, transitionDuration = _props$transitionDura === void 0 ? {
        enter: _transitions.duration.enteringScreen,
        exit: _transitions.duration.leavingScreen
    } : _props$transitionDura, TransitionProps = props.TransitionProps, other = _objectWithoutPropertiesDefault.default(props, [
        "action",
        "anchorOrigin",
        "autoHideDuration",
        "children",
        "classes",
        "className",
        "ClickAwayListenerProps",
        "ContentProps",
        "disableWindowBlurListener",
        "message",
        "onClose",
        "onEnter",
        "onEntered",
        "onEntering",
        "onExit",
        "onExited",
        "onExiting",
        "onMouseEnter",
        "onMouseLeave",
        "open",
        "resumeHideDuration",
        "TransitionComponent",
        "transitionDuration",
        "TransitionProps"
    ]);
    var timerAutoHide = _react.useRef();
    var _React$useState = _react.useState(true), exited = _React$useState[0], setExited = _React$useState[1];
    var handleClose = _useEventCallbackDefault.default(function() {
        if (onClose) onClose.apply(void 0, arguments);
    });
    var setAutoHideTimer = _useEventCallbackDefault.default(function(autoHideDurationParam) {
        if (!onClose || autoHideDurationParam == null) return;
        clearTimeout(timerAutoHide.current);
        timerAutoHide.current = setTimeout(function() {
            handleClose(null, 'timeout');
        }, autoHideDurationParam);
    });
    _react.useEffect(function() {
        if (open) setAutoHideTimer(autoHideDuration);
        return function() {
            clearTimeout(timerAutoHide.current);
        };
    }, [
        open,
        autoHideDuration,
        setAutoHideTimer
    ]); // Pause the timer when the user is interacting with the Snackbar
    // or when the user hide the window.
    var handlePause = function handlePause() {
        clearTimeout(timerAutoHide.current);
    }; // Restart the timer when the user is no longer interacting with the Snackbar
    // or when the window is shown back.
    var handleResume = _react.useCallback(function() {
        if (autoHideDuration != null) setAutoHideTimer(resumeHideDuration != null ? resumeHideDuration : autoHideDuration * 0.5);
    }, [
        autoHideDuration,
        resumeHideDuration,
        setAutoHideTimer
    ]);
    var handleMouseEnter = function handleMouseEnter(event) {
        if (onMouseEnter) onMouseEnter(event);
        handlePause();
    };
    var handleMouseLeave = function handleMouseLeave(event) {
        if (onMouseLeave) onMouseLeave(event);
        handleResume();
    };
    var handleClickAway = function handleClickAway(event) {
        if (onClose) onClose(event, 'clickaway');
    };
    var handleExited = function handleExited() {
        setExited(true);
    };
    var handleEnter = function handleEnter() {
        setExited(false);
    };
    _react.useEffect(function() {
        if (!disableWindowBlurListener && open) {
            window.addEventListener('focus', handleResume);
            window.addEventListener('blur', handlePause);
            return function() {
                window.removeEventListener('focus', handleResume);
                window.removeEventListener('blur', handlePause);
            };
        }
        return undefined;
    }, [
        disableWindowBlurListener,
        handleResume,
        open
    ]); // So we only render active snackbars.
    if (!open && exited) return null;
    return /*#__PURE__*/ _react.createElement(_clickAwayListenerDefault.default, _extendsDefault.default({
        onClickAway: handleClickAway
    }, ClickAwayListenerProps), /*#__PURE__*/ _react.createElement("div", _extendsDefault.default({
        className: _clsxDefault.default(classes.root, classes["anchorOrigin".concat(_capitalizeDefault.default(vertical)).concat(_capitalizeDefault.default(horizontal))], className),
        onMouseEnter: handleMouseEnter,
        onMouseLeave: handleMouseLeave,
        ref: ref
    }, other), /*#__PURE__*/ _react.createElement(TransitionComponent, _extendsDefault.default({
        appear: true,
        in: open,
        onEnter: _createChainedFunctionDefault.default(handleEnter, onEnter),
        onEntered: onEntered,
        onEntering: onEntering,
        onExit: onExit,
        onExited: _createChainedFunctionDefault.default(handleExited, onExited),
        onExiting: onExiting,
        timeout: transitionDuration,
        direction: vertical === 'top' ? 'down' : 'up'
    }, TransitionProps), children || /*#__PURE__*/ _react.createElement(_snackbarContentDefault.default, _extendsDefault.default({
        message: message,
        action: action
    }, ContentProps)))));
});
Snackbar.propTypes = {
    // ----------------------------- Warning --------------------------------
    // | These PropTypes are generated from the TypeScript type definitions |
    // |     To update them edit the d.ts file and run "yarn proptypes"     |
    // ----------------------------------------------------------------------
    /**
   * The action to display. It renders after the message, at the end of the snackbar.
   */ action: _propTypesDefault.default.node,
    /**
   * The anchor of the `Snackbar`.
   */ anchorOrigin: _propTypesDefault.default.shape({
        horizontal: _propTypesDefault.default.oneOf([
            'center',
            'left',
            'right'
        ]).isRequired,
        vertical: _propTypesDefault.default.oneOf([
            'bottom',
            'top'
        ]).isRequired
    }),
    /**
   * The number of milliseconds to wait before automatically calling the
   * `onClose` function. `onClose` should then set the state of the `open`
   * prop to hide the Snackbar. This behavior is disabled by default with
   * the `null` value.
   */ autoHideDuration: _propTypesDefault.default.number,
    /**
   * Replace the `SnackbarContent` component.
   */ children: _propTypesDefault.default.element,
    /**
   * Override or extend the styles applied to the component.
   * See [CSS API](#css) below for more details.
   */ classes: _propTypesDefault.default.object,
    /**
   * @ignore
   */ className: _propTypesDefault.default.string,
    /**
   * Props applied to the `ClickAwayListener` element.
   */ ClickAwayListenerProps: _propTypesDefault.default.object,
    /**
   * Props applied to the [`SnackbarContent`](/api/snackbar-content/) element.
   */ ContentProps: _propTypesDefault.default.object,
    /**
   * If `true`, the `autoHideDuration` timer will expire even if the window is not focused.
   */ disableWindowBlurListener: _propTypesDefault.default.bool,
    /**
   * When displaying multiple consecutive Snackbars from a parent rendering a single
   * <Snackbar/>, add the key prop to ensure independent treatment of each message.
   * e.g. <Snackbar key={message} />, otherwise, the message may update-in-place and
   * features such as autoHideDuration may be canceled.
   */ key: _propTypesDefault.default.any,
    /**
   * The message to display.
   */ message: _propTypesDefault.default.node,
    /**
   * Callback fired when the component requests to be closed.
   * Typically `onClose` is used to set state in the parent component,
   * which is used to control the `Snackbar` `open` prop.
   * The `reason` parameter can optionally be used to control the response to `onClose`,
   * for example ignoring `clickaway`.
   *
   * @param {object} event The event source of the callback.
   * @param {string} reason Can be: `"timeout"` (`autoHideDuration` expired), `"clickaway"`.
   */ onClose: _propTypesDefault.default.func,
    /**
   * Callback fired before the transition is entering.
   * @deprecated Use the `TransitionProps` prop instead.
   */ onEnter: _deprecatedPropTypeDefault.default(_propTypesDefault.default.func, 'Use the `TransitionProps` prop instead.'),
    /**
   * Callback fired when the transition has entered.
   * @deprecated Use the `TransitionProps` prop instead.
   */ onEntered: _deprecatedPropTypeDefault.default(_propTypesDefault.default.func, 'Use the `TransitionProps` prop instead.'),
    /**
   * Callback fired when the transition is entering.
   * @deprecated Use the `TransitionProps` prop instead.
   */ onEntering: _deprecatedPropTypeDefault.default(_propTypesDefault.default.func, 'Use the `TransitionProps` prop instead.'),
    /**
   * Callback fired before the transition is exiting.
   * @deprecated Use the `TransitionProps` prop instead.
   */ onExit: _deprecatedPropTypeDefault.default(_propTypesDefault.default.func, 'Use the `TransitionProps` prop instead.'),
    /**
   * Callback fired when the transition has exited.
   * @deprecated Use the `TransitionProps` prop instead.
   */ onExited: _deprecatedPropTypeDefault.default(_propTypesDefault.default.func, 'Use the `TransitionProps` prop instead.'),
    /**
   * Callback fired when the transition is exiting.
   * @deprecated Use the `TransitionProps` prop instead.
   */ onExiting: _deprecatedPropTypeDefault.default(_propTypesDefault.default.func, 'Use the `TransitionProps` prop instead.'),
    /**
   * @ignore
   */ onMouseEnter: _propTypesDefault.default.func,
    /**
   * @ignore
   */ onMouseLeave: _propTypesDefault.default.func,
    /**
   * If `true`, `Snackbar` is open.
   */ open: _propTypesDefault.default.bool,
    /**
   * The number of milliseconds to wait before dismissing after user interaction.
   * If `autoHideDuration` prop isn't specified, it does nothing.
   * If `autoHideDuration` prop is specified but `resumeHideDuration` isn't,
   * we default to `autoHideDuration / 2` ms.
   */ resumeHideDuration: _propTypesDefault.default.number,
    /**
   * The component used for the transition.
   * [Follow this guide](/components/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.
   */ TransitionComponent: _propTypesDefault.default.elementType,
    /**
   * The duration for the transition, in milliseconds.
   * You may specify a single timeout for all transitions, or individually with an object.
   */ transitionDuration: _propTypesDefault.default.oneOfType([
        _propTypesDefault.default.number,
        _propTypesDefault.default.shape({
            appear: _propTypesDefault.default.number,
            enter: _propTypesDefault.default.number,
            exit: _propTypesDefault.default.number
        })
    ]),
    /**
   * Props applied to the [`Transition`](http://reactcommunity.org/react-transition-group/transition#Transition-props) element.
   */ TransitionProps: _propTypesDefault.default.object
};
exports.default = _withStylesDefault.default(styles, {
    flip: false,
    name: 'MuiSnackbar'
})(Snackbar);

},{"@babel/runtime/helpers/esm/objectWithoutProperties":"25tJ4","@babel/runtime/helpers/esm/defineProperty":"hbmCA","@babel/runtime/helpers/esm/extends":"fTBFS","react":"21dqq","prop-types":"7wKI2","clsx":"83C22","../styles/withStyles":"7U0iM","../styles/transitions":"c5294","../ClickAwayListener":"e5tZw","../utils/useEventCallback":"hPpih","../utils/capitalize":"5AJVX","../utils/createChainedFunction":"BNP7Q","../utils/deprecatedPropType":"loRgF","../Grow":"2tpXF","../SnackbarContent":"k324F","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"k324F":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>_snackbarContentDefault.default
);
var _snackbarContent = require("./SnackbarContent");
var _snackbarContentDefault = parcelHelpers.interopDefault(_snackbarContent);

},{"./SnackbarContent":"errN2","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"errN2":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "styles", ()=>styles
);
var _objectWithoutProperties = require("@babel/runtime/helpers/esm/objectWithoutProperties");
var _objectWithoutPropertiesDefault = parcelHelpers.interopDefault(_objectWithoutProperties);
var _defineProperty = require("@babel/runtime/helpers/esm/defineProperty");
var _definePropertyDefault = parcelHelpers.interopDefault(_defineProperty);
var _extends = require("@babel/runtime/helpers/esm/extends");
var _extendsDefault = parcelHelpers.interopDefault(_extends);
var _react = require("react");
var _propTypes = require("prop-types");
var _propTypesDefault = parcelHelpers.interopDefault(_propTypes);
var _clsx = require("clsx");
var _clsxDefault = parcelHelpers.interopDefault(_clsx);
var _withStyles = require("../styles/withStyles");
var _withStylesDefault = parcelHelpers.interopDefault(_withStyles);
var _paper = require("../Paper");
var _paperDefault = parcelHelpers.interopDefault(_paper);
var _colorManipulator = require("../styles/colorManipulator");
var styles = function styles(theme) {
    var emphasis = theme.palette.type === 'light' ? 0.8 : 0.98;
    var backgroundColor = _colorManipulator.emphasize(theme.palette.background.default, emphasis);
    return {
        /* Styles applied to the root element. */ root: _extendsDefault.default({}, theme.typography.body2, _definePropertyDefault.default({
            color: theme.palette.getContrastText(backgroundColor),
            backgroundColor: backgroundColor,
            display: 'flex',
            alignItems: 'center',
            flexWrap: 'wrap',
            padding: '6px 16px',
            borderRadius: theme.shape.borderRadius,
            flexGrow: 1
        }, theme.breakpoints.up('sm'), {
            flexGrow: 'initial',
            minWidth: 288
        })),
        /* Styles applied to the message wrapper element. */ message: {
            padding: '8px 0'
        },
        /* Styles applied to the action wrapper element if `action` is provided. */ action: {
            display: 'flex',
            alignItems: 'center',
            marginLeft: 'auto',
            paddingLeft: 16,
            marginRight: -8
        }
    };
};
var SnackbarContent = /*#__PURE__*/ _react.forwardRef(function SnackbarContent(props, ref) {
    var action = props.action, classes = props.classes, className = props.className, message = props.message, _props$role = props.role, role = _props$role === void 0 ? 'alert' : _props$role, other = _objectWithoutPropertiesDefault.default(props, [
        "action",
        "classes",
        "className",
        "message",
        "role"
    ]);
    return /*#__PURE__*/ _react.createElement(_paperDefault.default, _extendsDefault.default({
        role: role,
        square: true,
        elevation: 6,
        className: _clsxDefault.default(classes.root, className),
        ref: ref
    }, other), /*#__PURE__*/ _react.createElement("div", {
        className: classes.message
    }, message), action ? /*#__PURE__*/ _react.createElement("div", {
        className: classes.action
    }, action) : null);
});
SnackbarContent.propTypes = {
    // ----------------------------- Warning --------------------------------
    // | These PropTypes are generated from the TypeScript type definitions |
    // |     To update them edit the d.ts file and run "yarn proptypes"     |
    // ----------------------------------------------------------------------
    /**
   * The action to display. It renders after the message, at the end of the snackbar.
   */ action: _propTypesDefault.default.node,
    /**
   * Override or extend the styles applied to the component.
   * See [CSS API](#css) below for more details.
   */ classes: _propTypesDefault.default.object,
    /**
   * @ignore
   */ className: _propTypesDefault.default.string,
    /**
   * The message to display.
   */ message: _propTypesDefault.default.node,
    /**
   * The ARIA role attribute of the element.
   */ role: _propTypesDefault.default.string
};
exports.default = _withStylesDefault.default(styles, {
    name: 'MuiSnackbarContent'
})(SnackbarContent);

},{"@babel/runtime/helpers/esm/objectWithoutProperties":"25tJ4","@babel/runtime/helpers/esm/defineProperty":"hbmCA","@babel/runtime/helpers/esm/extends":"fTBFS","react":"21dqq","prop-types":"7wKI2","clsx":"83C22","../styles/withStyles":"7U0iM","../Paper":"j0s2L","../styles/colorManipulator":"iz48G","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"8fSpd":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>_stepDefault.default
);
var _step = require("./Step");
var _stepDefault = parcelHelpers.interopDefault(_step);

},{"./Step":"31cJc","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"31cJc":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "styles", ()=>styles
);
var _extends = require("@babel/runtime/helpers/esm/extends");
var _extendsDefault = parcelHelpers.interopDefault(_extends);
var _objectWithoutProperties = require("@babel/runtime/helpers/esm/objectWithoutProperties");
var _objectWithoutPropertiesDefault = parcelHelpers.interopDefault(_objectWithoutProperties);
var _react = require("react");
var _reactIs = require("react-is");
var _propTypes = require("prop-types");
var _propTypesDefault = parcelHelpers.interopDefault(_propTypes);
var _clsx = require("clsx");
var _clsxDefault = parcelHelpers.interopDefault(_clsx);
var _withStyles = require("../styles/withStyles");
var _withStylesDefault = parcelHelpers.interopDefault(_withStyles);
var styles = {
    /* Styles applied to the root element. */ root: {},
    /* Styles applied to the root element if `orientation="horizontal"`. */ horizontal: {
        paddingLeft: 8,
        paddingRight: 8
    },
    /* Styles applied to the root element if `orientation="vertical"`. */ vertical: {},
    /* Styles applied to the root element if `alternativeLabel={true}`. */ alternativeLabel: {
        flex: 1,
        position: 'relative'
    },
    /* Pseudo-class applied to the root element if `completed={true}`. */ completed: {}
};
var Step = /*#__PURE__*/ _react.forwardRef(function Step(props, ref) {
    var _props$active = props.active, active = _props$active === void 0 ? false : _props$active, alternativeLabel = props.alternativeLabel, children = props.children, classes = props.classes, className = props.className, _props$completed = props.completed, completed = _props$completed === void 0 ? false : _props$completed, connectorProp = props.connector, _props$disabled = props.disabled, disabled = _props$disabled === void 0 ? false : _props$disabled, _props$expanded = props.expanded, expanded = _props$expanded === void 0 ? false : _props$expanded, index = props.index, last = props.last, orientation = props.orientation, other = _objectWithoutPropertiesDefault.default(props, [
        "active",
        "alternativeLabel",
        "children",
        "classes",
        "className",
        "completed",
        "connector",
        "disabled",
        "expanded",
        "index",
        "last",
        "orientation"
    ]);
    var connector = connectorProp ? /*#__PURE__*/ _react.cloneElement(connectorProp, {
        orientation: orientation,
        alternativeLabel: alternativeLabel,
        index: index,
        active: active,
        completed: completed,
        disabled: disabled
    }) : null;
    var newChildren = /*#__PURE__*/ _react.createElement("div", _extendsDefault.default({
        className: _clsxDefault.default(classes.root, classes[orientation], className, alternativeLabel && classes.alternativeLabel, completed && classes.completed),
        ref: ref
    }, other), connector && alternativeLabel && index !== 0 ? connector : null, _react.Children.map(children, function(child) {
        if (!/*#__PURE__*/ _react.isValidElement(child)) return null;
        if (_reactIs.isFragment(child)) console.error([
            "Material-UI: The Step component doesn't accept a Fragment as a child.",
            'Consider providing an array instead.'
        ].join('\n'));
        return /*#__PURE__*/ _react.cloneElement(child, _extendsDefault.default({
            active: active,
            alternativeLabel: alternativeLabel,
            completed: completed,
            disabled: disabled,
            expanded: expanded,
            last: last,
            icon: index + 1,
            orientation: orientation
        }, child.props));
    }));
    if (connector && !alternativeLabel && index !== 0) return /*#__PURE__*/ _react.createElement(_react.Fragment, null, connector, newChildren);
    return newChildren;
});
Step.propTypes = {
    // ----------------------------- Warning --------------------------------
    // | These PropTypes are generated from the TypeScript type definitions |
    // |     To update them edit the d.ts file and run "yarn proptypes"     |
    // ----------------------------------------------------------------------
    /**
   * Sets the step as active. Is passed to child components.
   */ active: _propTypesDefault.default.bool,
    /**
   * Should be `Step` sub-components such as `StepLabel`, `StepContent`.
   */ children: _propTypesDefault.default.node,
    /**
   * Override or extend the styles applied to the component.
   * See [CSS API](#css) below for more details.
   */ classes: _propTypesDefault.default.object,
    /**
   * @ignore
   */ className: _propTypesDefault.default.string,
    /**
   * Mark the step as completed. Is passed to child components.
   */ completed: _propTypesDefault.default.bool,
    /**
   * Mark the step as disabled, will also disable the button if
   * `StepButton` is a child of `Step`. Is passed to child components.
   */ disabled: _propTypesDefault.default.bool,
    /**
   * Expand the step.
   */ expanded: _propTypesDefault.default.bool
};
exports.default = _withStylesDefault.default(styles, {
    name: 'MuiStep'
})(Step);

},{"@babel/runtime/helpers/esm/extends":"fTBFS","@babel/runtime/helpers/esm/objectWithoutProperties":"25tJ4","react":"21dqq","react-is":"63mDj","prop-types":"7wKI2","clsx":"83C22","../styles/withStyles":"7U0iM","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"99EON":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>_stepButtonDefault.default
);
var _stepButton = require("./StepButton");
var _stepButtonDefault = parcelHelpers.interopDefault(_stepButton);

},{"./StepButton":"2Qz90","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"2Qz90":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "styles", ()=>styles
);
var _extends = require("@babel/runtime/helpers/esm/extends");
var _extendsDefault = parcelHelpers.interopDefault(_extends);
var _objectWithoutProperties = require("@babel/runtime/helpers/esm/objectWithoutProperties");
var _objectWithoutPropertiesDefault = parcelHelpers.interopDefault(_objectWithoutProperties);
var _react = require("react");
var _propTypes = require("prop-types");
var _propTypesDefault = parcelHelpers.interopDefault(_propTypes);
var _clsx = require("clsx");
var _clsxDefault = parcelHelpers.interopDefault(_clsx);
var _withStyles = require("../styles/withStyles");
var _withStylesDefault = parcelHelpers.interopDefault(_withStyles);
var _buttonBase = require("../ButtonBase");
var _buttonBaseDefault = parcelHelpers.interopDefault(_buttonBase);
var _stepLabel = require("../StepLabel");
var _stepLabelDefault = parcelHelpers.interopDefault(_stepLabel);
var _isMuiElement = require("../utils/isMuiElement");
var _isMuiElementDefault = parcelHelpers.interopDefault(_isMuiElement);
var styles = {
    /* Styles applied to the root element. */ root: {
        width: '100%',
        padding: '24px 16px',
        margin: '-24px -16px',
        boxSizing: 'content-box'
    },
    /* Styles applied to the root element if `orientation="horizontal"`. */ horizontal: {},
    /* Styles applied to the root element if `orientation="vertical"`. */ vertical: {
        justifyContent: 'flex-start',
        padding: '8px',
        margin: '-8px'
    },
    /* Styles applied to the `ButtonBase` touch-ripple. */ touchRipple: {
        color: 'rgba(0, 0, 0, 0.3)'
    }
};
var StepButton = /*#__PURE__*/ _react.forwardRef(function StepButton(props, ref) {
    var active = props.active, alternativeLabel = props.alternativeLabel, children = props.children, classes = props.classes, className = props.className, completed = props.completed, disabled = props.disabled, expanded = props.expanded, icon = props.icon, last = props.last, optional = props.optional, orientation = props.orientation, other = _objectWithoutPropertiesDefault.default(props, [
        "active",
        "alternativeLabel",
        "children",
        "classes",
        "className",
        "completed",
        "disabled",
        "expanded",
        "icon",
        "last",
        "optional",
        "orientation"
    ]);
    var childProps = {
        active: active,
        alternativeLabel: alternativeLabel,
        completed: completed,
        disabled: disabled,
        icon: icon,
        optional: optional,
        orientation: orientation
    };
    var child = _isMuiElementDefault.default(children, [
        'StepLabel'
    ]) ? /*#__PURE__*/ _react.cloneElement(children, childProps) : /*#__PURE__*/ _react.createElement(_stepLabelDefault.default, childProps, children);
    return /*#__PURE__*/ _react.createElement(_buttonBaseDefault.default, _extendsDefault.default({
        focusRipple: true,
        disabled: disabled,
        TouchRippleProps: {
            className: classes.touchRipple
        },
        className: _clsxDefault.default(classes.root, classes[orientation], className),
        ref: ref
    }, other), child);
});
StepButton.propTypes = {
    /**
   * @ignore
   * Passed in via `Step` - passed through to `StepLabel`.
   */ active: _propTypesDefault.default.bool,
    /**
   * @ignore
   * Set internally by Stepper when it's supplied with the alternativeLabel property.
   */ alternativeLabel: _propTypesDefault.default.bool,
    /**
   * Can be a `StepLabel` or a node to place inside `StepLabel` as children.
   */ children: _propTypesDefault.default.node,
    /**
   * Override or extend the styles applied to the component.
   * See [CSS API](#css) below for more details.
   */ classes: _propTypesDefault.default.object.isRequired,
    /**
   * @ignore
   */ className: _propTypesDefault.default.string,
    /**
   * @ignore
   * Sets completed styling. Is passed to StepLabel.
   */ completed: _propTypesDefault.default.bool,
    /**
   * @ignore
   * Disables the button and sets disabled styling. Is passed to StepLabel.
   */ disabled: _propTypesDefault.default.bool,
    /**
   * @ignore
   * potentially passed from parent `Step`
   */ expanded: _propTypesDefault.default.bool,
    /**
   * The icon displayed by the step label.
   */ icon: _propTypesDefault.default.node,
    /**
   * @ignore
   */ last: _propTypesDefault.default.bool,
    /**
   * The optional node to display.
   */ optional: _propTypesDefault.default.node,
    /**
   * @ignore
   */ orientation: _propTypesDefault.default.oneOf([
        'horizontal',
        'vertical'
    ])
};
exports.default = _withStylesDefault.default(styles, {
    name: 'MuiStepButton'
})(StepButton);

},{"@babel/runtime/helpers/esm/extends":"fTBFS","@babel/runtime/helpers/esm/objectWithoutProperties":"25tJ4","react":"21dqq","prop-types":"7wKI2","clsx":"83C22","../styles/withStyles":"7U0iM","../ButtonBase":"2TQRV","../StepLabel":"86AUS","../utils/isMuiElement":"6dsp6","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"86AUS":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>_stepLabelDefault.default
);
var _stepLabel = require("./StepLabel");
var _stepLabelDefault = parcelHelpers.interopDefault(_stepLabel);

},{"./StepLabel":"gA33H","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"gA33H":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "styles", ()=>styles
);
var _extends = require("@babel/runtime/helpers/esm/extends");
var _extendsDefault = parcelHelpers.interopDefault(_extends);
var _objectWithoutProperties = require("@babel/runtime/helpers/esm/objectWithoutProperties");
var _objectWithoutPropertiesDefault = parcelHelpers.interopDefault(_objectWithoutProperties);
var _react = require("react");
var _propTypes = require("prop-types");
var _propTypesDefault = parcelHelpers.interopDefault(_propTypes);
var _clsx = require("clsx");
var _clsxDefault = parcelHelpers.interopDefault(_clsx);
var _withStyles = require("../styles/withStyles");
var _withStylesDefault = parcelHelpers.interopDefault(_withStyles);
var _typography = require("../Typography");
var _typographyDefault = parcelHelpers.interopDefault(_typography);
var _stepIcon = require("../StepIcon");
var _stepIconDefault = parcelHelpers.interopDefault(_stepIcon);
var styles = function styles(theme) {
    return {
        /* Styles applied to the root element. */ root: {
            display: 'flex',
            alignItems: 'center',
            '&$alternativeLabel': {
                flexDirection: 'column'
            },
            '&$disabled': {
                cursor: 'default'
            }
        },
        /* Styles applied to the root element if `orientation="horizontal"`. */ horizontal: {},
        /* Styles applied to the root element if `orientation="vertical"`. */ vertical: {},
        /* Styles applied to the `Typography` component which wraps `children`. */ label: {
            color: theme.palette.text.secondary,
            '&$active': {
                color: theme.palette.text.primary,
                fontWeight: 500
            },
            '&$completed': {
                color: theme.palette.text.primary,
                fontWeight: 500
            },
            '&$alternativeLabel': {
                textAlign: 'center',
                marginTop: 16
            },
            '&$error': {
                color: theme.palette.error.main
            }
        },
        /* Pseudo-class applied to the `Typography` component if `active={true}`. */ active: {},
        /* Pseudo-class applied to the `Typography` component if `completed={true}`. */ completed: {},
        /* Pseudo-class applied to the root element and `Typography` component if `error={true}`. */ error: {},
        /* Pseudo-class applied to the root element and `Typography` component if `disabled={true}`. */ disabled: {},
        /* Styles applied to the `icon` container element. */ iconContainer: {
            flexShrink: 0,
            // Fix IE 11 issue
            display: 'flex',
            paddingRight: 8,
            '&$alternativeLabel': {
                paddingRight: 0
            }
        },
        /* Pseudo-class applied to the root and icon container and `Typography` if `alternativeLabel={true}`. */ alternativeLabel: {},
        /* Styles applied to the container element which wraps `Typography` and `optional`. */ labelContainer: {
            width: '100%'
        }
    };
};
var StepLabel = /*#__PURE__*/ _react.forwardRef(function StepLabel(props, ref) {
    var _props$active = props.active, active = _props$active === void 0 ? false : _props$active, _props$alternativeLab = props.alternativeLabel, alternativeLabel = _props$alternativeLab === void 0 ? false : _props$alternativeLab, children = props.children, classes = props.classes, className = props.className, _props$completed = props.completed, completed = _props$completed === void 0 ? false : _props$completed, _props$disabled = props.disabled, disabled = _props$disabled === void 0 ? false : _props$disabled, _props$error = props.error, error = _props$error === void 0 ? false : _props$error, expanded = props.expanded, icon = props.icon, last = props.last, optional = props.optional, _props$orientation = props.orientation, orientation = _props$orientation === void 0 ? 'horizontal' : _props$orientation, StepIconComponentProp = props.StepIconComponent, StepIconProps = props.StepIconProps, other = _objectWithoutPropertiesDefault.default(props, [
        "active",
        "alternativeLabel",
        "children",
        "classes",
        "className",
        "completed",
        "disabled",
        "error",
        "expanded",
        "icon",
        "last",
        "optional",
        "orientation",
        "StepIconComponent",
        "StepIconProps"
    ]);
    var StepIconComponent = StepIconComponentProp;
    if (icon && !StepIconComponent) StepIconComponent = _stepIconDefault.default;
    return /*#__PURE__*/ _react.createElement("span", _extendsDefault.default({
        className: _clsxDefault.default(classes.root, classes[orientation], className, disabled && classes.disabled, alternativeLabel && classes.alternativeLabel, error && classes.error),
        ref: ref
    }, other), icon || StepIconComponent ? /*#__PURE__*/ _react.createElement("span", {
        className: _clsxDefault.default(classes.iconContainer, alternativeLabel && classes.alternativeLabel)
    }, /*#__PURE__*/ _react.createElement(StepIconComponent, _extendsDefault.default({
        completed: completed,
        active: active,
        error: error,
        icon: icon
    }, StepIconProps))) : null, /*#__PURE__*/ _react.createElement("span", {
        className: classes.labelContainer
    }, children ? /*#__PURE__*/ _react.createElement(_typographyDefault.default, {
        variant: "body2",
        component: "span",
        display: "block",
        className: _clsxDefault.default(classes.label, alternativeLabel && classes.alternativeLabel, completed && classes.completed, active && classes.active, error && classes.error)
    }, children) : null, optional));
});
StepLabel.propTypes = {
    // ----------------------------- Warning --------------------------------
    // | These PropTypes are generated from the TypeScript type definitions |
    // |     To update them edit the d.ts file and run "yarn proptypes"     |
    // ----------------------------------------------------------------------
    /**
   * In most cases will simply be a string containing a title for the label.
   */ children: _propTypesDefault.default.node,
    /**
   * Override or extend the styles applied to the component.
   * See [CSS API](#css) below for more details.
   */ classes: _propTypesDefault.default.object,
    /**
   * @ignore
   */ className: _propTypesDefault.default.string,
    /**
   * Mark the step as disabled, will also disable the button if
   * `StepLabelButton` is a child of `StepLabel`. Is passed to child components.
   */ disabled: _propTypesDefault.default.bool,
    /**
   * Mark the step as failed.
   */ error: _propTypesDefault.default.bool,
    /**
   * Override the default label of the step icon.
   */ icon: _propTypesDefault.default.node,
    /**
   * The optional node to display.
   */ optional: _propTypesDefault.default.node,
    /**
   * The component to render in place of the [`StepIcon`](/api/step-icon/).
   */ StepIconComponent: _propTypesDefault.default.elementType,
    /**
   * Props applied to the [`StepIcon`](/api/step-icon/) element.
   */ StepIconProps: _propTypesDefault.default.object
};
StepLabel.muiName = 'StepLabel';
exports.default = _withStylesDefault.default(styles, {
    name: 'MuiStepLabel'
})(StepLabel);

},{"@babel/runtime/helpers/esm/extends":"fTBFS","@babel/runtime/helpers/esm/objectWithoutProperties":"25tJ4","react":"21dqq","prop-types":"7wKI2","clsx":"83C22","../styles/withStyles":"7U0iM","../Typography":"6dDPF","../StepIcon":"hMFlL","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"hMFlL":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>_stepIconDefault.default
);
var _stepIcon = require("./StepIcon");
var _stepIconDefault = parcelHelpers.interopDefault(_stepIcon);

},{"./StepIcon":"cEObw","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"cEObw":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "styles", ()=>styles
);
var _react = require("react");
var _propTypes = require("prop-types");
var _propTypesDefault = parcelHelpers.interopDefault(_propTypes);
var _clsx = require("clsx");
var _clsxDefault = parcelHelpers.interopDefault(_clsx);
var _checkCircle = require("../internal/svg-icons/CheckCircle");
var _checkCircleDefault = parcelHelpers.interopDefault(_checkCircle);
var _warning = require("../internal/svg-icons/Warning");
var _warningDefault = parcelHelpers.interopDefault(_warning);
var _withStyles = require("../styles/withStyles");
var _withStylesDefault = parcelHelpers.interopDefault(_withStyles);
var _svgIcon = require("../SvgIcon");
var _svgIconDefault = parcelHelpers.interopDefault(_svgIcon);
var styles = function styles(theme) {
    return {
        /* Styles applied to the root element. */ root: {
            display: 'block',
            color: theme.palette.text.disabled,
            '&$completed': {
                color: theme.palette.primary.main
            },
            '&$active': {
                color: theme.palette.primary.main
            },
            '&$error': {
                color: theme.palette.error.main
            }
        },
        /* Styles applied to the SVG text element. */ text: {
            fill: theme.palette.primary.contrastText,
            fontSize: theme.typography.caption.fontSize,
            fontFamily: theme.typography.fontFamily
        },
        /* Pseudo-class applied to the root element if `active={true}`. */ active: {},
        /* Pseudo-class applied to the root element if `completed={true}`. */ completed: {},
        /* Pseudo-class applied to the root element if `error={true}`. */ error: {}
    };
};
var _ref = /*#__PURE__*/ _react.createElement("circle", {
    cx: "12",
    cy: "12",
    r: "12"
});
var StepIcon = /*#__PURE__*/ _react.forwardRef(function StepIcon(props, ref) {
    var _props$completed = props.completed, completed = _props$completed === void 0 ? false : _props$completed, icon = props.icon, _props$active = props.active, active = _props$active === void 0 ? false : _props$active, _props$error = props.error, error = _props$error === void 0 ? false : _props$error, classes = props.classes;
    if (typeof icon === 'number' || typeof icon === 'string') {
        var className = _clsxDefault.default(classes.root, active && classes.active, error && classes.error, completed && classes.completed);
        if (error) return /*#__PURE__*/ _react.createElement(_warningDefault.default, {
            className: className,
            ref: ref
        });
        if (completed) return /*#__PURE__*/ _react.createElement(_checkCircleDefault.default, {
            className: className,
            ref: ref
        });
        return /*#__PURE__*/ _react.createElement(_svgIconDefault.default, {
            className: className,
            ref: ref
        }, _ref, /*#__PURE__*/ _react.createElement("text", {
            className: classes.text,
            x: "12",
            y: "16",
            textAnchor: "middle"
        }, icon));
    }
    return icon;
});
StepIcon.propTypes = {
    // ----------------------------- Warning --------------------------------
    // | These PropTypes are generated from the TypeScript type definitions |
    // |     To update them edit the d.ts file and run "yarn proptypes"     |
    // ----------------------------------------------------------------------
    /**
   * Whether this step is active.
   */ active: _propTypesDefault.default.bool,
    /**
   * Override or extend the styles applied to the component.
   * See [CSS API](#css) below for more details.
   */ classes: _propTypesDefault.default.object,
    /**
   * Mark the step as completed. Is passed to child components.
   */ completed: _propTypesDefault.default.bool,
    /**
   * Mark the step as failed.
   */ error: _propTypesDefault.default.bool,
    /**
   * The label displayed in the step icon.
   */ icon: _propTypesDefault.default.node
};
exports.default = _withStylesDefault.default(styles, {
    name: 'MuiStepIcon'
})(StepIcon);

},{"react":"21dqq","prop-types":"7wKI2","clsx":"83C22","../internal/svg-icons/CheckCircle":"5FFwg","../internal/svg-icons/Warning":"lTVzZ","../styles/withStyles":"7U0iM","../SvgIcon":"9XOde","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"5FFwg":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _react = require("react");
var _createSvgIcon = require("../../utils/createSvgIcon");
var _createSvgIconDefault = parcelHelpers.interopDefault(_createSvgIcon);
/**
 * @ignore - internal component.
 */ exports.default = _createSvgIconDefault.default(/*#__PURE__*/ _react.createElement("path", {
    d: "M12 0a12 12 0 1 0 0 24 12 12 0 0 0 0-24zm-2 17l-5-5 1.4-1.4 3.6 3.6 7.6-7.6L19 8l-9 9z"
}), 'CheckCircle');

},{"react":"21dqq","../../utils/createSvgIcon":"lVBTd","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"lTVzZ":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _react = require("react");
var _createSvgIcon = require("../../utils/createSvgIcon");
var _createSvgIconDefault = parcelHelpers.interopDefault(_createSvgIcon);
/**
 * @ignore - internal component.
 */ exports.default = _createSvgIconDefault.default(/*#__PURE__*/ _react.createElement("path", {
    d: "M1 21h22L12 2 1 21zm12-3h-2v-2h2v2zm0-4h-2v-4h2v4z"
}), 'Warning');

},{"react":"21dqq","../../utils/createSvgIcon":"lVBTd","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"5PCe3":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>_stepConnectorDefault.default
);
var _stepConnector = require("./StepConnector");
var _stepConnectorDefault = parcelHelpers.interopDefault(_stepConnector);

},{"./StepConnector":"hodcG","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"hodcG":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "styles", ()=>styles
);
var _extends = require("@babel/runtime/helpers/esm/extends");
var _extendsDefault = parcelHelpers.interopDefault(_extends);
var _objectWithoutProperties = require("@babel/runtime/helpers/esm/objectWithoutProperties");
var _objectWithoutPropertiesDefault = parcelHelpers.interopDefault(_objectWithoutProperties);
var _react = require("react");
var _propTypes = require("prop-types");
var _propTypesDefault = parcelHelpers.interopDefault(_propTypes);
var _clsx = require("clsx");
var _clsxDefault = parcelHelpers.interopDefault(_clsx);
var _withStyles = require("../styles/withStyles");
var _withStylesDefault = parcelHelpers.interopDefault(_withStyles);
var styles = function styles(theme) {
    return {
        /* Styles applied to the root element. */ root: {
            flex: '1 1 auto'
        },
        /* Styles applied to the root element if `orientation="horizontal"`. */ horizontal: {},
        /* Styles applied to the root element if `orientation="vertical"`. */ vertical: {
            marginLeft: 12,
            // half icon
            padding: '0 0 8px'
        },
        /* Styles applied to the root element if `alternativeLabel={true}`. */ alternativeLabel: {
            position: 'absolute',
            top: 12,
            left: 'calc(-50% + 20px)',
            right: 'calc(50% + 20px)'
        },
        /* Pseudo-class applied to the root element if `active={true}`. */ active: {},
        /* Pseudo-class applied to the root element if `completed={true}`. */ completed: {},
        /* Pseudo-class applied to the root element if `disabled={true}`. */ disabled: {},
        /* Styles applied to the line element. */ line: {
            display: 'block',
            borderColor: theme.palette.type === 'light' ? theme.palette.grey[400] : theme.palette.grey[600]
        },
        /* Styles applied to the root element if `orientation="horizontal"`. */ lineHorizontal: {
            borderTopStyle: 'solid',
            borderTopWidth: 1
        },
        /* Styles applied to the root element if `orientation="vertical"`. */ lineVertical: {
            borderLeftStyle: 'solid',
            borderLeftWidth: 1,
            minHeight: 24
        }
    };
};
var StepConnector = /*#__PURE__*/ _react.forwardRef(function StepConnector(props, ref) {
    var active = props.active, _props$alternativeLab = props.alternativeLabel, alternativeLabel = _props$alternativeLab === void 0 ? false : _props$alternativeLab, classes = props.classes, className = props.className, completed = props.completed, disabled = props.disabled, index = props.index, _props$orientation = props.orientation, orientation = _props$orientation === void 0 ? 'horizontal' : _props$orientation, other = _objectWithoutPropertiesDefault.default(props, [
        "active",
        "alternativeLabel",
        "classes",
        "className",
        "completed",
        "disabled",
        "index",
        "orientation"
    ]);
    return /*#__PURE__*/ _react.createElement("div", _extendsDefault.default({
        className: _clsxDefault.default(classes.root, classes[orientation], className, alternativeLabel && classes.alternativeLabel, active && classes.active, completed && classes.completed, disabled && classes.disabled),
        ref: ref
    }, other), /*#__PURE__*/ _react.createElement("span", {
        className: _clsxDefault.default(classes.line, {
            'horizontal': classes.lineHorizontal,
            'vertical': classes.lineVertical
        }[orientation])
    }));
});
StepConnector.propTypes = {
    // ----------------------------- Warning --------------------------------
    // | These PropTypes are generated from the TypeScript type definitions |
    // |     To update them edit the d.ts file and run "yarn proptypes"     |
    // ----------------------------------------------------------------------
    /**
   * Override or extend the styles applied to the component.
   * See [CSS API](#css) below for more details.
   */ classes: _propTypesDefault.default.object,
    /**
   * @ignore
   */ className: _propTypesDefault.default.string
};
exports.default = _withStylesDefault.default(styles, {
    name: 'MuiStepConnector'
})(StepConnector);

},{"@babel/runtime/helpers/esm/extends":"fTBFS","@babel/runtime/helpers/esm/objectWithoutProperties":"25tJ4","react":"21dqq","prop-types":"7wKI2","clsx":"83C22","../styles/withStyles":"7U0iM","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"86klG":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>_stepContentDefault.default
);
var _stepContent = require("./StepContent");
var _stepContentDefault = parcelHelpers.interopDefault(_stepContent);

},{"./StepContent":"6ySEn","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"6ySEn":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "styles", ()=>styles
);
var _extends = require("@babel/runtime/helpers/esm/extends");
var _extendsDefault = parcelHelpers.interopDefault(_extends);
var _objectWithoutProperties = require("@babel/runtime/helpers/esm/objectWithoutProperties");
var _objectWithoutPropertiesDefault = parcelHelpers.interopDefault(_objectWithoutProperties);
var _react = require("react");
var _propTypes = require("prop-types");
var _propTypesDefault = parcelHelpers.interopDefault(_propTypes);
var _clsx = require("clsx");
var _clsxDefault = parcelHelpers.interopDefault(_clsx);
var _collapse = require("../Collapse");
var _collapseDefault = parcelHelpers.interopDefault(_collapse);
var _withStyles = require("../styles/withStyles");
var _withStylesDefault = parcelHelpers.interopDefault(_withStyles);
var styles = function styles(theme) {
    return {
        /* Styles applied to the root element. */ root: {
            marginTop: 8,
            marginLeft: 12,
            // half icon
            paddingLeft: 20,
            // margin + half icon
            paddingRight: 8,
            borderLeft: "1px solid ".concat(theme.palette.type === 'light' ? theme.palette.grey[400] : theme.palette.grey[600])
        },
        /* Styles applied to the root element if `last={true}` (controlled by `Step`). */ last: {
            borderLeft: 'none'
        },
        /* Styles applied to the Transition component. */ transition: {}
    };
};
var StepContent = /*#__PURE__*/ _react.forwardRef(function StepContent(props, ref) {
    var active = props.active, alternativeLabel = props.alternativeLabel, children = props.children, classes = props.classes, className = props.className, completed = props.completed, expanded = props.expanded, last = props.last, optional = props.optional, orientation = props.orientation, _props$TransitionComp = props.TransitionComponent, TransitionComponent = _props$TransitionComp === void 0 ? _collapseDefault.default : _props$TransitionComp, _props$transitionDura = props.transitionDuration, transitionDurationProp = _props$transitionDura === void 0 ? 'auto' : _props$transitionDura, TransitionProps = props.TransitionProps, other = _objectWithoutPropertiesDefault.default(props, [
        "active",
        "alternativeLabel",
        "children",
        "classes",
        "className",
        "completed",
        "expanded",
        "last",
        "optional",
        "orientation",
        "TransitionComponent",
        "transitionDuration",
        "TransitionProps"
    ]);
    if (orientation !== 'vertical') console.error('Material-UI: <StepContent /> is only designed for use with the vertical stepper.');
    var transitionDuration = transitionDurationProp;
    if (transitionDurationProp === 'auto' && !TransitionComponent.muiSupportAuto) transitionDuration = undefined;
    return /*#__PURE__*/ _react.createElement("div", _extendsDefault.default({
        className: _clsxDefault.default(classes.root, className, last && classes.last),
        ref: ref
    }, other), /*#__PURE__*/ _react.createElement(TransitionComponent, _extendsDefault.default({
        in: active || expanded,
        className: classes.transition,
        timeout: transitionDuration,
        unmountOnExit: true
    }, TransitionProps), children));
});
StepContent.propTypes = {
    // ----------------------------- Warning --------------------------------
    // | These PropTypes are generated from the TypeScript type definitions |
    // |     To update them edit the d.ts file and run "yarn proptypes"     |
    // ----------------------------------------------------------------------
    /**
   * Step content.
   */ children: _propTypesDefault.default.node,
    /**
   * Override or extend the styles applied to the component.
   * See [CSS API](#css) below for more details.
   */ classes: _propTypesDefault.default.object,
    /**
   * @ignore
   */ className: _propTypesDefault.default.string,
    /**
   * The component used for the transition.
   * [Follow this guide](/components/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.
   */ TransitionComponent: _propTypesDefault.default.elementType,
    /**
   * Adjust the duration of the content expand transition.
   * Passed as a prop to the transition component.
   *
   * Set to 'auto' to automatically calculate transition time based on height.
   */ transitionDuration: _propTypesDefault.default.oneOfType([
        _propTypesDefault.default.oneOf([
            'auto'
        ]),
        _propTypesDefault.default.number,
        _propTypesDefault.default.shape({
            appear: _propTypesDefault.default.number,
            enter: _propTypesDefault.default.number,
            exit: _propTypesDefault.default.number
        })
    ]),
    /**
   * Props applied to the [`Transition`](http://reactcommunity.org/react-transition-group/transition#Transition-props) element.
   */ TransitionProps: _propTypesDefault.default.object
};
exports.default = _withStylesDefault.default(styles, {
    name: 'MuiStepContent'
})(StepContent);

},{"@babel/runtime/helpers/esm/extends":"fTBFS","@babel/runtime/helpers/esm/objectWithoutProperties":"25tJ4","react":"21dqq","prop-types":"7wKI2","clsx":"83C22","../Collapse":"1KqGq","../styles/withStyles":"7U0iM","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"6bqSX":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>_stepperDefault.default
);
var _stepper = require("./Stepper");
var _stepperDefault = parcelHelpers.interopDefault(_stepper);

},{"./Stepper":"48YRR","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"48YRR":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "styles", ()=>styles
);
var _extends = require("@babel/runtime/helpers/esm/extends");
var _extendsDefault = parcelHelpers.interopDefault(_extends);
var _objectWithoutProperties = require("@babel/runtime/helpers/esm/objectWithoutProperties");
var _objectWithoutPropertiesDefault = parcelHelpers.interopDefault(_objectWithoutProperties);
var _react = require("react");
var _propTypes = require("prop-types");
var _propTypesDefault = parcelHelpers.interopDefault(_propTypes);
var _clsx = require("clsx");
var _clsxDefault = parcelHelpers.interopDefault(_clsx);
var _withStyles = require("../styles/withStyles");
var _withStylesDefault = parcelHelpers.interopDefault(_withStyles);
var _paper = require("../Paper");
var _paperDefault = parcelHelpers.interopDefault(_paper);
var _stepConnector = require("../StepConnector");
var _stepConnectorDefault = parcelHelpers.interopDefault(_stepConnector);
var styles = {
    /* Styles applied to the root element. */ root: {
        display: 'flex',
        padding: 24
    },
    /* Styles applied to the root element if `orientation="horizontal"`. */ horizontal: {
        flexDirection: 'row',
        alignItems: 'center'
    },
    /* Styles applied to the root element if `orientation="vertical"`. */ vertical: {
        flexDirection: 'column'
    },
    /* Styles applied to the root element if `alternativeLabel={true}`. */ alternativeLabel: {
        alignItems: 'flex-start'
    }
};
var defaultConnector = /*#__PURE__*/ _react.createElement(_stepConnectorDefault.default, null);
var Stepper = /*#__PURE__*/ _react.forwardRef(function Stepper(props, ref) {
    var _props$activeStep = props.activeStep, activeStep = _props$activeStep === void 0 ? 0 : _props$activeStep, _props$alternativeLab = props.alternativeLabel, alternativeLabel = _props$alternativeLab === void 0 ? false : _props$alternativeLab, children = props.children, classes = props.classes, className = props.className, _props$connector = props.connector, connectorProp = _props$connector === void 0 ? defaultConnector : _props$connector, _props$nonLinear = props.nonLinear, nonLinear = _props$nonLinear === void 0 ? false : _props$nonLinear, _props$orientation = props.orientation, orientation = _props$orientation === void 0 ? 'horizontal' : _props$orientation, other = _objectWithoutPropertiesDefault.default(props, [
        "activeStep",
        "alternativeLabel",
        "children",
        "classes",
        "className",
        "connector",
        "nonLinear",
        "orientation"
    ]);
    var connector = /*#__PURE__*/ _react.isValidElement(connectorProp) ? /*#__PURE__*/ _react.cloneElement(connectorProp, {
        orientation: orientation
    }) : null;
    var childrenArray = _react.Children.toArray(children);
    var steps = childrenArray.map(function(step, index) {
        var state = {
            index: index,
            active: false,
            completed: false,
            disabled: false
        };
        if (activeStep === index) state.active = true;
        else if (!nonLinear && activeStep > index) state.completed = true;
        else if (!nonLinear && activeStep < index) state.disabled = true;
        return /*#__PURE__*/ _react.cloneElement(step, _extendsDefault.default({
            alternativeLabel: alternativeLabel,
            connector: connector,
            last: index + 1 === childrenArray.length,
            orientation: orientation
        }, state, step.props));
    });
    return /*#__PURE__*/ _react.createElement(_paperDefault.default, _extendsDefault.default({
        square: true,
        elevation: 0,
        className: _clsxDefault.default(classes.root, classes[orientation], className, alternativeLabel && classes.alternativeLabel),
        ref: ref
    }, other), steps);
});
Stepper.propTypes = {
    // ----------------------------- Warning --------------------------------
    // | These PropTypes are generated from the TypeScript type definitions |
    // |     To update them edit the d.ts file and run "yarn proptypes"     |
    // ----------------------------------------------------------------------
    /**
   * Set the active step (zero based index).
   * Set to -1 to disable all the steps.
   */ activeStep: _propTypesDefault.default.number,
    /**
   * If set to 'true' and orientation is horizontal,
   * then the step label will be positioned under the icon.
   */ alternativeLabel: _propTypesDefault.default.bool,
    /**
   * Two or more `<Step />` components.
   */ children: _propTypesDefault.default.node,
    /**
   * Override or extend the styles applied to the component.
   * See [CSS API](#css) below for more details.
   */ classes: _propTypesDefault.default.object,
    /**
   * @ignore
   */ className: _propTypesDefault.default.string,
    /**
   * An element to be placed between each step.
   */ connector: _propTypesDefault.default.element,
    /**
   * If set the `Stepper` will not assist in controlling steps for linear flow.
   */ nonLinear: _propTypesDefault.default.bool,
    /**
   * The stepper orientation (layout flow direction).
   */ orientation: _propTypesDefault.default.oneOf([
        'horizontal',
        'vertical'
    ])
};
exports.default = _withStylesDefault.default(styles, {
    name: 'MuiStepper'
})(Stepper);

},{"@babel/runtime/helpers/esm/extends":"fTBFS","@babel/runtime/helpers/esm/objectWithoutProperties":"25tJ4","react":"21dqq","prop-types":"7wKI2","clsx":"83C22","../styles/withStyles":"7U0iM","../Paper":"j0s2L","../StepConnector":"5PCe3","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"d8qJQ":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>_swipeableDrawerDefault.default
);
var _swipeableDrawer = require("./SwipeableDrawer");
var _swipeableDrawerDefault = parcelHelpers.interopDefault(_swipeableDrawer);

},{"./SwipeableDrawer":"hzvLo","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"hzvLo":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "reset", ()=>reset
);
var _objectWithoutProperties = require("@babel/runtime/helpers/esm/objectWithoutProperties");
var _objectWithoutPropertiesDefault = parcelHelpers.interopDefault(_objectWithoutProperties);
var _extends = require("@babel/runtime/helpers/esm/extends");
var _extendsDefault = parcelHelpers.interopDefault(_extends);
var _react = require("react");
var _propTypes = require("prop-types");
var _propTypesDefault = parcelHelpers.interopDefault(_propTypes);
var _reactDom = require("react-dom");
var _utils = require("@material-ui/utils");
var _styles = require("@material-ui/styles");
var _drawer = require("../Drawer/Drawer");
var _drawerDefault = parcelHelpers.interopDefault(_drawer);
var _ownerDocument = require("../utils/ownerDocument");
var _ownerDocumentDefault = parcelHelpers.interopDefault(_ownerDocument);
var _useEventCallback = require("../utils/useEventCallback");
var _useEventCallbackDefault = parcelHelpers.interopDefault(_useEventCallback);
var _transitions = require("../styles/transitions");
var _useTheme = require("../styles/useTheme");
var _useThemeDefault = parcelHelpers.interopDefault(_useTheme);
var _utils1 = require("../transitions/utils");
var _noSsr = require("../NoSsr");
var _noSsrDefault = parcelHelpers.interopDefault(_noSsr);
var _swipeArea = require("./SwipeArea"); // This value is closed to what browsers are using internally to
var _swipeAreaDefault = parcelHelpers.interopDefault(_swipeArea);
// trigger a native scroll.
var UNCERTAINTY_THRESHOLD = 3; // px
// We can only have one node at the time claiming ownership for handling the swipe.
// Otherwise, the UX would be confusing.
// That's why we use a singleton here.
var nodeThatClaimedTheSwipe = null; // Exported for test purposes.
function reset() {
    nodeThatClaimedTheSwipe = null;
}
function calculateCurrentX(anchor, touches) {
    return anchor === 'right' ? document.body.offsetWidth - touches[0].pageX : touches[0].pageX;
}
function calculateCurrentY(anchor, touches) {
    return anchor === 'bottom' ? window.innerHeight - touches[0].clientY : touches[0].clientY;
}
function getMaxTranslate(horizontalSwipe, paperInstance) {
    return horizontalSwipe ? paperInstance.clientWidth : paperInstance.clientHeight;
}
function getTranslate(currentTranslate, startLocation, open, maxTranslate) {
    return Math.min(Math.max(open ? startLocation - currentTranslate : maxTranslate + startLocation - currentTranslate, 0), maxTranslate);
}
function getDomTreeShapes(element, rootNode) {
    // Adapted from https://github.com/oliviertassinari/react-swipeable-views/blob/7666de1dba253b896911adf2790ce51467670856/packages/react-swipeable-views/src/SwipeableViews.js#L129
    var domTreeShapes = [];
    while(element && element !== rootNode){
        var style = window.getComputedStyle(element);
        if (style.getPropertyValue('position') === 'absolute' || style.getPropertyValue('overflow-x') === 'hidden') domTreeShapes = [];
        else if (element.clientWidth > 0 && element.scrollWidth > element.clientWidth || element.clientHeight > 0 && element.scrollHeight > element.clientHeight) // Ignore the nodes that have no width.
        // Keep elements with a scroll
        domTreeShapes.push(element);
        element = element.parentElement;
    }
    return domTreeShapes;
}
function findNativeHandler(_ref) {
    var domTreeShapes = _ref.domTreeShapes, start = _ref.start, current = _ref.current, anchor = _ref.anchor;
    // Adapted from https://github.com/oliviertassinari/react-swipeable-views/blob/7666de1dba253b896911adf2790ce51467670856/packages/react-swipeable-views/src/SwipeableViews.js#L175
    var axisProperties = {
        scrollPosition: {
            x: 'scrollLeft',
            y: 'scrollTop'
        },
        scrollLength: {
            x: 'scrollWidth',
            y: 'scrollHeight'
        },
        clientLength: {
            x: 'clientWidth',
            y: 'clientHeight'
        }
    };
    return domTreeShapes.some(function(shape) {
        // Determine if we are going backward or forward.
        var goingForward = current >= start;
        if (anchor === 'top' || anchor === 'left') goingForward = !goingForward;
        var axis = anchor === 'left' || anchor === 'right' ? 'x' : 'y';
        var scrollPosition = shape[axisProperties.scrollPosition[axis]];
        var areNotAtStart = scrollPosition > 0;
        var areNotAtEnd = scrollPosition + shape[axisProperties.clientLength[axis]] < shape[axisProperties.scrollLength[axis]];
        if (goingForward && areNotAtEnd || !goingForward && areNotAtStart) return shape;
        return null;
    });
}
var iOS = typeof navigator !== 'undefined' && /iPad|iPhone|iPod/.test(navigator.userAgent);
var transitionDurationDefault = {
    enter: _transitions.duration.enteringScreen,
    exit: _transitions.duration.leavingScreen
};
var useEnhancedEffect = typeof window !== 'undefined' ? _react.useLayoutEffect : _react.useEffect;
var SwipeableDrawer = /*#__PURE__*/ _react.forwardRef(function SwipeableDrawer(inProps, ref) {
    var theme = _useThemeDefault.default();
    var props = _styles.getThemeProps({
        name: 'MuiSwipeableDrawer',
        props: _extendsDefault.default({}, inProps),
        theme: theme
    });
    var _props$anchor = props.anchor, anchor = _props$anchor === void 0 ? 'left' : _props$anchor, _props$disableBackdro = props.disableBackdropTransition, disableBackdropTransition = _props$disableBackdro === void 0 ? false : _props$disableBackdro, _props$disableDiscove = props.disableDiscovery, disableDiscovery = _props$disableDiscove === void 0 ? false : _props$disableDiscove, _props$disableSwipeTo = props.disableSwipeToOpen, disableSwipeToOpen = _props$disableSwipeTo === void 0 ? iOS : _props$disableSwipeTo, hideBackdrop = props.hideBackdrop, _props$hysteresis = props.hysteresis, hysteresis = _props$hysteresis === void 0 ? 0.52 : _props$hysteresis, _props$minFlingVeloci = props.minFlingVelocity, minFlingVelocity = _props$minFlingVeloci === void 0 ? 450 : _props$minFlingVeloci, _props$ModalProps = props.ModalProps;
    _props$ModalProps = _props$ModalProps === void 0 ? {} : _props$ModalProps;
    var BackdropProps = _props$ModalProps.BackdropProps, ModalPropsProp = _objectWithoutPropertiesDefault.default(_props$ModalProps, [
        "BackdropProps"
    ]), onClose = props.onClose, onOpen = props.onOpen, open = props.open, _props$PaperProps = props.PaperProps, PaperProps = _props$PaperProps === void 0 ? {} : _props$PaperProps, SwipeAreaProps = props.SwipeAreaProps, _props$swipeAreaWidth = props.swipeAreaWidth, swipeAreaWidth = _props$swipeAreaWidth === void 0 ? 20 : _props$swipeAreaWidth, _props$transitionDura = props.transitionDuration, transitionDuration = _props$transitionDura === void 0 ? transitionDurationDefault : _props$transitionDura, _props$variant = props.variant, variant = _props$variant === void 0 ? 'temporary' : _props$variant, other = _objectWithoutPropertiesDefault.default(props, [
        "anchor",
        "disableBackdropTransition",
        "disableDiscovery",
        "disableSwipeToOpen",
        "hideBackdrop",
        "hysteresis",
        "minFlingVelocity",
        "ModalProps",
        "onClose",
        "onOpen",
        "open",
        "PaperProps",
        "SwipeAreaProps",
        "swipeAreaWidth",
        "transitionDuration",
        "variant"
    ]);
    var _React$useState = _react.useState(false), maybeSwiping = _React$useState[0], setMaybeSwiping = _React$useState[1];
    var swipeInstance = _react.useRef({
        isSwiping: null
    });
    var swipeAreaRef = _react.useRef();
    var backdropRef = _react.useRef();
    var paperRef = _react.useRef();
    var touchDetected = _react.useRef(false); // Ref for transition duration based on / to match swipe speed
    var calculatedDurationRef = _react.useRef(); // Use a ref so the open value used is always up to date inside useCallback.
    useEnhancedEffect(function() {
        calculatedDurationRef.current = null;
    }, [
        open
    ]);
    var setPosition = _react.useCallback(function(translate) {
        var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
        var _options$mode = options.mode, mode = _options$mode === void 0 ? null : _options$mode, _options$changeTransi = options.changeTransition, changeTransition = _options$changeTransi === void 0 ? true : _options$changeTransi;
        var anchorRtl = _drawer.getAnchor(theme, anchor);
        var rtlTranslateMultiplier = [
            'right',
            'bottom'
        ].indexOf(anchorRtl) !== -1 ? 1 : -1;
        var horizontalSwipe = _drawer.isHorizontal(anchor);
        var transform = horizontalSwipe ? "translate(".concat(rtlTranslateMultiplier * translate, "px, 0)") : "translate(0, ".concat(rtlTranslateMultiplier * translate, "px)");
        var drawerStyle = paperRef.current.style;
        drawerStyle.webkitTransform = transform;
        drawerStyle.transform = transform;
        var transition = '';
        if (mode) transition = theme.transitions.create('all', _utils1.getTransitionProps({
            timeout: transitionDuration
        }, {
            mode: mode
        }));
        if (changeTransition) {
            drawerStyle.webkitTransition = transition;
            drawerStyle.transition = transition;
        }
        if (!disableBackdropTransition && !hideBackdrop) {
            var backdropStyle = backdropRef.current.style;
            backdropStyle.opacity = 1 - translate / getMaxTranslate(horizontalSwipe, paperRef.current);
            if (changeTransition) {
                backdropStyle.webkitTransition = transition;
                backdropStyle.transition = transition;
            }
        }
    }, [
        anchor,
        disableBackdropTransition,
        hideBackdrop,
        theme,
        transitionDuration
    ]);
    var handleBodyTouchEnd = _useEventCallbackDefault.default(function(event) {
        if (!touchDetected.current) return;
        nodeThatClaimedTheSwipe = null;
        touchDetected.current = false;
        setMaybeSwiping(false); // The swipe wasn't started.
        if (!swipeInstance.current.isSwiping) {
            swipeInstance.current.isSwiping = null;
            return;
        }
        swipeInstance.current.isSwiping = null;
        var anchorRtl = _drawer.getAnchor(theme, anchor);
        var horizontal = _drawer.isHorizontal(anchor);
        var current;
        if (horizontal) current = calculateCurrentX(anchorRtl, event.changedTouches);
        else current = calculateCurrentY(anchorRtl, event.changedTouches);
        var startLocation = horizontal ? swipeInstance.current.startX : swipeInstance.current.startY;
        var maxTranslate = getMaxTranslate(horizontal, paperRef.current);
        var currentTranslate = getTranslate(current, startLocation, open, maxTranslate);
        var translateRatio = currentTranslate / maxTranslate;
        if (Math.abs(swipeInstance.current.velocity) > minFlingVelocity) // Calculate transition duration to match swipe speed
        calculatedDurationRef.current = Math.abs((maxTranslate - currentTranslate) / swipeInstance.current.velocity) * 1000;
        if (open) {
            if (swipeInstance.current.velocity > minFlingVelocity || translateRatio > hysteresis) onClose();
            else // Reset the position, the swipe was aborted.
            setPosition(0, {
                mode: 'exit'
            });
            return;
        }
        if (swipeInstance.current.velocity < -minFlingVelocity || 1 - translateRatio > hysteresis) onOpen();
        else // Reset the position, the swipe was aborted.
        setPosition(getMaxTranslate(horizontal, paperRef.current), {
            mode: 'enter'
        });
    });
    var handleBodyTouchMove = _useEventCallbackDefault.default(function(event) {
        // the ref may be null when a parent component updates while swiping
        if (!paperRef.current || !touchDetected.current) return;
         // We are not supposed to handle this touch move because the swipe was started in a scrollable container in the drawer
        if (nodeThatClaimedTheSwipe != null && nodeThatClaimedTheSwipe !== swipeInstance.current) return;
        var anchorRtl = _drawer.getAnchor(theme, anchor);
        var horizontalSwipe = _drawer.isHorizontal(anchor);
        var currentX = calculateCurrentX(anchorRtl, event.touches);
        var currentY = calculateCurrentY(anchorRtl, event.touches);
        if (open && paperRef.current.contains(event.target) && nodeThatClaimedTheSwipe == null) {
            var domTreeShapes = getDomTreeShapes(event.target, paperRef.current);
            var nativeHandler = findNativeHandler({
                domTreeShapes: domTreeShapes,
                start: horizontalSwipe ? swipeInstance.current.startX : swipeInstance.current.startY,
                current: horizontalSwipe ? currentX : currentY,
                anchor: anchor
            });
            if (nativeHandler) {
                nodeThatClaimedTheSwipe = nativeHandler;
                return;
            }
            nodeThatClaimedTheSwipe = swipeInstance.current;
        } // We don't know yet.
        if (swipeInstance.current.isSwiping == null) {
            var dx = Math.abs(currentX - swipeInstance.current.startX);
            var dy = Math.abs(currentY - swipeInstance.current.startY); // We are likely to be swiping, let's prevent the scroll event on iOS.
            if (dx > dy) {
                if (event.cancelable) event.preventDefault();
            }
            var definitelySwiping = horizontalSwipe ? dx > dy && dx > UNCERTAINTY_THRESHOLD : dy > dx && dy > UNCERTAINTY_THRESHOLD;
            if (definitelySwiping === true || (horizontalSwipe ? dy > UNCERTAINTY_THRESHOLD : dx > UNCERTAINTY_THRESHOLD)) {
                swipeInstance.current.isSwiping = definitelySwiping;
                if (!definitelySwiping) {
                    handleBodyTouchEnd(event);
                    return;
                } // Shift the starting point.
                swipeInstance.current.startX = currentX;
                swipeInstance.current.startY = currentY; // Compensate for the part of the drawer displayed on touch start.
                if (!disableDiscovery && !open) {
                    if (horizontalSwipe) swipeInstance.current.startX -= swipeAreaWidth;
                    else swipeInstance.current.startY -= swipeAreaWidth;
                }
            }
        }
        if (!swipeInstance.current.isSwiping) return;
        var maxTranslate = getMaxTranslate(horizontalSwipe, paperRef.current);
        var startLocation = horizontalSwipe ? swipeInstance.current.startX : swipeInstance.current.startY;
        if (open && !swipeInstance.current.paperHit) startLocation = Math.min(startLocation, maxTranslate);
        var translate = getTranslate(horizontalSwipe ? currentX : currentY, startLocation, open, maxTranslate);
        if (open) {
            if (!swipeInstance.current.paperHit) {
                var paperHit = horizontalSwipe ? currentX < maxTranslate : currentY < maxTranslate;
                if (paperHit) {
                    swipeInstance.current.paperHit = true;
                    swipeInstance.current.startX = currentX;
                    swipeInstance.current.startY = currentY;
                } else return;
            } else if (translate === 0) {
                swipeInstance.current.startX = currentX;
                swipeInstance.current.startY = currentY;
            }
        }
        if (swipeInstance.current.lastTranslate === null) {
            swipeInstance.current.lastTranslate = translate;
            swipeInstance.current.lastTime = performance.now() + 1;
        }
        var velocity = (translate - swipeInstance.current.lastTranslate) / (performance.now() - swipeInstance.current.lastTime) * 1e3; // Low Pass filter.
        swipeInstance.current.velocity = swipeInstance.current.velocity * 0.4 + velocity * 0.6;
        swipeInstance.current.lastTranslate = translate;
        swipeInstance.current.lastTime = performance.now(); // We are swiping, let's prevent the scroll event on iOS.
        if (event.cancelable) event.preventDefault();
        setPosition(translate);
    });
    var handleBodyTouchStart = _useEventCallbackDefault.default(function(event) {
        // We are not supposed to handle this touch move.
        // Example of use case: ignore the event if there is a Slider.
        if (event.defaultPrevented) return;
         // We can only have one node at the time claiming ownership for handling the swipe.
        if (event.muiHandled) return;
         // At least one element clogs the drawer interaction zone.
        if (open && !backdropRef.current.contains(event.target) && !paperRef.current.contains(event.target)) return;
        var anchorRtl = _drawer.getAnchor(theme, anchor);
        var horizontalSwipe = _drawer.isHorizontal(anchor);
        var currentX = calculateCurrentX(anchorRtl, event.touches);
        var currentY = calculateCurrentY(anchorRtl, event.touches);
        if (!open) {
            if (disableSwipeToOpen || event.target !== swipeAreaRef.current) return;
            if (horizontalSwipe) {
                if (currentX > swipeAreaWidth) return;
            } else if (currentY > swipeAreaWidth) return;
        }
        event.muiHandled = true;
        nodeThatClaimedTheSwipe = null;
        swipeInstance.current.startX = currentX;
        swipeInstance.current.startY = currentY;
        setMaybeSwiping(true);
        if (!open && paperRef.current) // The ref may be null when a parent component updates while swiping.
        setPosition(getMaxTranslate(horizontalSwipe, paperRef.current) + (disableDiscovery ? 20 : -swipeAreaWidth), {
            changeTransition: false
        });
        swipeInstance.current.velocity = 0;
        swipeInstance.current.lastTime = null;
        swipeInstance.current.lastTranslate = null;
        swipeInstance.current.paperHit = false;
        touchDetected.current = true;
    });
    _react.useEffect(function() {
        if (variant === 'temporary') {
            var doc = _ownerDocumentDefault.default(paperRef.current);
            doc.addEventListener('touchstart', handleBodyTouchStart);
            doc.addEventListener('touchmove', handleBodyTouchMove, {
                passive: false
            });
            doc.addEventListener('touchend', handleBodyTouchEnd);
            return function() {
                doc.removeEventListener('touchstart', handleBodyTouchStart);
                doc.removeEventListener('touchmove', handleBodyTouchMove, {
                    passive: false
                });
                doc.removeEventListener('touchend', handleBodyTouchEnd);
            };
        }
        return undefined;
    }, [
        variant,
        handleBodyTouchStart,
        handleBodyTouchMove,
        handleBodyTouchEnd
    ]);
    _react.useEffect(function() {
        return function() {
            // We need to release the lock.
            if (nodeThatClaimedTheSwipe === swipeInstance.current) nodeThatClaimedTheSwipe = null;
        };
    }, []);
    _react.useEffect(function() {
        if (!open) setMaybeSwiping(false);
    }, [
        open
    ]);
    var handleBackdropRef = _react.useCallback(function(instance) {
        // #StrictMode ready
        backdropRef.current = _reactDom.findDOMNode(instance);
    }, []);
    return /*#__PURE__*/ _react.createElement(_react.Fragment, null, /*#__PURE__*/ _react.createElement(_drawerDefault.default, _extendsDefault.default({
        open: variant === 'temporary' && maybeSwiping ? true : open,
        variant: variant,
        ModalProps: _extendsDefault.default({
            BackdropProps: _extendsDefault.default({}, BackdropProps, {
                ref: handleBackdropRef
            })
        }, ModalPropsProp),
        PaperProps: _extendsDefault.default({}, PaperProps, {
            style: _extendsDefault.default({
                pointerEvents: variant === 'temporary' && !open ? 'none' : ''
            }, PaperProps.style),
            ref: paperRef
        }),
        anchor: anchor,
        transitionDuration: calculatedDurationRef.current || transitionDuration,
        onClose: onClose,
        ref: ref
    }, other)), !disableSwipeToOpen && variant === 'temporary' && /*#__PURE__*/ _react.createElement(_noSsrDefault.default, null, /*#__PURE__*/ _react.createElement(_swipeAreaDefault.default, _extendsDefault.default({
        anchor: anchor,
        ref: swipeAreaRef,
        width: swipeAreaWidth
    }, SwipeAreaProps))));
});
SwipeableDrawer.propTypes = {
    /**
   * @ignore
   */ anchor: _propTypesDefault.default.oneOf([
        'left',
        'top',
        'right',
        'bottom'
    ]),
    /**
   * The content of the component.
   */ children: _propTypesDefault.default.node,
    /**
   * Disable the backdrop transition.
   * This can improve the FPS on low-end devices.
   */ disableBackdropTransition: _propTypesDefault.default.bool,
    /**
   * If `true`, touching the screen near the edge of the drawer will not slide in the drawer a bit
   * to promote accidental discovery of the swipe gesture.
   */ disableDiscovery: _propTypesDefault.default.bool,
    /**
   * If `true`, swipe to open is disabled. This is useful in browsers where swiping triggers
   * navigation actions. Swipe to open is disabled on iOS browsers by default.
   */ disableSwipeToOpen: _propTypesDefault.default.bool,
    /**
   * @ignore
   */ hideBackdrop: _propTypesDefault.default.bool,
    /**
   * Affects how far the drawer must be opened/closed to change his state.
   * Specified as percent (0-1) of the width of the drawer
   */ hysteresis: _propTypesDefault.default.number,
    /**
   * Defines, from which (average) velocity on, the swipe is
   * defined as complete although hysteresis isn't reached.
   * Good threshold is between 250 - 1000 px/s
   */ minFlingVelocity: _propTypesDefault.default.number,
    /**
   * @ignore
   */ ModalProps: _propTypesDefault.default.shape({
        BackdropProps: _propTypesDefault.default.shape({
            component: _utils.elementTypeAcceptingRef
        })
    }),
    /**
   * Callback fired when the component requests to be closed.
   *
   * @param {object} event The event source of the callback.
   */ onClose: _propTypesDefault.default.func.isRequired,
    /**
   * Callback fired when the component requests to be opened.
   *
   * @param {object} event The event source of the callback.
   */ onOpen: _propTypesDefault.default.func.isRequired,
    /**
   * If `true`, the drawer is open.
   */ open: _propTypesDefault.default.bool.isRequired,
    /**
   * @ignore
   */ PaperProps: _propTypesDefault.default.shape({
        component: _utils.elementTypeAcceptingRef,
        style: _propTypesDefault.default.object
    }),
    /**
   * The element is used to intercept the touch events on the edge.
   */ SwipeAreaProps: _propTypesDefault.default.object,
    /**
   * The width of the left most (or right most) area in pixels where the
   * drawer can be swiped open from.
   */ swipeAreaWidth: _propTypesDefault.default.number,
    /**
   * The duration for the transition, in milliseconds.
   * You may specify a single timeout for all transitions, or individually with an object.
   */ transitionDuration: _propTypesDefault.default.oneOfType([
        _propTypesDefault.default.number,
        _propTypesDefault.default.shape({
            enter: _propTypesDefault.default.number,
            exit: _propTypesDefault.default.number
        })
    ]),
    /**
   * @ignore
   */ variant: _propTypesDefault.default.oneOf([
        'permanent',
        'persistent',
        'temporary'
    ])
};
exports.default = SwipeableDrawer;

},{"@babel/runtime/helpers/esm/objectWithoutProperties":"25tJ4","@babel/runtime/helpers/esm/extends":"fTBFS","react":"21dqq","prop-types":"7wKI2","react-dom":"j6uA9","@material-ui/utils":"54RkF","@material-ui/styles":"1TOv0","../Drawer/Drawer":"hpOJm","../utils/ownerDocument":"lxJTm","../utils/useEventCallback":"hPpih","../styles/transitions":"c5294","../styles/useTheme":"kWUCn","../transitions/utils":"ixDXW","../NoSsr":"yMfCC","./SwipeArea":"8vmAt","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"8vmAt":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "styles", ()=>styles
);
var _extends = require("@babel/runtime/helpers/esm/extends");
var _extendsDefault = parcelHelpers.interopDefault(_extends);
var _defineProperty = require("@babel/runtime/helpers/esm/defineProperty");
var _definePropertyDefault = parcelHelpers.interopDefault(_defineProperty);
var _objectWithoutProperties = require("@babel/runtime/helpers/esm/objectWithoutProperties");
var _objectWithoutPropertiesDefault = parcelHelpers.interopDefault(_objectWithoutProperties);
var _react = require("react");
var _propTypes = require("prop-types");
var _propTypesDefault = parcelHelpers.interopDefault(_propTypes);
var _clsx = require("clsx");
var _clsxDefault = parcelHelpers.interopDefault(_clsx);
var _withStyles = require("../styles/withStyles");
var _withStylesDefault = parcelHelpers.interopDefault(_withStyles);
var _capitalize = require("../utils/capitalize");
var _capitalizeDefault = parcelHelpers.interopDefault(_capitalize);
var _drawer = require("../Drawer/Drawer");
var styles = function styles(theme) {
    return {
        /* Styles applied to the root element. */ root: {
            position: 'fixed',
            top: 0,
            left: 0,
            bottom: 0,
            zIndex: theme.zIndex.drawer - 1
        },
        anchorLeft: {
            right: 'auto'
        },
        anchorRight: {
            left: 'auto',
            right: 0
        },
        anchorTop: {
            bottom: 'auto',
            right: 0
        },
        anchorBottom: {
            top: 'auto',
            bottom: 0,
            right: 0
        }
    };
};
/**
 * @ignore - internal component.
 */ var SwipeArea = /*#__PURE__*/ _react.forwardRef(function SwipeArea(props, ref) {
    var anchor = props.anchor, classes = props.classes, className = props.className, width = props.width, other = _objectWithoutPropertiesDefault.default(props, [
        "anchor",
        "classes",
        "className",
        "width"
    ]);
    return /*#__PURE__*/ _react.createElement("div", _extendsDefault.default({
        className: _clsxDefault.default(classes.root, classes["anchor".concat(_capitalizeDefault.default(anchor))], className),
        ref: ref,
        style: _definePropertyDefault.default({}, _drawer.isHorizontal(anchor) ? 'width' : 'height', width)
    }, other));
});
SwipeArea.propTypes = {
    /**
   * Side on which to attach the discovery area.
   */ anchor: _propTypesDefault.default.oneOf([
        'left',
        'top',
        'right',
        'bottom'
    ]).isRequired,
    /**
   * @ignore
   */ classes: _propTypesDefault.default.object.isRequired,
    /**
   * @ignore
   */ className: _propTypesDefault.default.string,
    /**
   * The width of the left most (or right most) area in pixels where the
   * drawer can be swiped open from.
   */ width: _propTypesDefault.default.number.isRequired
};
exports.default = _withStylesDefault.default(styles, {
    name: 'PrivateSwipeArea'
})(SwipeArea);

},{"@babel/runtime/helpers/esm/extends":"fTBFS","@babel/runtime/helpers/esm/defineProperty":"hbmCA","@babel/runtime/helpers/esm/objectWithoutProperties":"25tJ4","react":"21dqq","prop-types":"7wKI2","clsx":"83C22","../styles/withStyles":"7U0iM","../utils/capitalize":"5AJVX","../Drawer/Drawer":"hpOJm","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"dcvq1":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>_switchDefault.default
);
var _switch = require("./Switch");
var _switchDefault = parcelHelpers.interopDefault(_switch);

},{"./Switch":"fFGCN","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"fFGCN":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "styles", ()=>styles
);
var _extends = require("@babel/runtime/helpers/esm/extends");
var _extendsDefault = parcelHelpers.interopDefault(_extends);
var _objectWithoutProperties = require("@babel/runtime/helpers/esm/objectWithoutProperties");
var _objectWithoutPropertiesDefault = parcelHelpers.interopDefault(_objectWithoutProperties);
// @inheritedComponent IconButton
var _react = require("react");
var _propTypes = require("prop-types");
var _propTypesDefault = parcelHelpers.interopDefault(_propTypes);
var _clsx = require("clsx");
var _clsxDefault = parcelHelpers.interopDefault(_clsx);
var _utils = require("@material-ui/utils");
var _withStyles = require("../styles/withStyles");
var _withStylesDefault = parcelHelpers.interopDefault(_withStyles);
var _colorManipulator = require("../styles/colorManipulator");
var _capitalize = require("../utils/capitalize");
var _capitalizeDefault = parcelHelpers.interopDefault(_capitalize);
var _switchBase = require("../internal/SwitchBase");
var _switchBaseDefault = parcelHelpers.interopDefault(_switchBase);
var styles = function styles(theme) {
    return {
        /* Styles applied to the root element. */ root: {
            display: 'inline-flex',
            width: 58,
            height: 38,
            overflow: 'hidden',
            padding: 12,
            boxSizing: 'border-box',
            position: 'relative',
            flexShrink: 0,
            zIndex: 0,
            // Reset the stacking context.
            verticalAlign: 'middle',
            // For correct alignment with the text.
            '@media print': {
                colorAdjust: 'exact'
            }
        },
        /* Styles applied to the root element if `edge="start"`. */ edgeStart: {
            marginLeft: -8
        },
        /* Styles applied to the root element if `edge="end"`. */ edgeEnd: {
            marginRight: -8
        },
        /* Styles applied to the internal `SwitchBase` component's `root` class. */ switchBase: {
            position: 'absolute',
            top: 0,
            left: 0,
            zIndex: 1,
            // Render above the focus ripple.
            color: theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[400],
            transition: theme.transitions.create([
                'left',
                'transform'
            ], {
                duration: theme.transitions.duration.shortest
            }),
            '&$checked': {
                transform: 'translateX(20px)'
            },
            '&$disabled': {
                color: theme.palette.type === 'light' ? theme.palette.grey[400] : theme.palette.grey[800]
            },
            '&$checked + $track': {
                opacity: 0.5
            },
            '&$disabled + $track': {
                opacity: theme.palette.type === 'light' ? 0.12 : 0.1
            }
        },
        /* Styles applied to the internal SwitchBase component's root element if `color="primary"`. */ colorPrimary: {
            '&$checked': {
                color: theme.palette.primary.main,
                '&:hover': {
                    backgroundColor: _colorManipulator.alpha(theme.palette.primary.main, theme.palette.action.hoverOpacity),
                    '@media (hover: none)': {
                        backgroundColor: 'transparent'
                    }
                }
            },
            '&$disabled': {
                color: theme.palette.type === 'light' ? theme.palette.grey[400] : theme.palette.grey[800]
            },
            '&$checked + $track': {
                backgroundColor: theme.palette.primary.main
            },
            '&$disabled + $track': {
                backgroundColor: theme.palette.type === 'light' ? theme.palette.common.black : theme.palette.common.white
            }
        },
        /* Styles applied to the internal SwitchBase component's root element if `color="secondary"`. */ colorSecondary: {
            '&$checked': {
                color: theme.palette.secondary.main,
                '&:hover': {
                    backgroundColor: _colorManipulator.alpha(theme.palette.secondary.main, theme.palette.action.hoverOpacity),
                    '@media (hover: none)': {
                        backgroundColor: 'transparent'
                    }
                }
            },
            '&$disabled': {
                color: theme.palette.type === 'light' ? theme.palette.grey[400] : theme.palette.grey[800]
            },
            '&$checked + $track': {
                backgroundColor: theme.palette.secondary.main
            },
            '&$disabled + $track': {
                backgroundColor: theme.palette.type === 'light' ? theme.palette.common.black : theme.palette.common.white
            }
        },
        /* Styles applied to the root element if `size="small"`. */ sizeSmall: {
            width: 40,
            height: 24,
            padding: 7,
            '& $thumb': {
                width: 16,
                height: 16
            },
            '& $switchBase': {
                padding: 4,
                '&$checked': {
                    transform: 'translateX(16px)'
                }
            }
        },
        /* Pseudo-class applied to the internal `SwitchBase` component's `checked` class. */ checked: {},
        /* Pseudo-class applied to the internal SwitchBase component's disabled class. */ disabled: {},
        /* Styles applied to the internal SwitchBase component's input element. */ input: {
            left: '-100%',
            width: '300%'
        },
        /* Styles used to create the thumb passed to the internal `SwitchBase` component `icon` prop. */ thumb: {
            boxShadow: theme.shadows[1],
            backgroundColor: 'currentColor',
            width: 20,
            height: 20,
            borderRadius: '50%'
        },
        /* Styles applied to the track element. */ track: {
            height: '100%',
            width: '100%',
            borderRadius: 7,
            zIndex: -1,
            transition: theme.transitions.create([
                'opacity',
                'background-color'
            ], {
                duration: theme.transitions.duration.shortest
            }),
            backgroundColor: theme.palette.type === 'light' ? theme.palette.common.black : theme.palette.common.white,
            opacity: theme.palette.type === 'light' ? 0.38 : 0.3
        }
    };
};
var Switch = /*#__PURE__*/ _react.forwardRef(function Switch(props, ref) {
    var classes = props.classes, className = props.className, _props$color = props.color, color = _props$color === void 0 ? 'secondary' : _props$color, _props$edge = props.edge, edge = _props$edge === void 0 ? false : _props$edge, _props$size = props.size, size = _props$size === void 0 ? 'medium' : _props$size, other = _objectWithoutPropertiesDefault.default(props, [
        "classes",
        "className",
        "color",
        "edge",
        "size"
    ]);
    var icon = /*#__PURE__*/ _react.createElement("span", {
        className: classes.thumb
    });
    return /*#__PURE__*/ _react.createElement("span", {
        className: _clsxDefault.default(classes.root, className, {
            'start': classes.edgeStart,
            'end': classes.edgeEnd
        }[edge], size === "small" && classes["size".concat(_capitalizeDefault.default(size))])
    }, /*#__PURE__*/ _react.createElement(_switchBaseDefault.default, _extendsDefault.default({
        type: "checkbox",
        icon: icon,
        checkedIcon: icon,
        classes: {
            root: _clsxDefault.default(classes.switchBase, classes["color".concat(_capitalizeDefault.default(color))]),
            input: classes.input,
            checked: classes.checked,
            disabled: classes.disabled
        },
        ref: ref
    }, other)), /*#__PURE__*/ _react.createElement("span", {
        className: classes.track
    }));
});
Switch.propTypes = {
    // ----------------------------- Warning --------------------------------
    // | These PropTypes are generated from the TypeScript type definitions |
    // |     To update them edit the d.ts file and run "yarn proptypes"     |
    // ----------------------------------------------------------------------
    /**
   * If `true`, the component is checked.
   */ checked: _propTypesDefault.default.bool,
    /**
   * The icon to display when the component is checked.
   */ checkedIcon: _propTypesDefault.default.node,
    /**
   * Override or extend the styles applied to the component.
   * See [CSS API](#css) below for more details.
   */ classes: _propTypesDefault.default.object,
    /**
   * @ignore
   */ className: _propTypesDefault.default.string,
    /**
   * The color of the component. It supports those theme colors that make sense for this component.
   */ color: _propTypesDefault.default.oneOf([
        'default',
        'primary',
        'secondary'
    ]),
    /**
   * @ignore
   */ defaultChecked: _propTypesDefault.default.bool,
    /**
   * If `true`, the switch will be disabled.
   */ disabled: _propTypesDefault.default.bool,
    /**
   * If `true`, the ripple effect will be disabled.
   */ disableRipple: _propTypesDefault.default.bool,
    /**
   * If given, uses a negative margin to counteract the padding on one
   * side (this is often helpful for aligning the left or right
   * side of the icon with content above or below, without ruining the border
   * size and shape).
   */ edge: _propTypesDefault.default.oneOf([
        'end',
        'start',
        false
    ]),
    /**
   * The icon to display when the component is unchecked.
   */ icon: _propTypesDefault.default.node,
    /**
   * The id of the `input` element.
   */ id: _propTypesDefault.default.string,
    /**
   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.
   */ inputProps: _propTypesDefault.default.object,
    /**
   * Pass a ref to the `input` element.
   */ inputRef: _utils.refType,
    /**
   * Callback fired when the state is changed.
   *
   * @param {object} event The event source of the callback.
   * You can pull out the new value by accessing `event.target.value` (string).
   * You can pull out the new checked state by accessing `event.target.checked` (boolean).
   */ onChange: _propTypesDefault.default.func,
    /**
   * If `true`, the `input` element will be required.
   */ required: _propTypesDefault.default.bool,
    /**
   * The size of the switch.
   * `small` is equivalent to the dense switch styling.
   */ size: _propTypesDefault.default.oneOf([
        'medium',
        'small'
    ]),
    /**
   * The value of the component. The DOM API casts this to a string.
   * The browser uses "on" as the default value.
   */ value: _propTypesDefault.default.any
};
exports.default = _withStylesDefault.default(styles, {
    name: 'MuiSwitch'
})(Switch);

},{"@babel/runtime/helpers/esm/extends":"fTBFS","@babel/runtime/helpers/esm/objectWithoutProperties":"25tJ4","react":"21dqq","prop-types":"7wKI2","clsx":"83C22","@material-ui/utils":"54RkF","../styles/withStyles":"7U0iM","../styles/colorManipulator":"iz48G","../utils/capitalize":"5AJVX","../internal/SwitchBase":"bONuw","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"1eo3S":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>_tabDefault.default
);
var _tab = require("./Tab");
var _tabDefault = parcelHelpers.interopDefault(_tab);

},{"./Tab":"fiLXc","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"fiLXc":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "styles", ()=>styles
);
var _objectWithoutProperties = require("@babel/runtime/helpers/esm/objectWithoutProperties");
var _objectWithoutPropertiesDefault = parcelHelpers.interopDefault(_objectWithoutProperties);
var _defineProperty = require("@babel/runtime/helpers/esm/defineProperty");
var _definePropertyDefault = parcelHelpers.interopDefault(_defineProperty);
var _extends = require("@babel/runtime/helpers/esm/extends");
var _extendsDefault = parcelHelpers.interopDefault(_extends);
var _react = require("react");
var _propTypes = require("prop-types");
var _propTypesDefault = parcelHelpers.interopDefault(_propTypes);
var _clsx = require("clsx");
var _clsxDefault = parcelHelpers.interopDefault(_clsx);
var _withStyles = require("../styles/withStyles");
var _withStylesDefault = parcelHelpers.interopDefault(_withStyles);
var _buttonBase = require("../ButtonBase");
var _buttonBaseDefault = parcelHelpers.interopDefault(_buttonBase);
var _capitalize = require("../utils/capitalize");
var _capitalizeDefault = parcelHelpers.interopDefault(_capitalize);
var _unsupportedProp = require("../utils/unsupportedProp");
var _unsupportedPropDefault = parcelHelpers.interopDefault(_unsupportedProp);
var styles = function styles(theme) {
    var _extends2;
    return {
        /* Styles applied to the root element. */ root: _extendsDefault.default({}, theme.typography.button, (_extends2 = {
            maxWidth: 264,
            minWidth: 72,
            position: 'relative',
            boxSizing: 'border-box',
            minHeight: 48,
            flexShrink: 0,
            padding: '6px 12px'
        }, _definePropertyDefault.default(_extends2, theme.breakpoints.up('sm'), {
            padding: '6px 24px'
        }), _definePropertyDefault.default(_extends2, "overflow", 'hidden'), _definePropertyDefault.default(_extends2, "whiteSpace", 'normal'), _definePropertyDefault.default(_extends2, "textAlign", 'center'), _definePropertyDefault.default(_extends2, theme.breakpoints.up('sm'), {
            minWidth: 160
        }), _extends2)),
        /* Styles applied to the root element if both `icon` and `label` are provided. */ labelIcon: {
            minHeight: 72,
            paddingTop: 9,
            '& $wrapper > *:first-child': {
                marginBottom: 6
            }
        },
        /* Styles applied to the root element if the parent [`Tabs`](/api/tabs/) has `textColor="inherit"`. */ textColorInherit: {
            color: 'inherit',
            opacity: 0.7,
            '&$selected': {
                opacity: 1
            },
            '&$disabled': {
                opacity: 0.5
            }
        },
        /* Styles applied to the root element if the parent [`Tabs`](/api/tabs/) has `textColor="primary"`. */ textColorPrimary: {
            color: theme.palette.text.secondary,
            '&$selected': {
                color: theme.palette.primary.main
            },
            '&$disabled': {
                color: theme.palette.text.disabled
            }
        },
        /* Styles applied to the root element if the parent [`Tabs`](/api/tabs/) has `textColor="secondary"`. */ textColorSecondary: {
            color: theme.palette.text.secondary,
            '&$selected': {
                color: theme.palette.secondary.main
            },
            '&$disabled': {
                color: theme.palette.text.disabled
            }
        },
        /* Pseudo-class applied to the root element if `selected={true}` (controlled by the Tabs component). */ selected: {},
        /* Pseudo-class applied to the root element if `disabled={true}` (controlled by the Tabs component). */ disabled: {},
        /* Styles applied to the root element if `fullWidth={true}` (controlled by the Tabs component). */ fullWidth: {
            flexShrink: 1,
            flexGrow: 1,
            flexBasis: 0,
            maxWidth: 'none'
        },
        /* Styles applied to the root element if `wrapped={true}`. */ wrapped: {
            fontSize: theme.typography.pxToRem(12),
            lineHeight: 1.5
        },
        /* Styles applied to the `icon` and `label`'s wrapper element. */ wrapper: {
            display: 'inline-flex',
            alignItems: 'center',
            justifyContent: 'center',
            width: '100%',
            flexDirection: 'column'
        }
    };
};
var Tab = /*#__PURE__*/ _react.forwardRef(function Tab(props, ref) {
    var classes = props.classes, className = props.className, _props$disabled = props.disabled, disabled = _props$disabled === void 0 ? false : _props$disabled, _props$disableFocusRi = props.disableFocusRipple, disableFocusRipple = _props$disableFocusRi === void 0 ? false : _props$disableFocusRi, fullWidth = props.fullWidth, icon = props.icon, indicator = props.indicator, label = props.label, onChange = props.onChange, onClick = props.onClick, onFocus = props.onFocus, selected = props.selected, selectionFollowsFocus = props.selectionFollowsFocus, _props$textColor = props.textColor, textColor = _props$textColor === void 0 ? 'inherit' : _props$textColor, value = props.value, _props$wrapped = props.wrapped, wrapped = _props$wrapped === void 0 ? false : _props$wrapped, other = _objectWithoutPropertiesDefault.default(props, [
        "classes",
        "className",
        "disabled",
        "disableFocusRipple",
        "fullWidth",
        "icon",
        "indicator",
        "label",
        "onChange",
        "onClick",
        "onFocus",
        "selected",
        "selectionFollowsFocus",
        "textColor",
        "value",
        "wrapped"
    ]);
    var handleClick = function handleClick(event) {
        if (onChange) onChange(event, value);
        if (onClick) onClick(event);
    };
    var handleFocus = function handleFocus(event) {
        if (selectionFollowsFocus && !selected && onChange) onChange(event, value);
        if (onFocus) onFocus(event);
    };
    return /*#__PURE__*/ _react.createElement(_buttonBaseDefault.default, _extendsDefault.default({
        focusRipple: !disableFocusRipple,
        className: _clsxDefault.default(classes.root, classes["textColor".concat(_capitalizeDefault.default(textColor))], className, disabled && classes.disabled, selected && classes.selected, label && icon && classes.labelIcon, fullWidth && classes.fullWidth, wrapped && classes.wrapped),
        ref: ref,
        role: "tab",
        "aria-selected": selected,
        disabled: disabled,
        onClick: handleClick,
        onFocus: handleFocus,
        tabIndex: selected ? 0 : -1
    }, other), /*#__PURE__*/ _react.createElement("span", {
        className: classes.wrapper
    }, icon, label), indicator);
});
Tab.propTypes = {
    /**
   * This prop isn't supported.
   * Use the `component` prop if you need to change the children structure.
   */ children: _unsupportedPropDefault.default,
    /**
   * Override or extend the styles applied to the component.
   * See [CSS API](#css) below for more details.
   */ classes: _propTypesDefault.default.object.isRequired,
    /**
   * @ignore
   */ className: _propTypesDefault.default.string,
    /**
   * If `true`, the tab will be disabled.
   */ disabled: _propTypesDefault.default.bool,
    /**
   * If `true`, the  keyboard focus ripple will be disabled.
   */ disableFocusRipple: _propTypesDefault.default.bool,
    /**
   * If `true`, the ripple effect will be disabled.
   */ disableRipple: _propTypesDefault.default.bool,
    /**
   * @ignore
   */ fullWidth: _propTypesDefault.default.bool,
    /**
   * The icon element.
   */ icon: _propTypesDefault.default.node,
    /**
   * @ignore
   * For server-side rendering consideration, we let the selected tab
   * render the indicator.
   */ indicator: _propTypesDefault.default.node,
    /**
   * The label element.
   */ label: _propTypesDefault.default.node,
    /**
   * @ignore
   */ onChange: _propTypesDefault.default.func,
    /**
   * @ignore
   */ onClick: _propTypesDefault.default.func,
    /**
   * @ignore
   */ onFocus: _propTypesDefault.default.func,
    /**
   * @ignore
   */ selected: _propTypesDefault.default.bool,
    /**
   * @ignore
   */ selectionFollowsFocus: _propTypesDefault.default.bool,
    /**
   * @ignore
   */ textColor: _propTypesDefault.default.oneOf([
        'secondary',
        'primary',
        'inherit'
    ]),
    /**
   * You can provide your own value. Otherwise, we fallback to the child position index.
   */ value: _propTypesDefault.default.any,
    /**
   * Tab labels appear in a single row.
   * They can use a second line if needed.
   */ wrapped: _propTypesDefault.default.bool
};
exports.default = _withStylesDefault.default(styles, {
    name: 'MuiTab'
})(Tab);

},{"@babel/runtime/helpers/esm/objectWithoutProperties":"25tJ4","@babel/runtime/helpers/esm/defineProperty":"hbmCA","@babel/runtime/helpers/esm/extends":"fTBFS","react":"21dqq","prop-types":"7wKI2","clsx":"83C22","../styles/withStyles":"7U0iM","../ButtonBase":"2TQRV","../utils/capitalize":"5AJVX","../utils/unsupportedProp":"bFB4I","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"2TREO":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>_tableDefault.default
);
var _table = require("./Table");
var _tableDefault = parcelHelpers.interopDefault(_table);

},{"./Table":"aMB4y","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"aMB4y":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "styles", ()=>styles
);
var _objectWithoutProperties = require("@babel/runtime/helpers/esm/objectWithoutProperties");
var _objectWithoutPropertiesDefault = parcelHelpers.interopDefault(_objectWithoutProperties);
var _extends = require("@babel/runtime/helpers/esm/extends");
var _extendsDefault = parcelHelpers.interopDefault(_extends);
var _react = require("react");
var _propTypes = require("prop-types");
var _propTypesDefault = parcelHelpers.interopDefault(_propTypes);
var _clsx = require("clsx");
var _clsxDefault = parcelHelpers.interopDefault(_clsx);
var _utils = require("@material-ui/utils");
var _withStyles = require("../styles/withStyles");
var _withStylesDefault = parcelHelpers.interopDefault(_withStyles);
var _tableContext = require("./TableContext");
var _tableContextDefault = parcelHelpers.interopDefault(_tableContext);
var styles = function styles(theme) {
    return {
        /* Styles applied to the root element. */ root: {
            display: 'table',
            width: '100%',
            borderCollapse: 'collapse',
            borderSpacing: 0,
            '& caption': _extendsDefault.default({}, theme.typography.body2, {
                padding: theme.spacing(2),
                color: theme.palette.text.secondary,
                textAlign: 'left',
                captionSide: 'bottom'
            })
        },
        /* Styles applied to the root element if `stickyHeader={true}`. */ stickyHeader: {
            borderCollapse: 'separate'
        }
    };
};
var defaultComponent = 'table';
var Table = /*#__PURE__*/ _react.forwardRef(function Table(props, ref) {
    var classes = props.classes, className = props.className, _props$component = props.component, Component = _props$component === void 0 ? defaultComponent : _props$component, _props$padding = props.padding, padding = _props$padding === void 0 ? 'normal' : _props$padding, _props$size = props.size, size = _props$size === void 0 ? 'medium' : _props$size, _props$stickyHeader = props.stickyHeader, stickyHeader = _props$stickyHeader === void 0 ? false : _props$stickyHeader, other = _objectWithoutPropertiesDefault.default(props, [
        "classes",
        "className",
        "component",
        "padding",
        "size",
        "stickyHeader"
    ]);
    var table = _react.useMemo(function() {
        return {
            padding: padding,
            size: size,
            stickyHeader: stickyHeader
        };
    }, [
        padding,
        size,
        stickyHeader
    ]);
    return /*#__PURE__*/ _react.createElement(_tableContextDefault.default.Provider, {
        value: table
    }, /*#__PURE__*/ _react.createElement(Component, _extendsDefault.default({
        role: Component === defaultComponent ? null : 'table',
        ref: ref,
        className: _clsxDefault.default(classes.root, className, stickyHeader && classes.stickyHeader)
    }, other)));
});
Table.propTypes = {
    /**
   * The content of the table, normally `TableHead` and `TableBody`.
   */ children: _propTypesDefault.default.node.isRequired,
    /**
   * Override or extend the styles applied to the component.
   * See [CSS API](#css) below for more details.
   */ classes: _propTypesDefault.default.object.isRequired,
    /**
   * @ignore
   */ className: _propTypesDefault.default.string,
    /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */ component: _propTypesDefault.default/* @typescript-to-proptypes-ignore */ .elementType,
    /**
   * Allows TableCells to inherit padding of the Table.
   * `default` is deprecated, use `normal` instead.
   */ padding: _utils.chainPropTypes(_propTypesDefault.default.oneOf([
        'normal',
        'checkbox',
        'none',
        'default'
    ]), function(props) {
        if (props.padding === 'default') return new Error('Material-UI: padding="default" was renamed to padding="normal" for consistency.');
        return null;
    }),
    /**
   * Allows TableCells to inherit size of the Table.
   */ size: _propTypesDefault.default.oneOf([
        'small',
        'medium'
    ]),
    /**
   * Set the header sticky.
   *
   * ⚠️ It doesn't work with IE 11.
   */ stickyHeader: _propTypesDefault.default.bool
};
exports.default = _withStylesDefault.default(styles, {
    name: 'MuiTable'
})(Table);

},{"@babel/runtime/helpers/esm/objectWithoutProperties":"25tJ4","@babel/runtime/helpers/esm/extends":"fTBFS","react":"21dqq","prop-types":"7wKI2","clsx":"83C22","@material-ui/utils":"54RkF","../styles/withStyles":"7U0iM","./TableContext":"1pTqK","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"1pTqK":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _react = require("react");
/**
 * @ignore - internal component.
 */ var TableContext = _react.createContext();
TableContext.displayName = 'TableContext';
exports.default = TableContext;

},{"react":"21dqq","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"k1sv2":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>_tableBodyDefault.default
);
var _tableBody = require("./TableBody");
var _tableBodyDefault = parcelHelpers.interopDefault(_tableBody);

},{"./TableBody":"heaZi","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"heaZi":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "styles", ()=>styles
);
var _extends = require("@babel/runtime/helpers/esm/extends");
var _extendsDefault = parcelHelpers.interopDefault(_extends);
var _objectWithoutProperties = require("@babel/runtime/helpers/esm/objectWithoutProperties");
var _objectWithoutPropertiesDefault = parcelHelpers.interopDefault(_objectWithoutProperties);
var _react = require("react");
var _propTypes = require("prop-types");
var _propTypesDefault = parcelHelpers.interopDefault(_propTypes);
var _clsx = require("clsx");
var _clsxDefault = parcelHelpers.interopDefault(_clsx);
var _withStyles = require("../styles/withStyles");
var _withStylesDefault = parcelHelpers.interopDefault(_withStyles);
var _tablelvl2Context = require("../Table/Tablelvl2Context");
var _tablelvl2ContextDefault = parcelHelpers.interopDefault(_tablelvl2Context);
var styles = {
    /* Styles applied to the root element. */ root: {
        display: 'table-row-group'
    }
};
var tablelvl2 = {
    variant: 'body'
};
var defaultComponent = 'tbody';
var TableBody = /*#__PURE__*/ _react.forwardRef(function TableBody(props, ref) {
    var classes = props.classes, className = props.className, _props$component = props.component, Component = _props$component === void 0 ? defaultComponent : _props$component, other = _objectWithoutPropertiesDefault.default(props, [
        "classes",
        "className",
        "component"
    ]);
    return /*#__PURE__*/ _react.createElement(_tablelvl2ContextDefault.default.Provider, {
        value: tablelvl2
    }, /*#__PURE__*/ _react.createElement(Component, _extendsDefault.default({
        className: _clsxDefault.default(classes.root, className),
        ref: ref,
        role: Component === defaultComponent ? null : 'rowgroup'
    }, other)));
});
TableBody.propTypes = {
    /**
   * The content of the component, normally `TableRow`.
   */ children: _propTypesDefault.default.node,
    /**
   * Override or extend the styles applied to the component.
   * See [CSS API](#css) below for more details.
   */ classes: _propTypesDefault.default.object.isRequired,
    /**
   * @ignore
   */ className: _propTypesDefault.default.string,
    /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */ component: _propTypesDefault.default/* @typescript-to-proptypes-ignore */ .elementType
};
exports.default = _withStylesDefault.default(styles, {
    name: 'MuiTableBody'
})(TableBody);

},{"@babel/runtime/helpers/esm/extends":"fTBFS","@babel/runtime/helpers/esm/objectWithoutProperties":"25tJ4","react":"21dqq","prop-types":"7wKI2","clsx":"83C22","../styles/withStyles":"7U0iM","../Table/Tablelvl2Context":"9hSUo","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"9hSUo":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _react = require("react");
/**
 * @ignore - internal component.
 */ var Tablelvl2Context = _react.createContext();
Tablelvl2Context.displayName = 'Tablelvl2Context';
exports.default = Tablelvl2Context;

},{"react":"21dqq","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"f4axW":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>_tableCellDefault.default
);
var _tableCell = require("./TableCell");
var _tableCellDefault = parcelHelpers.interopDefault(_tableCell);

},{"./TableCell":"kGqSG","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"kGqSG":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "styles", ()=>styles
);
var _objectWithoutProperties = require("@babel/runtime/helpers/esm/objectWithoutProperties");
var _objectWithoutPropertiesDefault = parcelHelpers.interopDefault(_objectWithoutProperties);
var _extends = require("@babel/runtime/helpers/esm/extends");
var _extendsDefault = parcelHelpers.interopDefault(_extends);
var _react = require("react");
var _propTypes = require("prop-types");
var _propTypesDefault = parcelHelpers.interopDefault(_propTypes);
var _clsx = require("clsx");
var _clsxDefault = parcelHelpers.interopDefault(_clsx);
var _utils = require("@material-ui/utils");
var _withStyles = require("../styles/withStyles");
var _withStylesDefault = parcelHelpers.interopDefault(_withStyles);
var _capitalize = require("../utils/capitalize");
var _capitalizeDefault = parcelHelpers.interopDefault(_capitalize);
var _colorManipulator = require("../styles/colorManipulator");
var _tableContext = require("../Table/TableContext");
var _tableContextDefault = parcelHelpers.interopDefault(_tableContext);
var _tablelvl2Context = require("../Table/Tablelvl2Context");
var _tablelvl2ContextDefault = parcelHelpers.interopDefault(_tablelvl2Context);
var styles = function styles(theme) {
    return {
        /* Styles applied to the root element. */ root: _extendsDefault.default({}, theme.typography.body2, {
            display: 'table-cell',
            verticalAlign: 'inherit',
            // Workaround for a rendering bug with spanned columns in Chrome 62.0.
            // Removes the alpha (sets it to 1), and lightens or darkens the theme color.
            borderBottom: "1px solid\n    ".concat(theme.palette.type === 'light' ? _colorManipulator.lighten(_colorManipulator.alpha(theme.palette.divider, 1), 0.88) : _colorManipulator.darken(_colorManipulator.alpha(theme.palette.divider, 1), 0.68)),
            textAlign: 'left',
            padding: 16
        }),
        /* Styles applied to the root element if `variant="head"` or `context.table.head`. */ head: {
            color: theme.palette.text.primary,
            lineHeight: theme.typography.pxToRem(24),
            fontWeight: theme.typography.fontWeightMedium
        },
        /* Styles applied to the root element if `variant="body"` or `context.table.body`. */ body: {
            color: theme.palette.text.primary
        },
        /* Styles applied to the root element if `variant="footer"` or `context.table.footer`. */ footer: {
            color: theme.palette.text.secondary,
            lineHeight: theme.typography.pxToRem(21),
            fontSize: theme.typography.pxToRem(12)
        },
        /* Styles applied to the root element if `size="small"`. */ sizeSmall: {
            padding: '6px 24px 6px 16px',
            '&:last-child': {
                paddingRight: 16
            },
            '&$paddingCheckbox': {
                width: 24,
                // prevent the checkbox column from growing
                padding: '0 12px 0 16px',
                '&:last-child': {
                    paddingLeft: 12,
                    paddingRight: 16
                },
                '& > *': {
                    padding: 0
                }
            }
        },
        /* Styles applied to the root element if `padding="checkbox"`. */ paddingCheckbox: {
            width: 48,
            // prevent the checkbox column from growing
            padding: '0 0 0 4px',
            '&:last-child': {
                paddingLeft: 0,
                paddingRight: 4
            }
        },
        /* Styles applied to the root element if `padding="none"`. */ paddingNone: {
            padding: 0,
            '&:last-child': {
                padding: 0
            }
        },
        /* Styles applied to the root element if `align="left"`. */ alignLeft: {
            textAlign: 'left'
        },
        /* Styles applied to the root element if `align="center"`. */ alignCenter: {
            textAlign: 'center'
        },
        /* Styles applied to the root element if `align="right"`. */ alignRight: {
            textAlign: 'right',
            flexDirection: 'row-reverse'
        },
        /* Styles applied to the root element if `align="justify"`. */ alignJustify: {
            textAlign: 'justify'
        },
        /* Styles applied to the root element if `context.table.stickyHeader={true}`. */ stickyHeader: {
            position: 'sticky',
            top: 0,
            left: 0,
            zIndex: 2,
            backgroundColor: theme.palette.background.default
        }
    };
};
/**
 * The component renders a `<th>` element when the parent context is a header
 * or otherwise a `<td>` element.
 */ var TableCell = /*#__PURE__*/ _react.forwardRef(function TableCell(props, ref) {
    var _props$align = props.align, align = _props$align === void 0 ? 'inherit' : _props$align, classes = props.classes, className = props.className, component = props.component, paddingProp = props.padding, scopeProp = props.scope, sizeProp = props.size, sortDirection = props.sortDirection, variantProp = props.variant, other = _objectWithoutPropertiesDefault.default(props, [
        "align",
        "classes",
        "className",
        "component",
        "padding",
        "scope",
        "size",
        "sortDirection",
        "variant"
    ]);
    var table = _react.useContext(_tableContextDefault.default);
    var tablelvl2 = _react.useContext(_tablelvl2ContextDefault.default);
    var isHeadCell = tablelvl2 && tablelvl2.variant === 'head';
    var role;
    var Component;
    if (component) {
        Component = component;
        role = isHeadCell ? 'columnheader' : 'cell';
    } else Component = isHeadCell ? 'th' : 'td';
    var scope = scopeProp;
    if (!scope && isHeadCell) scope = 'col';
    var padding = paddingProp || (table && table.padding ? table.padding : 'normal');
    var size = sizeProp || (table && table.size ? table.size : 'medium');
    var variant = variantProp || tablelvl2 && tablelvl2.variant;
    var ariaSort = null;
    if (sortDirection) ariaSort = sortDirection === 'asc' ? 'ascending' : 'descending';
    return /*#__PURE__*/ _react.createElement(Component, _extendsDefault.default({
        ref: ref,
        className: _clsxDefault.default(classes.root, classes[variant], className, align !== 'inherit' && classes["align".concat(_capitalizeDefault.default(align))], padding !== 'normal' && classes["padding".concat(_capitalizeDefault.default(padding))], size !== 'medium' && classes["size".concat(_capitalizeDefault.default(size))], variant === 'head' && table && table.stickyHeader && classes.stickyHeader),
        "aria-sort": ariaSort,
        role: role,
        scope: scope
    }, other));
});
TableCell.propTypes = {
    /**
   * Set the text-align on the table cell content.
   *
   * Monetary or generally number fields **should be right aligned** as that allows
   * you to add them up quickly in your head without having to worry about decimals.
   */ align: _propTypesDefault.default.oneOf([
        'center',
        'inherit',
        'justify',
        'left',
        'right'
    ]),
    /**
   * The table cell contents.
   */ children: _propTypesDefault.default.node,
    /**
   * Override or extend the styles applied to the component.
   * See [CSS API](#css) below for more details.
   */ classes: _propTypesDefault.default.object,
    /**
   * @ignore
   */ className: _propTypesDefault.default.string,
    /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */ component: _propTypesDefault.default/* @typescript-to-proptypes-ignore */ .elementType,
    /**
   * Sets the padding applied to the cell.
   * By default, the Table parent component set the value (`normal`).
   * `default` is deprecated, use `normal` instead.
   */ padding: _utils.chainPropTypes(_propTypesDefault.default.oneOf([
        'normal',
        'checkbox',
        'none',
        'default'
    ]), function(props) {
        if (props.padding === 'default') return new Error('Material-UI: padding="default" was renamed to padding="normal" for consistency.');
        return null;
    }),
    /**
   * Set scope attribute.
   */ scope: _propTypesDefault.default.string,
    /**
   * Specify the size of the cell.
   * By default, the Table parent component set the value (`medium`).
   */ size: _propTypesDefault.default.oneOf([
        'medium',
        'small'
    ]),
    /**
   * Set aria-sort direction.
   */ sortDirection: _propTypesDefault.default.oneOf([
        'asc',
        'desc',
        false
    ]),
    /**
   * Specify the cell type.
   * By default, the TableHead, TableBody or TableFooter parent component set the value.
   */ variant: _propTypesDefault.default.oneOf([
        'body',
        'footer',
        'head'
    ])
};
exports.default = _withStylesDefault.default(styles, {
    name: 'MuiTableCell'
})(TableCell);

},{"@babel/runtime/helpers/esm/objectWithoutProperties":"25tJ4","@babel/runtime/helpers/esm/extends":"fTBFS","react":"21dqq","prop-types":"7wKI2","clsx":"83C22","@material-ui/utils":"54RkF","../styles/withStyles":"7U0iM","../utils/capitalize":"5AJVX","../styles/colorManipulator":"iz48G","../Table/TableContext":"1pTqK","../Table/Tablelvl2Context":"9hSUo","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"v4Pab":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>_tableContainerDefault.default
);
var _tableContainer = require("./TableContainer");
var _tableContainerDefault = parcelHelpers.interopDefault(_tableContainer);

},{"./TableContainer":"edpb8","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"edpb8":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "styles", ()=>styles
);
var _extends = require("@babel/runtime/helpers/esm/extends");
var _extendsDefault = parcelHelpers.interopDefault(_extends);
var _objectWithoutProperties = require("@babel/runtime/helpers/esm/objectWithoutProperties");
var _objectWithoutPropertiesDefault = parcelHelpers.interopDefault(_objectWithoutProperties);
var _react = require("react");
var _propTypes = require("prop-types");
var _propTypesDefault = parcelHelpers.interopDefault(_propTypes);
var _clsx = require("clsx");
var _clsxDefault = parcelHelpers.interopDefault(_clsx);
var _withStyles = require("../styles/withStyles");
var _withStylesDefault = parcelHelpers.interopDefault(_withStyles);
var styles = {
    /* Styles applied to the root element. */ root: {
        width: '100%',
        overflowX: 'auto'
    }
};
var TableContainer = /*#__PURE__*/ _react.forwardRef(function TableContainer(props, ref) {
    var classes = props.classes, className = props.className, _props$component = props.component, Component = _props$component === void 0 ? 'div' : _props$component, other = _objectWithoutPropertiesDefault.default(props, [
        "classes",
        "className",
        "component"
    ]);
    return /*#__PURE__*/ _react.createElement(Component, _extendsDefault.default({
        ref: ref,
        className: _clsxDefault.default(classes.root, className)
    }, other));
});
TableContainer.propTypes = {
    /**
   * The table itself, normally `<Table />`
   */ children: _propTypesDefault.default.node,
    /**
   * Override or extend the styles applied to the component.
   * See [CSS API](#css) below for more details.
   */ classes: _propTypesDefault.default.object.isRequired,
    /**
   * @ignore
   */ className: _propTypesDefault.default.string,
    /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */ component: _propTypesDefault.default/* @typescript-to-proptypes-ignore */ .elementType
};
exports.default = _withStylesDefault.default(styles, {
    name: 'MuiTableContainer'
})(TableContainer);

},{"@babel/runtime/helpers/esm/extends":"fTBFS","@babel/runtime/helpers/esm/objectWithoutProperties":"25tJ4","react":"21dqq","prop-types":"7wKI2","clsx":"83C22","../styles/withStyles":"7U0iM","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"9HKtA":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>_tableFooterDefault.default
);
var _tableFooter = require("./TableFooter");
var _tableFooterDefault = parcelHelpers.interopDefault(_tableFooter);

},{"./TableFooter":"eoyu8","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"eoyu8":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "styles", ()=>styles
);
var _extends = require("@babel/runtime/helpers/esm/extends");
var _extendsDefault = parcelHelpers.interopDefault(_extends);
var _objectWithoutProperties = require("@babel/runtime/helpers/esm/objectWithoutProperties");
var _objectWithoutPropertiesDefault = parcelHelpers.interopDefault(_objectWithoutProperties);
var _react = require("react");
var _propTypes = require("prop-types");
var _propTypesDefault = parcelHelpers.interopDefault(_propTypes);
var _clsx = require("clsx");
var _clsxDefault = parcelHelpers.interopDefault(_clsx);
var _withStyles = require("../styles/withStyles");
var _withStylesDefault = parcelHelpers.interopDefault(_withStyles);
var _tablelvl2Context = require("../Table/Tablelvl2Context");
var _tablelvl2ContextDefault = parcelHelpers.interopDefault(_tablelvl2Context);
var styles = {
    /* Styles applied to the root element. */ root: {
        display: 'table-footer-group'
    }
};
var tablelvl2 = {
    variant: 'footer'
};
var defaultComponent = 'tfoot';
var TableFooter = /*#__PURE__*/ _react.forwardRef(function TableFooter(props, ref) {
    var classes = props.classes, className = props.className, _props$component = props.component, Component = _props$component === void 0 ? defaultComponent : _props$component, other = _objectWithoutPropertiesDefault.default(props, [
        "classes",
        "className",
        "component"
    ]);
    return /*#__PURE__*/ _react.createElement(_tablelvl2ContextDefault.default.Provider, {
        value: tablelvl2
    }, /*#__PURE__*/ _react.createElement(Component, _extendsDefault.default({
        className: _clsxDefault.default(classes.root, className),
        ref: ref,
        role: Component === defaultComponent ? null : 'rowgroup'
    }, other)));
});
TableFooter.propTypes = {
    /**
   * The content of the component, normally `TableRow`.
   */ children: _propTypesDefault.default.node,
    /**
   * Override or extend the styles applied to the component.
   * See [CSS API](#css) below for more details.
   */ classes: _propTypesDefault.default.object.isRequired,
    /**
   * @ignore
   */ className: _propTypesDefault.default.string,
    /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */ component: _propTypesDefault.default/* @typescript-to-proptypes-ignore */ .elementType
};
exports.default = _withStylesDefault.default(styles, {
    name: 'MuiTableFooter'
})(TableFooter);

},{"@babel/runtime/helpers/esm/extends":"fTBFS","@babel/runtime/helpers/esm/objectWithoutProperties":"25tJ4","react":"21dqq","prop-types":"7wKI2","clsx":"83C22","../styles/withStyles":"7U0iM","../Table/Tablelvl2Context":"9hSUo","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"2ON2I":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>_tableHeadDefault.default
);
var _tableHead = require("./TableHead");
var _tableHeadDefault = parcelHelpers.interopDefault(_tableHead);

},{"./TableHead":"gIaqh","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"gIaqh":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "styles", ()=>styles
);
var _extends = require("@babel/runtime/helpers/esm/extends");
var _extendsDefault = parcelHelpers.interopDefault(_extends);
var _objectWithoutProperties = require("@babel/runtime/helpers/esm/objectWithoutProperties");
var _objectWithoutPropertiesDefault = parcelHelpers.interopDefault(_objectWithoutProperties);
var _react = require("react");
var _propTypes = require("prop-types");
var _propTypesDefault = parcelHelpers.interopDefault(_propTypes);
var _clsx = require("clsx");
var _clsxDefault = parcelHelpers.interopDefault(_clsx);
var _withStyles = require("../styles/withStyles");
var _withStylesDefault = parcelHelpers.interopDefault(_withStyles);
var _tablelvl2Context = require("../Table/Tablelvl2Context");
var _tablelvl2ContextDefault = parcelHelpers.interopDefault(_tablelvl2Context);
var styles = {
    /* Styles applied to the root element. */ root: {
        display: 'table-header-group'
    }
};
var tablelvl2 = {
    variant: 'head'
};
var defaultComponent = 'thead';
var TableHead = /*#__PURE__*/ _react.forwardRef(function TableHead(props, ref) {
    var classes = props.classes, className = props.className, _props$component = props.component, Component = _props$component === void 0 ? defaultComponent : _props$component, other = _objectWithoutPropertiesDefault.default(props, [
        "classes",
        "className",
        "component"
    ]);
    return /*#__PURE__*/ _react.createElement(_tablelvl2ContextDefault.default.Provider, {
        value: tablelvl2
    }, /*#__PURE__*/ _react.createElement(Component, _extendsDefault.default({
        className: _clsxDefault.default(classes.root, className),
        ref: ref,
        role: Component === defaultComponent ? null : 'rowgroup'
    }, other)));
});
TableHead.propTypes = {
    /**
   * The content of the component, normally `TableRow`.
   */ children: _propTypesDefault.default.node,
    /**
   * Override or extend the styles applied to the component.
   * See [CSS API](#css) below for more details.
   */ classes: _propTypesDefault.default.object.isRequired,
    /**
   * @ignore
   */ className: _propTypesDefault.default.string,
    /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */ component: _propTypesDefault.default/* @typescript-to-proptypes-ignore */ .elementType
};
exports.default = _withStylesDefault.default(styles, {
    name: 'MuiTableHead'
})(TableHead);

},{"@babel/runtime/helpers/esm/extends":"fTBFS","@babel/runtime/helpers/esm/objectWithoutProperties":"25tJ4","react":"21dqq","prop-types":"7wKI2","clsx":"83C22","../styles/withStyles":"7U0iM","../Table/Tablelvl2Context":"9hSUo","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"h3yDF":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>_tablePaginationDefault.default
);
var _tablePagination = require("./TablePagination");
var _tablePaginationDefault = parcelHelpers.interopDefault(_tablePagination);

},{"./TablePagination":"eYwrw","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"eYwrw":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "styles", ()=>styles
);
var _extends = require("@babel/runtime/helpers/esm/extends");
var _extendsDefault = parcelHelpers.interopDefault(_extends);
var _objectWithoutProperties = require("@babel/runtime/helpers/esm/objectWithoutProperties");
var _objectWithoutPropertiesDefault = parcelHelpers.interopDefault(_objectWithoutProperties);
var _react = require("react");
var _propTypes = require("prop-types");
var _propTypesDefault = parcelHelpers.interopDefault(_propTypes);
var _utils = require("@material-ui/utils");
var _clsx = require("clsx");
var _clsxDefault = parcelHelpers.interopDefault(_clsx);
var _deprecatedPropType = require("../utils/deprecatedPropType");
var _deprecatedPropTypeDefault = parcelHelpers.interopDefault(_deprecatedPropType);
var _withStyles = require("../styles/withStyles");
var _withStylesDefault = parcelHelpers.interopDefault(_withStyles);
var _inputBase = require("../InputBase");
var _inputBaseDefault = parcelHelpers.interopDefault(_inputBase);
var _menuItem = require("../MenuItem");
var _menuItemDefault = parcelHelpers.interopDefault(_menuItem);
var _select = require("../Select");
var _selectDefault = parcelHelpers.interopDefault(_select);
var _tableCell = require("../TableCell");
var _tableCellDefault = parcelHelpers.interopDefault(_tableCell);
var _toolbar = require("../Toolbar");
var _toolbarDefault = parcelHelpers.interopDefault(_toolbar);
var _typography = require("../Typography");
var _typographyDefault = parcelHelpers.interopDefault(_typography);
var _tablePaginationActions = require("./TablePaginationActions");
var _tablePaginationActionsDefault = parcelHelpers.interopDefault(_tablePaginationActions);
var _unstableUseId = require("../utils/unstable_useId");
var _unstableUseIdDefault = parcelHelpers.interopDefault(_unstableUseId);
var styles = function styles(theme) {
    return {
        /* Styles applied to the root element. */ root: {
            color: theme.palette.text.primary,
            fontSize: theme.typography.pxToRem(14),
            overflow: 'auto',
            // Increase the specificity to override TableCell.
            '&:last-child': {
                padding: 0
            }
        },
        /* Styles applied to the Toolbar component. */ toolbar: {
            minHeight: 52,
            paddingRight: 2
        },
        /* Styles applied to the spacer element. */ spacer: {
            flex: '1 1 100%'
        },
        /* Styles applied to the caption Typography components if `variant="caption"`. */ caption: {
            flexShrink: 0
        },
        // TODO v5: `.selectRoot` should be merged with `.input`
        /* Styles applied to the Select component root element. */ selectRoot: {
            marginRight: 32,
            marginLeft: 8
        },
        /* Styles applied to the Select component `select` class. */ select: {
            paddingLeft: 8,
            paddingRight: 24,
            textAlign: 'right',
            textAlignLast: 'right' // Align <select> on Chrome.
        },
        // TODO v5: remove
        /* Styles applied to the Select component `icon` class. */ selectIcon: {},
        /* Styles applied to the `InputBase` component. */ input: {
            color: 'inherit',
            fontSize: 'inherit',
            flexShrink: 0
        },
        /* Styles applied to the MenuItem component. */ menuItem: {},
        /* Styles applied to the internal `TablePaginationActions` component. */ actions: {
            flexShrink: 0,
            marginLeft: 20
        }
    };
};
var defaultLabelDisplayedRows = function defaultLabelDisplayedRows(_ref) {
    var from = _ref.from, to = _ref.to, count = _ref.count;
    return "".concat(from, "-").concat(to, " of ").concat(count !== -1 ? count : "more than ".concat(to));
};
var defaultRowsPerPageOptions = [
    10,
    25,
    50,
    100
];
/**
 * A `TableCell` based component for placing inside `TableFooter` for pagination.
 */ var TablePagination = /*#__PURE__*/ _react.forwardRef(function TablePagination(props, ref) {
    var _props$ActionsCompone = props.ActionsComponent, ActionsComponent = _props$ActionsCompone === void 0 ? _tablePaginationActionsDefault.default : _props$ActionsCompone, backIconButtonProps = props.backIconButtonProps, _props$backIconButton = props.backIconButtonText, backIconButtonText = _props$backIconButton === void 0 ? 'Previous page' : _props$backIconButton, classes = props.classes, className = props.className, colSpanProp = props.colSpan, _props$component = props.component, Component = _props$component === void 0 ? _tableCellDefault.default : _props$component, count = props.count, _props$labelDisplayed = props.labelDisplayedRows, labelDisplayedRows = _props$labelDisplayed === void 0 ? defaultLabelDisplayedRows : _props$labelDisplayed, _props$labelRowsPerPa = props.labelRowsPerPage, labelRowsPerPage = _props$labelRowsPerPa === void 0 ? 'Rows per page:' : _props$labelRowsPerPa, nextIconButtonProps = props.nextIconButtonProps, _props$nextIconButton = props.nextIconButtonText, nextIconButtonText = _props$nextIconButton === void 0 ? 'Next page' : _props$nextIconButton, onChangePage = props.onChangePage, onPageChange = props.onPageChange, onChangeRowsPerPageProp = props.onChangeRowsPerPage, onRowsPerPageChangeProp = props.onRowsPerPageChange, page = props.page, rowsPerPage = props.rowsPerPage, _props$rowsPerPageOpt = props.rowsPerPageOptions, rowsPerPageOptions = _props$rowsPerPageOpt === void 0 ? defaultRowsPerPageOptions : _props$rowsPerPageOpt, _props$SelectProps = props.SelectProps, SelectProps = _props$SelectProps === void 0 ? {} : _props$SelectProps, other = _objectWithoutPropertiesDefault.default(props, [
        "ActionsComponent",
        "backIconButtonProps",
        "backIconButtonText",
        "classes",
        "className",
        "colSpan",
        "component",
        "count",
        "labelDisplayedRows",
        "labelRowsPerPage",
        "nextIconButtonProps",
        "nextIconButtonText",
        "onChangePage",
        "onPageChange",
        "onChangeRowsPerPage",
        "onRowsPerPageChange",
        "page",
        "rowsPerPage",
        "rowsPerPageOptions",
        "SelectProps"
    ]);
    var onChangeRowsPerPage = onChangeRowsPerPageProp || onRowsPerPageChangeProp;
    var colSpan;
    if (Component === _tableCellDefault.default || Component === 'td') colSpan = colSpanProp || 1000; // col-span over everything
    var selectId = _unstableUseIdDefault.default();
    var labelId = _unstableUseIdDefault.default();
    var MenuItemComponent = SelectProps.native ? 'option' : _menuItemDefault.default;
    return /*#__PURE__*/ _react.createElement(Component, _extendsDefault.default({
        className: _clsxDefault.default(classes.root, className),
        colSpan: colSpan,
        ref: ref
    }, other), /*#__PURE__*/ _react.createElement(_toolbarDefault.default, {
        className: classes.toolbar
    }, /*#__PURE__*/ _react.createElement("div", {
        className: classes.spacer
    }), rowsPerPageOptions.length > 1 && /*#__PURE__*/ _react.createElement(_typographyDefault.default, {
        color: "inherit",
        variant: "body2",
        className: classes.caption,
        id: labelId
    }, labelRowsPerPage), rowsPerPageOptions.length > 1 && /*#__PURE__*/ _react.createElement(_selectDefault.default, _extendsDefault.default({
        classes: {
            select: classes.select,
            icon: classes.selectIcon
        },
        input: /*#__PURE__*/ _react.createElement(_inputBaseDefault.default, {
            className: _clsxDefault.default(classes.input, classes.selectRoot)
        }),
        value: rowsPerPage,
        onChange: onChangeRowsPerPage,
        id: selectId,
        labelId: labelId
    }, SelectProps), rowsPerPageOptions.map(function(rowsPerPageOption) {
        return /*#__PURE__*/ _react.createElement(MenuItemComponent, {
            className: classes.menuItem,
            key: rowsPerPageOption.value ? rowsPerPageOption.value : rowsPerPageOption,
            value: rowsPerPageOption.value ? rowsPerPageOption.value : rowsPerPageOption
        }, rowsPerPageOption.label ? rowsPerPageOption.label : rowsPerPageOption);
    })), /*#__PURE__*/ _react.createElement(_typographyDefault.default, {
        color: "inherit",
        variant: "body2",
        className: classes.caption
    }, labelDisplayedRows({
        from: count === 0 ? 0 : page * rowsPerPage + 1,
        to: count !== -1 ? Math.min(count, (page + 1) * rowsPerPage) : (page + 1) * rowsPerPage,
        count: count === -1 ? -1 : count,
        page: page
    })), /*#__PURE__*/ _react.createElement(ActionsComponent, {
        className: classes.actions,
        backIconButtonProps: _extendsDefault.default({
            title: backIconButtonText,
            'aria-label': backIconButtonText
        }, backIconButtonProps),
        count: count,
        nextIconButtonProps: _extendsDefault.default({
            title: nextIconButtonText,
            'aria-label': nextIconButtonText
        }, nextIconButtonProps),
        onChangePage: onChangePage,
        onPageChange: onPageChange,
        page: page,
        rowsPerPage: rowsPerPage
    })));
});
TablePagination.propTypes = {
    /**
   * The component used for displaying the actions.
   * Either a string to use a HTML element or a component.
   */ ActionsComponent: _propTypesDefault.default.elementType,
    /**
   * Props applied to the back arrow [`IconButton`](/api/icon-button/) component.
   */ backIconButtonProps: _propTypesDefault.default.object,
    /**
   * Text label for the back arrow icon button.
   *
   * For localization purposes, you can use the provided [translations](/guides/localization/).
   */ backIconButtonText: _propTypesDefault.default.string,
    /**
   * Override or extend the styles applied to the component.
   * See [CSS API](#css) below for more details.
   */ classes: _propTypesDefault.default.object.isRequired,
    /**
   * @ignore
   */ className: _propTypesDefault.default.string,
    /**
   * @ignore
   */ colSpan: _propTypesDefault.default.number,
    /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */ component: _propTypesDefault.default/* @typescript-to-proptypes-ignore */ .elementType,
    /**
   * The total number of rows.
   *
   * To enable server side pagination for an unknown number of items, provide -1.
   */ count: _propTypesDefault.default.number.isRequired,
    /**
   * Customize the displayed rows label. Invoked with a `{ from, to, count, page }`
   * object.
   *
   * For localization purposes, you can use the provided [translations](/guides/localization/).
   */ labelDisplayedRows: _propTypesDefault.default.func,
    /**
   * Customize the rows per page label.
   *
   * For localization purposes, you can use the provided [translations](/guides/localization/).
   */ labelRowsPerPage: _propTypesDefault.default.node,
    /**
   * Props applied to the next arrow [`IconButton`](/api/icon-button/) element.
   */ nextIconButtonProps: _propTypesDefault.default.object,
    /**
   * Text label for the next arrow icon button.
   *
   * For localization purposes, you can use the provided [translations](/guides/localization/).
   */ nextIconButtonText: _propTypesDefault.default.string,
    /**
   * Callback fired when the page is changed.
   *
   * @param {object} event The event source of the callback.
   * @param {number} page The page selected.
   * @deprecated Use the onPageChange prop instead.
   */ onChangePage: _deprecatedPropTypeDefault.default(_propTypesDefault.default.func, 'Use the `onPageChange` prop instead.'),
    /**
   * Callback fired when the number of rows per page is changed.
   *
   * @param {object} event The event source of the callback.
   * @deprecated Use the onRowsPerPageChange prop instead.
   */ onChangeRowsPerPage: _deprecatedPropTypeDefault.default(_propTypesDefault.default.func, 'Use the `onRowsPerPageChange` prop instead.'),
    /**
   * Callback fired when the page is changed.
   *
   * @param {object} event The event source of the callback.
   * @param {number} page The page selected.
   */ onPageChange: _propTypesDefault.default.func.isRequired,
    /**
   * Callback fired when the number of rows per page is changed.
   *
   * @param {object} event The event source of the callback.
   */ onRowsPerPageChange: _propTypesDefault.default.func,
    /**
   * The zero-based index of the current page.
   */ page: _utils.chainPropTypes(_propTypesDefault.default.number.isRequired, function(props) {
        var count = props.count, page = props.page, rowsPerPage = props.rowsPerPage;
        if (count === -1) return null;
        var newLastPage = Math.max(0, Math.ceil(count / rowsPerPage) - 1);
        if (page < 0 || page > newLastPage) return new Error('Material-UI: The page prop of a TablePagination is out of range ' + "(0 to ".concat(newLastPage, ", but page is ").concat(page, ")."));
        return null;
    }),
    /**
   * The number of rows per page.
   */ rowsPerPage: _propTypesDefault.default.number.isRequired,
    /**
   * Customizes the options of the rows per page select field. If less than two options are
   * available, no select field will be displayed.
   */ rowsPerPageOptions: _propTypesDefault.default.array,
    /**
   * Props applied to the rows per page [`Select`](/api/select/) element.
   */ SelectProps: _propTypesDefault.default.object
};
exports.default = _withStylesDefault.default(styles, {
    name: 'MuiTablePagination'
})(TablePagination);

},{"@babel/runtime/helpers/esm/extends":"fTBFS","@babel/runtime/helpers/esm/objectWithoutProperties":"25tJ4","react":"21dqq","prop-types":"7wKI2","@material-ui/utils":"54RkF","clsx":"83C22","../utils/deprecatedPropType":"loRgF","../styles/withStyles":"7U0iM","../InputBase":"4MrXd","../MenuItem":"4K3cN","../Select":"fDj29","../TableCell":"f4axW","../Toolbar":"6wX6j","../Typography":"6dDPF","./TablePaginationActions":"jvfn4","../utils/unstable_useId":"crGfn","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"6wX6j":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>_toolbarDefault.default
);
var _toolbar = require("./Toolbar");
var _toolbarDefault = parcelHelpers.interopDefault(_toolbar);

},{"./Toolbar":"7RBNK","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"7RBNK":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "styles", ()=>styles
);
var _extends = require("@babel/runtime/helpers/esm/extends");
var _extendsDefault = parcelHelpers.interopDefault(_extends);
var _objectWithoutProperties = require("@babel/runtime/helpers/esm/objectWithoutProperties");
var _objectWithoutPropertiesDefault = parcelHelpers.interopDefault(_objectWithoutProperties);
var _defineProperty = require("@babel/runtime/helpers/esm/defineProperty");
var _definePropertyDefault = parcelHelpers.interopDefault(_defineProperty);
var _react = require("react");
var _propTypes = require("prop-types");
var _propTypesDefault = parcelHelpers.interopDefault(_propTypes);
var _clsx = require("clsx");
var _clsxDefault = parcelHelpers.interopDefault(_clsx);
var _withStyles = require("../styles/withStyles");
var _withStylesDefault = parcelHelpers.interopDefault(_withStyles);
var styles = function styles(theme) {
    return {
        /* Styles applied to the root element. */ root: {
            position: 'relative',
            display: 'flex',
            alignItems: 'center'
        },
        /* Styles applied to the root element if `disableGutters={false}`. */ gutters: _definePropertyDefault.default({
            paddingLeft: theme.spacing(2),
            paddingRight: theme.spacing(2)
        }, theme.breakpoints.up('sm'), {
            paddingLeft: theme.spacing(3),
            paddingRight: theme.spacing(3)
        }),
        /* Styles applied to the root element if `variant="regular"`. */ regular: theme.mixins.toolbar,
        /* Styles applied to the root element if `variant="dense"`. */ dense: {
            minHeight: 48
        }
    };
};
var Toolbar = /*#__PURE__*/ _react.forwardRef(function Toolbar(props, ref) {
    var classes = props.classes, className = props.className, _props$component = props.component, Component = _props$component === void 0 ? 'div' : _props$component, _props$disableGutters = props.disableGutters, disableGutters = _props$disableGutters === void 0 ? false : _props$disableGutters, _props$variant = props.variant, variant = _props$variant === void 0 ? 'regular' : _props$variant, other = _objectWithoutPropertiesDefault.default(props, [
        "classes",
        "className",
        "component",
        "disableGutters",
        "variant"
    ]);
    return /*#__PURE__*/ _react.createElement(Component, _extendsDefault.default({
        className: _clsxDefault.default(classes.root, classes[variant], className, !disableGutters && classes.gutters),
        ref: ref
    }, other));
});
Toolbar.propTypes = {
    /**
   * Toolbar children, usually a mixture of `IconButton`, `Button` and `Typography`.
   */ children: _propTypesDefault.default.node,
    /**
   * Override or extend the styles applied to the component.
   * See [CSS API](#css) below for more details.
   */ classes: _propTypesDefault.default.object.isRequired,
    /**
   * @ignore
   */ className: _propTypesDefault.default.string,
    /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */ component: _propTypesDefault.default/* @typescript-to-proptypes-ignore */ .elementType,
    /**
   * If `true`, disables gutter padding.
   */ disableGutters: _propTypesDefault.default.bool,
    /**
   * The variant to use.
   */ variant: _propTypesDefault.default.oneOf([
        'regular',
        'dense'
    ])
};
exports.default = _withStylesDefault.default(styles, {
    name: 'MuiToolbar'
})(Toolbar);

},{"@babel/runtime/helpers/esm/extends":"fTBFS","@babel/runtime/helpers/esm/objectWithoutProperties":"25tJ4","@babel/runtime/helpers/esm/defineProperty":"hbmCA","react":"21dqq","prop-types":"7wKI2","clsx":"83C22","../styles/withStyles":"7U0iM","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"jvfn4":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _extends = require("@babel/runtime/helpers/esm/extends");
var _extendsDefault = parcelHelpers.interopDefault(_extends);
var _objectWithoutProperties = require("@babel/runtime/helpers/esm/objectWithoutProperties");
var _objectWithoutPropertiesDefault = parcelHelpers.interopDefault(_objectWithoutProperties);
var _react = require("react");
var _propTypes = require("prop-types");
var _propTypesDefault = parcelHelpers.interopDefault(_propTypes);
var _keyboardArrowLeft = require("../internal/svg-icons/KeyboardArrowLeft");
var _keyboardArrowLeftDefault = parcelHelpers.interopDefault(_keyboardArrowLeft);
var _keyboardArrowRight = require("../internal/svg-icons/KeyboardArrowRight");
var _keyboardArrowRightDefault = parcelHelpers.interopDefault(_keyboardArrowRight);
var _useTheme = require("../styles/useTheme");
var _useThemeDefault = parcelHelpers.interopDefault(_useTheme);
var _iconButton = require("../IconButton");
var _iconButtonDefault = parcelHelpers.interopDefault(_iconButton);
/**
 * @ignore - internal component.
 */ var _ref = /*#__PURE__*/ _react.createElement(_keyboardArrowRightDefault.default, null);
var _ref2 = /*#__PURE__*/ _react.createElement(_keyboardArrowLeftDefault.default, null);
var _ref3 = /*#__PURE__*/ _react.createElement(_keyboardArrowLeftDefault.default, null);
var _ref4 = /*#__PURE__*/ _react.createElement(_keyboardArrowRightDefault.default, null);
var TablePaginationActions = /*#__PURE__*/ _react.forwardRef(function TablePaginationActions(props, ref) {
    var backIconButtonProps = props.backIconButtonProps, count = props.count, nextIconButtonProps = props.nextIconButtonProps, _props$onChangePage = props.onChangePage, onChangePage = _props$onChangePage === void 0 ? function() {} : _props$onChangePage, _props$onPageChange = props.onPageChange, onPageChange = _props$onPageChange === void 0 ? function() {} : _props$onPageChange, page = props.page, rowsPerPage = props.rowsPerPage, other = _objectWithoutPropertiesDefault.default(props, [
        "backIconButtonProps",
        "count",
        "nextIconButtonProps",
        "onChangePage",
        "onPageChange",
        "page",
        "rowsPerPage"
    ]);
    var theme = _useThemeDefault.default();
    var handleBackButtonClick = function handleBackButtonClick(event) {
        onChangePage(event, page - 1);
        onPageChange(event, page - 1);
    };
    var handleNextButtonClick = function handleNextButtonClick(event) {
        onChangePage(event, page + 1);
        onPageChange(event, page + 1);
    };
    return /*#__PURE__*/ _react.createElement("div", _extendsDefault.default({
        ref: ref
    }, other), /*#__PURE__*/ _react.createElement(_iconButtonDefault.default, _extendsDefault.default({
        onClick: handleBackButtonClick,
        disabled: page === 0,
        color: "inherit"
    }, backIconButtonProps), theme.direction === 'rtl' ? _ref : _ref2), /*#__PURE__*/ _react.createElement(_iconButtonDefault.default, _extendsDefault.default({
        onClick: handleNextButtonClick,
        disabled: count !== -1 ? page >= Math.ceil(count / rowsPerPage) - 1 : false,
        color: "inherit"
    }, nextIconButtonProps), theme.direction === 'rtl' ? _ref3 : _ref4));
});
TablePaginationActions.propTypes = {
    /**
   * Props applied to the back arrow [`IconButton`](/api/icon-button/) element.
   */ backIconButtonProps: _propTypesDefault.default.object,
    /**
   * The total number of rows.
   */ count: _propTypesDefault.default.number.isRequired,
    /**
   * Props applied to the next arrow [`IconButton`](/api/icon-button/) element.
   */ nextIconButtonProps: _propTypesDefault.default.object,
    /**
   * Callback fired when the page is changed.
   *
   * @param {object} event The event source of the callback.
   * @param {number} page The page selected.
   */ onChangePage: _propTypesDefault.default.func,
    /**
   * Callback fired when the page is changed.
   *
   * @param {object} event The event source of the callback.
   * @param {number} page The page selected.
   */ onPageChange: _propTypesDefault.default.func,
    /**
   * The zero-based index of the current page.
   */ page: _propTypesDefault.default.number.isRequired,
    /**
   * The number of rows per page.
   */ rowsPerPage: _propTypesDefault.default.number.isRequired
};
exports.default = TablePaginationActions;

},{"@babel/runtime/helpers/esm/extends":"fTBFS","@babel/runtime/helpers/esm/objectWithoutProperties":"25tJ4","react":"21dqq","prop-types":"7wKI2","../internal/svg-icons/KeyboardArrowLeft":"28lXH","../internal/svg-icons/KeyboardArrowRight":"6Wdgk","../styles/useTheme":"kWUCn","../IconButton":"cer9e","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"28lXH":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _react = require("react");
var _createSvgIcon = require("../../utils/createSvgIcon");
var _createSvgIconDefault = parcelHelpers.interopDefault(_createSvgIcon);
/**
 * @ignore - internal component.
 */ exports.default = _createSvgIconDefault.default(/*#__PURE__*/ _react.createElement("path", {
    d: "M15.41 16.09l-4.58-4.59 4.58-4.59L14 5.5l-6 6 6 6z"
}), 'KeyboardArrowLeft');

},{"react":"21dqq","../../utils/createSvgIcon":"lVBTd","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"6Wdgk":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _react = require("react");
var _createSvgIcon = require("../../utils/createSvgIcon");
var _createSvgIconDefault = parcelHelpers.interopDefault(_createSvgIcon);
/**
 * @ignore - internal component.
 */ exports.default = _createSvgIconDefault.default(/*#__PURE__*/ _react.createElement("path", {
    d: "M8.59 16.34l4.58-4.59-4.58-4.59L10 5.75l6 6-6 6z"
}), 'KeyboardArrowRight');

},{"react":"21dqq","../../utils/createSvgIcon":"lVBTd","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"kmN5z":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>_tableRowDefault.default
);
var _tableRow = require("./TableRow");
var _tableRowDefault = parcelHelpers.interopDefault(_tableRow);

},{"./TableRow":"kGeRP","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"kGeRP":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "styles", ()=>styles
);
var _extends = require("@babel/runtime/helpers/esm/extends");
var _extendsDefault = parcelHelpers.interopDefault(_extends);
var _objectWithoutProperties = require("@babel/runtime/helpers/esm/objectWithoutProperties");
var _objectWithoutPropertiesDefault = parcelHelpers.interopDefault(_objectWithoutProperties);
var _react = require("react");
var _propTypes = require("prop-types");
var _propTypesDefault = parcelHelpers.interopDefault(_propTypes);
var _clsx = require("clsx");
var _clsxDefault = parcelHelpers.interopDefault(_clsx);
var _withStyles = require("../styles/withStyles");
var _withStylesDefault = parcelHelpers.interopDefault(_withStyles);
var _tablelvl2Context = require("../Table/Tablelvl2Context");
var _tablelvl2ContextDefault = parcelHelpers.interopDefault(_tablelvl2Context);
var _colorManipulator = require("../styles/colorManipulator");
var styles = function styles(theme) {
    return {
        /* Styles applied to the root element. */ root: {
            color: 'inherit',
            display: 'table-row',
            verticalAlign: 'middle',
            // We disable the focus ring for mouse, touch and keyboard users.
            outline: 0,
            '&$hover:hover': {
                backgroundColor: theme.palette.action.hover
            },
            '&$selected, &$selected:hover': {
                backgroundColor: _colorManipulator.alpha(theme.palette.secondary.main, theme.palette.action.selectedOpacity)
            }
        },
        /* Pseudo-class applied to the root element if `selected={true}`. */ selected: {},
        /* Pseudo-class applied to the root element if `hover={true}`. */ hover: {},
        /* Styles applied to the root element if table variant="head". */ head: {},
        /* Styles applied to the root element if table variant="footer". */ footer: {}
    };
};
var defaultComponent = 'tr';
/**
 * Will automatically set dynamic row height
 * based on the material table element parent (head, body, etc).
 */ var TableRow = /*#__PURE__*/ _react.forwardRef(function TableRow(props, ref) {
    var classes = props.classes, className = props.className, _props$component = props.component, Component = _props$component === void 0 ? defaultComponent : _props$component, _props$hover = props.hover, hover = _props$hover === void 0 ? false : _props$hover, _props$selected = props.selected, selected = _props$selected === void 0 ? false : _props$selected, other = _objectWithoutPropertiesDefault.default(props, [
        "classes",
        "className",
        "component",
        "hover",
        "selected"
    ]);
    var tablelvl2 = _react.useContext(_tablelvl2ContextDefault.default);
    return /*#__PURE__*/ _react.createElement(Component, _extendsDefault.default({
        ref: ref,
        className: _clsxDefault.default(classes.root, className, tablelvl2 && ({
            'head': classes.head,
            'footer': classes.footer
        })[tablelvl2.variant], hover && classes.hover, selected && classes.selected),
        role: Component === defaultComponent ? null : 'row'
    }, other));
});
TableRow.propTypes = {
    /**
   * Should be valid <tr> children such as `TableCell`.
   */ children: _propTypesDefault.default.node,
    /**
   * Override or extend the styles applied to the component.
   * See [CSS API](#css) below for more details.
   */ classes: _propTypesDefault.default.object.isRequired,
    /**
   * @ignore
   */ className: _propTypesDefault.default.string,
    /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */ component: _propTypesDefault.default/* @typescript-to-proptypes-ignore */ .elementType,
    /**
   * If `true`, the table row will shade on hover.
   */ hover: _propTypesDefault.default.bool,
    /**
   * If `true`, the table row will have the selected shading.
   */ selected: _propTypesDefault.default.bool
};
exports.default = _withStylesDefault.default(styles, {
    name: 'MuiTableRow'
})(TableRow);

},{"@babel/runtime/helpers/esm/extends":"fTBFS","@babel/runtime/helpers/esm/objectWithoutProperties":"25tJ4","react":"21dqq","prop-types":"7wKI2","clsx":"83C22","../styles/withStyles":"7U0iM","../Table/Tablelvl2Context":"9hSUo","../styles/colorManipulator":"iz48G","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"kQzW0":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>_tableSortLabelDefault.default
);
var _tableSortLabel = require("./TableSortLabel");
var _tableSortLabelDefault = parcelHelpers.interopDefault(_tableSortLabel);

},{"./TableSortLabel":"5QnIN","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"5QnIN":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "styles", ()=>styles
);
var _extends = require("@babel/runtime/helpers/esm/extends");
var _extendsDefault = parcelHelpers.interopDefault(_extends);
var _objectWithoutProperties = require("@babel/runtime/helpers/esm/objectWithoutProperties");
var _objectWithoutPropertiesDefault = parcelHelpers.interopDefault(_objectWithoutProperties);
var _react = require("react");
var _propTypes = require("prop-types");
var _propTypesDefault = parcelHelpers.interopDefault(_propTypes);
var _clsx = require("clsx");
var _clsxDefault = parcelHelpers.interopDefault(_clsx);
var _arrowDownward = require("../internal/svg-icons/ArrowDownward");
var _arrowDownwardDefault = parcelHelpers.interopDefault(_arrowDownward);
var _withStyles = require("../styles/withStyles");
var _withStylesDefault = parcelHelpers.interopDefault(_withStyles);
var _buttonBase = require("../ButtonBase");
var _buttonBaseDefault = parcelHelpers.interopDefault(_buttonBase);
var _capitalize = require("../utils/capitalize");
var _capitalizeDefault = parcelHelpers.interopDefault(_capitalize);
var styles = function styles(theme) {
    return {
        /* Styles applied to the root element. */ root: {
            cursor: 'pointer',
            display: 'inline-flex',
            justifyContent: 'flex-start',
            flexDirection: 'inherit',
            alignItems: 'center',
            '&:focus': {
                color: theme.palette.text.secondary
            },
            '&:hover': {
                color: theme.palette.text.secondary,
                '& $icon': {
                    opacity: 0.5
                }
            },
            '&$active': {
                color: theme.palette.text.primary,
                // && instead of & is a workaround for https://github.com/cssinjs/jss/issues/1045
                '&& $icon': {
                    opacity: 1,
                    color: theme.palette.text.secondary
                }
            }
        },
        /* Pseudo-class applied to the root element if `active={true}`. */ active: {},
        /* Styles applied to the icon component. */ icon: {
            fontSize: 18,
            marginRight: 4,
            marginLeft: 4,
            opacity: 0,
            transition: theme.transitions.create([
                'opacity',
                'transform'
            ], {
                duration: theme.transitions.duration.shorter
            }),
            userSelect: 'none'
        },
        /* Styles applied to the icon component if `direction="desc"`. */ iconDirectionDesc: {
            transform: 'rotate(0deg)'
        },
        /* Styles applied to the icon component if `direction="asc"`. */ iconDirectionAsc: {
            transform: 'rotate(180deg)'
        }
    };
};
/**
 * A button based label for placing inside `TableCell` for column sorting.
 */ var TableSortLabel = /*#__PURE__*/ _react.forwardRef(function TableSortLabel(props, ref) {
    var _props$active = props.active, active = _props$active === void 0 ? false : _props$active, children = props.children, classes = props.classes, className = props.className, _props$direction = props.direction, direction = _props$direction === void 0 ? 'asc' : _props$direction, _props$hideSortIcon = props.hideSortIcon, hideSortIcon = _props$hideSortIcon === void 0 ? false : _props$hideSortIcon, _props$IconComponent = props.IconComponent, IconComponent = _props$IconComponent === void 0 ? _arrowDownwardDefault.default : _props$IconComponent, other = _objectWithoutPropertiesDefault.default(props, [
        "active",
        "children",
        "classes",
        "className",
        "direction",
        "hideSortIcon",
        "IconComponent"
    ]);
    return /*#__PURE__*/ _react.createElement(_buttonBaseDefault.default, _extendsDefault.default({
        className: _clsxDefault.default(classes.root, className, active && classes.active),
        component: "span",
        disableRipple: true,
        ref: ref
    }, other), children, hideSortIcon && !active ? null : /*#__PURE__*/ _react.createElement(IconComponent, {
        className: _clsxDefault.default(classes.icon, classes["iconDirection".concat(_capitalizeDefault.default(direction))])
    }));
});
TableSortLabel.propTypes = {
    /**
   * If `true`, the label will have the active styling (should be true for the sorted column).
   */ active: _propTypesDefault.default.bool,
    /**
   * Label contents, the arrow will be appended automatically.
   */ children: _propTypesDefault.default.node,
    /**
   * Override or extend the styles applied to the component.
   * See [CSS API](#css) below for more details.
   */ classes: _propTypesDefault.default.object.isRequired,
    /**
   * @ignore
   */ className: _propTypesDefault.default.string,
    /**
   * The current sort direction.
   */ direction: _propTypesDefault.default.oneOf([
        'asc',
        'desc'
    ]),
    /**
   * Hide sort icon when active is false.
   */ hideSortIcon: _propTypesDefault.default.bool,
    /**
   * Sort icon to use.
   */ IconComponent: _propTypesDefault.default.elementType
};
exports.default = _withStylesDefault.default(styles, {
    name: 'MuiTableSortLabel'
})(TableSortLabel);

},{"@babel/runtime/helpers/esm/extends":"fTBFS","@babel/runtime/helpers/esm/objectWithoutProperties":"25tJ4","react":"21dqq","prop-types":"7wKI2","clsx":"83C22","../internal/svg-icons/ArrowDownward":"1nwHu","../styles/withStyles":"7U0iM","../ButtonBase":"2TQRV","../utils/capitalize":"5AJVX","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"1nwHu":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _react = require("react");
var _createSvgIcon = require("../../utils/createSvgIcon");
var _createSvgIconDefault = parcelHelpers.interopDefault(_createSvgIcon);
/**
 * @ignore - internal component.
 */ exports.default = _createSvgIconDefault.default(/*#__PURE__*/ _react.createElement("path", {
    d: "M20 12l-1.41-1.41L13 16.17V4h-2v12.17l-5.58-5.59L4 12l8 8 8-8z"
}), 'ArrowDownward');

},{"react":"21dqq","../../utils/createSvgIcon":"lVBTd","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"28EQr":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>_tabsDefault.default
);
var _tabs = require("./Tabs");
var _tabsDefault = parcelHelpers.interopDefault(_tabs);

},{"./Tabs":"jPUo2","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"jPUo2":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "styles", ()=>styles
);
var _extends = require("@babel/runtime/helpers/esm/extends");
var _extendsDefault = parcelHelpers.interopDefault(_extends);
var _objectWithoutProperties = require("@babel/runtime/helpers/esm/objectWithoutProperties");
var _objectWithoutPropertiesDefault = parcelHelpers.interopDefault(_objectWithoutProperties);
var _defineProperty = require("@babel/runtime/helpers/esm/defineProperty");
var _definePropertyDefault = parcelHelpers.interopDefault(_defineProperty);
var _react = require("react");
var _reactIs = require("react-is");
var _propTypes = require("prop-types");
var _propTypesDefault = parcelHelpers.interopDefault(_propTypes);
var _clsx = require("clsx");
var _clsxDefault = parcelHelpers.interopDefault(_clsx);
var _utils = require("@material-ui/utils");
var _debounce = require("../utils/debounce");
var _debounceDefault = parcelHelpers.interopDefault(_debounce);
var _ownerWindow = require("../utils/ownerWindow");
var _ownerWindowDefault = parcelHelpers.interopDefault(_ownerWindow);
var _scrollLeft = require("../utils/scrollLeft");
var _animate = require("../internal/animate");
var _animateDefault = parcelHelpers.interopDefault(_animate);
var _scrollbarSize = require("./ScrollbarSize");
var _scrollbarSizeDefault = parcelHelpers.interopDefault(_scrollbarSize);
var _withStyles = require("../styles/withStyles");
var _withStylesDefault = parcelHelpers.interopDefault(_withStyles);
var _tabIndicator = require("./TabIndicator");
var _tabIndicatorDefault = parcelHelpers.interopDefault(_tabIndicator);
var _tabScrollButton = require("../TabScrollButton");
var _tabScrollButtonDefault = parcelHelpers.interopDefault(_tabScrollButton);
var _useEventCallback = require("../utils/useEventCallback");
var _useEventCallbackDefault = parcelHelpers.interopDefault(_useEventCallback);
var _useTheme = require("../styles/useTheme");
var _useThemeDefault = parcelHelpers.interopDefault(_useTheme);
var styles = function styles(theme) {
    return {
        /* Styles applied to the root element. */ root: {
            overflow: 'hidden',
            minHeight: 48,
            WebkitOverflowScrolling: 'touch',
            // Add iOS momentum scrolling.
            display: 'flex'
        },
        /* Styles applied to the root element if `orientation="vertical"`. */ vertical: {
            flexDirection: 'column'
        },
        /* Styles applied to the flex container element. */ flexContainer: {
            display: 'flex'
        },
        /* Styles applied to the flex container element if `orientation="vertical"`. */ flexContainerVertical: {
            flexDirection: 'column'
        },
        /* Styles applied to the flex container element if `centered={true}` & `!variant="scrollable"`. */ centered: {
            justifyContent: 'center'
        },
        /* Styles applied to the tablist element. */ scroller: {
            position: 'relative',
            display: 'inline-block',
            flex: '1 1 auto',
            whiteSpace: 'nowrap'
        },
        /* Styles applied to the tablist element if `!variant="scrollable"`. */ fixed: {
            overflowX: 'hidden',
            width: '100%'
        },
        /* Styles applied to the tablist element if `variant="scrollable"`. */ scrollable: {
            overflowX: 'scroll',
            // Hide dimensionless scrollbar on MacOS
            scrollbarWidth: 'none',
            // Firefox
            '&::-webkit-scrollbar': {
                display: 'none' // Safari + Chrome
            }
        },
        /* Styles applied to the `ScrollButtonComponent` component. */ scrollButtons: {},
        /* Styles applied to the `ScrollButtonComponent` component if `scrollButtons="auto"` or scrollButtons="desktop"`. */ scrollButtonsDesktop: _definePropertyDefault.default({}, theme.breakpoints.down('xs'), {
            display: 'none'
        }),
        /* Styles applied to the `TabIndicator` component. */ indicator: {}
    };
};
var Tabs = /*#__PURE__*/ _react.forwardRef(function Tabs(props, ref) {
    var ariaLabel = props['aria-label'], ariaLabelledBy = props['aria-labelledby'], action = props.action, _props$centered = props.centered, centered = _props$centered === void 0 ? false : _props$centered, childrenProp = props.children, classes = props.classes, className = props.className, _props$component = props.component, Component = _props$component === void 0 ? 'div' : _props$component, _props$indicatorColor = props.indicatorColor, indicatorColor = _props$indicatorColor === void 0 ? 'secondary' : _props$indicatorColor, onChange = props.onChange, _props$orientation = props.orientation, orientation = _props$orientation === void 0 ? 'horizontal' : _props$orientation, _props$ScrollButtonCo = props.ScrollButtonComponent, ScrollButtonComponent = _props$ScrollButtonCo === void 0 ? _tabScrollButtonDefault.default : _props$ScrollButtonCo, _props$scrollButtons = props.scrollButtons, scrollButtons = _props$scrollButtons === void 0 ? 'auto' : _props$scrollButtons, selectionFollowsFocus = props.selectionFollowsFocus, _props$TabIndicatorPr = props.TabIndicatorProps, TabIndicatorProps = _props$TabIndicatorPr === void 0 ? {} : _props$TabIndicatorPr, TabScrollButtonProps = props.TabScrollButtonProps, _props$textColor = props.textColor, textColor = _props$textColor === void 0 ? 'inherit' : _props$textColor, value = props.value, _props$variant = props.variant, variant = _props$variant === void 0 ? 'standard' : _props$variant, other = _objectWithoutPropertiesDefault.default(props, [
        "aria-label",
        "aria-labelledby",
        "action",
        "centered",
        "children",
        "classes",
        "className",
        "component",
        "indicatorColor",
        "onChange",
        "orientation",
        "ScrollButtonComponent",
        "scrollButtons",
        "selectionFollowsFocus",
        "TabIndicatorProps",
        "TabScrollButtonProps",
        "textColor",
        "value",
        "variant"
    ]);
    var theme = _useThemeDefault.default();
    var scrollable = variant === 'scrollable';
    var isRtl = theme.direction === 'rtl';
    var vertical = orientation === 'vertical';
    var scrollStart = vertical ? 'scrollTop' : 'scrollLeft';
    var start = vertical ? 'top' : 'left';
    var end = vertical ? 'bottom' : 'right';
    var clientSize = vertical ? 'clientHeight' : 'clientWidth';
    var size = vertical ? 'height' : 'width';
    if (centered && scrollable) console.error('Material-UI: You can not use the `centered={true}` and `variant="scrollable"` properties at the same time on a `Tabs` component.');
    var _React$useState = _react.useState(false), mounted = _React$useState[0], setMounted = _React$useState[1];
    var _React$useState2 = _react.useState({}), indicatorStyle = _React$useState2[0], setIndicatorStyle = _React$useState2[1];
    var _React$useState3 = _react.useState({
        start: false,
        end: false
    }), displayScroll = _React$useState3[0], setDisplayScroll = _React$useState3[1];
    var _React$useState4 = _react.useState({
        overflow: 'hidden',
        marginBottom: null
    }), scrollerStyle = _React$useState4[0], setScrollerStyle = _React$useState4[1];
    var valueToIndex = new Map();
    var tabsRef = _react.useRef(null);
    var tabListRef = _react.useRef(null);
    var getTabsMeta = function getTabsMeta() {
        var tabsNode = tabsRef.current;
        var tabsMeta;
        if (tabsNode) {
            var rect = tabsNode.getBoundingClientRect(); // create a new object with ClientRect class props + scrollLeft
            tabsMeta = {
                clientWidth: tabsNode.clientWidth,
                scrollLeft: tabsNode.scrollLeft,
                scrollTop: tabsNode.scrollTop,
                scrollLeftNormalized: _scrollLeft.getNormalizedScrollLeft(tabsNode, theme.direction),
                scrollWidth: tabsNode.scrollWidth,
                top: rect.top,
                bottom: rect.bottom,
                left: rect.left,
                right: rect.right
            };
        }
        var tabMeta;
        if (tabsNode && value !== false) {
            var _children = tabListRef.current.children;
            if (_children.length > 0) {
                var tab = _children[valueToIndex.get(value)];
                if (!tab) console.error([
                    "Material-UI: The value provided to the Tabs component is invalid.",
                    "None of the Tabs' children match with `".concat(value, "`."),
                    valueToIndex.keys ? "You can provide one of the following values: ".concat(Array.from(valueToIndex.keys()).join(', '), ".") : null
                ].join('\n'));
                tabMeta = tab ? tab.getBoundingClientRect() : null;
            }
        }
        return {
            tabsMeta: tabsMeta,
            tabMeta: tabMeta
        };
    };
    var updateIndicatorState = _useEventCallbackDefault.default(function() {
        var _newIndicatorStyle;
        var _getTabsMeta = getTabsMeta(), tabsMeta = _getTabsMeta.tabsMeta, tabMeta = _getTabsMeta.tabMeta;
        var startValue = 0;
        if (tabMeta && tabsMeta) {
            if (vertical) startValue = tabMeta.top - tabsMeta.top + tabsMeta.scrollTop;
            else {
                var correction = isRtl ? tabsMeta.scrollLeftNormalized + tabsMeta.clientWidth - tabsMeta.scrollWidth : tabsMeta.scrollLeft;
                startValue = tabMeta.left - tabsMeta.left + correction;
            }
        }
        var newIndicatorStyle = (_newIndicatorStyle = {}, _definePropertyDefault.default(_newIndicatorStyle, start, startValue), _definePropertyDefault.default(_newIndicatorStyle, size, tabMeta ? tabMeta[size] : 0), _newIndicatorStyle);
        if (isNaN(indicatorStyle[start]) || isNaN(indicatorStyle[size])) setIndicatorStyle(newIndicatorStyle);
        else {
            var dStart = Math.abs(indicatorStyle[start] - newIndicatorStyle[start]);
            var dSize = Math.abs(indicatorStyle[size] - newIndicatorStyle[size]);
            if (dStart >= 1 || dSize >= 1) setIndicatorStyle(newIndicatorStyle);
        }
    });
    var scroll = function scroll(scrollValue) {
        _animateDefault.default(scrollStart, tabsRef.current, scrollValue);
    };
    var moveTabsScroll = function moveTabsScroll(delta) {
        var scrollValue = tabsRef.current[scrollStart];
        if (vertical) scrollValue += delta;
        else {
            scrollValue += delta * (isRtl ? -1 : 1); // Fix for Edge
            scrollValue *= isRtl && _scrollLeft.detectScrollType() === 'reverse' ? -1 : 1;
        }
        scroll(scrollValue);
    };
    var handleStartScrollClick = function handleStartScrollClick() {
        moveTabsScroll(-tabsRef.current[clientSize]);
    };
    var handleEndScrollClick = function handleEndScrollClick() {
        moveTabsScroll(tabsRef.current[clientSize]);
    };
    var handleScrollbarSizeChange = _react.useCallback(function(scrollbarHeight) {
        setScrollerStyle({
            overflow: null,
            marginBottom: -scrollbarHeight
        });
    }, []);
    var getConditionalElements = function getConditionalElements() {
        var conditionalElements = {};
        conditionalElements.scrollbarSizeListener = scrollable ? /*#__PURE__*/ _react.createElement(_scrollbarSizeDefault.default, {
            className: classes.scrollable,
            onChange: handleScrollbarSizeChange
        }) : null;
        var scrollButtonsActive = displayScroll.start || displayScroll.end;
        var showScrollButtons = scrollable && (scrollButtons === 'auto' && scrollButtonsActive || scrollButtons === 'desktop' || scrollButtons === 'on');
        conditionalElements.scrollButtonStart = showScrollButtons ? /*#__PURE__*/ _react.createElement(ScrollButtonComponent, _extendsDefault.default({
            orientation: orientation,
            direction: isRtl ? 'right' : 'left',
            onClick: handleStartScrollClick,
            disabled: !displayScroll.start,
            className: _clsxDefault.default(classes.scrollButtons, scrollButtons !== 'on' && classes.scrollButtonsDesktop)
        }, TabScrollButtonProps)) : null;
        conditionalElements.scrollButtonEnd = showScrollButtons ? /*#__PURE__*/ _react.createElement(ScrollButtonComponent, _extendsDefault.default({
            orientation: orientation,
            direction: isRtl ? 'left' : 'right',
            onClick: handleEndScrollClick,
            disabled: !displayScroll.end,
            className: _clsxDefault.default(classes.scrollButtons, scrollButtons !== 'on' && classes.scrollButtonsDesktop)
        }, TabScrollButtonProps)) : null;
        return conditionalElements;
    };
    var scrollSelectedIntoView = _useEventCallbackDefault.default(function() {
        var _getTabsMeta2 = getTabsMeta(), tabsMeta = _getTabsMeta2.tabsMeta, tabMeta = _getTabsMeta2.tabMeta;
        if (!tabMeta || !tabsMeta) return;
        if (tabMeta[start] < tabsMeta[start]) {
            // left side of button is out of view
            var nextScrollStart = tabsMeta[scrollStart] + (tabMeta[start] - tabsMeta[start]);
            scroll(nextScrollStart);
        } else if (tabMeta[end] > tabsMeta[end]) {
            // right side of button is out of view
            var _nextScrollStart = tabsMeta[scrollStart] + (tabMeta[end] - tabsMeta[end]);
            scroll(_nextScrollStart);
        }
    });
    var updateScrollButtonState = _useEventCallbackDefault.default(function() {
        if (scrollable && scrollButtons !== 'off') {
            var _tabsRef$current = tabsRef.current, scrollTop = _tabsRef$current.scrollTop, scrollHeight = _tabsRef$current.scrollHeight, clientHeight = _tabsRef$current.clientHeight, scrollWidth = _tabsRef$current.scrollWidth, clientWidth = _tabsRef$current.clientWidth;
            var showStartScroll;
            var showEndScroll;
            if (vertical) {
                showStartScroll = scrollTop > 1;
                showEndScroll = scrollTop < scrollHeight - clientHeight - 1;
            } else {
                var scrollLeft = _scrollLeft.getNormalizedScrollLeft(tabsRef.current, theme.direction); // use 1 for the potential rounding error with browser zooms.
                showStartScroll = isRtl ? scrollLeft < scrollWidth - clientWidth - 1 : scrollLeft > 1;
                showEndScroll = !isRtl ? scrollLeft < scrollWidth - clientWidth - 1 : scrollLeft > 1;
            }
            if (showStartScroll !== displayScroll.start || showEndScroll !== displayScroll.end) setDisplayScroll({
                start: showStartScroll,
                end: showEndScroll
            });
        }
    });
    _react.useEffect(function() {
        var handleResize = _debounceDefault.default(function() {
            updateIndicatorState();
            updateScrollButtonState();
        });
        var win = _ownerWindowDefault.default(tabsRef.current);
        win.addEventListener('resize', handleResize);
        return function() {
            handleResize.clear();
            win.removeEventListener('resize', handleResize);
        };
    }, [
        updateIndicatorState,
        updateScrollButtonState
    ]);
    var handleTabsScroll = _react.useCallback(_debounceDefault.default(function() {
        updateScrollButtonState();
    }));
    _react.useEffect(function() {
        return function() {
            handleTabsScroll.clear();
        };
    }, [
        handleTabsScroll
    ]);
    _react.useEffect(function() {
        setMounted(true);
    }, []);
    _react.useEffect(function() {
        updateIndicatorState();
        updateScrollButtonState();
    });
    _react.useEffect(function() {
        scrollSelectedIntoView();
    }, [
        scrollSelectedIntoView,
        indicatorStyle
    ]);
    _react.useImperativeHandle(action, function() {
        return {
            updateIndicator: updateIndicatorState,
            updateScrollButtons: updateScrollButtonState
        };
    }, [
        updateIndicatorState,
        updateScrollButtonState
    ]);
    var indicator = /*#__PURE__*/ _react.createElement(_tabIndicatorDefault.default, _extendsDefault.default({
        className: classes.indicator,
        orientation: orientation,
        color: indicatorColor
    }, TabIndicatorProps, {
        style: _extendsDefault.default({}, indicatorStyle, TabIndicatorProps.style)
    }));
    var childIndex = 0;
    var children = _react.Children.map(childrenProp, function(child) {
        if (!/*#__PURE__*/ _react.isValidElement(child)) return null;
        if (_reactIs.isFragment(child)) console.error([
            "Material-UI: The Tabs component doesn't accept a Fragment as a child.",
            'Consider providing an array instead.'
        ].join('\n'));
        var childValue = child.props.value === undefined ? childIndex : child.props.value;
        valueToIndex.set(childValue, childIndex);
        var selected = childValue === value;
        childIndex += 1;
        return /*#__PURE__*/ _react.cloneElement(child, {
            fullWidth: variant === 'fullWidth',
            indicator: selected && !mounted && indicator,
            selected: selected,
            selectionFollowsFocus: selectionFollowsFocus,
            onChange: onChange,
            textColor: textColor,
            value: childValue
        });
    });
    var handleKeyDown = function handleKeyDown(event) {
        var target = event.target; // Keyboard navigation assumes that [role="tab"] are siblings
        // though we might warn in the future about nested, interactive elements
        // as a a11y violation
        var role = target.getAttribute('role');
        if (role !== 'tab') return;
        var newFocusTarget = null;
        var previousItemKey = orientation !== "vertical" ? 'ArrowLeft' : 'ArrowUp';
        var nextItemKey = orientation !== "vertical" ? 'ArrowRight' : 'ArrowDown';
        if (orientation !== "vertical" && theme.direction === 'rtl') {
            // swap previousItemKey with nextItemKey
            previousItemKey = 'ArrowRight';
            nextItemKey = 'ArrowLeft';
        }
        switch(event.key){
            case previousItemKey:
                newFocusTarget = target.previousElementSibling || tabListRef.current.lastChild;
                break;
            case nextItemKey:
                newFocusTarget = target.nextElementSibling || tabListRef.current.firstChild;
                break;
            case 'Home':
                newFocusTarget = tabListRef.current.firstChild;
                break;
            case 'End':
                newFocusTarget = tabListRef.current.lastChild;
                break;
            default:
                break;
        }
        if (newFocusTarget !== null) {
            newFocusTarget.focus();
            event.preventDefault();
        }
    };
    var conditionalElements1 = getConditionalElements();
    return /*#__PURE__*/ _react.createElement(Component, _extendsDefault.default({
        className: _clsxDefault.default(classes.root, className, vertical && classes.vertical),
        ref: ref
    }, other), conditionalElements1.scrollButtonStart, conditionalElements1.scrollbarSizeListener, /*#__PURE__*/ _react.createElement("div", {
        className: _clsxDefault.default(classes.scroller, scrollable ? classes.scrollable : classes.fixed),
        style: scrollerStyle,
        ref: tabsRef,
        onScroll: handleTabsScroll
    }, /*#__PURE__*/ _react.createElement("div", {
        "aria-label": ariaLabel,
        "aria-labelledby": ariaLabelledBy,
        className: _clsxDefault.default(classes.flexContainer, vertical && classes.flexContainerVertical, centered && !scrollable && classes.centered),
        onKeyDown: handleKeyDown,
        ref: tabListRef,
        role: "tablist"
    }, children), mounted && indicator), conditionalElements1.scrollButtonEnd);
});
Tabs.propTypes = {
    // ----------------------------- Warning --------------------------------
    // | These PropTypes are generated from the TypeScript type definitions |
    // |     To update them edit the d.ts file and run "yarn proptypes"     |
    // ----------------------------------------------------------------------
    /**
   * Callback fired when the component mounts.
   * This is useful when you want to trigger an action programmatically.
   * It supports two actions: `updateIndicator()` and `updateScrollButtons()`
   *
   * @param {object} actions This object contains all possible actions
   * that can be triggered programmatically.
   */ action: _utils.refType,
    /**
   * The label for the Tabs as a string.
   */ 'aria-label': _propTypesDefault.default.string,
    /**
   * An id or list of ids separated by a space that label the Tabs.
   */ 'aria-labelledby': _propTypesDefault.default.string,
    /**
   * If `true`, the tabs will be centered.
   * This property is intended for large views.
   */ centered: _propTypesDefault.default.bool,
    /**
   * The content of the component.
   */ children: _propTypesDefault.default.node,
    /**
   * Override or extend the styles applied to the component.
   * See [CSS API](#css) below for more details.
   */ classes: _propTypesDefault.default.object,
    /**
   * @ignore
   */ className: _propTypesDefault.default.string,
    /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */ component: _propTypesDefault.default/* @typescript-to-proptypes-ignore */ .elementType,
    /**
   * Determines the color of the indicator.
   */ indicatorColor: _propTypesDefault.default.oneOf([
        'primary',
        'secondary'
    ]),
    /**
   * Callback fired when the value changes.
   *
   * @param {object} event The event source of the callback
   * @param {any} value We default to the index of the child (number)
   */ onChange: _propTypesDefault.default.func,
    /**
   * The tabs orientation (layout flow direction).
   */ orientation: _propTypesDefault.default.oneOf([
        'horizontal',
        'vertical'
    ]),
    /**
   * The component used to render the scroll buttons.
   */ ScrollButtonComponent: _propTypesDefault.default.elementType,
    /**
   * Determine behavior of scroll buttons when tabs are set to scroll:
   *
   * - `auto` will only present them when not all the items are visible.
   * - `desktop` will only present them on medium and larger viewports.
   * - `on` will always present them.
   * - `off` will never present them.
   */ scrollButtons: _propTypesDefault.default.oneOf([
        'auto',
        'desktop',
        'off',
        'on'
    ]),
    /**
   * If `true` the selected tab changes on focus. Otherwise it only
   * changes on activation.
   */ selectionFollowsFocus: _propTypesDefault.default.bool,
    /**
   * Props applied to the tab indicator element.
   */ TabIndicatorProps: _propTypesDefault.default.object,
    /**
   * Props applied to the [`TabScrollButton`](/api/tab-scroll-button/) element.
   */ TabScrollButtonProps: _propTypesDefault.default.object,
    /**
   * Determines the color of the `Tab`.
   */ textColor: _propTypesDefault.default.oneOf([
        'inherit',
        'primary',
        'secondary'
    ]),
    /**
   * The value of the currently selected `Tab`.
   * If you don't want any selected `Tab`, you can set this property to `false`.
   */ value: _propTypesDefault.default.any,
    /**
   * Determines additional display behavior of the tabs:
   *
   *  - `scrollable` will invoke scrolling properties and allow for horizontally
   *  scrolling (or swiping) of the tab bar.
   *  -`fullWidth` will make the tabs grow to use all the available space,
   *  which should be used for small views, like on mobile.
   *  - `standard` will render the default state.
   */ variant: _propTypesDefault.default.oneOf([
        'fullWidth',
        'scrollable',
        'standard'
    ])
};
exports.default = _withStylesDefault.default(styles, {
    name: 'MuiTabs'
})(Tabs);

},{"@babel/runtime/helpers/esm/extends":"fTBFS","@babel/runtime/helpers/esm/objectWithoutProperties":"25tJ4","@babel/runtime/helpers/esm/defineProperty":"hbmCA","react":"21dqq","react-is":"63mDj","prop-types":"7wKI2","clsx":"83C22","@material-ui/utils":"54RkF","../utils/debounce":"fsAbo","../utils/ownerWindow":"fmWv6","../utils/scrollLeft":"3qOd9","../internal/animate":"dM6Lw","./ScrollbarSize":"krttj","../styles/withStyles":"7U0iM","./TabIndicator":"aoLSO","../TabScrollButton":"kEAia","../utils/useEventCallback":"hPpih","../styles/useTheme":"kWUCn","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"3qOd9":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * Based on the jquery plugin https://github.com/othree/jquery.rtl-scroll-type
 *
 * Types of scrollLeft, assuming scrollWidth=100 and direction is rtl.
 *
 * Type             | <- Most Left | Most Right -> | Initial
 * ---------------- | ------------ | ------------- | -------
 * default          | 0            | 100           | 100
 * negative (spec*) | -100         | 0             | 0
 * reverse          | 100          | 0             | 0
 *
 * Edge 85: default
 * Safari 14: negative
 * Chrome 85: negative
 * Firefox 81: negative
 * IE 11: reverse
 *
 * spec* https://drafts.csswg.org/cssom-view/#dom-window-scroll
 */ parcelHelpers.export(exports, "detectScrollType", ()=>detectScrollType
) // Based on https://stackoverflow.com/a/24394376
;
parcelHelpers.export(exports, "getNormalizedScrollLeft", ()=>getNormalizedScrollLeft
);
// Source from https://github.com/alitaheri/normalize-scroll-left
var cachedType;
function detectScrollType() {
    if (cachedType) return cachedType;
    var dummy = document.createElement('div');
    var container = document.createElement('div');
    container.style.width = '10px';
    container.style.height = '1px';
    dummy.appendChild(container);
    dummy.dir = 'rtl';
    dummy.style.fontSize = '14px';
    dummy.style.width = '4px';
    dummy.style.height = '1px';
    dummy.style.position = 'absolute';
    dummy.style.top = '-1000px';
    dummy.style.overflow = 'scroll';
    document.body.appendChild(dummy);
    cachedType = 'reverse';
    if (dummy.scrollLeft > 0) cachedType = 'default';
    else {
        dummy.scrollLeft = 1;
        if (dummy.scrollLeft === 0) cachedType = 'negative';
    }
    document.body.removeChild(dummy);
    return cachedType;
}
function getNormalizedScrollLeft(element, direction) {
    var scrollLeft = element.scrollLeft; // Perform the calculations only when direction is rtl to avoid messing up the ltr bahavior
    if (direction !== 'rtl') return scrollLeft;
    var type = detectScrollType();
    switch(type){
        case 'negative':
            return element.scrollWidth - element.clientWidth + scrollLeft;
        case 'reverse':
            return element.scrollWidth - element.clientWidth - scrollLeft;
        default:
            return scrollLeft;
    }
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"dM6Lw":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
function easeInOutSin(time) {
    return (1 + Math.sin(Math.PI * time - Math.PI / 2)) / 2;
}
function animate(property, element, to) {
    var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};
    var cb = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : function() {};
    var _options$ease = options.ease, ease = _options$ease === void 0 ? easeInOutSin : _options$ease, _options$duration = options.duration, duration = _options$duration === void 0 ? 300 : _options$duration;
    var start = null;
    var from = element[property];
    var cancelled = false;
    var cancel = function cancel() {
        cancelled = true;
    };
    var step1 = function step(timestamp) {
        if (cancelled) {
            cb(new Error('Animation cancelled'));
            return;
        }
        if (start === null) start = timestamp;
        var time = Math.min(1, (timestamp - start) / duration);
        element[property] = ease(time) * (to - from) + from;
        if (time >= 1) {
            requestAnimationFrame(function() {
                cb(null);
            });
            return;
        }
        requestAnimationFrame(step);
    };
    if (from === to) {
        cb(new Error('Element already at target position'));
        return cancel;
    }
    requestAnimationFrame(step1);
    return cancel;
}
exports.default = animate;

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"krttj":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _extends = require("@babel/runtime/helpers/esm/extends");
var _extendsDefault = parcelHelpers.interopDefault(_extends);
var _objectWithoutProperties = require("@babel/runtime/helpers/esm/objectWithoutProperties");
var _objectWithoutPropertiesDefault = parcelHelpers.interopDefault(_objectWithoutProperties);
var _react = require("react");
var _propTypes = require("prop-types");
var _propTypesDefault = parcelHelpers.interopDefault(_propTypes);
var _debounce = require("../utils/debounce");
var _debounceDefault = parcelHelpers.interopDefault(_debounce);
var styles = {
    width: 99,
    height: 99,
    position: 'absolute',
    top: -9999,
    overflow: 'scroll'
};
function ScrollbarSize(props) {
    var onChange = props.onChange, other = _objectWithoutPropertiesDefault.default(props, [
        "onChange"
    ]);
    var scrollbarHeight = _react.useRef();
    var nodeRef = _react.useRef(null);
    var setMeasurements = function setMeasurements() {
        scrollbarHeight.current = nodeRef.current.offsetHeight - nodeRef.current.clientHeight;
    };
    _react.useEffect(function() {
        var handleResize = _debounceDefault.default(function() {
            var prevHeight = scrollbarHeight.current;
            setMeasurements();
            if (prevHeight !== scrollbarHeight.current) onChange(scrollbarHeight.current);
        });
        window.addEventListener('resize', handleResize);
        return function() {
            handleResize.clear();
            window.removeEventListener('resize', handleResize);
        };
    }, [
        onChange
    ]);
    _react.useEffect(function() {
        setMeasurements();
        onChange(scrollbarHeight.current);
    }, [
        onChange
    ]);
    return /*#__PURE__*/ _react.createElement("div", _extendsDefault.default({
        style: styles,
        ref: nodeRef
    }, other));
}
exports.default = ScrollbarSize;
ScrollbarSize.propTypes = {
    onChange: _propTypesDefault.default.func.isRequired
};

},{"@babel/runtime/helpers/esm/extends":"fTBFS","@babel/runtime/helpers/esm/objectWithoutProperties":"25tJ4","react":"21dqq","prop-types":"7wKI2","../utils/debounce":"fsAbo","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"aoLSO":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "styles", ()=>styles
);
var _extends = require("@babel/runtime/helpers/esm/extends");
var _extendsDefault = parcelHelpers.interopDefault(_extends);
var _objectWithoutProperties = require("@babel/runtime/helpers/esm/objectWithoutProperties");
var _objectWithoutPropertiesDefault = parcelHelpers.interopDefault(_objectWithoutProperties);
var _react = require("react");
var _propTypes = require("prop-types");
var _propTypesDefault = parcelHelpers.interopDefault(_propTypes);
var _clsx = require("clsx");
var _clsxDefault = parcelHelpers.interopDefault(_clsx);
var _withStyles = require("../styles/withStyles");
var _withStylesDefault = parcelHelpers.interopDefault(_withStyles);
var _capitalize = require("../utils/capitalize");
var _capitalizeDefault = parcelHelpers.interopDefault(_capitalize);
var styles = function styles(theme) {
    return {
        root: {
            position: 'absolute',
            height: 2,
            bottom: 0,
            width: '100%',
            transition: theme.transitions.create()
        },
        colorPrimary: {
            backgroundColor: theme.palette.primary.main
        },
        colorSecondary: {
            backgroundColor: theme.palette.secondary.main
        },
        vertical: {
            height: '100%',
            width: 2,
            right: 0
        }
    };
};
/**
 * @ignore - internal component.
 */ var TabIndicator = /*#__PURE__*/ _react.forwardRef(function TabIndicator(props, ref) {
    var classes = props.classes, className = props.className, color = props.color, orientation = props.orientation, other = _objectWithoutPropertiesDefault.default(props, [
        "classes",
        "className",
        "color",
        "orientation"
    ]);
    return /*#__PURE__*/ _react.createElement("span", _extendsDefault.default({
        className: _clsxDefault.default(classes.root, classes["color".concat(_capitalizeDefault.default(color))], className, orientation === 'vertical' && classes.vertical),
        ref: ref
    }, other));
});
TabIndicator.propTypes = {
    /**
   * Override or extend the styles applied to the component.
   * See [CSS API](#css) below for more details.
   */ classes: _propTypesDefault.default.object.isRequired,
    /**
   * @ignore
   */ className: _propTypesDefault.default.string,
    /**
   * @ignore
   * The color of the tab indicator.
   */ color: _propTypesDefault.default.oneOf([
        'primary',
        'secondary'
    ]).isRequired,
    /**
   * The tabs orientation (layout flow direction).
   */ orientation: _propTypesDefault.default.oneOf([
        'horizontal',
        'vertical'
    ]).isRequired
};
exports.default = _withStylesDefault.default(styles, {
    name: 'PrivateTabIndicator'
})(TabIndicator);

},{"@babel/runtime/helpers/esm/extends":"fTBFS","@babel/runtime/helpers/esm/objectWithoutProperties":"25tJ4","react":"21dqq","prop-types":"7wKI2","clsx":"83C22","../styles/withStyles":"7U0iM","../utils/capitalize":"5AJVX","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"kEAia":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>_tabScrollButtonDefault.default
);
var _tabScrollButton = require("./TabScrollButton");
var _tabScrollButtonDefault = parcelHelpers.interopDefault(_tabScrollButton);

},{"./TabScrollButton":"kSXtL","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"kSXtL":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "styles", ()=>styles
);
var _extends = require("@babel/runtime/helpers/esm/extends");
var _extendsDefault = parcelHelpers.interopDefault(_extends);
var _objectWithoutProperties = require("@babel/runtime/helpers/esm/objectWithoutProperties");
var _objectWithoutPropertiesDefault = parcelHelpers.interopDefault(_objectWithoutProperties);
/* eslint-disable jsx-a11y/aria-role */ var _react = require("react");
var _propTypes = require("prop-types");
var _propTypesDefault = parcelHelpers.interopDefault(_propTypes);
var _clsx = require("clsx");
var _clsxDefault = parcelHelpers.interopDefault(_clsx);
var _keyboardArrowLeft = require("../internal/svg-icons/KeyboardArrowLeft");
var _keyboardArrowLeftDefault = parcelHelpers.interopDefault(_keyboardArrowLeft);
var _keyboardArrowRight = require("../internal/svg-icons/KeyboardArrowRight");
var _keyboardArrowRightDefault = parcelHelpers.interopDefault(_keyboardArrowRight);
var _withStyles = require("../styles/withStyles");
var _withStylesDefault = parcelHelpers.interopDefault(_withStyles);
var _buttonBase = require("../ButtonBase");
var _buttonBaseDefault = parcelHelpers.interopDefault(_buttonBase);
var styles = {
    /* Styles applied to the root element. */ root: {
        width: 40,
        flexShrink: 0,
        opacity: 0.8,
        '&$disabled': {
            opacity: 0
        }
    },
    /* Styles applied to the root element if `orientation="vertical"`. */ vertical: {
        width: '100%',
        height: 40,
        '& svg': {
            transform: 'rotate(90deg)'
        }
    },
    /* Pseudo-class applied to the root element if `disabled={true}`. */ disabled: {}
};
var _ref = /*#__PURE__*/ _react.createElement(_keyboardArrowLeftDefault.default, {
    fontSize: "small"
});
var _ref2 = /*#__PURE__*/ _react.createElement(_keyboardArrowRightDefault.default, {
    fontSize: "small"
});
var TabScrollButton = /*#__PURE__*/ _react.forwardRef(function TabScrollButton(props, ref) {
    var classes = props.classes, classNameProp = props.className, direction = props.direction, orientation = props.orientation, disabled = props.disabled, other = _objectWithoutPropertiesDefault.default(props, [
        "classes",
        "className",
        "direction",
        "orientation",
        "disabled"
    ]);
    return /*#__PURE__*/ _react.createElement(_buttonBaseDefault.default, _extendsDefault.default({
        component: "div",
        className: _clsxDefault.default(classes.root, classNameProp, disabled && classes.disabled, orientation === 'vertical' && classes.vertical),
        ref: ref,
        role: null,
        tabIndex: null
    }, other), direction === 'left' ? _ref : _ref2);
});
TabScrollButton.propTypes = {
    // ----------------------------- Warning --------------------------------
    // | These PropTypes are generated from the TypeScript type definitions |
    // |     To update them edit the d.ts file and run "yarn proptypes"     |
    // ----------------------------------------------------------------------
    /**
   * The content of the component.
   */ children: _propTypesDefault.default.node,
    /**
   * Override or extend the styles applied to the component.
   * See [CSS API](#css) below for more details.
   */ classes: _propTypesDefault.default.object,
    /**
   * @ignore
   */ className: _propTypesDefault.default.string,
    /**
   * Which direction should the button indicate?
   */ direction: _propTypesDefault.default.oneOf([
        'left',
        'right'
    ]).isRequired,
    /**
   * If `true`, the element will be disabled.
   */ disabled: _propTypesDefault.default.bool,
    /**
   * The tabs orientation (layout flow direction).
   */ orientation: _propTypesDefault.default.oneOf([
        'horizontal',
        'vertical'
    ]).isRequired
};
exports.default = _withStylesDefault.default(styles, {
    name: 'MuiTabScrollButton'
})(TabScrollButton);

},{"@babel/runtime/helpers/esm/extends":"fTBFS","@babel/runtime/helpers/esm/objectWithoutProperties":"25tJ4","react":"21dqq","prop-types":"7wKI2","clsx":"83C22","../internal/svg-icons/KeyboardArrowLeft":"28lXH","../internal/svg-icons/KeyboardArrowRight":"6Wdgk","../styles/withStyles":"7U0iM","../ButtonBase":"2TQRV","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"ifLFZ":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>_textFieldDefault.default
);
var _textField = require("./TextField");
var _textFieldDefault = parcelHelpers.interopDefault(_textField);

},{"./TextField":"6GvFb","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"6GvFb":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "styles", ()=>styles
);
var _extends = require("@babel/runtime/helpers/esm/extends");
var _extendsDefault = parcelHelpers.interopDefault(_extends);
var _objectWithoutProperties = require("@babel/runtime/helpers/esm/objectWithoutProperties");
var _objectWithoutPropertiesDefault = parcelHelpers.interopDefault(_objectWithoutProperties);
var _react = require("react");
var _propTypes = require("prop-types");
var _propTypesDefault = parcelHelpers.interopDefault(_propTypes);
var _clsx = require("clsx");
var _clsxDefault = parcelHelpers.interopDefault(_clsx);
var _utils = require("@material-ui/utils");
var _input = require("../Input");
var _inputDefault = parcelHelpers.interopDefault(_input);
var _filledInput = require("../FilledInput");
var _filledInputDefault = parcelHelpers.interopDefault(_filledInput);
var _outlinedInput = require("../OutlinedInput");
var _outlinedInputDefault = parcelHelpers.interopDefault(_outlinedInput);
var _inputLabel = require("../InputLabel");
var _inputLabelDefault = parcelHelpers.interopDefault(_inputLabel);
var _formControl = require("../FormControl");
var _formControlDefault = parcelHelpers.interopDefault(_formControl);
var _formHelperText = require("../FormHelperText");
var _formHelperTextDefault = parcelHelpers.interopDefault(_formHelperText);
var _select = require("../Select");
var _selectDefault = parcelHelpers.interopDefault(_select);
var _withStyles = require("../styles/withStyles");
var _withStylesDefault = parcelHelpers.interopDefault(_withStyles);
var variantComponent = {
    standard: _inputDefault.default,
    filled: _filledInputDefault.default,
    outlined: _outlinedInputDefault.default
};
var styles = {
    /* Styles applied to the root element. */ root: {}
};
/**
 * The `TextField` is a convenience wrapper for the most common cases (80%).
 * It cannot be all things to all people, otherwise the API would grow out of control.
 *
 * ## Advanced Configuration
 *
 * It's important to understand that the text field is a simple abstraction
 * on top of the following components:
 *
 * - [FormControl](/api/form-control/)
 * - [InputLabel](/api/input-label/)
 * - [FilledInput](/api/filled-input/)
 * - [OutlinedInput](/api/outlined-input/)
 * - [Input](/api/input/)
 * - [FormHelperText](/api/form-helper-text/)
 *
 * If you wish to alter the props applied to the `input` element, you can do so as follows:
 *
 * ```jsx
 * const inputProps = {
 *   step: 300,
 * };
 *
 * return <TextField id="time" type="time" inputProps={inputProps} />;
 * ```
 *
 * For advanced cases, please look at the source of TextField by clicking on the
 * "Edit this page" button above. Consider either:
 *
 * - using the upper case props for passing values directly to the components
 * - using the underlying components directly as shown in the demos
 */ var TextField = /*#__PURE__*/ _react.forwardRef(function TextField(props, ref) {
    var autoComplete = props.autoComplete, _props$autoFocus = props.autoFocus, autoFocus = _props$autoFocus === void 0 ? false : _props$autoFocus, children = props.children, classes = props.classes, className = props.className, _props$color = props.color, color = _props$color === void 0 ? 'primary' : _props$color, defaultValue = props.defaultValue, _props$disabled = props.disabled, disabled = _props$disabled === void 0 ? false : _props$disabled, _props$error = props.error, error = _props$error === void 0 ? false : _props$error, FormHelperTextProps = props.FormHelperTextProps, _props$fullWidth = props.fullWidth, fullWidth = _props$fullWidth === void 0 ? false : _props$fullWidth, helperText = props.helperText, hiddenLabel = props.hiddenLabel, id = props.id, InputLabelProps = props.InputLabelProps, inputProps = props.inputProps, InputProps = props.InputProps, inputRef = props.inputRef, label = props.label, _props$multiline = props.multiline, multiline = _props$multiline === void 0 ? false : _props$multiline, name = props.name, onBlur = props.onBlur, onChange = props.onChange, onFocus = props.onFocus, placeholder = props.placeholder, _props$required = props.required, required = _props$required === void 0 ? false : _props$required, rows = props.rows, rowsMax = props.rowsMax, maxRows = props.maxRows, minRows = props.minRows, _props$select = props.select, select = _props$select === void 0 ? false : _props$select, SelectProps = props.SelectProps, type = props.type, value = props.value, _props$variant = props.variant, variant = _props$variant === void 0 ? 'standard' : _props$variant, other = _objectWithoutPropertiesDefault.default(props, [
        "autoComplete",
        "autoFocus",
        "children",
        "classes",
        "className",
        "color",
        "defaultValue",
        "disabled",
        "error",
        "FormHelperTextProps",
        "fullWidth",
        "helperText",
        "hiddenLabel",
        "id",
        "InputLabelProps",
        "inputProps",
        "InputProps",
        "inputRef",
        "label",
        "multiline",
        "name",
        "onBlur",
        "onChange",
        "onFocus",
        "placeholder",
        "required",
        "rows",
        "rowsMax",
        "maxRows",
        "minRows",
        "select",
        "SelectProps",
        "type",
        "value",
        "variant"
    ]);
    if (select && !children) console.error('Material-UI: `children` must be passed when using the `TextField` component with `select`.');
    var InputMore = {};
    if (variant === 'outlined') {
        if (InputLabelProps && typeof InputLabelProps.shrink !== 'undefined') InputMore.notched = InputLabelProps.shrink;
        if (label) {
            var _InputLabelProps$requ;
            var displayRequired = (_InputLabelProps$requ = InputLabelProps === null || InputLabelProps === void 0 ? void 0 : InputLabelProps.required) !== null && _InputLabelProps$requ !== void 0 ? _InputLabelProps$requ : required;
            InputMore.label = /*#__PURE__*/ _react.createElement(_react.Fragment, null, label, displayRequired && "\xA0*");
        }
    }
    if (select) {
        // unset defaults from textbox inputs
        if (!SelectProps || !SelectProps.native) InputMore.id = undefined;
        InputMore['aria-describedby'] = undefined;
    }
    var helperTextId = helperText && id ? "".concat(id, "-helper-text") : undefined;
    var inputLabelId = label && id ? "".concat(id, "-label") : undefined;
    var InputComponent = variantComponent[variant];
    var InputElement = /*#__PURE__*/ _react.createElement(InputComponent, _extendsDefault.default({
        "aria-describedby": helperTextId,
        autoComplete: autoComplete,
        autoFocus: autoFocus,
        defaultValue: defaultValue,
        fullWidth: fullWidth,
        multiline: multiline,
        name: name,
        rows: rows,
        rowsMax: rowsMax,
        maxRows: maxRows,
        minRows: minRows,
        type: type,
        value: value,
        id: id,
        inputRef: inputRef,
        onBlur: onBlur,
        onChange: onChange,
        onFocus: onFocus,
        placeholder: placeholder,
        inputProps: inputProps
    }, InputMore, InputProps));
    return /*#__PURE__*/ _react.createElement(_formControlDefault.default, _extendsDefault.default({
        className: _clsxDefault.default(classes.root, className),
        disabled: disabled,
        error: error,
        fullWidth: fullWidth,
        hiddenLabel: hiddenLabel,
        ref: ref,
        required: required,
        color: color,
        variant: variant
    }, other), label && /*#__PURE__*/ _react.createElement(_inputLabelDefault.default, _extendsDefault.default({
        htmlFor: id,
        id: inputLabelId
    }, InputLabelProps), label), select ? /*#__PURE__*/ _react.createElement(_selectDefault.default, _extendsDefault.default({
        "aria-describedby": helperTextId,
        id: id,
        labelId: inputLabelId,
        value: value,
        input: InputElement
    }, SelectProps), children) : InputElement, helperText && /*#__PURE__*/ _react.createElement(_formHelperTextDefault.default, _extendsDefault.default({
        id: helperTextId
    }, FormHelperTextProps), helperText));
});
TextField.propTypes = {
    // ----------------------------- Warning --------------------------------
    // | These PropTypes are generated from the TypeScript type definitions |
    // |     To update them edit the d.ts file and run "yarn proptypes"     |
    // ----------------------------------------------------------------------
    /**
   * This prop helps users to fill forms faster, especially on mobile devices.
   * The name can be confusing, as it's more like an autofill.
   * You can learn more about it [following the specification](https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#autofill).
   */ autoComplete: _propTypesDefault.default.string,
    /**
   * If `true`, the `input` element will be focused during the first mount.
   */ autoFocus: _propTypesDefault.default.bool,
    /**
   * @ignore
   */ children: _propTypesDefault.default.node,
    /**
   * Override or extend the styles applied to the component.
   * See [CSS API](#css) below for more details.
   */ classes: _propTypesDefault.default.object,
    /**
   * @ignore
   */ className: _propTypesDefault.default.string,
    /**
   * The color of the component. It supports those theme colors that make sense for this component.
   */ color: _propTypesDefault.default.oneOf([
        'primary',
        'secondary'
    ]),
    /**
   * The default value of the `input` element.
   */ defaultValue: _propTypesDefault.default.any,
    /**
   * If `true`, the `input` element will be disabled.
   */ disabled: _propTypesDefault.default.bool,
    /**
   * If `true`, the label will be displayed in an error state.
   */ error: _propTypesDefault.default.bool,
    /**
   * Props applied to the [`FormHelperText`](/api/form-helper-text/) element.
   */ FormHelperTextProps: _propTypesDefault.default.object,
    /**
   * If `true`, the input will take up the full width of its container.
   */ fullWidth: _propTypesDefault.default.bool,
    /**
   * The helper text content.
   */ helperText: _propTypesDefault.default.node,
    /**
   * @ignore
   */ hiddenLabel: _propTypesDefault.default.bool,
    /**
   * The id of the `input` element.
   * Use this prop to make `label` and `helperText` accessible for screen readers.
   */ id: _propTypesDefault.default.string,
    /**
   * Props applied to the [`InputLabel`](/api/input-label/) element.
   */ InputLabelProps: _propTypesDefault.default.object,
    /**
   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.
   */ inputProps: _propTypesDefault.default.object,
    /**
   * Props applied to the Input element.
   * It will be a [`FilledInput`](/api/filled-input/),
   * [`OutlinedInput`](/api/outlined-input/) or [`Input`](/api/input/)
   * component depending on the `variant` prop value.
   */ InputProps: _propTypesDefault.default.object,
    /**
   * Pass a ref to the `input` element.
   */ inputRef: _utils.refType,
    /**
   * The label content.
   */ label: _propTypesDefault.default.node,
    /**
   * If `dense` or `normal`, will adjust vertical spacing of this and contained components.
   */ margin: _propTypesDefault.default.oneOf([
        'dense',
        'none',
        'normal'
    ]),
    /**
   * Maximum number of rows to display when multiline option is set to true.
   */ maxRows: _propTypesDefault.default.oneOfType([
        _propTypesDefault.default.number,
        _propTypesDefault.default.string
    ]),
    /**
   * Minimum number of rows to display.
   */ minRows: _propTypesDefault.default.oneOfType([
        _propTypesDefault.default.number,
        _propTypesDefault.default.string
    ]),
    /**
   * If `true`, a textarea element will be rendered instead of an input.
   */ multiline: _propTypesDefault.default.bool,
    /**
   * Name attribute of the `input` element.
   */ name: _propTypesDefault.default.string,
    /**
   * @ignore
   */ onBlur: _propTypesDefault.default.func,
    /**
   * Callback fired when the value is changed.
   *
   * @param {object} event The event source of the callback.
   * You can pull out the new value by accessing `event.target.value` (string).
   */ onChange: _propTypesDefault.default.func,
    /**
   * @ignore
   */ onFocus: _propTypesDefault.default.func,
    /**
   * The short hint displayed in the input before the user enters a value.
   */ placeholder: _propTypesDefault.default.string,
    /**
   * If `true`, the label is displayed as required and the `input` element` will be required.
   */ required: _propTypesDefault.default.bool,
    /**
   * Number of rows to display when multiline option is set to true.
   * @deprecated Use `minRows` instead.
   */ rows: _propTypesDefault.default.oneOfType([
        _propTypesDefault.default.number,
        _propTypesDefault.default.string
    ]),
    /**
   * Maximum number of rows to display.
   * @deprecated Use `maxRows` instead.
   */ rowsMax: _propTypesDefault.default.oneOfType([
        _propTypesDefault.default.number,
        _propTypesDefault.default.string
    ]),
    /**
   * Render a [`Select`](/api/select/) element while passing the Input element to `Select` as `input` parameter.
   * If this option is set you must pass the options of the select as children.
   */ select: _propTypesDefault.default.bool,
    /**
   * Props applied to the [`Select`](/api/select/) element.
   */ SelectProps: _propTypesDefault.default.object,
    /**
   * The size of the text field.
   */ size: _propTypesDefault.default.oneOf([
        'medium',
        'small'
    ]),
    /**
   * Type of the `input` element. It should be [a valid HTML5 input type](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Form_%3Cinput%3E_types).
   */ type: _propTypesDefault.default.string,
    /**
   * The value of the `input` element, required for a controlled component.
   */ value: _propTypesDefault.default.any,
    /**
   * The variant to use.
   */ variant: _propTypesDefault.default.oneOf([
        'filled',
        'outlined',
        'standard'
    ])
};
exports.default = _withStylesDefault.default(styles, {
    name: 'MuiTextField'
})(TextField);

},{"@babel/runtime/helpers/esm/extends":"fTBFS","@babel/runtime/helpers/esm/objectWithoutProperties":"25tJ4","react":"21dqq","prop-types":"7wKI2","clsx":"83C22","@material-ui/utils":"54RkF","../Input":"41TRI","../FilledInput":"clmGe","../OutlinedInput":"kLI7K","../InputLabel":"Yuko7","../FormControl":"6Jd3C","../FormHelperText":"2qPWq","../Select":"fDj29","../styles/withStyles":"7U0iM","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"5ToTR":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>_tooltipDefault.default
);
var _tooltip = require("./Tooltip");
var _tooltipDefault = parcelHelpers.interopDefault(_tooltip);

},{"./Tooltip":"7ddOG","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"7ddOG":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "styles", ()=>styles
);
parcelHelpers.export(exports, "testReset", ()=>testReset
);
var _extends = require("@babel/runtime/helpers/esm/extends");
var _extendsDefault = parcelHelpers.interopDefault(_extends);
var _slicedToArray = require("@babel/runtime/helpers/esm/slicedToArray");
var _slicedToArrayDefault = parcelHelpers.interopDefault(_slicedToArray);
var _objectWithoutProperties = require("@babel/runtime/helpers/esm/objectWithoutProperties");
var _objectWithoutPropertiesDefault = parcelHelpers.interopDefault(_objectWithoutProperties);
var _defineProperty = require("@babel/runtime/helpers/esm/defineProperty");
var _definePropertyDefault = parcelHelpers.interopDefault(_defineProperty);
var _react = require("react");
var _reactDom = require("react-dom");
var _propTypes = require("prop-types");
var _propTypesDefault = parcelHelpers.interopDefault(_propTypes);
var _clsx = require("clsx");
var _clsxDefault = parcelHelpers.interopDefault(_clsx);
var _utils = require("@material-ui/utils");
var _colorManipulator = require("../styles/colorManipulator");
var _withStyles = require("../styles/withStyles");
var _withStylesDefault = parcelHelpers.interopDefault(_withStyles);
var _capitalize = require("../utils/capitalize");
var _capitalizeDefault = parcelHelpers.interopDefault(_capitalize);
var _grow = require("../Grow");
var _growDefault = parcelHelpers.interopDefault(_grow);
var _popper = require("../Popper");
var _popperDefault = parcelHelpers.interopDefault(_popper);
var _useForkRef = require("../utils/useForkRef");
var _useForkRefDefault = parcelHelpers.interopDefault(_useForkRef);
var _unstableUseId = require("../utils/unstable_useId");
var _unstableUseIdDefault = parcelHelpers.interopDefault(_unstableUseId);
var _setRef = require("../utils/setRef");
var _setRefDefault = parcelHelpers.interopDefault(_setRef);
var _useIsFocusVisible = require("../utils/useIsFocusVisible");
var _useIsFocusVisibleDefault = parcelHelpers.interopDefault(_useIsFocusVisible);
var _useControlled = require("../utils/useControlled");
var _useControlledDefault = parcelHelpers.interopDefault(_useControlled);
var _useTheme = require("../styles/useTheme");
var _useThemeDefault = parcelHelpers.interopDefault(_useTheme);
function round(value) {
    return Math.round(value * 1e5) / 1e5;
}
function arrowGenerator() {
    return {
        '&[x-placement*="bottom"] $arrow': {
            top: 0,
            left: 0,
            marginTop: '-0.71em',
            marginLeft: 4,
            marginRight: 4,
            '&::before': {
                transformOrigin: '0 100%'
            }
        },
        '&[x-placement*="top"] $arrow': {
            bottom: 0,
            left: 0,
            marginBottom: '-0.71em',
            marginLeft: 4,
            marginRight: 4,
            '&::before': {
                transformOrigin: '100% 0'
            }
        },
        '&[x-placement*="right"] $arrow': {
            left: 0,
            marginLeft: '-0.71em',
            height: '1em',
            width: '0.71em',
            marginTop: 4,
            marginBottom: 4,
            '&::before': {
                transformOrigin: '100% 100%'
            }
        },
        '&[x-placement*="left"] $arrow': {
            right: 0,
            marginRight: '-0.71em',
            height: '1em',
            width: '0.71em',
            marginTop: 4,
            marginBottom: 4,
            '&::before': {
                transformOrigin: '0 0'
            }
        }
    };
}
var styles = function styles(theme) {
    return {
        /* Styles applied to the Popper component. */ popper: {
            zIndex: theme.zIndex.tooltip,
            pointerEvents: 'none' // disable jss-rtl plugin
        },
        /* Styles applied to the Popper component if `interactive={true}`. */ popperInteractive: {
            pointerEvents: 'auto'
        },
        /* Styles applied to the Popper component if `arrow={true}`. */ popperArrow: arrowGenerator(),
        /* Styles applied to the tooltip (label wrapper) element. */ tooltip: {
            backgroundColor: _colorManipulator.alpha(theme.palette.grey[700], 0.9),
            borderRadius: theme.shape.borderRadius,
            color: theme.palette.common.white,
            fontFamily: theme.typography.fontFamily,
            padding: '4px 8px',
            fontSize: theme.typography.pxToRem(10),
            lineHeight: "".concat(round(1.4), "em"),
            maxWidth: 300,
            wordWrap: 'break-word',
            fontWeight: theme.typography.fontWeightMedium
        },
        /* Styles applied to the tooltip (label wrapper) element if `arrow={true}`. */ tooltipArrow: {
            position: 'relative',
            margin: '0'
        },
        /* Styles applied to the arrow element. */ arrow: {
            overflow: 'hidden',
            position: 'absolute',
            width: '1em',
            height: '0.71em',
            boxSizing: 'border-box',
            color: _colorManipulator.alpha(theme.palette.grey[700], 0.9),
            '&::before': {
                content: '""',
                margin: 'auto',
                display: 'block',
                width: '100%',
                height: '100%',
                backgroundColor: 'currentColor',
                transform: 'rotate(45deg)'
            }
        },
        /* Styles applied to the tooltip (label wrapper) element if the tooltip is opened by touch. */ touch: {
            padding: '8px 16px',
            fontSize: theme.typography.pxToRem(14),
            lineHeight: "".concat(round(16 / 14), "em"),
            fontWeight: theme.typography.fontWeightRegular
        },
        /* Styles applied to the tooltip (label wrapper) element if `placement` contains "left". */ tooltipPlacementLeft: _definePropertyDefault.default({
            transformOrigin: 'right center',
            margin: '0 24px '
        }, theme.breakpoints.up('sm'), {
            margin: '0 14px'
        }),
        /* Styles applied to the tooltip (label wrapper) element if `placement` contains "right". */ tooltipPlacementRight: _definePropertyDefault.default({
            transformOrigin: 'left center',
            margin: '0 24px'
        }, theme.breakpoints.up('sm'), {
            margin: '0 14px'
        }),
        /* Styles applied to the tooltip (label wrapper) element if `placement` contains "top". */ tooltipPlacementTop: _definePropertyDefault.default({
            transformOrigin: 'center bottom',
            margin: '24px 0'
        }, theme.breakpoints.up('sm'), {
            margin: '14px 0'
        }),
        /* Styles applied to the tooltip (label wrapper) element if `placement` contains "bottom". */ tooltipPlacementBottom: _definePropertyDefault.default({
            transformOrigin: 'center top',
            margin: '24px 0'
        }, theme.breakpoints.up('sm'), {
            margin: '14px 0'
        })
    };
};
var hystersisOpen = false;
var hystersisTimer = null;
function testReset() {
    hystersisOpen = false;
    clearTimeout(hystersisTimer);
}
var Tooltip = /*#__PURE__*/ _react.forwardRef(function Tooltip(props, ref) {
    var _props$arrow = props.arrow, arrow = _props$arrow === void 0 ? false : _props$arrow, children = props.children, classes = props.classes, _props$disableFocusLi = props.disableFocusListener, disableFocusListener = _props$disableFocusLi === void 0 ? false : _props$disableFocusLi, _props$disableHoverLi = props.disableHoverListener, disableHoverListener = _props$disableHoverLi === void 0 ? false : _props$disableHoverLi, _props$disableTouchLi = props.disableTouchListener, disableTouchListener = _props$disableTouchLi === void 0 ? false : _props$disableTouchLi, _props$enterDelay = props.enterDelay, enterDelay = _props$enterDelay === void 0 ? 100 : _props$enterDelay, _props$enterNextDelay = props.enterNextDelay, enterNextDelay = _props$enterNextDelay === void 0 ? 0 : _props$enterNextDelay, _props$enterTouchDela = props.enterTouchDelay, enterTouchDelay = _props$enterTouchDela === void 0 ? 700 : _props$enterTouchDela, idProp = props.id, _props$interactive = props.interactive, interactive = _props$interactive === void 0 ? false : _props$interactive, _props$leaveDelay = props.leaveDelay, leaveDelay = _props$leaveDelay === void 0 ? 0 : _props$leaveDelay, _props$leaveTouchDela = props.leaveTouchDelay, leaveTouchDelay = _props$leaveTouchDela === void 0 ? 1500 : _props$leaveTouchDela, onClose = props.onClose, onOpen = props.onOpen, openProp = props.open, _props$placement = props.placement, placement = _props$placement === void 0 ? 'bottom' : _props$placement, _props$PopperComponen = props.PopperComponent, PopperComponent = _props$PopperComponen === void 0 ? _popperDefault.default : _props$PopperComponen, PopperProps = props.PopperProps, title = props.title, _props$TransitionComp = props.TransitionComponent, TransitionComponent = _props$TransitionComp === void 0 ? _growDefault.default : _props$TransitionComp, TransitionProps = props.TransitionProps, other = _objectWithoutPropertiesDefault.default(props, [
        "arrow",
        "children",
        "classes",
        "disableFocusListener",
        "disableHoverListener",
        "disableTouchListener",
        "enterDelay",
        "enterNextDelay",
        "enterTouchDelay",
        "id",
        "interactive",
        "leaveDelay",
        "leaveTouchDelay",
        "onClose",
        "onOpen",
        "open",
        "placement",
        "PopperComponent",
        "PopperProps",
        "title",
        "TransitionComponent",
        "TransitionProps"
    ]);
    var theme = _useThemeDefault.default();
    var _React$useState = _react.useState(), childNode = _React$useState[0], setChildNode = _React$useState[1];
    var _React$useState2 = _react.useState(null), arrowRef = _React$useState2[0], setArrowRef = _React$useState2[1];
    var ignoreNonTouchEvents = _react.useRef(false);
    var closeTimer = _react.useRef();
    var enterTimer = _react.useRef();
    var leaveTimer = _react.useRef();
    var touchTimer = _react.useRef();
    var _useControlled1 = _useControlledDefault.default({
        controlled: openProp,
        default: false,
        name: 'Tooltip',
        state: 'open'
    }), _useControlled2 = _slicedToArrayDefault.default(_useControlled1, 2), openState = _useControlled2[0], setOpenState = _useControlled2[1];
    var open = openState;
    // eslint-disable-next-line react-hooks/rules-of-hooks
    var _React$useRef = _react.useRef(openProp !== undefined), isControlled = _React$useRef.current; // eslint-disable-next-line react-hooks/rules-of-hooks
    _react.useEffect(function() {
        if (childNode && childNode.disabled && !isControlled && title !== '' && childNode.tagName.toLowerCase() === 'button') console.error([
            'Material-UI: You are providing a disabled `button` child to the Tooltip component.',
            'A disabled element does not fire events.',
            "Tooltip needs to listen to the child element's events to display the title.",
            '',
            'Add a simple wrapper element, such as a `span`.'
        ].join('\n'));
    }, [
        title,
        childNode,
        isControlled
    ]);
    var id = _unstableUseIdDefault.default(idProp);
    _react.useEffect(function() {
        return function() {
            clearTimeout(closeTimer.current);
            clearTimeout(enterTimer.current);
            clearTimeout(leaveTimer.current);
            clearTimeout(touchTimer.current);
        };
    }, []);
    var handleOpen = function handleOpen(event) {
        clearTimeout(hystersisTimer);
        hystersisOpen = true; // The mouseover event will trigger for every nested element in the tooltip.
        // We can skip rerendering when the tooltip is already open.
        // We are using the mouseover event instead of the mouseenter event to fix a hide/show issue.
        setOpenState(true);
        if (onOpen) onOpen(event);
    };
    var handleEnter = function handleEnter() {
        var forward = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;
        return function(event) {
            var childrenProps = children.props;
            if (event.type === 'mouseover' && childrenProps.onMouseOver && forward) childrenProps.onMouseOver(event);
            if (ignoreNonTouchEvents.current && event.type !== 'touchstart') return;
             // Remove the title ahead of time.
            // We don't want to wait for the next render commit.
            // We would risk displaying two tooltips at the same time (native + this one).
            if (childNode) childNode.removeAttribute('title');
            clearTimeout(enterTimer.current);
            clearTimeout(leaveTimer.current);
            if (enterDelay || hystersisOpen && enterNextDelay) {
                event.persist();
                enterTimer.current = setTimeout(function() {
                    handleOpen(event);
                }, hystersisOpen ? enterNextDelay : enterDelay);
            } else handleOpen(event);
        };
    };
    var _useIsFocusVisible1 = _useIsFocusVisibleDefault.default(), isFocusVisible = _useIsFocusVisible1.isFocusVisible, onBlurVisible = _useIsFocusVisible1.onBlurVisible, focusVisibleRef = _useIsFocusVisible1.ref;
    var _React$useState3 = _react.useState(false), childIsFocusVisible = _React$useState3[0], setChildIsFocusVisible = _React$useState3[1];
    var handleBlur = function handleBlur() {
        if (childIsFocusVisible) {
            setChildIsFocusVisible(false);
            onBlurVisible();
        }
    };
    var handleFocus = function handleFocus() {
        var forward = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;
        return function(event) {
            // Workaround for https://github.com/facebook/react/issues/7769
            // The autoFocus of React might trigger the event before the componentDidMount.
            // We need to account for this eventuality.
            if (!childNode) setChildNode(event.currentTarget);
            if (isFocusVisible(event)) {
                setChildIsFocusVisible(true);
                handleEnter()(event);
            }
            var childrenProps = children.props;
            if (childrenProps.onFocus && forward) childrenProps.onFocus(event);
        };
    };
    var handleClose = function handleClose(event) {
        clearTimeout(hystersisTimer);
        hystersisTimer = setTimeout(function() {
            hystersisOpen = false;
        }, 800 + leaveDelay);
        setOpenState(false);
        if (onClose) onClose(event);
        clearTimeout(closeTimer.current);
        closeTimer.current = setTimeout(function() {
            ignoreNonTouchEvents.current = false;
        }, theme.transitions.duration.shortest);
    };
    var handleLeave = function handleLeave() {
        var forward = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;
        return function(event) {
            var childrenProps = children.props;
            if (event.type === 'blur') {
                if (childrenProps.onBlur && forward) childrenProps.onBlur(event);
                handleBlur();
            }
            if (event.type === 'mouseleave' && childrenProps.onMouseLeave && event.currentTarget === childNode) childrenProps.onMouseLeave(event);
            clearTimeout(enterTimer.current);
            clearTimeout(leaveTimer.current);
            event.persist();
            leaveTimer.current = setTimeout(function() {
                handleClose(event);
            }, leaveDelay);
        };
    };
    var detectTouchStart = function detectTouchStart(event) {
        ignoreNonTouchEvents.current = true;
        var childrenProps = children.props;
        if (childrenProps.onTouchStart) childrenProps.onTouchStart(event);
    };
    var handleTouchStart = function handleTouchStart(event) {
        detectTouchStart(event);
        clearTimeout(leaveTimer.current);
        clearTimeout(closeTimer.current);
        clearTimeout(touchTimer.current);
        event.persist();
        touchTimer.current = setTimeout(function() {
            handleEnter()(event);
        }, enterTouchDelay);
    };
    var handleTouchEnd = function handleTouchEnd(event) {
        if (children.props.onTouchEnd) children.props.onTouchEnd(event);
        clearTimeout(touchTimer.current);
        clearTimeout(leaveTimer.current);
        event.persist();
        leaveTimer.current = setTimeout(function() {
            handleClose(event);
        }, leaveTouchDelay);
    };
    var handleUseRef = _useForkRefDefault.default(setChildNode, ref);
    var handleFocusRef = _useForkRefDefault.default(focusVisibleRef, handleUseRef); // can be removed once we drop support for non ref forwarding class components
    var handleOwnRef = _react.useCallback(function(instance) {
        // #StrictMode ready
        _setRefDefault.default(handleFocusRef, _reactDom.findDOMNode(instance));
    }, [
        handleFocusRef
    ]);
    var handleRef = _useForkRefDefault.default(children.ref, handleOwnRef); // There is no point in displaying an empty tooltip.
    if (title === '') open = false;
     // For accessibility and SEO concerns, we render the title to the DOM node when
    // the tooltip is hidden. However, we have made a tradeoff when
    // `disableHoverListener` is set. This title logic is disabled.
    // It's allowing us to keep the implementation size minimal.
    // We are open to change the tradeoff.
    var shouldShowNativeTitle = !open && !disableHoverListener;
    var childrenProps1 = _extendsDefault.default({
        'aria-describedby': open ? id : null,
        title: shouldShowNativeTitle && typeof title === 'string' ? title : null
    }, other, children.props, {
        className: _clsxDefault.default(other.className, children.props.className),
        onTouchStart: detectTouchStart,
        ref: handleRef
    });
    var interactiveWrapperListeners = {};
    if (!disableTouchListener) {
        childrenProps1.onTouchStart = handleTouchStart;
        childrenProps1.onTouchEnd = handleTouchEnd;
    }
    if (!disableHoverListener) {
        childrenProps1.onMouseOver = handleEnter();
        childrenProps1.onMouseLeave = handleLeave();
        if (interactive) {
            interactiveWrapperListeners.onMouseOver = handleEnter(false);
            interactiveWrapperListeners.onMouseLeave = handleLeave(false);
        }
    }
    if (!disableFocusListener) {
        childrenProps1.onFocus = handleFocus();
        childrenProps1.onBlur = handleLeave();
        if (interactive) {
            interactiveWrapperListeners.onFocus = handleFocus(false);
            interactiveWrapperListeners.onBlur = handleLeave(false);
        }
    }
    if (children.props.title) console.error([
        'Material-UI: You have provided a `title` prop to the child of <Tooltip />.',
        "Remove this title prop `".concat(children.props.title, "` or the Tooltip component.")
    ].join('\n'));
    var mergedPopperProps = _react.useMemo(function() {
        return _utils.deepmerge({
            popperOptions: {
                modifiers: {
                    arrow: {
                        enabled: Boolean(arrowRef),
                        element: arrowRef
                    }
                }
            }
        }, PopperProps);
    }, [
        arrowRef,
        PopperProps
    ]);
    return /*#__PURE__*/ _react.createElement(_react.Fragment, null, /*#__PURE__*/ _react.cloneElement(children, childrenProps1), /*#__PURE__*/ _react.createElement(PopperComponent, _extendsDefault.default({
        className: _clsxDefault.default(classes.popper, interactive && classes.popperInteractive, arrow && classes.popperArrow),
        placement: placement,
        anchorEl: childNode,
        open: childNode ? open : false,
        id: childrenProps1['aria-describedby'],
        transition: true
    }, interactiveWrapperListeners, mergedPopperProps), function(_ref) {
        var placementInner = _ref.placement, TransitionPropsInner = _ref.TransitionProps;
        return /*#__PURE__*/ _react.createElement(TransitionComponent, _extendsDefault.default({
            timeout: theme.transitions.duration.shorter
        }, TransitionPropsInner, TransitionProps), /*#__PURE__*/ _react.createElement("div", {
            className: _clsxDefault.default(classes.tooltip, classes["tooltipPlacement".concat(_capitalizeDefault.default(placementInner.split('-')[0]))], ignoreNonTouchEvents.current && classes.touch, arrow && classes.tooltipArrow)
        }, title, arrow ? /*#__PURE__*/ _react.createElement("span", {
            className: classes.arrow,
            ref: setArrowRef
        }) : null));
    }));
});
Tooltip.propTypes = {
    // ----------------------------- Warning --------------------------------
    // | These PropTypes are generated from the TypeScript type definitions |
    // |     To update them edit the d.ts file and run "yarn proptypes"     |
    // ----------------------------------------------------------------------
    /**
   * If `true`, adds an arrow to the tooltip.
   */ arrow: _propTypesDefault.default.bool,
    /**
   * Tooltip reference element.
   */ children: _utils.elementAcceptingRef.isRequired,
    /**
   * Override or extend the styles applied to the component.
   * See [CSS API](#css) below for more details.
   */ classes: _propTypesDefault.default.object,
    /**
   * @ignore
   */ className: _propTypesDefault.default.string,
    /**
   * Do not respond to focus events.
   */ disableFocusListener: _propTypesDefault.default.bool,
    /**
   * Do not respond to hover events.
   */ disableHoverListener: _propTypesDefault.default.bool,
    /**
   * Do not respond to long press touch events.
   */ disableTouchListener: _propTypesDefault.default.bool,
    /**
   * The number of milliseconds to wait before showing the tooltip.
   * This prop won't impact the enter touch delay (`enterTouchDelay`).
   */ enterDelay: _propTypesDefault.default.number,
    /**
   * The number of milliseconds to wait before showing the tooltip when one was already recently opened.
   */ enterNextDelay: _propTypesDefault.default.number,
    /**
   * The number of milliseconds a user must touch the element before showing the tooltip.
   */ enterTouchDelay: _propTypesDefault.default.number,
    /**
   * This prop is used to help implement the accessibility logic.
   * If you don't provide this prop. It falls back to a randomly generated id.
   */ id: _propTypesDefault.default.string,
    /**
   * Makes a tooltip interactive, i.e. will not close when the user
   * hovers over the tooltip before the `leaveDelay` is expired.
   */ interactive: _propTypesDefault.default.bool,
    /**
   * The number of milliseconds to wait before hiding the tooltip.
   * This prop won't impact the leave touch delay (`leaveTouchDelay`).
   */ leaveDelay: _propTypesDefault.default.number,
    /**
   * The number of milliseconds after the user stops touching an element before hiding the tooltip.
   */ leaveTouchDelay: _propTypesDefault.default.number,
    /**
   * Callback fired when the component requests to be closed.
   *
   * @param {object} event The event source of the callback.
   */ onClose: _propTypesDefault.default.func,
    /**
   * Callback fired when the component requests to be open.
   *
   * @param {object} event The event source of the callback.
   */ onOpen: _propTypesDefault.default.func,
    /**
   * If `true`, the tooltip is shown.
   */ open: _propTypesDefault.default.bool,
    /**
   * Tooltip placement.
   */ placement: _propTypesDefault.default.oneOf([
        'bottom-end',
        'bottom-start',
        'bottom',
        'left-end',
        'left-start',
        'left',
        'right-end',
        'right-start',
        'right',
        'top-end',
        'top-start',
        'top'
    ]),
    /**
   * The component used for the popper.
   */ PopperComponent: _propTypesDefault.default.elementType,
    /**
   * Props applied to the [`Popper`](/api/popper/) element.
   */ PopperProps: _propTypesDefault.default.object,
    /**
   * Tooltip title. Zero-length titles string are never displayed.
   */ title: _propTypesDefault.default/* @typescript-to-proptypes-ignore */ .node.isRequired,
    /**
   * The component used for the transition.
   * [Follow this guide](/components/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.
   */ TransitionComponent: _propTypesDefault.default.elementType,
    /**
   * Props applied to the [`Transition`](http://reactcommunity.org/react-transition-group/transition#Transition-props) element.
   */ TransitionProps: _propTypesDefault.default.object
};
exports.default = _withStylesDefault.default(styles, {
    name: 'MuiTooltip',
    flip: false
})(Tooltip);

},{"@babel/runtime/helpers/esm/extends":"fTBFS","@babel/runtime/helpers/esm/slicedToArray":"cBZWN","@babel/runtime/helpers/esm/objectWithoutProperties":"25tJ4","@babel/runtime/helpers/esm/defineProperty":"hbmCA","react":"21dqq","react-dom":"j6uA9","prop-types":"7wKI2","clsx":"83C22","@material-ui/utils":"54RkF","../styles/colorManipulator":"iz48G","../styles/withStyles":"7U0iM","../utils/capitalize":"5AJVX","../Grow":"2tpXF","../Popper":"6FXHT","../utils/useForkRef":"kUpGa","../utils/unstable_useId":"crGfn","../utils/setRef":"6f9nb","../utils/useIsFocusVisible":"lY4zJ","../utils/useControlled":"1ORwD","../styles/useTheme":"kWUCn","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"hOvep":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>_useScrollTriggerDefault.default
);
var _useScrollTrigger = require("./useScrollTrigger");
var _useScrollTriggerDefault = parcelHelpers.interopDefault(_useScrollTrigger);

},{"./useScrollTrigger":"lgOpP","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"lgOpP":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _extends = require("@babel/runtime/helpers/esm/extends");
var _extendsDefault = parcelHelpers.interopDefault(_extends);
var _objectWithoutProperties = require("@babel/runtime/helpers/esm/objectWithoutProperties");
var _objectWithoutPropertiesDefault = parcelHelpers.interopDefault(_objectWithoutProperties);
var _react = require("react");
function defaultTrigger(store, options) {
    var _options$disableHyste = options.disableHysteresis, disableHysteresis = _options$disableHyste === void 0 ? false : _options$disableHyste, _options$threshold = options.threshold, threshold = _options$threshold === void 0 ? 100 : _options$threshold, target = options.target;
    var previous = store.current;
    if (target) // Get vertical scroll
    store.current = target.pageYOffset !== undefined ? target.pageYOffset : target.scrollTop;
    if (!disableHysteresis && previous !== undefined) {
        if (store.current < previous) return false;
    }
    return store.current > threshold;
}
var defaultTarget = typeof window !== 'undefined' ? window : null;
function useScrollTrigger() {
    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    var _options$getTrigger = options.getTrigger, getTrigger = _options$getTrigger === void 0 ? defaultTrigger : _options$getTrigger, _options$target = options.target, target = _options$target === void 0 ? defaultTarget : _options$target, other = _objectWithoutPropertiesDefault.default(options, [
        "getTrigger",
        "target"
    ]);
    var store = _react.useRef();
    var _React$useState = _react.useState(function() {
        return getTrigger(store, other);
    }), trigger = _React$useState[0], setTrigger = _React$useState[1];
    _react.useEffect(function() {
        var handleScroll = function handleScroll() {
            setTrigger(getTrigger(store, _extendsDefault.default({
                target: target
            }, other)));
        };
        handleScroll(); // Re-evaluate trigger when dependencies change
        target.addEventListener('scroll', handleScroll);
        return function() {
            target.removeEventListener('scroll', handleScroll);
        }; // See Option 3. https://github.com/facebook/react/issues/14476#issuecomment-471199055
    // eslint-disable-next-line react-hooks/exhaustive-deps
    }, [
        target,
        getTrigger,
        JSON.stringify(other)
    ]);
    return trigger;
}
exports.default = useScrollTrigger;

},{"@babel/runtime/helpers/esm/extends":"fTBFS","@babel/runtime/helpers/esm/objectWithoutProperties":"25tJ4","react":"21dqq","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"jiHj6":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>_withMobileDialogDefault.default
);
var _withMobileDialog = require("./withMobileDialog");
var _withMobileDialogDefault = parcelHelpers.interopDefault(_withMobileDialog);

},{"./withMobileDialog":"jo4sb","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"jo4sb":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _extends = require("@babel/runtime/helpers/esm/extends");
var _extendsDefault = parcelHelpers.interopDefault(_extends);
var _react = require("react");
var _propTypes = require("prop-types");
var _propTypesDefault = parcelHelpers.interopDefault(_propTypes);
var _withWidth = require("../withWidth");
var _withWidthDefault = parcelHelpers.interopDefault(_withWidth);
var warnedOnce = false;
/**
 * Dialog will responsively be full screen *at or below* the given breakpoint
 * (defaults to 'sm' for mobile devices).
 * Notice that this Higher-order Component is incompatible with server-side rendering.
 */ var withMobileDialog = function withMobileDialog() {
    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    return function(Component) {
        if (!warnedOnce) {
            console.warn([
                'Material-UI: The `withMobileDialog` function is deprecated.',
                'Head to https://material-ui.com/r/migration-v4/#dialog for a migration path.'
            ].join('\n'));
            warnedOnce = true;
        }
        var _options$breakpoint = options.breakpoint, breakpoint = _options$breakpoint === void 0 ? 'sm' : _options$breakpoint;
        function WithMobileDialog(props) {
            return /*#__PURE__*/ _react.createElement(Component, _extendsDefault.default({
                fullScreen: _withWidth.isWidthDown(breakpoint, props.width)
            }, props));
        }
        WithMobileDialog.propTypes = {
            width: _propTypesDefault.default.oneOf([
                'xs',
                'sm',
                'md',
                'lg',
                'xl'
            ]).isRequired
        };
        return _withWidthDefault.default()(WithMobileDialog);
    };
};
exports.default = withMobileDialog;

},{"@babel/runtime/helpers/esm/extends":"fTBFS","react":"21dqq","prop-types":"7wKI2","../withWidth":"9xCeZ","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"hHH8f":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>_zoomDefault.default
);
var _zoom = require("./Zoom");
var _zoomDefault = parcelHelpers.interopDefault(_zoom);

},{"./Zoom":"djw9c","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"djw9c":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _extends = require("@babel/runtime/helpers/esm/extends");
var _extendsDefault = parcelHelpers.interopDefault(_extends);
var _slicedToArray = require("@babel/runtime/helpers/esm/slicedToArray");
var _slicedToArrayDefault = parcelHelpers.interopDefault(_slicedToArray);
var _objectWithoutProperties = require("@babel/runtime/helpers/esm/objectWithoutProperties");
var _objectWithoutPropertiesDefault = parcelHelpers.interopDefault(_objectWithoutProperties);
var _react = require("react");
var _propTypes = require("prop-types");
var _propTypesDefault = parcelHelpers.interopDefault(_propTypes);
var _reactTransitionGroup = require("react-transition-group");
var _transitions = require("../styles/transitions");
var _useTheme = require("../styles/useTheme");
var _useThemeDefault = parcelHelpers.interopDefault(_useTheme);
var _utils = require("../transitions/utils");
var _useForkRef = require("../utils/useForkRef");
var _useForkRefDefault = parcelHelpers.interopDefault(_useForkRef);
var styles = {
    entering: {
        transform: 'none'
    },
    entered: {
        transform: 'none'
    }
};
var defaultTimeout = {
    enter: _transitions.duration.enteringScreen,
    exit: _transitions.duration.leavingScreen
};
/**
 * The Zoom transition can be used for the floating variant of the
 * [Button](/components/buttons/#floating-action-buttons) component.
 * It uses [react-transition-group](https://github.com/reactjs/react-transition-group) internally.
 */ var Zoom = /*#__PURE__*/ _react.forwardRef(function Zoom(props, ref) {
    var children = props.children, _props$disableStrictM = props.disableStrictModeCompat, disableStrictModeCompat = _props$disableStrictM === void 0 ? false : _props$disableStrictM, inProp = props.in, onEnter = props.onEnter, onEntered = props.onEntered, onEntering = props.onEntering, onExit = props.onExit, onExited = props.onExited, onExiting = props.onExiting, style = props.style, _props$timeout = props.timeout, timeout = _props$timeout === void 0 ? defaultTimeout : _props$timeout, _props$TransitionComp = props.TransitionComponent, TransitionComponent = _props$TransitionComp === void 0 ? _reactTransitionGroup.Transition : _props$TransitionComp, other = _objectWithoutPropertiesDefault.default(props, [
        "children",
        "disableStrictModeCompat",
        "in",
        "onEnter",
        "onEntered",
        "onEntering",
        "onExit",
        "onExited",
        "onExiting",
        "style",
        "timeout",
        "TransitionComponent"
    ]);
    var theme = _useThemeDefault.default();
    var enableStrictModeCompat = theme.unstable_strictMode && !disableStrictModeCompat;
    var nodeRef = _react.useRef(null);
    var foreignRef = _useForkRefDefault.default(children.ref, ref);
    var handleRef = _useForkRefDefault.default(enableStrictModeCompat ? nodeRef : undefined, foreignRef);
    var normalizedTransitionCallback = function normalizedTransitionCallback(callback) {
        return function(nodeOrAppearing, maybeAppearing) {
            if (callback) {
                var _ref = enableStrictModeCompat ? [
                    nodeRef.current,
                    nodeOrAppearing
                ] : [
                    nodeOrAppearing,
                    maybeAppearing
                ], _ref2 = _slicedToArrayDefault.default(_ref, 2), node = _ref2[0], isAppearing = _ref2[1]; // onEnterXxx and onExitXxx callbacks have a different arguments.length value.
                if (isAppearing === undefined) callback(node);
                else callback(node, isAppearing);
            }
        };
    };
    var handleEntering = normalizedTransitionCallback(onEntering);
    var handleEnter = normalizedTransitionCallback(function(node, isAppearing) {
        _utils.reflow(node); // So the animation always start from the start.
        var transitionProps = _utils.getTransitionProps({
            style: style,
            timeout: timeout
        }, {
            mode: 'enter'
        });
        node.style.webkitTransition = theme.transitions.create('transform', transitionProps);
        node.style.transition = theme.transitions.create('transform', transitionProps);
        if (onEnter) onEnter(node, isAppearing);
    });
    var handleEntered = normalizedTransitionCallback(onEntered);
    var handleExiting = normalizedTransitionCallback(onExiting);
    var handleExit = normalizedTransitionCallback(function(node) {
        var transitionProps = _utils.getTransitionProps({
            style: style,
            timeout: timeout
        }, {
            mode: 'exit'
        });
        node.style.webkitTransition = theme.transitions.create('transform', transitionProps);
        node.style.transition = theme.transitions.create('transform', transitionProps);
        if (onExit) onExit(node);
    });
    var handleExited = normalizedTransitionCallback(onExited);
    return /*#__PURE__*/ _react.createElement(TransitionComponent, _extendsDefault.default({
        appear: true,
        in: inProp,
        nodeRef: enableStrictModeCompat ? nodeRef : undefined,
        onEnter: handleEnter,
        onEntered: handleEntered,
        onEntering: handleEntering,
        onExit: handleExit,
        onExited: handleExited,
        onExiting: handleExiting,
        timeout: timeout
    }, other), function(state, childProps) {
        return /*#__PURE__*/ _react.cloneElement(children, _extendsDefault.default({
            style: _extendsDefault.default({
                transform: 'scale(0)',
                visibility: state === 'exited' && !inProp ? 'hidden' : undefined
            }, styles[state], style, children.props.style),
            ref: handleRef
        }, childProps));
    });
});
Zoom.propTypes = {
    // ----------------------------- Warning --------------------------------
    // | These PropTypes are generated from the TypeScript type definitions |
    // |     To update them edit the d.ts file and run "yarn proptypes"     |
    // ----------------------------------------------------------------------
    /**
   * A single child content element.
   */ children: _propTypesDefault.default.element,
    /**
   * Enable this prop if you encounter 'Function components cannot be given refs',
   * use `unstable_createStrictModeTheme`,
   * and can't forward the ref in the child component.
   */ disableStrictModeCompat: _propTypesDefault.default.bool,
    /**
   * If `true`, the component will transition in.
   */ in: _propTypesDefault.default.bool,
    /**
   * @ignore
   */ onEnter: _propTypesDefault.default.func,
    /**
   * @ignore
   */ onEntered: _propTypesDefault.default.func,
    /**
   * @ignore
   */ onEntering: _propTypesDefault.default.func,
    /**
   * @ignore
   */ onExit: _propTypesDefault.default.func,
    /**
   * @ignore
   */ onExited: _propTypesDefault.default.func,
    /**
   * @ignore
   */ onExiting: _propTypesDefault.default.func,
    /**
   * @ignore
   */ style: _propTypesDefault.default.object,
    /**
   * The duration for the transition, in milliseconds.
   * You may specify a single timeout for all transitions, or individually with an object.
   */ timeout: _propTypesDefault.default.oneOfType([
        _propTypesDefault.default.number,
        _propTypesDefault.default.shape({
            appear: _propTypesDefault.default.number,
            enter: _propTypesDefault.default.number,
            exit: _propTypesDefault.default.number
        })
    ])
};
exports.default = Zoom;

},{"@babel/runtime/helpers/esm/extends":"fTBFS","@babel/runtime/helpers/esm/slicedToArray":"cBZWN","@babel/runtime/helpers/esm/objectWithoutProperties":"25tJ4","react":"21dqq","prop-types":"7wKI2","react-transition-group":"fZSkB","../styles/transitions":"c5294","../styles/useTheme":"kWUCn","../transitions/utils":"ixDXW","../utils/useForkRef":"kUpGa","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"259Oi":[function(require,module,exports) {
var $parcel$ReactRefreshHelpers$116c = require("@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
$parcel$ReactRefreshHelpers$116c.prelude(module);

try {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _react = require("react");
// import { connectorLocalStorageKey, ConnectorNames } from '@pancakeswap/uikit'
var _useWallet = require("use-wallet");
var _s = $RefreshSig$();
const useEagerConnect = ()=>{
    _s();
    // const { login } = useAuth()
    const { account , connect , connector  } = _useWallet.useWallet();
    if (account && window.localStorage.getItem('connectorId') === '') window.localStorage.setItem('connectorId', connector);
    _react.useEffect(()=>{
        const connectorId = window.localStorage.getItem('connectorId');
        if (connectorId && !account) connect(connectorId);
    }, [
        connect,
        account
    ]);
};
_s(useEagerConnect, "1E9xgvgHJZeB9hqpIbnFDJhDL4Q=", false, function() {
    return [
        _useWallet.useWallet
    ];
});
exports.default = useEagerConnect;

  $parcel$ReactRefreshHelpers$116c.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
},{"react":"21dqq","use-wallet":"7RAr5","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3","@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js":"km3Ru"}],"cjGwk":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _footer = require("./Footer");
var _footerDefault = parcelHelpers.interopDefault(_footer);
exports.default = _footerDefault.default;

},{"./Footer":"1iodz","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"1iodz":[function(require,module,exports) {
var $parcel$ReactRefreshHelpers$7d2d = require("@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
$parcel$ReactRefreshHelpers$7d2d.prelude(module);

try {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _styles = require("@material-ui/core/styles");
var _core = require("@material-ui/core");
var _telegramSvg = require("jsx:../../assets/img/telegram.svg");
var _telegramSvgDefault = parcelHelpers.interopDefault(_telegramSvg);
var _twitterSvg = require("jsx:../../assets/img/twitter.svg");
var _twitterSvgDefault = parcelHelpers.interopDefault(_twitterSvg);
var _githubSvg = require("jsx:../../assets/img/github.svg");
var _githubSvgDefault = parcelHelpers.interopDefault(_githubSvg);
var _discordSvg = require("jsx:../../assets/img/discord.svg");
var _discordSvgDefault = parcelHelpers.interopDefault(_discordSvg);
var _s = $RefreshSig$();
const useStyles = _styles.makeStyles((theme)=>({
        footer: {
            position: 'absolute',
            bottom: '0',
            paddingTop: '15px',
            paddingBottom: '15px',
            width: '100%',
            color: '#fff',
            backgroundColor: 'rgba(0,0,0,0)',
            textAlign: 'center',
            height: '1.3rem',
            fontFamily: 'superstar'
        },
        link: {
            width: '24px',
            height: '24px',
            display: 'inline',
            marginLeft: '20px'
        },
        img: {
            width: '24px',
            height: '24px'
        }
    })
);
const Footer = ()=>{
    _s();
    const classes = useStyles();
    return /*#__PURE__*/ _reactDefault.default.createElement("footer", {
        className: classes.footer,
        __source: {
            fileName: "src/components/Footer/Footer.js",
            lineNumber: 39,
            columnNumber: 5
        },
        __self: undefined
    }, /*#__PURE__*/ _reactDefault.default.createElement(_core.Container, {
        maxWidth: "lg",
        __source: {
            fileName: "src/components/Footer/Footer.js",
            lineNumber: 40,
            columnNumber: 7
        },
        __self: undefined
    }, /*#__PURE__*/ _reactDefault.default.createElement(_core.Grid, {
        container: true,
        __source: {
            fileName: "src/components/Footer/Footer.js",
            lineNumber: 41,
            columnNumber: 9
        },
        __self: undefined
    }, /*#__PURE__*/ _reactDefault.default.createElement(_core.Grid, {
        item: true,
        xs: 12,
        __source: {
            fileName: "src/components/Footer/Footer.js",
            lineNumber: 42,
            columnNumber: 11
        },
        __self: undefined
    }, /*#__PURE__*/ _reactDefault.default.createElement(_core.Typography, {
        variant: "body2",
        color: "#",
        align: "left",
        __source: {
            fileName: "src/components/Footer/Footer.js",
            lineNumber: 43,
            columnNumber: 13
        },
        __self: undefined
    }, 'Copyright © ', /*#__PURE__*/ _reactDefault.default.createElement(_core.Link, {
        color: "inherit",
        href: "/",
        __source: {
            fileName: "src/components/Footer/Footer.js",
            lineNumber: 45,
            columnNumber: 15
        },
        __self: undefined
    }, "Grape Finance"), ' ', new Date().getFullYear())), /*#__PURE__*/ _reactDefault.default.createElement(_core.Grid, {
        item: true,
        xs: 12,
        style: {
            textAlign: 'right',
            height: '20px'
        },
        __source: {
            fileName: "src/components/Footer/Footer.js",
            lineNumber: 51,
            columnNumber: 11
        },
        __self: undefined
    }, /*#__PURE__*/ _reactDefault.default.createElement("a", {
        href: "https://grapefinance.gitbook.io/grape-finance-docs/",
        rel: "noopener noreferrer",
        target: "_blank",
        className: 'navLink ' + classes.link,
        __source: {
            fileName: "src/components/Footer/Footer.js",
            lineNumber: 60,
            columnNumber: 13
        },
        __self: undefined
    }, "Grape Docs"), /*#__PURE__*/ _reactDefault.default.createElement("a", {
        href: "https://twitter.com/grape_finance",
        rel: "noopener noreferrer",
        target: "_blank",
        className: classes.link,
        __source: {
            fileName: "src/components/Footer/Footer.js",
            lineNumber: 69,
            columnNumber: 13
        },
        __self: undefined
    }, /*#__PURE__*/ _reactDefault.default.createElement(_twitterSvgDefault.default, {
        style: {
            fill: '#fff'
        },
        __source: {
            fileName: "src/components/Footer/Footer.js",
            lineNumber: 75,
            columnNumber: 15
        },
        __self: undefined
    })), /*#__PURE__*/ _reactDefault.default.createElement("a", {
        href: "https://github.com/grapefi/contracts",
        rel: "noopener noreferrer",
        target: "_blank",
        className: classes.link,
        __source: {
            fileName: "src/components/Footer/Footer.js",
            lineNumber: 77,
            columnNumber: 13
        },
        __self: undefined
    }, /*#__PURE__*/ _reactDefault.default.createElement(_githubSvgDefault.default, {
        style: {
            fill: '#fff',
            height: '20px'
        },
        __source: {
            fileName: "src/components/Footer/Footer.js",
            lineNumber: 83,
            columnNumber: 15
        },
        __self: undefined
    })), /*#__PURE__*/ _reactDefault.default.createElement("a", {
        href: "https://t.me/GrapeDefi",
        rel: "noopener noreferrer",
        target: "_blank",
        className: classes.link,
        __source: {
            fileName: "src/components/Footer/Footer.js",
            lineNumber: 85,
            columnNumber: 13
        },
        __self: undefined
    }, /*#__PURE__*/ _reactDefault.default.createElement(_telegramSvgDefault.default, {
        style: {
            fill: '#fff',
            height: '20px'
        },
        __source: {
            fileName: "src/components/Footer/Footer.js",
            lineNumber: 86,
            columnNumber: 15
        },
        __self: undefined
    })), /*#__PURE__*/ _reactDefault.default.createElement("a", {
        href: "https://discord.gg/mZ4QrZwH5M",
        rel: "noopener noreferrer",
        target: "_blank",
        className: classes.link,
        __source: {
            fileName: "src/components/Footer/Footer.js",
            lineNumber: 88,
            columnNumber: 13
        },
        __self: undefined
    }, /*#__PURE__*/ _reactDefault.default.createElement(_discordSvgDefault.default, {
        style: {
            fill: '#fff',
            height: '20px'
        },
        __source: {
            fileName: "src/components/Footer/Footer.js",
            lineNumber: 89,
            columnNumber: 15
        },
        __self: undefined
    }))))));
};
_s(Footer, "8g5FPXexvSEOsxdmU7HicukHGqY=", false, function() {
    return [
        useStyles
    ];
});
_c = Footer;
exports.default = Footer;
var _c;
$RefreshReg$(_c, "Footer");

  $parcel$ReactRefreshHelpers$7d2d.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
},{"react":"21dqq","@material-ui/core/styles":"gK9qy","@material-ui/core":"kpEHc","jsx:../../assets/img/telegram.svg":"3ZnF2","jsx:../../assets/img/twitter.svg":"9QbJ9","jsx:../../assets/img/github.svg":"gsvXJ","jsx:../../assets/img/discord.svg":"7SLAP","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3","@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js":"km3Ru"}],"3ZnF2":[function(require,module,exports) {
var $parcel$ReactRefreshHelpers$2d8a = require("@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
$parcel$ReactRefreshHelpers$2d8a.prelude(module);

try {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _react = require("react");
const SvgTelegram = (props)=>/*#__PURE__*/ _react.createElement("svg", {
        xmlns: "http://www.w3.org/2000/svg",
        width: 25,
        height: 20.966,
        viewBox: "0 0 25 20.966",
        ...props,
        __source: {
            fileName: "src/assets/img/telegram.svg",
            lineNumber: 3,
            columnNumber: 30
        },
        __self: undefined
    }, /*#__PURE__*/ _react.createElement("path", {
        d: "m24.929 1.909-3.773 17.792c-.285 1.256-1.027 1.568-2.082.977l-5.748-4.236-2.774 2.668a1.444 1.444 0 0 1-1.153.562l.413-5.854 10.652-9.627c.463-.413-.1-.642-.72-.229L6.573 12.256.899 10.481c-1.233-.385-1.256-1.233.257-1.825L23.338.112c1.027-.385 1.926.229 1.591 1.797Z",
        __source: {
            fileName: "src/assets/img/telegram.svg",
            lineNumber: 3,
            columnNumber: 132
        },
        __self: undefined
    }))
;
_c = SvgTelegram;
exports.default = SvgTelegram;
var _c;
$RefreshReg$(_c, "SvgTelegram");

  $parcel$ReactRefreshHelpers$2d8a.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
},{"react":"21dqq","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3","@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js":"km3Ru"}],"9QbJ9":[function(require,module,exports) {
var $parcel$ReactRefreshHelpers$18b2 = require("@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
$parcel$ReactRefreshHelpers$18b2.prelude(module);

try {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _react = require("react");
const SvgTwitter = (props)=>/*#__PURE__*/ _react.createElement("svg", {
        xmlns: "http://www.w3.org/2000/svg",
        width: 25,
        height: 20.305,
        viewBox: "0 0 25 20.305",
        ...props,
        __source: {
            fileName: "src/assets/img/twitter.svg",
            lineNumber: 3,
            columnNumber: 29
        },
        __self: undefined
    }, /*#__PURE__*/ _react.createElement("path", {
        d: "M22.43 5.06c.016.222.016.444.016.666A14.478 14.478 0 0 1 7.868 20.304 14.479 14.479 0 0 1 0 18.004a10.6 10.6 0 0 0 1.237.063A10.261 10.261 0 0 0 7.6 15.879a5.133 5.133 0 0 1-4.791-3.553 6.461 6.461 0 0 0 .968.079 5.419 5.419 0 0 0 1.348-.174 5.124 5.124 0 0 1-4.109-5.029v-.063a5.16 5.16 0 0 0 2.316.65A5.131 5.131 0 0 1 1.745.936 14.564 14.564 0 0 0 12.31 6.297a5.784 5.784 0 0 1-.127-1.178 5.129 5.129 0 0 1 8.867-3.5A10.088 10.088 0 0 0 24.3.38a5.11 5.11 0 0 1-2.253 2.824A10.272 10.272 0 0 0 25 2.411a11.014 11.014 0 0 1-2.57 2.649Z",
        __source: {
            fileName: "src/assets/img/twitter.svg",
            lineNumber: 3,
            columnNumber: 131
        },
        __self: undefined
    }))
;
_c = SvgTwitter;
exports.default = SvgTwitter;
var _c;
$RefreshReg$(_c, "SvgTwitter");

  $parcel$ReactRefreshHelpers$18b2.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
},{"react":"21dqq","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3","@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js":"km3Ru"}],"gsvXJ":[function(require,module,exports) {
var $parcel$ReactRefreshHelpers$5313 = require("@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
$parcel$ReactRefreshHelpers$5313.prelude(module);

try {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _react = require("react");
const SvgGithub = (props)=>/*#__PURE__*/ _react.createElement("svg", {
        xmlns: "http://www.w3.org/2000/svg",
        width: 25,
        height: 24.375,
        viewBox: "0 0 25 24.375",
        ...props,
        __source: {
            fileName: "src/assets/img/github.svg",
            lineNumber: 3,
            columnNumber: 28
        },
        __self: undefined
    }, /*#__PURE__*/ _react.createElement("path", {
        d: "M8.362 19.628c0 .1-.116.181-.262.181-.166.015-.282-.066-.282-.181 0-.1.116-.181.262-.181.151-.016.282.065.282.181Zm-1.568-.227c-.035.1.066.217.217.247a.236.236 0 0 0 .313-.1c.03-.1-.066-.217-.217-.262a.259.259 0 0 0-.313.115Zm2.228-.086c-.146.035-.247.131-.232.247.015.1.146.166.3.131s.247-.131.232-.232-.154-.161-.3-.146ZM12.339.001A12.086 12.086 0 0 0 0 12.299a12.637 12.637 0 0 0 8.543 12.056c.645.116.872-.282.872-.61 0-.312-.015-2.036-.015-3.095 0 0-3.528.756-4.269-1.5 0 0-.575-1.467-1.4-1.845 0 0-1.154-.791.081-.776a2.661 2.661 0 0 1 1.946 1.3 2.664 2.664 0 0 0 3.672 1.053 2.8 2.8 0 0 1 .806-1.7c-2.818-.312-5.66-.721-5.66-5.57a3.82 3.82 0 0 1 1.19-2.969A4.762 4.762 0 0 1 5.9 5.222c1.053-.328 3.478 1.361 3.478 1.361a11.907 11.907 0 0 1 6.331 0s2.424-1.694 3.478-1.361a4.76 4.76 0 0 1 .131 3.422 3.918 3.918 0 0 1 1.3 2.969c0 4.864-2.969 5.252-5.786 5.57a2.981 2.981 0 0 1 .857 2.339c0 1.7-.015 3.8-.015 4.214 0 .328.232.726.872.61A12.52 12.52 0 0 0 25 12.299 12.359 12.359 0 0 0 12.339.001ZM4.9 17.385c-.066.05-.05.166.035.262.081.081.2.116.262.05.066-.05.05-.166-.035-.262-.081-.081-.197-.116-.262-.05Zm-.544-.408c-.035.066.015.146.116.2a.15.15 0 0 0 .217-.035c.035-.066-.015-.146-.116-.2-.102-.031-.183-.016-.218.034Zm1.633 1.794c-.081.066-.05.217.066.313.116.116.262.131.328.05.066-.066.035-.217-.066-.313-.117-.116-.264-.131-.329-.05Zm-.575-.741c-.081.05-.081.181 0 .3s.217.166.282.116a.23.23 0 0 0 0-.313c-.071-.118-.202-.169-.283-.103Z",
        __source: {
            fileName: "src/assets/img/github.svg",
            lineNumber: 3,
            columnNumber: 130
        },
        __self: undefined
    }))
;
_c = SvgGithub;
exports.default = SvgGithub;
var _c;
$RefreshReg$(_c, "SvgGithub");

  $parcel$ReactRefreshHelpers$5313.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
},{"react":"21dqq","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3","@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js":"km3Ru"}],"7SLAP":[function(require,module,exports) {
var $parcel$ReactRefreshHelpers$3815 = require("@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
$parcel$ReactRefreshHelpers$3815.prelude(module);

try {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _react = require("react");
const SvgDiscord = (props)=>/*#__PURE__*/ _react.createElement("svg", {
        xmlns: "http://www.w3.org/2000/svg",
        width: 30.625,
        height: 35,
        viewBox: "0 0 30.625 35",
        ...props,
        __source: {
            fileName: "src/assets/img/discord.svg",
            lineNumber: 3,
            columnNumber: 29
        },
        __self: undefined
    }, /*#__PURE__*/ _react.createElement("path", {
        d: "M20.318 16.625a1.791 1.791 0 1 1-1.785-1.942 1.864 1.864 0 0 1 1.785 1.942Zm-8.173-1.942a1.949 1.949 0 0 0 0 3.885 1.864 1.864 0 0 0 1.785-1.942 1.853 1.853 0 0 0-1.785-1.943Zm18.48-11.078V35c-4.409-3.9-3-2.606-8.12-7.368l.927 3.238H3.588A3.6 3.6 0 0 1 0 27.265V3.605A3.6 3.6 0 0 1 3.588 0h23.45a3.6 3.6 0 0 1 3.587 3.605ZM25.637 20.2a23.435 23.435 0 0 0-2.52-10.2A8.654 8.654 0 0 0 18.2 8.155l-.245.28a11.647 11.647 0 0 1 4.358 2.223A14.87 14.87 0 0 0 9.24 10.15c-.648.3-1.032.507-1.032.507a11.806 11.806 0 0 1 4.6-2.292l-.175-.21a8.654 8.654 0 0 0-4.916 1.838A23.435 23.435 0 0 0 5.2 20.2a6.345 6.345 0 0 0 5.338 2.66s.648-.788 1.173-1.452a5.443 5.443 0 0 1-3.063-2.065c.257.18.682.414.717.438a12.756 12.756 0 0 0 10.92.612 10.014 10.014 0 0 0 2.015-1.038 5.522 5.522 0 0 1-3.168 2.083c.525.665 1.155 1.418 1.155 1.418a6.4 6.4 0 0 0 5.35-2.656Z",
        __source: {
            fileName: "src/assets/img/discord.svg",
            lineNumber: 3,
            columnNumber: 131
        },
        __self: undefined
    }))
;
_c = SvgDiscord;
exports.default = SvgDiscord;
var _c;
$RefreshReg$(_c, "SvgDiscord");

  $parcel$ReactRefreshHelpers$3815.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
},{"react":"21dqq","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3","@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js":"km3Ru"}],"kq9l5":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _nav = require("./Nav");
var _navDefault = parcelHelpers.interopDefault(_nav);
exports.default = _navDefault.default;

},{"./Nav":"960U4","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"960U4":[function(require,module,exports) {
var $parcel$ReactRefreshHelpers$da44 = require("@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
$parcel$ReactRefreshHelpers$da44.prelude(module);

try {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _clsx = require("clsx");
var _clsxDefault = parcelHelpers.interopDefault(_clsx);
var _reactRouterDom = require("react-router-dom");
var _core = require("@material-ui/core");
var _listItemLink = require("../ListItemLink");
var _listItemLinkDefault = parcelHelpers.interopDefault(_listItemLink);
var _menu = require("@material-ui/icons/Menu");
var _menuDefault = parcelHelpers.interopDefault(_menu);
var _chevronLeft = require("@material-ui/icons/ChevronLeft");
var _chevronLeftDefault = parcelHelpers.interopDefault(_chevronLeft);
var _chevronRight = require("@material-ui/icons/ChevronRight");
var _chevronRightDefault = parcelHelpers.interopDefault(_chevronRight);
var _styles = require("@material-ui/core/styles");
var _accountButton = require("./AccountButton");
var _accountButtonDefault = parcelHelpers.interopDefault(_accountButton);
var _logo1Png = require("../../assets/img/logo1.png");
var _logo1PngDefault = parcelHelpers.interopDefault(_logo1Png);
var _s = $RefreshSig$();
const useStyles = _styles.makeStyles((theme)=>({
        '@global': {
            ul: {
                margin: 0,
                padding: 0,
                listStyle: 'none'
            }
        },
        appBar: {
            color: '#322f32',
            'background-color': 'rgba(255,255,255,0.0) !important',
            // borderBottom: `1px solid ${theme.palette.divider}`,
            padding: '10px',
            marginBottom: '3rem'
        },
        drawer: {
            width: 240,
            flexShrink: 0
        },
        drawerPaper: {
            width: 240
        },
        hide: {
            display: 'none'
        },
        toolbar: {
            flexWrap: 'wrap'
        },
        toolbarTitle: {
            fontFamily: 'Rubik',
            fontSize: '0px',
            flexGrow: 1
        },
        link: {
            textTransform: 'uppercase',
            color: '#322f32',
            fontSize: '16px',
            marginTop: '15px',
            margin: theme.spacing(10, 1, 1, 2),
            textDecoration: 'none',
            '&:hover': {
                textDecoration: 'none'
            }
        },
        brandLink: {
            textDecoration: 'none',
            color: '#322f32',
            '&:hover': {
                textDecoration: 'none'
            }
        }
    })
);
const Nav = ()=>{
    _s();
    const matches = _core.useMediaQuery('(min-width:900px)');
    const classes = useStyles();
    const theme = _styles.useTheme();
    const [open, setOpen] = _reactDefault.default.useState(false);
    //const grapeStats = useGrapeStats();
    //const btcStats = useBtcStats();
    //const shareStats = useShareStats();
    const [connected, setConnected] = _reactDefault.default.useState(false);
    const handleDrawerOpen = ()=>{
        setOpen(true);
    };
    const handleDrawerClose = ()=>{
        setOpen(false);
    };
    return /*#__PURE__*/ _reactDefault.default.createElement(_core.AppBar, {
        position: "sticky",
        elevation: 0,
        className: classes.appBar,
        __source: {
            fileName: "src/components/Nav/Nav.tsx",
            lineNumber: 107,
            columnNumber: 5
        },
        __self: undefined
    }, /*#__PURE__*/ _reactDefault.default.createElement(_core.Toolbar, {
        className: classes.toolbar,
        __source: {
            fileName: "src/components/Nav/Nav.tsx",
            lineNumber: 108,
            columnNumber: 7
        },
        __self: undefined
    }, matches ? /*#__PURE__*/ _reactDefault.default.createElement(_reactDefault.default.Fragment, null, /*#__PURE__*/ _reactDefault.default.createElement(_core.Typography, {
        variant: "h6",
        color: "inherit",
        noWrap: true,
        style: {
            flexGrow: '0'
        },
        className: classes.toolbarTitle,
        __source: {
            fileName: "src/components/Nav/Nav.tsx",
            lineNumber: 111,
            columnNumber: 13
        },
        __self: undefined
    }, /*#__PURE__*/ _reactDefault.default.createElement(_reactRouterDom.Link, {
        to: "/",
        color: "inherit",
        className: classes.brandLink,
        __source: {
            fileName: "src/components/Nav/Nav.tsx",
            lineNumber: 113,
            columnNumber: 15
        },
        __self: undefined
    }, /*#__PURE__*/ _reactDefault.default.createElement("img", {
        alt: "Grape Finance",
        src: _logo1PngDefault.default,
        height: "60px",
        __source: {
            fileName: "src/components/Nav/Nav.tsx",
            lineNumber: 114,
            columnNumber: 17
        },
        __self: undefined
    }))), /*#__PURE__*/ _reactDefault.default.createElement(_core.Box, {
        style: {
            paddingLeft: '15px',
            paddingTop: '10px',
            fontSize: '1rem',
            flexGrow: '1'
        },
        __source: {
            fileName: "src/components/Nav/Nav.tsx",
            lineNumber: 117,
            columnNumber: 13
        },
        __self: undefined
    }, /*#__PURE__*/ _reactDefault.default.createElement(_reactRouterDom.Link, {
        to: "/",
        className: 'navLink ' + classes.link,
        __source: {
            fileName: "src/components/Nav/Nav.tsx",
            lineNumber: 118,
            columnNumber: 15
        },
        __self: undefined
    }, "Home"), /*#__PURE__*/ _reactDefault.default.createElement(_reactRouterDom.Link, {
        to: "/vineyard",
        className: 'navLink ' + classes.link,
        __source: {
            fileName: "src/components/Nav/Nav.tsx",
            lineNumber: 122,
            columnNumber: 15
        },
        __self: undefined
    }, "Vineyard"), /*#__PURE__*/ _reactDefault.default.createElement(_reactRouterDom.Link, {
        to: "/winery",
        className: 'navLink ' + classes.link,
        __source: {
            fileName: "src/components/Nav/Nav.tsx",
            lineNumber: 125,
            columnNumber: 15
        },
        __self: undefined
    }, "Winery"), /*#__PURE__*/ _reactDefault.default.createElement(_reactRouterDom.Link, {
        to: "/nodes",
        className: 'navLink ' + classes.link,
        __source: {
            fileName: "src/components/Nav/Nav.tsx",
            lineNumber: 128,
            columnNumber: 15
        },
        __self: undefined
    }, "Nodes"), /*#__PURE__*/ _reactDefault.default.createElement(_reactRouterDom.Link, {
        to: "/leaderboard",
        className: 'navLink ' + classes.link,
        __source: {
            fileName: "src/components/Nav/Nav.tsx",
            lineNumber: 131,
            columnNumber: 15
        },
        __self: undefined
    }, "Leaderboard"), /*#__PURE__*/ _reactDefault.default.createElement("a", {
        href: "https://shop.grapefinance.app/",
        className: 'navLink ' + classes.link,
        rel: "noopener",
        target: "_blank",
        __source: {
            fileName: "src/components/Nav/Nav.tsx",
            lineNumber: 134,
            columnNumber: 15
        },
        __self: undefined
    }, "Merch"), /*#__PURE__*/ _reactDefault.default.createElement(_reactRouterDom.Link, {
        to: "/bond",
        className: 'navLink ' + classes.link,
        __source: {
            fileName: "src/components/Nav/Nav.tsx",
            lineNumber: 142,
            columnNumber: 15
        },
        __self: undefined
    }, "Bonds"), /*#__PURE__*/ _reactDefault.default.createElement(_reactRouterDom.Link, {
        to: "/strategies",
        className: 'navLink ' + classes.link,
        __source: {
            fileName: "src/components/Nav/Nav.tsx",
            lineNumber: 145,
            columnNumber: 15
        },
        __self: undefined
    }, "Strategy"), /*#__PURE__*/ _reactDefault.default.createElement(_reactRouterDom.Link, {
        to: "/stats",
        className: 'navLink ' + classes.link,
        __source: {
            fileName: "src/components/Nav/Nav.tsx",
            lineNumber: 148,
            columnNumber: 15
        },
        __self: undefined
    }, "Stats"), /*#__PURE__*/ _reactDefault.default.createElement(_reactRouterDom.Link, {
        to: "/nftraffle",
        className: 'navLink ' + classes.link,
        __source: {
            fileName: "src/components/Nav/Nav.tsx",
            lineNumber: 151,
            columnNumber: 15
        },
        __self: undefined
    }, "NFT Raffle"), /*#__PURE__*/ _reactDefault.default.createElement(_reactRouterDom.Link, {
        to: "/roadmap",
        className: 'navLink ' + classes.link,
        __source: {
            fileName: "src/components/Nav/Nav.tsx",
            lineNumber: 158,
            columnNumber: 15
        },
        __self: undefined
    }, "Roadmap"), /*#__PURE__*/ _reactDefault.default.createElement("div", {
        className: 'dropdown',
        __source: {
            fileName: "src/components/Nav/Nav.tsx",
            lineNumber: 161,
            columnNumber: 15
        },
        __self: undefined
    }, /*#__PURE__*/ _reactDefault.default.createElement("button", {
        className: 'dropbtn',
        __source: {
            fileName: "src/components/Nav/Nav.tsx",
            lineNumber: 162,
            columnNumber: 17
        },
        __self: undefined
    }, "AUTO VAULTS"), /*#__PURE__*/ _reactDefault.default.createElement("div", {
        className: 'dropdown-content',
        __source: {
            fileName: "src/components/Nav/Nav.tsx",
            lineNumber: 163,
            columnNumber: 19
        },
        __self: undefined
    }, /*#__PURE__*/ _reactDefault.default.createElement("a", {
        href: "https://magik.farm/#/avax",
        className: classes.link,
        rel: "noopener",
        target: "_blank",
        __source: {
            fileName: "src/components/Nav/Nav.tsx",
            lineNumber: 164,
            columnNumber: 23
        },
        __self: undefined
    }, "Magik"), /*#__PURE__*/ _reactDefault.default.createElement("a", {
        href: "https://froyo.farm/#/avax",
        className: classes.link,
        rel: "noopener",
        target: "_blank",
        __source: {
            fileName: "src/components/Nav/Nav.tsx",
            lineNumber: 172,
            columnNumber: 19
        },
        __self: undefined
    }, "Froyo"), /*#__PURE__*/ _reactDefault.default.createElement("a", {
        href: "https://app.beefy.finance/#/",
        className: classes.link,
        rel: "noopener",
        target: "_blank",
        __source: {
            fileName: "src/components/Nav/Nav.tsx",
            lineNumber: 180,
            columnNumber: 19
        },
        __self: undefined
    }, "Beefy"), /*#__PURE__*/ _reactDefault.default.createElement("a", {
        href: "https://yieldwolf.finance/avalanche",
        className: classes.link,
        rel: "noopener",
        target: "_blank",
        __source: {
            fileName: "src/components/Nav/Nav.tsx",
            lineNumber: 188,
            columnNumber: 15
        },
        __self: undefined
    }, "Yield Wolf"))), /*#__PURE__*/ _reactDefault.default.createElement("a", {
        href: "https://grapefinance.gitbook.io/grape-finance-docs/",
        className: 'navLink ' + classes.link,
        rel: "noopener",
        target: "_blank",
        __source: {
            fileName: "src/components/Nav/Nav.tsx",
            lineNumber: 207,
            columnNumber: 15
        },
        __self: undefined
    }, "Docs"), /*#__PURE__*/ _reactDefault.default.createElement(_reactRouterDom.Link, {
        to: "/help",
        className: 'navLink ' + classes.link,
        __source: {
            fileName: "src/components/Nav/Nav.tsx",
            lineNumber: 215,
            columnNumber: 15
        },
        __self: undefined
    }, "Help")), /*#__PURE__*/ _reactDefault.default.createElement(_core.Box, {
        style: {
            flexGrow: '0',
            paddingLeft: '15px',
            paddingTop: '5px',
            fontSize: '1rem',
            paddingRight: '15px',
            height: '30px',
            display: 'flex'
        },
        __source: {
            fileName: "src/components/Nav/Nav.tsx",
            lineNumber: 220,
            columnNumber: 13
        },
        __self: undefined
    }), /*#__PURE__*/ _reactDefault.default.createElement(_accountButtonDefault.default, {
        text: "Connect",
        __source: {
            fileName: "src/components/Nav/Nav.tsx",
            lineNumber: 231,
            columnNumber: 13
        },
        __self: undefined
    })) : /*#__PURE__*/ _reactDefault.default.createElement(_reactDefault.default.Fragment, null, /*#__PURE__*/ _reactDefault.default.createElement(_core.IconButton, {
        color: "inherit",
        "aria-label": "open drawer",
        onClick: handleDrawerOpen,
        edge: "start",
        className: _clsxDefault.default(open && classes.hide),
        __source: {
            fileName: "src/components/Nav/Nav.tsx",
            lineNumber: 235,
            columnNumber: 13
        },
        __self: undefined
    }, /*#__PURE__*/ _reactDefault.default.createElement(_menuDefault.default, {
        __source: {
            fileName: "src/components/Nav/Nav.tsx",
            lineNumber: 242,
            columnNumber: 15
        },
        __self: undefined
    })), /*#__PURE__*/ _reactDefault.default.createElement("img", {
        alt: "grape.money",
        src: _logo1PngDefault.default,
        style: {
            height: '40px',
            marginTop: '-10px',
            marginLeft: '10px',
            marginRight: '15px'
        },
        __source: {
            fileName: "src/components/Nav/Nav.tsx",
            lineNumber: 245,
            columnNumber: 13
        },
        __self: undefined
    }), /*#__PURE__*/ _reactDefault.default.createElement(_accountButtonDefault.default, {
        text: "Connect",
        __source: {
            fileName: "src/components/Nav/Nav.tsx",
            lineNumber: 250,
            columnNumber: 13
        },
        __self: undefined
    }), /*#__PURE__*/ _reactDefault.default.createElement(_core.Drawer, {
        className: classes.drawer,
        onClose: handleDrawerClose,
        // onEscapeKeyDown={handleDrawerClose}
        // onBackdropClick={handleDrawerClose}
        variant: "temporary",
        anchor: "left",
        open: open,
        classes: {
            paper: classes.drawerPaper
        },
        __source: {
            fileName: "src/components/Nav/Nav.tsx",
            lineNumber: 251,
            columnNumber: 13
        },
        __self: undefined
    }, /*#__PURE__*/ _reactDefault.default.createElement("div", {
        __source: {
            fileName: "src/components/Nav/Nav.tsx",
            lineNumber: 263,
            columnNumber: 15
        },
        __self: undefined
    }, /*#__PURE__*/ _reactDefault.default.createElement(_core.IconButton, {
        onClick: handleDrawerClose,
        __source: {
            fileName: "src/components/Nav/Nav.tsx",
            lineNumber: 264,
            columnNumber: 17
        },
        __self: undefined
    }, theme.direction === 'rtl' ? /*#__PURE__*/ _reactDefault.default.createElement(_chevronRightDefault.default, {
        htmlColor: "white",
        __source: {
            fileName: "src/components/Nav/Nav.tsx",
            lineNumber: 266,
            columnNumber: 21
        },
        __self: undefined
    }) : /*#__PURE__*/ _reactDefault.default.createElement(_chevronLeftDefault.default, {
        htmlColor: "white",
        __source: {
            fileName: "src/components/Nav/Nav.tsx",
            lineNumber: 268,
            columnNumber: 21
        },
        __self: undefined
    }))), /*#__PURE__*/ _reactDefault.default.createElement(_core.Divider, {
        __source: {
            fileName: "src/components/Nav/Nav.tsx",
            lineNumber: 272,
            columnNumber: 15
        },
        __self: undefined
    }), /*#__PURE__*/ _reactDefault.default.createElement(_core.List, {
        __source: {
            fileName: "src/components/Nav/Nav.tsx",
            lineNumber: 273,
            columnNumber: 15
        },
        __self: undefined
    }, /*#__PURE__*/ _reactDefault.default.createElement(_core.ListItem, {
        __source: {
            fileName: "src/components/Nav/Nav.tsx",
            lineNumber: 274,
            columnNumber: 17
        },
        __self: undefined
    }, /*#__PURE__*/ _reactDefault.default.createElement(_accountButtonDefault.default, {
        text: "Connect",
        __source: {
            fileName: "src/components/Nav/Nav.tsx",
            lineNumber: 275,
            columnNumber: 19
        },
        __self: undefined
    })), /*#__PURE__*/ _reactDefault.default.createElement(_listItemLinkDefault.default, {
        primary: "Home",
        to: "/",
        __source: {
            fileName: "src/components/Nav/Nav.tsx",
            lineNumber: 277,
            columnNumber: 17
        },
        __self: undefined
    }), /*#__PURE__*/ _reactDefault.default.createElement(_listItemLinkDefault.default, {
        primary: "Vineyard",
        to: "/vineyard",
        __source: {
            fileName: "src/components/Nav/Nav.tsx",
            lineNumber: 278,
            columnNumber: 17
        },
        __self: undefined
    }), /*#__PURE__*/ _reactDefault.default.createElement(_listItemLinkDefault.default, {
        primary: "Winery",
        to: "/winery",
        __source: {
            fileName: "src/components/Nav/Nav.tsx",
            lineNumber: 279,
            columnNumber: 17
        },
        __self: undefined
    }), /*#__PURE__*/ _reactDefault.default.createElement(_listItemLinkDefault.default, {
        primary: "Nodes",
        to: "/nodes",
        __source: {
            fileName: "src/components/Nav/Nav.tsx",
            lineNumber: 280,
            columnNumber: 17
        },
        __self: undefined
    }), /*#__PURE__*/ _reactDefault.default.createElement(_listItemLinkDefault.default, {
        primary: "Leaderboard",
        to: "/leaderboard",
        __source: {
            fileName: "src/components/Nav/Nav.tsx",
            lineNumber: 281,
            columnNumber: 17
        },
        __self: undefined
    }), /*#__PURE__*/ _reactDefault.default.createElement(_listItemLinkDefault.default, {
        primary: "Stats",
        to: "/stats",
        __source: {
            fileName: "src/components/Nav/Nav.tsx",
            lineNumber: 282,
            columnNumber: 17
        },
        __self: undefined
    }), /*#__PURE__*/ _reactDefault.default.createElement(_core.ListItem, {
        button: true,
        component: "a",
        href: "https://shop.grapefinance.app/",
        __source: {
            fileName: "src/components/Nav/Nav.tsx",
            lineNumber: 283,
            columnNumber: 17
        },
        __self: undefined
    }, /*#__PURE__*/ _reactDefault.default.createElement(_core.ListItemText, {
        __source: {
            fileName: "src/components/Nav/Nav.tsx",
            lineNumber: 284,
            columnNumber: 19
        },
        __self: undefined
    }, "Merch")), /*#__PURE__*/ _reactDefault.default.createElement(_listItemLinkDefault.default, {
        primary: "Bond",
        to: "/bond",
        __source: {
            fileName: "src/components/Nav/Nav.tsx",
            lineNumber: 286,
            columnNumber: 17
        },
        __self: undefined
    }), /*#__PURE__*/ _reactDefault.default.createElement(_listItemLinkDefault.default, {
        primary: "Strategy",
        to: "/strategies",
        __source: {
            fileName: "src/components/Nav/Nav.tsx",
            lineNumber: 287,
            columnNumber: 17
        },
        __self: undefined
    }), /*#__PURE__*/ _reactDefault.default.createElement(_listItemLinkDefault.default, {
        primary: "NFT Raffle",
        to: "/nftraffle",
        __source: {
            fileName: "src/components/Nav/Nav.tsx",
            lineNumber: 288,
            columnNumber: 17
        },
        __self: undefined
    }), /*#__PURE__*/ _reactDefault.default.createElement(_listItemLinkDefault.default, {
        primary: "Roadmap",
        to: "/roadmap",
        __source: {
            fileName: "src/components/Nav/Nav.tsx",
            lineNumber: 290,
            columnNumber: 17
        },
        __self: undefined
    }), /*#__PURE__*/ _reactDefault.default.createElement(_core.ListItem, {
        button: true,
        component: "a",
        href: "https://app.beefy.finance/#/",
        __source: {
            fileName: "src/components/Nav/Nav.tsx",
            lineNumber: 291,
            columnNumber: 17
        },
        __self: undefined
    }, /*#__PURE__*/ _reactDefault.default.createElement(_core.ListItemText, {
        __source: {
            fileName: "src/components/Nav/Nav.tsx",
            lineNumber: 292,
            columnNumber: 19
        },
        __self: undefined
    }, "Beefy")), /*#__PURE__*/ _reactDefault.default.createElement(_core.ListItem, {
        button: true,
        component: "a",
        href: "https://yieldwolf.finance/avalanche",
        __source: {
            fileName: "src/components/Nav/Nav.tsx",
            lineNumber: 294,
            columnNumber: 17
        },
        __self: undefined
    }, /*#__PURE__*/ _reactDefault.default.createElement(_core.ListItemText, {
        __source: {
            fileName: "src/components/Nav/Nav.tsx",
            lineNumber: 295,
            columnNumber: 19
        },
        __self: undefined
    }, "Yield Wolf")), /*#__PURE__*/ _reactDefault.default.createElement(_core.ListItem, {
        button: true,
        component: "a",
        href: "https://magik.farm/#/avax",
        __source: {
            fileName: "src/components/Nav/Nav.tsx",
            lineNumber: 297,
            columnNumber: 17
        },
        __self: undefined
    }, /*#__PURE__*/ _reactDefault.default.createElement(_core.ListItemText, {
        __source: {
            fileName: "src/components/Nav/Nav.tsx",
            lineNumber: 298,
            columnNumber: 19
        },
        __self: undefined
    }, "Magik")), /*#__PURE__*/ _reactDefault.default.createElement(_core.ListItem, {
        button: true,
        component: "a",
        href: "https://froyo.farm/#/avax",
        __source: {
            fileName: "src/components/Nav/Nav.tsx",
            lineNumber: 300,
            columnNumber: 17
        },
        __self: undefined
    }, /*#__PURE__*/ _reactDefault.default.createElement(_core.ListItemText, {
        __source: {
            fileName: "src/components/Nav/Nav.tsx",
            lineNumber: 301,
            columnNumber: 19
        },
        __self: undefined
    }, "Froyo")), /*#__PURE__*/ _reactDefault.default.createElement(_core.ListItem, {
        button: true,
        component: "a",
        href: "https://grapefinance.gitbook.io/grape-finance-docs/",
        __source: {
            fileName: "src/components/Nav/Nav.tsx",
            lineNumber: 307,
            columnNumber: 17
        },
        __self: undefined
    }, /*#__PURE__*/ _reactDefault.default.createElement(_core.ListItemText, {
        __source: {
            fileName: "src/components/Nav/Nav.tsx",
            lineNumber: 308,
            columnNumber: 19
        },
        __self: undefined
    }, "Docs")))))));
};
_s(Nav, "Q5RLN4JNdrXEqbH9kOY2uwt/PVc=", false, function() {
    return [
        _core.useMediaQuery,
        useStyles,
        _styles.useTheme
    ];
});
_c = Nav;
exports.default = Nav;
var _c;
$RefreshReg$(_c, "Nav");

  $parcel$ReactRefreshHelpers$da44.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
},{"react":"21dqq","clsx":"83C22","react-router-dom":"cHIiW","@material-ui/core":"kpEHc","../ListItemLink":"EyaRE","@material-ui/icons/Menu":"claWI","@material-ui/icons/ChevronLeft":"5O0vf","@material-ui/icons/ChevronRight":"bsqQC","@material-ui/core/styles":"gK9qy","./AccountButton":"czatZ","../../assets/img/logo1.png":"5M5gG","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3","@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js":"km3Ru"}],"EyaRE":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _listItemLink = require("./ListItemLink");
var _listItemLinkDefault = parcelHelpers.interopDefault(_listItemLink);
exports.default = _listItemLinkDefault.default;

},{"./ListItemLink":"fk6Gn","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"fk6Gn":[function(require,module,exports) {
var $parcel$ReactRefreshHelpers$7404 = require("@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
$parcel$ReactRefreshHelpers$7404.prelude(module);

try {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _reactRouterDom = require("react-router-dom");
var _core = require("@material-ui/core");
var _s = $RefreshSig$();
const ListItemLink = ({ primary , to  })=>{
    _s();
    const CustomLink = _reactDefault.default.useMemo(()=>/*#__PURE__*/ _reactDefault.default.forwardRef((linkProps, ref)=>/*#__PURE__*/ _reactDefault.default.createElement(_reactRouterDom.Link, {
                ref: ref,
                to: to,
                ...linkProps,
                __source: {
                    fileName: "src/components/ListItemLink/ListItemLink.js",
                    lineNumber: 7,
                    columnNumber: 48
                },
                __self: undefined
            })
        )
    , [
        to
    ]);
    return /*#__PURE__*/ _reactDefault.default.createElement("li", {
        __source: {
            fileName: "src/components/ListItemLink/ListItemLink.js",
            lineNumber: 12,
            columnNumber: 5
        },
        __self: undefined
    }, /*#__PURE__*/ _reactDefault.default.createElement(_core.ListItem, {
        button: true,
        component: CustomLink,
        __source: {
            fileName: "src/components/ListItemLink/ListItemLink.js",
            lineNumber: 13,
            columnNumber: 7
        },
        __self: undefined
    }, /*#__PURE__*/ _reactDefault.default.createElement(_core.ListItemText, {
        primary: primary,
        __source: {
            fileName: "src/components/ListItemLink/ListItemLink.js",
            lineNumber: 14,
            columnNumber: 9
        },
        __self: undefined
    })));
};
_s(ListItemLink, "Eyw/YrAC6bJbhrNwMM2YxZ7ZQ+w=");
_c = ListItemLink;
exports.default = ListItemLink;
var _c;
$RefreshReg$(_c, "ListItemLink");

  $parcel$ReactRefreshHelpers$7404.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
},{"react":"21dqq","react-router-dom":"cHIiW","@material-ui/core":"kpEHc","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3","@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js":"km3Ru"}],"claWI":[function(require,module,exports) {
"use strict";
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = void 0;
var React = _interopRequireWildcard(require("react"));
var _createSvgIcon = _interopRequireDefault(require("./utils/createSvgIcon"));
var _default = (0, _createSvgIcon.default)(/*#__PURE__*/ React.createElement("path", {
    d: "M3 18h18v-2H3v2zm0-5h18v-2H3v2zm0-7v2h18V6H3z"
}), 'Menu');
exports.default = _default;

},{"@babel/runtime/helpers/interopRequireDefault":"7XM86","@babel/runtime/helpers/interopRequireWildcard":"9V6N5","react":"21dqq","./utils/createSvgIcon":"du2Q6"}],"7XM86":[function(require,module,exports) {
function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
        "default": obj
    };
}
module.exports = _interopRequireDefault;
module.exports["default"] = module.exports, module.exports.__esModule = true;

},{}],"9V6N5":[function(require,module,exports) {
var _typeof = require("@babel/runtime/helpers/typeof")["default"];
function _getRequireWildcardCache(nodeInterop1) {
    if (typeof WeakMap !== "function") return null;
    var cacheBabelInterop = new WeakMap();
    var cacheNodeInterop = new WeakMap();
    return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) {
        return nodeInterop ? cacheNodeInterop : cacheBabelInterop;
    })(nodeInterop1);
}
function _interopRequireWildcard(obj, nodeInterop) {
    if (!nodeInterop && obj && obj.__esModule) return obj;
    if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") return {
        "default": obj
    };
    var cache = _getRequireWildcardCache(nodeInterop);
    if (cache && cache.has(obj)) return cache.get(obj);
    var newObj = {};
    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
    for(var key in obj)if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
        var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
        if (desc && (desc.get || desc.set)) Object.defineProperty(newObj, key, desc);
        else newObj[key] = obj[key];
    }
    newObj["default"] = obj;
    if (cache) cache.set(obj, newObj);
    return newObj;
}
module.exports = _interopRequireWildcard;
module.exports["default"] = module.exports, module.exports.__esModule = true;

},{"@babel/runtime/helpers/typeof":"jgQjt"}],"du2Q6":[function(require,module,exports) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "default", {
    enumerable: true,
    get: function get() {
        return _utils.createSvgIcon;
    }
});
var _utils = require("@material-ui/core/utils");

},{"@material-ui/core/utils":"7Laiy"}],"5O0vf":[function(require,module,exports) {
"use strict";
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = void 0;
var React = _interopRequireWildcard(require("react"));
var _createSvgIcon = _interopRequireDefault(require("./utils/createSvgIcon"));
var _default = (0, _createSvgIcon.default)(/*#__PURE__*/ React.createElement("path", {
    d: "M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z"
}), 'ChevronLeft');
exports.default = _default;

},{"@babel/runtime/helpers/interopRequireDefault":"7XM86","@babel/runtime/helpers/interopRequireWildcard":"9V6N5","react":"21dqq","./utils/createSvgIcon":"du2Q6"}],"bsqQC":[function(require,module,exports) {
"use strict";
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = void 0;
var React = _interopRequireWildcard(require("react"));
var _createSvgIcon = _interopRequireDefault(require("./utils/createSvgIcon"));
var _default = (0, _createSvgIcon.default)(/*#__PURE__*/ React.createElement("path", {
    d: "M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z"
}), 'ChevronRight');
exports.default = _default;

},{"@babel/runtime/helpers/interopRequireDefault":"7XM86","@babel/runtime/helpers/interopRequireWildcard":"9V6N5","react":"21dqq","./utils/createSvgIcon":"du2Q6"}],"czatZ":[function(require,module,exports) {
var $parcel$ReactRefreshHelpers$b8d7 = require("@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
$parcel$ReactRefreshHelpers$b8d7.prelude(module);

try {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _core = require("@material-ui/core");
var _useWallet = require("use-wallet");
var _useModal = require("../../hooks/useModal");
var _useModalDefault = parcelHelpers.interopDefault(_useModal);
var _walletProviderModal = require("../WalletProviderModal");
var _walletProviderModalDefault = parcelHelpers.interopDefault(_walletProviderModal);
var _accountModal = require("./AccountModal");
var _accountModalDefault = parcelHelpers.interopDefault(_accountModal);
var _useENS = require("../../hooks/useENS");
var _react1 = require("@davatar/react");
var _reactDefault1 = parcelHelpers.interopDefault(_react1);
var _s = $RefreshSig$();
function shorten(str) {
    if (str.length < 10) return str;
    return `${str.slice(0, 6)}...${str.slice(str.length - 4)}`;
}
const AccountButton = ({ text  })=>{
    _s();
    const { account  } = _useWallet.useWallet();
    const [onPresentAccountModal] = _useModalDefault.default(/*#__PURE__*/ _reactDefault.default.createElement(_accountModalDefault.default, {
        __source: {
            fileName: "src/components/Nav/AccountButton.tsx",
            lineNumber: 21,
            columnNumber: 44
        },
        __self: undefined
    }));
    const { ensName  } = _useENS.useENS(account);
    const [isWalletProviderOpen, setWalletProviderOpen] = _react.useState(false);
    const handleWalletProviderOpen = ()=>{
        setWalletProviderOpen(true);
    };
    const handleWalletProviderClose = ()=>{
        setWalletProviderOpen(false);
    };
    const buttonText = text ? text : 'Connect Wallet';
    return /*#__PURE__*/ _reactDefault.default.createElement("div", {
        __source: {
            fileName: "src/components/Nav/AccountButton.tsx",
            lineNumber: 37,
            columnNumber: 5
        },
        __self: undefined
    }, !account ? /*#__PURE__*/ _reactDefault.default.createElement(_core.Button, {
        onClick: handleWalletProviderOpen,
        className: "shinyButtonSecondary",
        __source: {
            fileName: "src/components/Nav/AccountButton.tsx",
            lineNumber: 39,
            columnNumber: 9
        },
        __self: undefined
    }, buttonText) : /*#__PURE__*/ _reactDefault.default.createElement(_core.Button, {
        onClick: onPresentAccountModal,
        className: "shinyButtonSecondary",
        __source: {
            fileName: "src/components/Nav/AccountButton.tsx",
            lineNumber: 43,
            columnNumber: 9
        },
        __self: undefined
    }, /*#__PURE__*/ _reactDefault.default.createElement("div", {
        className: "account",
        __source: {
            fileName: "src/components/Nav/AccountButton.tsx",
            lineNumber: 44,
            columnNumber: 11
        },
        __self: undefined
    }, /*#__PURE__*/ _reactDefault.default.createElement(_reactDefault1.default, {
        size: 20,
        address: account,
        __source: {
            fileName: "src/components/Nav/AccountButton.tsx",
            lineNumber: 45,
            columnNumber: 13
        },
        __self: undefined
    }), /*#__PURE__*/ _reactDefault.default.createElement("span", {
        __source: {
            fileName: "src/components/Nav/AccountButton.tsx",
            lineNumber: 46,
            columnNumber: 13
        },
        __self: undefined
    }, ensName || shorten(account)))), /*#__PURE__*/ _reactDefault.default.createElement(_walletProviderModalDefault.default, {
        open: isWalletProviderOpen,
        handleClose: handleWalletProviderClose,
        __source: {
            fileName: "src/components/Nav/AccountButton.tsx",
            lineNumber: 51,
            columnNumber: 7
        },
        __self: undefined
    }));
};
_s(AccountButton, "qcGzIDIbJLgal24x+rv+OzgS1n0=", false, function() {
    return [
        _useWallet.useWallet,
        _useModalDefault.default,
        _useENS.useENS
    ];
});
_c = AccountButton;
exports.default = AccountButton;
var _c;
$RefreshReg$(_c, "AccountButton");

  $parcel$ReactRefreshHelpers$b8d7.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
},{"react":"21dqq","@material-ui/core":"kpEHc","use-wallet":"7RAr5","../../hooks/useModal":"B8yzt","../WalletProviderModal":"bvI4d","./AccountModal":"ajG3P","../../hooks/useENS":"2CFdJ","@davatar/react":"j8mgH","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3","@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js":"km3Ru"}],"B8yzt":[function(require,module,exports) {
var $parcel$ReactRefreshHelpers$93ab = require("@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
$parcel$ReactRefreshHelpers$93ab.prelude(module);

try {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _react = require("react");
var _modals = require("../contexts/Modals");
const useModal = (modal)=>{
    const { onDismiss , onPresent  } = _react.useContext(_modals.Context);
    const handlePresent = _react.useCallback(()=>{
        onPresent(modal);
    }, [
        modal,
        onPresent
    ]);
    return [
        handlePresent,
        onDismiss
    ];
};
exports.default = useModal;

  $parcel$ReactRefreshHelpers$93ab.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
},{"react":"21dqq","../contexts/Modals":"53HXC","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3","@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js":"km3Ru"}],"bvI4d":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _walletProviderModal = require("./WalletProviderModal");
var _walletProviderModalDefault = parcelHelpers.interopDefault(_walletProviderModal);
exports.default = _walletProviderModalDefault.default;

},{"./WalletProviderModal":"6zsx0","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"6zsx0":[function(require,module,exports) {
var $parcel$ReactRefreshHelpers$1b5f = require("@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
$parcel$ReactRefreshHelpers$1b5f.prelude(module);

try {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _walletCard = require("./WalletCard");
var _walletCardDefault = parcelHelpers.interopDefault(_walletCard);
var _core = require("@material-ui/core");
var _styles = require("@material-ui/core/styles");
var _metamaskFoxSvg = require("../../assets/img/metamask-fox.svg");
var _metamaskFoxSvgDefault = parcelHelpers.interopDefault(_metamaskFoxSvg);
var _walletConnectSvg = require("../../assets/img/wallet-connect.svg");
var _walletConnectSvgDefault = parcelHelpers.interopDefault(_walletConnectSvg);
var _coinbaseLogoJpeg = require("../../assets/img/coinbase_logo.jpeg");
var _coinbaseLogoJpegDefault = parcelHelpers.interopDefault(_coinbaseLogoJpeg);
var _useWallet = require("use-wallet");
var _s = $RefreshSig$();
const useStyles = _styles.makeStyles((theme)=>({
        paper: {
            position: 'absolute',
            width: '400px',
            maxWidth: '100%',
            backgroundColor: 'rgba(255,255,255,1)',
            boxShadow: theme.shadows[5],
            padding: theme.spacing(4),
            outline: 'none'
        }
    })
);
const WalletProviderModal = ({ open , handleClose  })=>{
    _s();
    const classes = useStyles();
    const { account , connect  } = _useWallet.useWallet();
    _react.useEffect(()=>{
        if (account) handleClose();
    });
    return /*#__PURE__*/ _reactDefault.default.createElement(_core.Modal, {
        "aria-labelledby": "connect a wallet",
        "aria-describedby": "connect your crypto wallet",
        open: open,
        style: {
            display: 'flex',
            alignItems: 'center',
            justifyContent: 'center'
        },
        onClose: handleClose,
        __source: {
            fileName: "src/components/WalletProviderModal/WalletProviderModal.js",
            lineNumber: 33,
            columnNumber: 5
        },
        __self: undefined
    }, /*#__PURE__*/ _reactDefault.default.createElement("div", {
        className: classes.paper,
        __source: {
            fileName: "src/components/WalletProviderModal/WalletProviderModal.js",
            lineNumber: 40,
            columnNumber: 7
        },
        __self: undefined
    }, /*#__PURE__*/ _reactDefault.default.createElement("h2", {
        __source: {
            fileName: "src/components/WalletProviderModal/WalletProviderModal.js",
            lineNumber: 41,
            columnNumber: 9
        },
        __self: undefined
    }, "Connect Wallet"), /*#__PURE__*/ _reactDefault.default.createElement(_core.List, {
        component: "nav",
        "aria-label": "main mailbox folders",
        __source: {
            fileName: "src/components/WalletProviderModal/WalletProviderModal.js",
            lineNumber: 42,
            columnNumber: 9
        },
        __self: undefined
    }, /*#__PURE__*/ _reactDefault.default.createElement(_walletCardDefault.default, {
        icon: /*#__PURE__*/ _reactDefault.default.createElement("img", {
            src: _metamaskFoxSvgDefault.default,
            alt: "Metamask logo",
            style: {
                height: 32
            }
        }),
        onConnect: ()=>{
            connect('injected');
        },
        title: "Metamask",
        __source: {
            fileName: "src/components/WalletProviderModal/WalletProviderModal.js",
            lineNumber: 43,
            columnNumber: 11
        },
        __self: undefined
    }), /*#__PURE__*/ _reactDefault.default.createElement(_walletCardDefault.default, {
        icon: /*#__PURE__*/ _reactDefault.default.createElement("img", {
            src: _walletConnectSvgDefault.default,
            alt: "Wallet Connect logo",
            style: {
                height: 24,
                color: 'white'
            }
        }),
        onConnect: ()=>{
            connect('walletconnect');
        },
        title: "WalletConnect",
        __source: {
            fileName: "src/components/WalletProviderModal/WalletProviderModal.js",
            lineNumber: 50,
            columnNumber: 11
        },
        __self: undefined
    }), /*#__PURE__*/ _reactDefault.default.createElement(_walletCardDefault.default, {
        icon: /*#__PURE__*/ _reactDefault.default.createElement("img", {
            src: _coinbaseLogoJpegDefault.default,
            alt: "Coinbase wallet logo",
            style: {
                height: 32,
                color: 'white'
            }
        }),
        onConnect: ()=>{
            connect('walletlink');
        },
        title: "Coinbase Wallet",
        __source: {
            fileName: "src/components/WalletProviderModal/WalletProviderModal.js",
            lineNumber: 57,
            columnNumber: 11
        },
        __self: undefined
    }))));
};
_s(WalletProviderModal, "ayvLka0xFIPz2YXKrpSQcqaRs30=", false, function() {
    return [
        useStyles,
        _useWallet.useWallet
    ];
});
_c = WalletProviderModal;
exports.default = WalletProviderModal;
var _c;
$RefreshReg$(_c, "WalletProviderModal");

  $parcel$ReactRefreshHelpers$1b5f.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
},{"react":"21dqq","./WalletCard":"huv8y","@material-ui/core":"kpEHc","@material-ui/core/styles":"gK9qy","../../assets/img/metamask-fox.svg":"iJYsF","../../assets/img/wallet-connect.svg":"8bmy4","../../assets/img/coinbase_logo.jpeg":"bqkKk","use-wallet":"7RAr5","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3","@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js":"km3Ru"}],"huv8y":[function(require,module,exports) {
var $parcel$ReactRefreshHelpers$f844 = require("@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
$parcel$ReactRefreshHelpers$f844.prelude(module);

try {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _core = require("@material-ui/core");
const WalletCard = ({ icon , onConnect , title  })=>/*#__PURE__*/ _reactDefault.default.createElement(_core.Button, {
        fullWidth: true,
        onClick: onConnect,
        className: "wallet-button",
        __source: {
            fileName: "src/components/WalletProviderModal/WalletCard.js",
            lineNumber: 5,
            columnNumber: 3
        },
        __self: undefined
    }, /*#__PURE__*/ _reactDefault.default.createElement("span", {
        style: {
            marginRight: '1rem',
            height: '2rem'
        },
        __source: {
            fileName: "src/components/WalletProviderModal/WalletCard.js",
            lineNumber: 6,
            columnNumber: 5
        },
        __self: undefined
    }, icon), /*#__PURE__*/ _reactDefault.default.createElement("span", {
        className: "walletconnecttitle",
        __source: {
            fileName: "src/components/WalletProviderModal/WalletCard.js",
            lineNumber: 7,
            columnNumber: 5
        },
        __self: undefined
    }, title))
;
_c = WalletCard;
exports.default = WalletCard; // :)
var _c;
$RefreshReg$(_c, "WalletCard");

  $parcel$ReactRefreshHelpers$f844.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
},{"react":"21dqq","@material-ui/core":"kpEHc","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3","@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js":"km3Ru"}],"iJYsF":[function(require,module,exports) {
module.exports = require('./helpers/bundle-url').getBundleURL('5NaRA') + "metamask-fox.8b57f145.svg" + "?" + Date.now();

},{"./helpers/bundle-url":"lgJ39"}],"8bmy4":[function(require,module,exports) {
module.exports = require('./helpers/bundle-url').getBundleURL('5NaRA') + "wallet-connect.a79f6f0a.svg" + "?" + Date.now();

},{"./helpers/bundle-url":"lgJ39"}],"bqkKk":[function(require,module,exports) {
module.exports = require('./helpers/bundle-url').getBundleURL('5NaRA') + "coinbase_logo.f64b58c3.jpeg" + "?" + Date.now();

},{"./helpers/bundle-url":"lgJ39"}],"ajG3P":[function(require,module,exports) {
var $parcel$ReactRefreshHelpers$376d = require("@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
$parcel$ReactRefreshHelpers$376d.prelude(module);

try {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _styledComponents = require("styled-components");
var _styledComponentsDefault = parcelHelpers.interopDefault(_styledComponents);
var _useTokenBalance = require("../../hooks/useTokenBalance");
var _useTokenBalanceDefault = parcelHelpers.interopDefault(_useTokenBalance);
var _formatBalance = require("../../utils/formatBalance");
var _label = require("../Label");
var _labelDefault = parcelHelpers.interopDefault(_label);
var _modal = require("../Modal");
var _modalDefault = parcelHelpers.interopDefault(_modal);
var _modalTitle = require("../ModalTitle");
var _modalTitleDefault = parcelHelpers.interopDefault(_modalTitle);
var _useGrapeFinance = require("../../hooks/useGrapeFinance");
var _useGrapeFinanceDefault = parcelHelpers.interopDefault(_useGrapeFinance);
var _tokenSymbol = require("../TokenSymbol");
var _tokenSymbolDefault = parcelHelpers.interopDefault(_tokenSymbol);
var _core = require("@material-ui/core");
var _s = $RefreshSig$();
const AccountModal = ({ onDismiss  })=>{
    _s();
    const grapeFinance = _useGrapeFinanceDefault.default();
    const grapeBalance = _useTokenBalanceDefault.default(grapeFinance.GRAPE);
    const displayGrapeBalance = _react.useMemo(()=>_formatBalance.getDisplayBalance(grapeBalance)
    , [
        grapeBalance
    ]);
    const wineBalance = _useTokenBalanceDefault.default(grapeFinance.WINE);
    const displayWineBalance = _react.useMemo(()=>_formatBalance.getDisplayBalance(wineBalance)
    , [
        wineBalance
    ]);
    const gbondBalance = _useTokenBalanceDefault.default(grapeFinance.GBOND);
    const displayGbondBalance = _react.useMemo(()=>_formatBalance.getDisplayBalance(gbondBalance)
    , [
        gbondBalance
    ]);
    const matches = _core.useMediaQuery('(min-width:900px)');
    return /*#__PURE__*/ _reactDefault.default.createElement(_modalDefault.default, {
        __source: {
            fileName: "src/components/Nav/AccountModal.tsx",
            lineNumber: 28,
            columnNumber: 5
        },
        __self: undefined
    }, /*#__PURE__*/ _reactDefault.default.createElement(_modalTitleDefault.default, {
        text: "My Wallet",
        __source: {
            fileName: "src/components/Nav/AccountModal.tsx",
            lineNumber: 29,
            columnNumber: 7
        },
        __self: undefined
    }), /*#__PURE__*/ _reactDefault.default.createElement(Balances, {
        style: {
            display: 'flex',
            flexDirection: matches ? 'row' : 'column'
        },
        __source: {
            fileName: "src/components/Nav/AccountModal.tsx",
            lineNumber: 31,
            columnNumber: 7
        },
        __self: undefined
    }, /*#__PURE__*/ _reactDefault.default.createElement(StyledBalanceWrapper, {
        style: {
            paddingBottom: '15px'
        },
        __source: {
            fileName: "src/components/Nav/AccountModal.tsx",
            lineNumber: 32,
            columnNumber: 9
        },
        __self: undefined
    }, /*#__PURE__*/ _reactDefault.default.createElement(_tokenSymbolDefault.default, {
        symbol: "GRAPE",
        __source: {
            fileName: "src/components/Nav/AccountModal.tsx",
            lineNumber: 33,
            columnNumber: 11
        },
        __self: undefined
    }), /*#__PURE__*/ _reactDefault.default.createElement(StyledBalance, {
        __source: {
            fileName: "src/components/Nav/AccountModal.tsx",
            lineNumber: 34,
            columnNumber: 11
        },
        __self: undefined
    }, /*#__PURE__*/ _reactDefault.default.createElement(StyledValue, {
        __source: {
            fileName: "src/components/Nav/AccountModal.tsx",
            lineNumber: 35,
            columnNumber: 13
        },
        __self: undefined
    }, displayGrapeBalance), /*#__PURE__*/ _reactDefault.default.createElement(_labelDefault.default, {
        text: "GRAPE Available",
        __source: {
            fileName: "src/components/Nav/AccountModal.tsx",
            lineNumber: 36,
            columnNumber: 13
        },
        __self: undefined
    }))), /*#__PURE__*/ _reactDefault.default.createElement(StyledBalanceWrapper, {
        style: {
            paddingBottom: '15px'
        },
        __source: {
            fileName: "src/components/Nav/AccountModal.tsx",
            lineNumber: 40,
            columnNumber: 9
        },
        __self: undefined
    }, /*#__PURE__*/ _reactDefault.default.createElement(_tokenSymbolDefault.default, {
        symbol: "WINE",
        __source: {
            fileName: "src/components/Nav/AccountModal.tsx",
            lineNumber: 41,
            columnNumber: 11
        },
        __self: undefined
    }), /*#__PURE__*/ _reactDefault.default.createElement(StyledBalance, {
        __source: {
            fileName: "src/components/Nav/AccountModal.tsx",
            lineNumber: 42,
            columnNumber: 11
        },
        __self: undefined
    }, /*#__PURE__*/ _reactDefault.default.createElement(StyledValue, {
        __source: {
            fileName: "src/components/Nav/AccountModal.tsx",
            lineNumber: 43,
            columnNumber: 13
        },
        __self: undefined
    }, displayWineBalance), /*#__PURE__*/ _reactDefault.default.createElement(_labelDefault.default, {
        text: "WINE Available",
        __source: {
            fileName: "src/components/Nav/AccountModal.tsx",
            lineNumber: 44,
            columnNumber: 13
        },
        __self: undefined
    }))), /*#__PURE__*/ _reactDefault.default.createElement(StyledBalanceWrapper, {
        style: {
            paddingBottom: '15px'
        },
        __source: {
            fileName: "src/components/Nav/AccountModal.tsx",
            lineNumber: 48,
            columnNumber: 9
        },
        __self: undefined
    }, /*#__PURE__*/ _reactDefault.default.createElement(_tokenSymbolDefault.default, {
        symbol: "GBOND",
        __source: {
            fileName: "src/components/Nav/AccountModal.tsx",
            lineNumber: 49,
            columnNumber: 11
        },
        __self: undefined
    }), /*#__PURE__*/ _reactDefault.default.createElement(StyledBalance, {
        __source: {
            fileName: "src/components/Nav/AccountModal.tsx",
            lineNumber: 50,
            columnNumber: 11
        },
        __self: undefined
    }, /*#__PURE__*/ _reactDefault.default.createElement(StyledValue, {
        __source: {
            fileName: "src/components/Nav/AccountModal.tsx",
            lineNumber: 51,
            columnNumber: 13
        },
        __self: undefined
    }, displayGbondBalance), /*#__PURE__*/ _reactDefault.default.createElement(_labelDefault.default, {
        text: "GBOND Available",
        __source: {
            fileName: "src/components/Nav/AccountModal.tsx",
            lineNumber: 52,
            columnNumber: 13
        },
        __self: undefined
    })))));
};
_s(AccountModal, "R2pylkfeLpQ6m2IxhHFJr04y4Qc=", false, function() {
    return [
        _useGrapeFinanceDefault.default,
        _useTokenBalanceDefault.default,
        _useTokenBalanceDefault.default,
        _useTokenBalanceDefault.default,
        _core.useMediaQuery
    ];
});
_c = AccountModal;
const StyledValue = _styledComponentsDefault.default.div`
  //color: ${(props)=>props.theme.color.grey[300]
};
  font-size: 30px;
  font-weight: 700;
`;
_c1 = StyledValue;
const StyledBalance = _styledComponentsDefault.default.div`
  align-items: center;
  display: flex;
  flex-direction: column;
`;
_c2 = StyledBalance;
const Balances = _styledComponentsDefault.default.div`
  display: flex;
  flex-direction: row;
  justify-content: center;
  margin-bottom: ${(props)=>props.theme.spacing[4]
}px;
`;
_c3 = Balances;
const StyledBalanceWrapper = _styledComponentsDefault.default.div`
  align-items: center;
  display: flex;
  flex-direction: column;
  margin: 0 ${(props)=>props.theme.spacing[3]
}px;
`;
_c4 = StyledBalanceWrapper;
exports.default = AccountModal;
var _c, _c1, _c2, _c3, _c4;
$RefreshReg$(_c, "AccountModal");
$RefreshReg$(_c1, "StyledValue");
$RefreshReg$(_c2, "StyledBalance");
$RefreshReg$(_c3, "Balances");
$RefreshReg$(_c4, "StyledBalanceWrapper");

  $parcel$ReactRefreshHelpers$376d.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
},{"react":"21dqq","styled-components":"1U3k6","../../hooks/useTokenBalance":"1Zn6M","../../utils/formatBalance":"ejKuZ","../Label":"5w6fJ","../Modal":"3jdgY","../ModalTitle":"iclKM","../../hooks/useGrapeFinance":"i97FZ","../TokenSymbol":"izew0","@material-ui/core":"kpEHc","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3","@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js":"km3Ru"}],"1Zn6M":[function(require,module,exports) {
var $parcel$ReactRefreshHelpers$b747 = require("@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
$parcel$ReactRefreshHelpers$b747.prelude(module);

try {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _react = require("react");
var _ethers = require("ethers");
var _useGrapeFinance = require("./useGrapeFinance");
var _useGrapeFinanceDefault = parcelHelpers.interopDefault(_useGrapeFinance);
var _config = require("../config");
var _configDefault = parcelHelpers.interopDefault(_config);
const useTokenBalance = (token)=>{
    const [balance, setBalance] = _react.useState(_ethers.BigNumber.from(0));
    const grapeFinance = _useGrapeFinanceDefault.default();
    const isUnlocked = grapeFinance?.isUnlocked;
    const fetchBalance = _react.useCallback(async ()=>{
        setBalance(await token.balanceOf(grapeFinance.myAccount));
    }, [
        token,
        grapeFinance.myAccount
    ]);
    _react.useEffect(()=>{
        if (isUnlocked) {
            fetchBalance().catch((err)=>console.error(`Failed to fetch token balance: ${err.stack}`)
            );
            let refreshInterval = setInterval(fetchBalance, _configDefault.default.refreshInterval);
            return ()=>clearInterval(refreshInterval)
            ;
        }
    }, [
        isUnlocked,
        token,
        fetchBalance,
        grapeFinance
    ]);
    return balance;
};
exports.default = useTokenBalance;

  $parcel$ReactRefreshHelpers$b747.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
},{"react":"21dqq","ethers":"hdHML","./useGrapeFinance":"i97FZ","../config":"gTux2","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3","@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js":"km3Ru"}],"5w6fJ":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>_labelDefault.default
);
var _label = require("./Label");
var _labelDefault = parcelHelpers.interopDefault(_label);

},{"./Label":"br0MS","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"br0MS":[function(require,module,exports) {
var $parcel$ReactRefreshHelpers$1efb = require("@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
$parcel$ReactRefreshHelpers$1efb.prelude(module);

try {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _styledComponents = require("styled-components");
var _styledComponentsDefault = parcelHelpers.interopDefault(_styledComponents);
var _s = $RefreshSig$();
const Label = ({ text , variant ='secondary' , color: customColor  })=>{
    _s();
    const { color  } = _react.useContext(_styledComponents.ThemeContext);
    let labelColor;
    if (customColor) labelColor = customColor;
    else {
        if (variant === 'primary') labelColor = color.primary.main;
        else if (variant === 'secondary') labelColor = '#2c2560'; //color.secondary.main;
        else if (variant === 'normal') labelColor = '#2c2560'; //color.grey[300];
        else if (variant === 'yellow') labelColor = '#f9d749';
    }
    return /*#__PURE__*/ _reactDefault.default.createElement(StyledLabel, {
        color: labelColor,
        __source: {
            fileName: "src/components/Label/Label.tsx",
            lineNumber: 27,
            columnNumber: 10
        },
        __self: undefined
    }, text);
};
_s(Label, "SHR1zQmlRpU6fBZodTmNaFPyPhU=");
_c = Label;
const StyledLabel = _styledComponentsDefault.default.div`
  color: ${(props)=>props.color
};
`;
_c1 = StyledLabel;
exports.default = Label;
var _c, _c1;
$RefreshReg$(_c, "Label");
$RefreshReg$(_c1, "StyledLabel");

  $parcel$ReactRefreshHelpers$1efb.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
},{"react":"21dqq","styled-components":"1U3k6","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3","@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js":"km3Ru"}],"3jdgY":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>_modalDefault.default
);
var _modal = require("./Modal");
var _modalDefault = parcelHelpers.interopDefault(_modal);

},{"./Modal":"epenf","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"epenf":[function(require,module,exports) {
var $parcel$ReactRefreshHelpers$835c = require("@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
$parcel$ReactRefreshHelpers$835c.prelude(module);

try {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _styledComponents = require("styled-components");
var _styledComponentsDefault = parcelHelpers.interopDefault(_styledComponents);
var _card = require("../Card");
var _cardDefault = parcelHelpers.interopDefault(_card);
var _cardContent = require("../CardContent");
var _cardContentDefault = parcelHelpers.interopDefault(_cardContent);
var _container = require("../Container");
var _containerDefault = parcelHelpers.interopDefault(_container);
const Modal = ({ children  })=>{
    return /*#__PURE__*/ _reactDefault.default.createElement(_containerDefault.default, {
        size: "sm",
        __source: {
            fileName: "src/components/Modal/Modal.tsx",
            lineNumber: 14,
            columnNumber: 5
        },
        __self: undefined
    }, /*#__PURE__*/ _reactDefault.default.createElement(StyledModal, {
        __source: {
            fileName: "src/components/Modal/Modal.tsx",
            lineNumber: 15,
            columnNumber: 7
        },
        __self: undefined
    }, /*#__PURE__*/ _reactDefault.default.createElement(_cardDefault.default, {
        __source: {
            fileName: "src/components/Modal/Modal.tsx",
            lineNumber: 16,
            columnNumber: 9
        },
        __self: undefined
    }, /*#__PURE__*/ _reactDefault.default.createElement(_cardContentDefault.default, {
        __source: {
            fileName: "src/components/Modal/Modal.tsx",
            lineNumber: 17,
            columnNumber: 11
        },
        __self: undefined
    }, children))));
};
_c = Modal;
const StyledModal = _styledComponentsDefault.default.div`
  border-radius: 12px;
  position: relative;
  max-height: 500px;
  overflow-y: auto;
  margin-top:30px;
  margin-bottom:30px;

`;
_c1 = StyledModal;
exports.default = Modal;
var _c, _c1;
$RefreshReg$(_c, "Modal");
$RefreshReg$(_c1, "StyledModal");

  $parcel$ReactRefreshHelpers$835c.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
},{"react":"21dqq","styled-components":"1U3k6","../Card":"4ybgm","../CardContent":"aR7uE","../Container":"jwMxg","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3","@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js":"km3Ru"}],"4ybgm":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>_cardDefault.default
);
var _card = require("./Card");
var _cardDefault = parcelHelpers.interopDefault(_card);

},{"./Card":"ev2fD","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"ev2fD":[function(require,module,exports) {
var $parcel$ReactRefreshHelpers$7701 = require("@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
$parcel$ReactRefreshHelpers$7701.prelude(module);

try {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _styledComponents = require("styled-components");
var _styledComponentsDefault = parcelHelpers.interopDefault(_styledComponents);
const Card = ({ children  })=>/*#__PURE__*/ _reactDefault.default.createElement(StyledCard, {
        __source: {
            fileName: "src/components/Card/Card.tsx",
            lineNumber: 4,
            columnNumber: 40
        },
        __self: undefined
    }, children)
;
_c = Card;
const StyledCard = _styledComponentsDefault.default.div`
  background-color: rgba(255, 255, 255, 0.9);
  color: #2c2560 !important;
  display: flex;
  flex: 1;
  flex-direction: column;
`;
_c1 = StyledCard;
exports.default = Card;
var _c, _c1;
$RefreshReg$(_c, "Card");
$RefreshReg$(_c1, "StyledCard");

  $parcel$ReactRefreshHelpers$7701.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
},{"react":"21dqq","styled-components":"1U3k6","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3","@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js":"km3Ru"}],"aR7uE":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>_cardContentDefault.default
);
var _cardContent = require("./CardContent");
var _cardContentDefault = parcelHelpers.interopDefault(_cardContent);

},{"./CardContent":"eg06V","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"eg06V":[function(require,module,exports) {
var $parcel$ReactRefreshHelpers$a503 = require("@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
$parcel$ReactRefreshHelpers$a503.prelude(module);

try {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _styledComponents = require("styled-components");
var _styledComponentsDefault = parcelHelpers.interopDefault(_styledComponents);
const CardContent = ({ children  })=>/*#__PURE__*/ _reactDefault.default.createElement(StyledCardContent, {
        __source: {
            fileName: "src/components/CardContent/CardContent.tsx",
            lineNumber: 4,
            columnNumber: 47
        },
        __self: undefined
    }, children)
;
_c = CardContent;
const StyledCardContent = _styledComponentsDefault.default.div`
  display: flex;
  flex: 1;
  flex-direction: column;
  padding: ${(props)=>props.theme.spacing[4]
}px;
`;
_c1 = StyledCardContent;
exports.default = CardContent;
var _c, _c1;
$RefreshReg$(_c, "CardContent");
$RefreshReg$(_c1, "StyledCardContent");

  $parcel$ReactRefreshHelpers$a503.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
},{"react":"21dqq","styled-components":"1U3k6","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3","@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js":"km3Ru"}],"jwMxg":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>_containerDefault.default
);
var _container = require("./Container");
var _containerDefault = parcelHelpers.interopDefault(_container);

},{"./Container":"2U0zP","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"2U0zP":[function(require,module,exports) {
var $parcel$ReactRefreshHelpers$8a9f = require("@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
$parcel$ReactRefreshHelpers$8a9f.prelude(module);

try {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _styledComponents = require("styled-components");
var _styledComponentsDefault = parcelHelpers.interopDefault(_styledComponents);
var _s = $RefreshSig$();
const Container = ({ children , size ='md'  })=>{
    _s();
    const { siteWidth  } = _react.useContext(_styledComponents.ThemeContext);
    let width;
    switch(size){
        case 'sm':
            width = siteWidth / 2;
            break;
        case 'md':
            width = siteWidth * 2 / 3;
            break;
        case 'lg':
        default:
            width = siteWidth;
    }
    return /*#__PURE__*/ _reactDefault.default.createElement(StyledContainer, {
        width: width,
        __source: {
            fileName: "src/components/Container/Container.tsx",
            lineNumber: 23,
            columnNumber: 10
        },
        __self: undefined
    }, children);
};
_s(Container, "XoLngrlODU8jRWqeM4DEolUpsC4=");
_c = Container;
const StyledContainer = _styledComponentsDefault.default.div`
  box-sizing: border-box;
  margin: 0 auto;
  max-width: ${(props)=>props.width
}px;
  padding: 0 ${(props)=>props.theme.spacing[4]
}px;
  width: 100%;
`;
_c1 = StyledContainer;
exports.default = Container;
var _c, _c1;
$RefreshReg$(_c, "Container");
$RefreshReg$(_c1, "StyledContainer");

  $parcel$ReactRefreshHelpers$8a9f.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
},{"react":"21dqq","styled-components":"1U3k6","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3","@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js":"km3Ru"}],"iclKM":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>_modalTitleDefault.default
);
var _modalTitle = require("./ModalTitle");
var _modalTitleDefault = parcelHelpers.interopDefault(_modalTitle);

},{"./ModalTitle":"keLct","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"keLct":[function(require,module,exports) {
var $parcel$ReactRefreshHelpers$c96f = require("@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
$parcel$ReactRefreshHelpers$c96f.prelude(module);

try {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _styledComponents = require("styled-components");
var _styledComponentsDefault = parcelHelpers.interopDefault(_styledComponents);
const ModalTitle = ({ text  })=>/*#__PURE__*/ _reactDefault.default.createElement(StyledModalTitle, {
        __source: {
            fileName: "src/components/ModalTitle/ModalTitle.tsx",
            lineNumber: 8,
            columnNumber: 59
        },
        __self: undefined
    }, text)
;
_c = ModalTitle;
const StyledModalTitle = _styledComponentsDefault.default.div`
  align-items: center;
  color: #930993;
  display: flex;
  font-size: 1.5rem;
  font-weight: 700;
  height: ${(props)=>props.theme.topBarSize
}px;
  justify-content: center;
  margin-top: ${(props)=>-props.theme.spacing[4]
}px;
  text-transform: uppercase;
`;
_c1 = StyledModalTitle;
exports.default = ModalTitle;
var _c, _c1;
$RefreshReg$(_c, "ModalTitle");
$RefreshReg$(_c1, "StyledModalTitle");

  $parcel$ReactRefreshHelpers$c96f.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
},{"react":"21dqq","styled-components":"1U3k6","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3","@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js":"km3Ru"}],"izew0":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>_tokenSymbolDefault.default
);
var _tokenSymbol = require("./TokenSymbol");
var _tokenSymbolDefault = parcelHelpers.interopDefault(_tokenSymbol);

},{"./TokenSymbol":"ggsqD","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"ggsqD":[function(require,module,exports) {
var $parcel$ReactRefreshHelpers$b49f = require("@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
$parcel$ReactRefreshHelpers$b49f.prelude(module);

try {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
//Graveyard ecosystem logos
var _grapePng = require("../../assets/img/grape.png");
var _grapePngDefault = parcelHelpers.interopDefault(_grapePng);
var _gsharePng = require("../../assets/img/gshare.png");
var _gsharePngDefault = parcelHelpers.interopDefault(_gsharePng);
var _gbondPng = require("../../assets/img/gbond.png");
var _gbondPngDefault = parcelHelpers.interopDefault(_gbondPng);
var _mimPng = require("../../assets/img/mim.png");
var _mimPngDefault = parcelHelpers.interopDefault(_mimPng);
var _wavaxPng = require("../../assets/img/wavax.png");
var _wavaxPngDefault = parcelHelpers.interopDefault(_wavaxPng);
var _grapeWinePng = require("../../assets/img/grape-wine.png");
var _grapeWinePngDefault = parcelHelpers.interopDefault(_grapeWinePng);
var _grapeMimPng = require("../../assets/img/grape-mim.png");
var _grapeMimPngDefault = parcelHelpers.interopDefault(_grapeMimPng);
var _gshareMimPng = require("../../assets/img/gshare-mim.png");
var _gshareMimPngDefault = parcelHelpers.interopDefault(_gshareMimPng);
var _wampPng = require("../../assets/img/WAMP.png");
var _wampPngDefault = parcelHelpers.interopDefault(_wampPng);
var _hshareWinePng = require("../../assets/img/hshare-wine.png");
var _hshareWinePngDefault = parcelHelpers.interopDefault(_hshareWinePng);
var _gnodePng = require("../../assets/img/gnode.png");
var _gnodePngDefault = parcelHelpers.interopDefault(_gnodePng);
const logosBySymbol = {
    //Real tokens
    //=====================
    GRAPE: _grapePngDefault.default,
    WAVAX: _wavaxPngDefault.default,
    WINE: _gsharePngDefault.default,
    GBOND: _gbondPngDefault.default,
    MIM: _mimPngDefault.default,
    WAMP: _wampPngDefault.default,
    HSHARE: _wampPngDefault.default,
    GNODE: _gnodePngDefault.default,
    'GRAPE-MIM-LP': _grapeMimPngDefault.default,
    'GRAPE-WINE-LP': _grapeWinePngDefault.default,
    'WINE-MIM-LP': _gshareMimPngDefault.default,
    'HSHARE-WINE-LP': _hshareWinePngDefault.default
};
const TokenSymbol = ({ symbol  })=>{
    if (!logosBySymbol[symbol]) throw new Error(`Invalid Token Logo symbol: ${symbol}`);
    if (symbol === 'GRAPE-MIM-LP' || symbol === 'WINE-MIM-LP' || symbol === 'GRAPE-WINE-LP' || symbol === 'HSHARE-WINE-LP') return /*#__PURE__*/ _reactDefault.default.createElement("img", {
        src: logosBySymbol[symbol],
        alt: `${symbol} Logo`,
        width: 95,
        height: 60,
        __source: {
            fileName: "src/components/TokenSymbol/TokenSymbol.tsx",
            lineNumber: 46,
            columnNumber: 12
        },
        __self: undefined
    });
    else if (symbol === 'MIM' || symbol === 'WAVAX' || symbol === 'WAMP') return /*#__PURE__*/ _reactDefault.default.createElement("img", {
        src: logosBySymbol[symbol],
        alt: `${symbol} Logo`,
        width: 65,
        height: 65,
        __source: {
            fileName: "src/components/TokenSymbol/TokenSymbol.tsx",
            lineNumber: 48,
            columnNumber: 12
        },
        __self: undefined
    });
    else return /*#__PURE__*/ _reactDefault.default.createElement("img", {
        src: logosBySymbol[symbol],
        alt: `${symbol} Logo`,
        width: 55,
        height: 68,
        __source: {
            fileName: "src/components/TokenSymbol/TokenSymbol.tsx",
            lineNumber: 50,
            columnNumber: 12
        },
        __self: undefined
    });
};
_c = TokenSymbol;
exports.default = TokenSymbol;
var _c;
$RefreshReg$(_c, "TokenSymbol");

  $parcel$ReactRefreshHelpers$b49f.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
},{"react":"21dqq","../../assets/img/grape.png":"6hKbo","../../assets/img/gshare.png":"dMfJu","../../assets/img/gbond.png":"1tUVM","../../assets/img/mim.png":"8rV3l","../../assets/img/wavax.png":"8yzPP","../../assets/img/grape-wine.png":"hfDRm","../../assets/img/grape-mim.png":"3giJg","../../assets/img/gshare-mim.png":"icBr8","../../assets/img/WAMP.png":"7R4mK","../../assets/img/hshare-wine.png":"axyfk","../../assets/img/gnode.png":"hdw7I","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3","@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js":"km3Ru"}],"6hKbo":[function(require,module,exports) {
module.exports = require('./helpers/bundle-url').getBundleURL('5NaRA') + "grape.e08279e1.png" + "?" + Date.now();

},{"./helpers/bundle-url":"lgJ39"}],"dMfJu":[function(require,module,exports) {
module.exports = require('./helpers/bundle-url').getBundleURL('5NaRA') + "gshare.99112c44.png" + "?" + Date.now();

},{"./helpers/bundle-url":"lgJ39"}],"1tUVM":[function(require,module,exports) {
module.exports = require('./helpers/bundle-url').getBundleURL('5NaRA') + "gbond.bdbf2a60.png" + "?" + Date.now();

},{"./helpers/bundle-url":"lgJ39"}],"8rV3l":[function(require,module,exports) {
module.exports = require('./helpers/bundle-url').getBundleURL('5NaRA') + "mim.0260b73d.png" + "?" + Date.now();

},{"./helpers/bundle-url":"lgJ39"}],"8yzPP":[function(require,module,exports) {
module.exports = require('./helpers/bundle-url').getBundleURL('5NaRA') + "wavax.d43280f0.png" + "?" + Date.now();

},{"./helpers/bundle-url":"lgJ39"}],"hfDRm":[function(require,module,exports) {
module.exports = require('./helpers/bundle-url').getBundleURL('5NaRA') + "grape-wine.6bc295ff.png" + "?" + Date.now();

},{"./helpers/bundle-url":"lgJ39"}],"3giJg":[function(require,module,exports) {
module.exports = require('./helpers/bundle-url').getBundleURL('5NaRA') + "grape-mim.b7d76c08.png" + "?" + Date.now();

},{"./helpers/bundle-url":"lgJ39"}],"icBr8":[function(require,module,exports) {
module.exports = require('./helpers/bundle-url').getBundleURL('5NaRA') + "gshare-mim.e4c26a6d.png" + "?" + Date.now();

},{"./helpers/bundle-url":"lgJ39"}],"7R4mK":[function(require,module,exports) {
module.exports = require('./helpers/bundle-url').getBundleURL('5NaRA') + "WAMP.57920906.png" + "?" + Date.now();

},{"./helpers/bundle-url":"lgJ39"}],"axyfk":[function(require,module,exports) {
module.exports = require('./helpers/bundle-url').getBundleURL('5NaRA') + "hshare-wine.4d71dce4.png" + "?" + Date.now();

},{"./helpers/bundle-url":"lgJ39"}],"hdw7I":[function(require,module,exports) {
module.exports = require('./helpers/bundle-url').getBundleURL('5NaRA') + "gnode.2414e4c6.png" + "?" + Date.now();

},{"./helpers/bundle-url":"lgJ39"}],"2CFdJ":[function(require,module,exports) {
var $parcel$ReactRefreshHelpers$6610 = require("@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
$parcel$ReactRefreshHelpers$6610.prelude(module);

try {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "useENS", ()=>useENS
);
var _providers = require("@ethersproject/providers");
var _react = require("react");
function useENS(address) {
    const [ensName, setENSName] = _react.useState();
    _react.useEffect(()=>{
        async function resolveENS() {
            if (address) {
                const provider = await _providers.getDefaultProvider();
                const name = await provider.lookupAddress(address);
                if (name) setENSName(name);
            }
        }
        resolveENS();
    }, [
        address
    ]);
    return {
        ensName
    };
}

  $parcel$ReactRefreshHelpers$6610.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
},{"@ethersproject/providers":"bErvj","react":"21dqq","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3","@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js":"km3Ru"}],"j8mgH":[function(require,module,exports) {
"use strict";
var __createBinding = this && this.__createBinding || (Object.create ? function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, {
        enumerable: true,
        get: function() {
            return m[k];
        }
    });
} : function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
});
var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function(o, v) {
    Object.defineProperty(o, "default", {
        enumerable: true,
        value: v
    });
} : function(o, v) {
    o["default"] = v;
});
var __importStar = this && this.__importStar || function(mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) {
        for(var k in mod)if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    }
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = this && this.__importDefault || function(mod) {
    return mod && mod.__esModule ? mod : {
        "default": mod
    };
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.Image = void 0;
const providers_1 = require("@ethersproject/providers");
const react_1 = __importStar(require("react"));
const Image_1 = __importDefault(require("./Image"));
var Image_2 = require("./Image");
Object.defineProperty(exports, "Image", {
    enumerable: true,
    get: function() {
        return __importDefault(Image_2).default;
    }
});
function Davatar({ size , address , provider , graphApiKey , generatedAvatarType , defaultComponent , style ,  }) {
    const [avatarUri, setAvatarUri] = (0, react_1.useState)(null);
    const [ethersProvider, setEthersProvider] = (0, react_1.useState)(null);
    (0, react_1.useEffect)(()=>{
        var _a, _b;
        let eth = (0, providers_1.getDefaultProvider)();
        let chainId = null;
        let isEthers = false;
        // carlos: Only use the provided provider if ENS is actually on that chain
        if (provider) {
            if ((_a = provider.currentProvider) === null || _a === void 0 ? void 0 : _a.chainId) chainId = parseInt(provider.currentProvider.chainId);
            else if ((_b = provider.network) === null || _b === void 0 ? void 0 : _b.chainId) {
                isEthers = true;
                chainId = provider.network.chainId;
            }
            if ([
                1,
                3,
                4,
                5
            ].includes(chainId)) eth = isEthers ? provider : new providers_1.Web3Provider(provider.currentProvider);
            else chainId = 1;
        }
        setEthersProvider(eth);
        eth.lookupAddress(address).then((ensName)=>{
            if (ensName) eth.getResolver(ensName).then((resolver)=>{
                resolver.getText('avatar').then((avatar)=>{
                    if (avatar && avatar.length > 0) setAvatarUri(avatar);
                });
            });
        });
    }, [
        address,
        provider
    ]);
    return react_1.default.createElement(Image_1.default, {
        size: size,
        address: address,
        uri: avatarUri,
        graphApiKey: graphApiKey,
        provider: ethersProvider,
        generatedAvatarType: generatedAvatarType,
        defaultComponent: defaultComponent,
        style: style
    });
}
exports.default = Davatar;

},{"@ethersproject/providers":"b79rc","react":"21dqq","./Image":"irDag"}],"b79rc":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
////////////////////////
// Exports
parcelHelpers.export(exports, "Provider", ()=>// Abstract Providers (or Abstract-ish)
    _abstractProvider.Provider
);
parcelHelpers.export(exports, "BaseProvider", ()=>_baseProvider.BaseProvider
);
parcelHelpers.export(exports, "Resolver", ()=>_baseProvider.Resolver
);
parcelHelpers.export(exports, "UrlJsonRpcProvider", ()=>_urlJsonRpcProvider.UrlJsonRpcProvider
);
parcelHelpers.export(exports, "FallbackProvider", ()=>///////////////////////
    // Concrete Providers
    _fallbackProvider.FallbackProvider
);
parcelHelpers.export(exports, "AlchemyProvider", ()=>_alchemyProvider.AlchemyProvider
);
parcelHelpers.export(exports, "AlchemyWebSocketProvider", ()=>_alchemyProvider.AlchemyWebSocketProvider
);
parcelHelpers.export(exports, "CloudflareProvider", ()=>_cloudflareProvider.CloudflareProvider
);
parcelHelpers.export(exports, "EtherscanProvider", ()=>_etherscanProvider.EtherscanProvider
);
parcelHelpers.export(exports, "InfuraProvider", ()=>_infuraProvider.InfuraProvider
);
parcelHelpers.export(exports, "InfuraWebSocketProvider", ()=>_infuraProvider.InfuraWebSocketProvider
);
parcelHelpers.export(exports, "JsonRpcProvider", ()=>_jsonRpcProvider.JsonRpcProvider
);
parcelHelpers.export(exports, "JsonRpcBatchProvider", ()=>_jsonRpcBatchProvider.JsonRpcBatchProvider
);
parcelHelpers.export(exports, "NodesmithProvider", ()=>_nodesmithProvider.NodesmithProvider
);
parcelHelpers.export(exports, "PocketProvider", ()=>_pocketProvider.PocketProvider
);
parcelHelpers.export(exports, "StaticJsonRpcProvider", ()=>_urlJsonRpcProvider.StaticJsonRpcProvider
);
parcelHelpers.export(exports, "Web3Provider", ()=>_web3Provider.Web3Provider
);
parcelHelpers.export(exports, "WebSocketProvider", ()=>_websocketProvider.WebSocketProvider
);
parcelHelpers.export(exports, "IpcProvider", ()=>_ipcProvider.IpcProvider
);
parcelHelpers.export(exports, "JsonRpcSigner", ()=>///////////////////////
    // Signer
    _jsonRpcProvider.JsonRpcSigner
);
parcelHelpers.export(exports, "getDefaultProvider", ()=>///////////////////////
    // Functions
    getDefaultProvider
);
parcelHelpers.export(exports, "getNetwork", ()=>_networks.getNetwork
);
parcelHelpers.export(exports, "isCommunityResource", ()=>_formatter.isCommunityResource
);
parcelHelpers.export(exports, "isCommunityResourcable", ()=>_formatter.isCommunityResourcable
);
parcelHelpers.export(exports, "showThrottleMessage", ()=>_formatter.showThrottleMessage
);
parcelHelpers.export(exports, "Formatter", ()=>///////////////////////
    // Objects
    _formatter.Formatter
);
var _abstractProvider = require("@ethersproject/abstract-provider");
var _networks = require("@ethersproject/networks");
var _baseProvider = require("./base-provider");
var _alchemyProvider = require("./alchemy-provider");
var _cloudflareProvider = require("./cloudflare-provider");
var _etherscanProvider = require("./etherscan-provider");
var _fallbackProvider = require("./fallback-provider");
var _ipcProvider = require("./ipc-provider");
var _infuraProvider = require("./infura-provider");
var _jsonRpcProvider = require("./json-rpc-provider");
var _jsonRpcBatchProvider = require("./json-rpc-batch-provider");
var _nodesmithProvider = require("./nodesmith-provider");
var _pocketProvider = require("./pocket-provider");
var _urlJsonRpcProvider = require("./url-json-rpc-provider");
var _web3Provider = require("./web3-provider");
var _websocketProvider = require("./websocket-provider");
var _formatter = require("./formatter");
var _logger = require("@ethersproject/logger");
var _version = require("./_version");
"use strict";
const logger = new _logger.Logger(_version.version);
////////////////////////
// Helper Functions
function getDefaultProvider(network, options) {
    if (network == null) network = "homestead";
    // If passed a URL, figure out the right type of provider based on the scheme
    if (typeof network === "string") {
        // @TODO: Add support for IpcProvider; maybe if it ends in ".ipc"?
        // Handle http and ws (and their secure variants)
        const match = network.match(/^(ws|http)s?:/i);
        if (match) switch(match[1]){
            case "http":
                return new _jsonRpcProvider.JsonRpcProvider(network);
            case "ws":
                return new _websocketProvider.WebSocketProvider(network);
            default:
                logger.throwArgumentError("unsupported URL scheme", "network", network);
        }
    }
    const n = _networks.getNetwork(network);
    if (!n || !n._defaultProvider) logger.throwError("unsupported getDefaultProvider network", _logger.Logger.errors.NETWORK_ERROR, {
        operation: "getDefaultProvider",
        network: network
    });
    return n._defaultProvider({
        FallbackProvider: _fallbackProvider.FallbackProvider,
        AlchemyProvider: _alchemyProvider.AlchemyProvider,
        CloudflareProvider: _cloudflareProvider.CloudflareProvider,
        EtherscanProvider: _etherscanProvider.EtherscanProvider,
        InfuraProvider: _infuraProvider.InfuraProvider,
        JsonRpcProvider: _jsonRpcProvider.JsonRpcProvider,
        NodesmithProvider: _nodesmithProvider.NodesmithProvider,
        PocketProvider: _pocketProvider.PocketProvider,
        Web3Provider: _web3Provider.Web3Provider,
        IpcProvider: _ipcProvider.IpcProvider
    }, options);
}

},{"@ethersproject/abstract-provider":"g1jr1","@ethersproject/networks":"6JNhW","./base-provider":"8sQgN","./alchemy-provider":"3sJ87","./cloudflare-provider":"9NlXX","./etherscan-provider":"dapuE","./fallback-provider":"hP3GB","./ipc-provider":"6veja","./infura-provider":"5hX8Y","./json-rpc-provider":"8zl9s","./json-rpc-batch-provider":"9SG2e","./nodesmith-provider":"6XCXZ","./pocket-provider":"bzrCr","./url-json-rpc-provider":"loAiY","./web3-provider":"kJEcS","./websocket-provider":"jrqOy","./formatter":"81rch","@ethersproject/logger":"hLvB2","./_version":"hHzDi","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"8sQgN":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Event", ()=>Event
);
parcelHelpers.export(exports, "Resolver", ()=>Resolver
);
parcelHelpers.export(exports, "BaseProvider", ()=>BaseProvider
);
var _abstractProvider = require("@ethersproject/abstract-provider");
var _basex = require("@ethersproject/basex");
var _bignumber = require("@ethersproject/bignumber");
var _bytes = require("@ethersproject/bytes");
var _constants = require("@ethersproject/constants");
var _hash = require("@ethersproject/hash");
var _networks = require("@ethersproject/networks");
var _properties = require("@ethersproject/properties");
var _sha2 = require("@ethersproject/sha2");
var _strings = require("@ethersproject/strings");
var _web = require("@ethersproject/web");
var _bech32 = require("bech32");
var _bech32Default = parcelHelpers.interopDefault(_bech32);
var _logger = require("@ethersproject/logger");
var _version = require("./_version");
var _formatter = require("./formatter");
"use strict";
var __awaiter = undefined && undefined.__awaiter || function(thisArg, _arguments, P, generator) {
    function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
            resolve(value);
        });
    }
    return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
            try {
                step(generator.next(value));
            } catch (e) {
                reject(e);
            }
        }
        function rejected(value) {
            try {
                step(generator["throw"](value));
            } catch (e) {
                reject(e);
            }
        }
        function step(result) {
            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
const logger = new _logger.Logger(_version.version);
//////////////////////////////
// Event Serializeing
function checkTopic(topic) {
    if (topic == null) return "null";
    if (_bytes.hexDataLength(topic) !== 32) logger.throwArgumentError("invalid topic", "topic", topic);
    return topic.toLowerCase();
}
function serializeTopics(topics) {
    // Remove trailing null AND-topics; they are redundant
    topics = topics.slice();
    while(topics.length > 0 && topics[topics.length - 1] == null)topics.pop();
    return topics.map((topic1)=>{
        if (Array.isArray(topic1)) {
            // Only track unique OR-topics
            const unique = {};
            topic1.forEach((topic)=>{
                unique[checkTopic(topic)] = true;
            });
            // The order of OR-topics does not matter
            const sorted = Object.keys(unique);
            sorted.sort();
            return sorted.join("|");
        } else return checkTopic(topic1);
    }).join("&");
}
function deserializeTopics(data) {
    if (data === "") return [];
    return data.split(/&/g).map((topic2)=>{
        if (topic2 === "") return [];
        const comps = topic2.split("|").map((topic)=>{
            return topic === "null" ? null : topic;
        });
        return comps.length === 1 ? comps[0] : comps;
    });
}
function getEventTag(eventName) {
    if (typeof eventName === "string") {
        eventName = eventName.toLowerCase();
        if (_bytes.hexDataLength(eventName) === 32) return "tx:" + eventName;
        if (eventName.indexOf(":") === -1) return eventName;
    } else if (Array.isArray(eventName)) return "filter:*:" + serializeTopics(eventName);
    else if (_abstractProvider.ForkEvent.isForkEvent(eventName)) {
        logger.warn("not implemented");
        throw new Error("not implemented");
    } else if (eventName && typeof eventName === "object") return "filter:" + (eventName.address || "*") + ":" + serializeTopics(eventName.topics || []);
    throw new Error("invalid event - " + eventName);
}
//////////////////////////////
// Helper Object
function getTime() {
    return new Date().getTime();
}
function stall(duration) {
    return new Promise((resolve)=>{
        setTimeout(resolve, duration);
    });
}
//////////////////////////////
// Provider Object
/**
 *  EventType
 *   - "block"
 *   - "poll"
 *   - "didPoll"
 *   - "pending"
 *   - "error"
 *   - "network"
 *   - filter
 *   - topics array
 *   - transaction hash
 */ const PollableEvents = [
    "block",
    "network",
    "pending",
    "poll"
];
class Event {
    constructor(tag, listener, once){
        _properties.defineReadOnly(this, "tag", tag);
        _properties.defineReadOnly(this, "listener", listener);
        _properties.defineReadOnly(this, "once", once);
    }
    get event() {
        switch(this.type){
            case "tx":
                return this.hash;
            case "filter":
                return this.filter;
        }
        return this.tag;
    }
    get type() {
        return this.tag.split(":")[0];
    }
    get hash() {
        const comps = this.tag.split(":");
        if (comps[0] !== "tx") return null;
        return comps[1];
    }
    get filter() {
        const comps = this.tag.split(":");
        if (comps[0] !== "filter") return null;
        const address = comps[1];
        const topics = deserializeTopics(comps[2]);
        const filter = {};
        if (topics.length > 0) filter.topics = topics;
        if (address && address !== "*") filter.address = address;
        return filter;
    }
    pollable() {
        return this.tag.indexOf(":") >= 0 || PollableEvents.indexOf(this.tag) >= 0;
    }
}
// https://github.com/satoshilabs/slips/blob/master/slip-0044.md
const coinInfos = {
    "0": {
        symbol: "btc",
        p2pkh: 0x00,
        p2sh: 0x05,
        prefix: "bc"
    },
    "2": {
        symbol: "ltc",
        p2pkh: 0x30,
        p2sh: 0x32,
        prefix: "ltc"
    },
    "3": {
        symbol: "doge",
        p2pkh: 0x1e,
        p2sh: 0x16
    },
    "60": {
        symbol: "eth",
        ilk: "eth"
    },
    "61": {
        symbol: "etc",
        ilk: "eth"
    },
    "700": {
        symbol: "xdai",
        ilk: "eth"
    }
};
function bytes32ify(value) {
    return _bytes.hexZeroPad(_bignumber.BigNumber.from(value).toHexString(), 32);
}
// Compute the Base58Check encoded data (checksum is first 4 bytes of sha256d)
function base58Encode(data) {
    return _basex.Base58.encode(_bytes.concat([
        data,
        _bytes.hexDataSlice(_sha2.sha256(_sha2.sha256(data)), 0, 4)
    ]));
}
const matcherIpfs = new RegExp("^(ipfs):/\/(.*)$", "i");
const matchers = [
    new RegExp("^(https):/\/(.*)$", "i"),
    new RegExp("^(data):(.*)$", "i"),
    matcherIpfs,
    new RegExp("^eip155:[0-9]+/(erc[0-9]+):(.*)$", "i"), 
];
function _parseString(result) {
    try {
        return _strings.toUtf8String(_parseBytes(result));
    } catch (error) {}
    return null;
}
function _parseBytes(result) {
    if (result === "0x") return null;
    const offset = _bignumber.BigNumber.from(_bytes.hexDataSlice(result, 0, 32)).toNumber();
    const length = _bignumber.BigNumber.from(_bytes.hexDataSlice(result, offset, offset + 32)).toNumber();
    return _bytes.hexDataSlice(result, offset + 32, offset + 32 + length);
}
// Trim off the ipfs:// prefix and return the default gateway URL
function getIpfsLink(link) {
    return `https:/\/gateway.ipfs.io/ipfs/${link.substring(7)}`;
}
class Resolver {
    // The resolvedAddress is only for creating a ReverseLookup resolver
    constructor(provider, address, name, resolvedAddress){
        _properties.defineReadOnly(this, "provider", provider);
        _properties.defineReadOnly(this, "name", name);
        _properties.defineReadOnly(this, "address", provider.formatter.address(address));
        _properties.defineReadOnly(this, "_resolvedAddress", resolvedAddress);
    }
    _fetchBytes(selector, parameters) {
        return __awaiter(this, void 0, void 0, function*() {
            // e.g. keccak256("addr(bytes32,uint256)")
            const tx = {
                to: this.address,
                data: _bytes.hexConcat([
                    selector,
                    _hash.namehash(this.name),
                    parameters || "0x"
                ])
            };
            try {
                return _parseBytes((yield this.provider.call(tx)));
            } catch (error) {
                if (error.code === _logger.Logger.errors.CALL_EXCEPTION) return null;
                return null;
            }
        });
    }
    _getAddress(coinType, hexBytes) {
        const coinInfo = coinInfos[String(coinType)];
        if (coinInfo == null) logger.throwError(`unsupported coin type: ${coinType}`, _logger.Logger.errors.UNSUPPORTED_OPERATION, {
            operation: `getAddress(${coinType})`
        });
        if (coinInfo.ilk === "eth") return this.provider.formatter.address(hexBytes);
        const bytes = _bytes.arrayify(hexBytes);
        // P2PKH: OP_DUP OP_HASH160 <pubKeyHash> OP_EQUALVERIFY OP_CHECKSIG
        if (coinInfo.p2pkh != null) {
            const p2pkh = hexBytes.match(/^0x76a9([0-9a-f][0-9a-f])([0-9a-f]*)88ac$/);
            if (p2pkh) {
                const length = parseInt(p2pkh[1], 16);
                if (p2pkh[2].length === length * 2 && length >= 1 && length <= 75) return base58Encode(_bytes.concat([
                    [
                        coinInfo.p2pkh
                    ],
                    "0x" + p2pkh[2]
                ]));
            }
        }
        // P2SH: OP_HASH160 <scriptHash> OP_EQUAL
        if (coinInfo.p2sh != null) {
            const p2sh = hexBytes.match(/^0xa9([0-9a-f][0-9a-f])([0-9a-f]*)87$/);
            if (p2sh) {
                const length = parseInt(p2sh[1], 16);
                if (p2sh[2].length === length * 2 && length >= 1 && length <= 75) return base58Encode(_bytes.concat([
                    [
                        coinInfo.p2sh
                    ],
                    "0x" + p2sh[2]
                ]));
            }
        }
        // Bech32
        if (coinInfo.prefix != null) {
            const length = bytes[1];
            // https://github.com/bitcoin/bips/blob/master/bip-0141.mediawiki#witness-program
            let version = bytes[0];
            if (version === 0x00) {
                if (length !== 20 && length !== 32) version = -1;
            } else version = -1;
            if (version >= 0 && bytes.length === 2 + length && length >= 1 && length <= 75) {
                const words = _bech32Default.default.toWords(bytes.slice(2));
                words.unshift(version);
                return _bech32Default.default.encode(coinInfo.prefix, words);
            }
        }
        return null;
    }
    getAddress(coinType) {
        return __awaiter(this, void 0, void 0, function*() {
            if (coinType == null) coinType = 60;
            // If Ethereum, use the standard `addr(bytes32)`
            if (coinType === 60) try {
                // keccak256("addr(bytes32)")
                const transaction = {
                    to: this.address,
                    data: "0x3b3b57de" + _hash.namehash(this.name).substring(2)
                };
                const hexBytes = yield this.provider.call(transaction);
                // No address
                if (hexBytes === "0x" || hexBytes === _constants.HashZero) return null;
                return this.provider.formatter.callAddress(hexBytes);
            } catch (error) {
                if (error.code === _logger.Logger.errors.CALL_EXCEPTION) return null;
                throw error;
            }
            // keccak256("addr(bytes32,uint256")
            const hexBytes = yield this._fetchBytes("0xf1cb7e06", bytes32ify(coinType));
            // No address
            if (hexBytes == null || hexBytes === "0x") return null;
            // Compute the address
            const address = this._getAddress(coinType, hexBytes);
            if (address == null) logger.throwError(`invalid or unsupported coin data`, _logger.Logger.errors.UNSUPPORTED_OPERATION, {
                operation: `getAddress(${coinType})`,
                coinType: coinType,
                data: hexBytes
            });
            return address;
        });
    }
    getAvatar() {
        return __awaiter(this, void 0, void 0, function*() {
            const linkage = [
                {
                    type: "name",
                    content: this.name
                }
            ];
            try {
                // test data for ricmoo.eth
                //const avatar = "eip155:1/erc721:0x265385c7f4132228A0d54EB1A9e7460b91c0cC68/29233";
                const avatar = yield this.getText("avatar");
                if (avatar == null) return null;
                for(let i = 0; i < matchers.length; i++){
                    const match = avatar.match(matchers[i]);
                    if (match == null) continue;
                    const scheme = match[1].toLowerCase();
                    switch(scheme){
                        case "https":
                            linkage.push({
                                type: "url",
                                content: avatar
                            });
                            return {
                                linkage,
                                url: avatar
                            };
                        case "data":
                            linkage.push({
                                type: "data",
                                content: avatar
                            });
                            return {
                                linkage,
                                url: avatar
                            };
                        case "ipfs":
                            linkage.push({
                                type: "ipfs",
                                content: avatar
                            });
                            return {
                                linkage,
                                url: getIpfsLink(avatar)
                            };
                        case "erc721":
                        case "erc1155":
                            {
                                // Depending on the ERC type, use tokenURI(uint256) or url(uint256)
                                const selector = scheme === "erc721" ? "0xc87b56dd" : "0x0e89341c";
                                linkage.push({
                                    type: scheme,
                                    content: avatar
                                });
                                // The owner of this name
                                const owner = this._resolvedAddress || (yield this.getAddress());
                                const comps = (match[2] || "").split("/");
                                if (comps.length !== 2) return null;
                                const addr = yield this.provider.formatter.address(comps[0]);
                                const tokenId = _bytes.hexZeroPad(_bignumber.BigNumber.from(comps[1]).toHexString(), 32);
                                // Check that this account owns the token
                                if (scheme === "erc721") {
                                    // ownerOf(uint256 tokenId)
                                    const tokenOwner = this.provider.formatter.callAddress((yield this.provider.call({
                                        to: addr,
                                        data: _bytes.hexConcat([
                                            "0x6352211e",
                                            tokenId
                                        ])
                                    })));
                                    if (owner !== tokenOwner) return null;
                                    linkage.push({
                                        type: "owner",
                                        content: tokenOwner
                                    });
                                } else if (scheme === "erc1155") {
                                    // balanceOf(address owner, uint256 tokenId)
                                    const balance = _bignumber.BigNumber.from((yield this.provider.call({
                                        to: addr,
                                        data: _bytes.hexConcat([
                                            "0x00fdd58e",
                                            _bytes.hexZeroPad(owner, 32),
                                            tokenId
                                        ])
                                    })));
                                    if (balance.isZero()) return null;
                                    linkage.push({
                                        type: "balance",
                                        content: balance.toString()
                                    });
                                }
                                // Call the token contract for the metadata URL
                                const tx = {
                                    to: this.provider.formatter.address(comps[0]),
                                    data: _bytes.hexConcat([
                                        selector,
                                        tokenId
                                    ])
                                };
                                let metadataUrl = _parseString((yield this.provider.call(tx)));
                                if (metadataUrl == null) return null;
                                linkage.push({
                                    type: "metadata-url",
                                    content: metadataUrl
                                });
                                // ERC-1155 allows a generic {id} in the URL
                                if (scheme === "erc1155") {
                                    metadataUrl = metadataUrl.replace("{id}", tokenId.substring(2));
                                    linkage.push({
                                        type: "metadata-url-expanded",
                                        content: metadataUrl
                                    });
                                }
                                // Get the token metadata
                                const metadata = yield _web.fetchJson(metadataUrl);
                                if (!metadata) return null;
                                linkage.push({
                                    type: "metadata",
                                    content: JSON.stringify(metadata)
                                });
                                // Pull the image URL out
                                let imageUrl = metadata.image;
                                if (typeof imageUrl !== "string") return null;
                                if (imageUrl.match(/^(https:\/\/|data:)/i)) ;
                                else {
                                    // Transform IPFS link to gateway
                                    const ipfs = imageUrl.match(matcherIpfs);
                                    if (ipfs == null) return null;
                                    linkage.push({
                                        type: "url-ipfs",
                                        content: imageUrl
                                    });
                                    imageUrl = getIpfsLink(imageUrl);
                                }
                                linkage.push({
                                    type: "url",
                                    content: imageUrl
                                });
                                return {
                                    linkage,
                                    url: imageUrl
                                };
                            }
                    }
                }
            } catch (error) {}
            return null;
        });
    }
    getContentHash() {
        return __awaiter(this, void 0, void 0, function*() {
            // keccak256("contenthash()")
            const hexBytes = yield this._fetchBytes("0xbc1c58d1");
            // No contenthash
            if (hexBytes == null || hexBytes === "0x") return null;
            // IPFS (CID: 1, Type: DAG-PB)
            const ipfs = hexBytes.match(/^0xe3010170(([0-9a-f][0-9a-f])([0-9a-f][0-9a-f])([0-9a-f]*))$/);
            if (ipfs) {
                const length = parseInt(ipfs[3], 16);
                if (ipfs[4].length === length * 2) return "ipfs:/\/" + _basex.Base58.encode("0x" + ipfs[1]);
            }
            // Swarm (CID: 1, Type: swarm-manifest; hash/length hard-coded to keccak256/32)
            const swarm = hexBytes.match(/^0xe40101fa011b20([0-9a-f]*)$/);
            if (swarm) {
                if (swarm[1].length === 64) return "bzz:/\/" + swarm[1];
            }
            return logger.throwError(`invalid or unsupported content hash data`, _logger.Logger.errors.UNSUPPORTED_OPERATION, {
                operation: "getContentHash()",
                data: hexBytes
            });
        });
    }
    getText(key) {
        return __awaiter(this, void 0, void 0, function*() {
            // The key encoded as parameter to fetchBytes
            let keyBytes = _strings.toUtf8Bytes(key);
            // The nodehash consumes the first slot, so the string pointer targets
            // offset 64, with the length at offset 64 and data starting at offset 96
            keyBytes = _bytes.concat([
                bytes32ify(64),
                bytes32ify(keyBytes.length),
                keyBytes
            ]);
            // Pad to word-size (32 bytes)
            if (keyBytes.length % 32 !== 0) keyBytes = _bytes.concat([
                keyBytes,
                _bytes.hexZeroPad("0x", 32 - key.length % 32)
            ]);
            const hexBytes = yield this._fetchBytes("0x59d1d43c", _bytes.hexlify(keyBytes));
            if (hexBytes == null || hexBytes === "0x") return null;
            return _strings.toUtf8String(hexBytes);
        });
    }
}
let defaultFormatter = null;
let nextPollId = 1;
class BaseProvider extends _abstractProvider.Provider {
    /**
     *  ready
     *
     *  A Promise<Network> that resolves only once the provider is ready.
     *
     *  Sub-classes that call the super with a network without a chainId
     *  MUST set this. Standard named networks have a known chainId.
     *
     */ constructor(network){
        logger.checkNew(new.target, _abstractProvider.Provider);
        super();
        // Events being listened to
        this._events = [];
        this._emitted = {
            block: -2
        };
        this.formatter = new.target.getFormatter();
        // If network is any, this Provider allows the underlying
        // network to change dynamically, and we auto-detect the
        // current network
        _properties.defineReadOnly(this, "anyNetwork", network === "any");
        if (this.anyNetwork) network = this.detectNetwork();
        if (network instanceof Promise) {
            this._networkPromise = network;
            // Squash any "unhandled promise" errors; that do not need to be handled
            network.catch((error)=>{});
            // Trigger initial network setting (async)
            this._ready().catch((error)=>{});
        } else {
            const knownNetwork = _properties.getStatic(new.target, "getNetwork")(network);
            if (knownNetwork) {
                _properties.defineReadOnly(this, "_network", knownNetwork);
                this.emit("network", knownNetwork, null);
            } else logger.throwArgumentError("invalid network", "network", network);
        }
        this._maxInternalBlockNumber = -1024;
        this._lastBlockNumber = -2;
        this._pollingInterval = 4000;
        this._fastQueryDate = 0;
    }
    _ready() {
        return __awaiter(this, void 0, void 0, function*() {
            if (this._network == null) {
                let network = null;
                if (this._networkPromise) try {
                    network = yield this._networkPromise;
                } catch (error) {}
                // Try the Provider's network detection (this MUST throw if it cannot)
                if (network == null) network = yield this.detectNetwork();
                // This should never happen; every Provider sub-class should have
                // suggested a network by here (or have thrown).
                if (!network) logger.throwError("no network detected", _logger.Logger.errors.UNKNOWN_ERROR, {});
                // Possible this call stacked so do not call defineReadOnly again
                if (this._network == null) {
                    if (this.anyNetwork) this._network = network;
                    else _properties.defineReadOnly(this, "_network", network);
                    this.emit("network", network, null);
                }
            }
            return this._network;
        });
    }
    // This will always return the most recently established network.
    // For "any", this can change (a "network" event is emitted before
    // any change is reflected); otherwise this cannot change
    get ready() {
        return _web.poll(()=>{
            return this._ready().then((network)=>{
                return network;
            }, (error)=>{
                // If the network isn't running yet, we will wait
                if (error.code === _logger.Logger.errors.NETWORK_ERROR && error.event === "noNetwork") return undefined;
                throw error;
            });
        });
    }
    // @TODO: Remove this and just create a singleton formatter
    static getFormatter() {
        if (defaultFormatter == null) defaultFormatter = new _formatter.Formatter();
        return defaultFormatter;
    }
    // @TODO: Remove this and just use getNetwork
    static getNetwork(network) {
        return _networks.getNetwork(network == null ? "homestead" : network);
    }
    // Fetches the blockNumber, but will reuse any result that is less
    // than maxAge old or has been requested since the last request
    _getInternalBlockNumber(maxAge) {
        return __awaiter(this, void 0, void 0, function*() {
            yield this._ready();
            // Allowing stale data up to maxAge old
            if (maxAge > 0) // While there are pending internal block requests...
            while(this._internalBlockNumber){
                // ..."remember" which fetch we started with
                const internalBlockNumber = this._internalBlockNumber;
                try {
                    // Check the result is not too stale
                    const result = yield internalBlockNumber;
                    if (getTime() - result.respTime <= maxAge) return result.blockNumber;
                    break;
                } catch (error) {
                    // The fetch rejected; if we are the first to get the
                    // rejection, drop through so we replace it with a new
                    // fetch; all others blocked will then get that fetch
                    // which won't match the one they "remembered" and loop
                    if (this._internalBlockNumber === internalBlockNumber) break;
                }
            }
            const reqTime = getTime();
            const checkInternalBlockNumber = _properties.resolveProperties({
                blockNumber: this.perform("getBlockNumber", {}),
                networkError: this.getNetwork().then((network)=>null
                , (error)=>error
                )
            }).then(({ blockNumber , networkError  })=>{
                if (networkError) {
                    // Unremember this bad internal block number
                    if (this._internalBlockNumber === checkInternalBlockNumber) this._internalBlockNumber = null;
                    throw networkError;
                }
                const respTime = getTime();
                blockNumber = _bignumber.BigNumber.from(blockNumber).toNumber();
                if (blockNumber < this._maxInternalBlockNumber) blockNumber = this._maxInternalBlockNumber;
                this._maxInternalBlockNumber = blockNumber;
                this._setFastBlockNumber(blockNumber); // @TODO: Still need this?
                return {
                    blockNumber,
                    reqTime,
                    respTime
                };
            });
            this._internalBlockNumber = checkInternalBlockNumber;
            // Swallow unhandled exceptions; if needed they are handled else where
            checkInternalBlockNumber.catch((error)=>{
                // Don't null the dead (rejected) fetch, if it has already been updated
                if (this._internalBlockNumber === checkInternalBlockNumber) this._internalBlockNumber = null;
            });
            return (yield checkInternalBlockNumber).blockNumber;
        });
    }
    poll() {
        return __awaiter(this, void 0, void 0, function*() {
            const pollId = nextPollId++;
            // Track all running promises, so we can trigger a post-poll once they are complete
            const runners = [];
            let blockNumber = null;
            try {
                blockNumber = yield this._getInternalBlockNumber(100 + this.pollingInterval / 2);
            } catch (error1) {
                this.emit("error", error1);
                return;
            }
            this._setFastBlockNumber(blockNumber);
            // Emit a poll event after we have the latest (fast) block number
            this.emit("poll", pollId, blockNumber);
            // If the block has not changed, meh.
            if (blockNumber === this._lastBlockNumber) {
                this.emit("didPoll", pollId);
                return;
            }
            // First polling cycle, trigger a "block" events
            if (this._emitted.block === -2) this._emitted.block = blockNumber - 1;
            if (Math.abs(this._emitted.block - blockNumber) > 1000) {
                logger.warn(`network block skew detected; skipping block events (emitted=${this._emitted.block} blockNumber${blockNumber})`);
                this.emit("error", logger.makeError("network block skew detected", _logger.Logger.errors.NETWORK_ERROR, {
                    blockNumber: blockNumber,
                    event: "blockSkew",
                    previousBlockNumber: this._emitted.block
                }));
                this.emit("block", blockNumber);
            } else // Notify all listener for each block that has passed
            for(let i = this._emitted.block + 1; i <= blockNumber; i++)this.emit("block", i);
            // The emitted block was updated, check for obsolete events
            if (this._emitted.block !== blockNumber) {
                this._emitted.block = blockNumber;
                Object.keys(this._emitted).forEach((key)=>{
                    // The block event does not expire
                    if (key === "block") return;
                    // The block we were at when we emitted this event
                    const eventBlockNumber = this._emitted[key];
                    // We cannot garbage collect pending transactions or blocks here
                    // They should be garbage collected by the Provider when setting
                    // "pending" events
                    if (eventBlockNumber === "pending") return;
                    // Evict any transaction hashes or block hashes over 12 blocks
                    // old, since they should not return null anyways
                    if (blockNumber - eventBlockNumber > 12) delete this._emitted[key];
                });
            }
            // First polling cycle
            if (this._lastBlockNumber === -2) this._lastBlockNumber = blockNumber - 1;
            // Find all transaction hashes we are waiting on
            this._events.forEach((event)=>{
                switch(event.type){
                    case "tx":
                        {
                            const hash = event.hash;
                            let runner = this.getTransactionReceipt(hash).then((receipt)=>{
                                if (!receipt || receipt.blockNumber == null) return null;
                                this._emitted["t:" + hash] = receipt.blockNumber;
                                this.emit(hash, receipt);
                                return null;
                            }).catch((error)=>{
                                this.emit("error", error);
                            });
                            runners.push(runner);
                            break;
                        }
                    case "filter":
                        {
                            const filter = event.filter;
                            filter.fromBlock = this._lastBlockNumber + 1;
                            filter.toBlock = blockNumber;
                            const runner = this.getLogs(filter).then((logs)=>{
                                if (logs.length === 0) return;
                                logs.forEach((log)=>{
                                    this._emitted["b:" + log.blockHash] = log.blockNumber;
                                    this._emitted["t:" + log.transactionHash] = log.blockNumber;
                                    this.emit(filter, log);
                                });
                            }).catch((error)=>{
                                this.emit("error", error);
                            });
                            runners.push(runner);
                            break;
                        }
                }
            });
            this._lastBlockNumber = blockNumber;
            // Once all events for this loop have been processed, emit "didPoll"
            Promise.all(runners).then(()=>{
                this.emit("didPoll", pollId);
            }).catch((error)=>{
                this.emit("error", error);
            });
            return;
        });
    }
    // Deprecated; do not use this
    resetEventsBlock(blockNumber) {
        this._lastBlockNumber = blockNumber - 1;
        if (this.polling) this.poll();
    }
    get network() {
        return this._network;
    }
    // This method should query the network if the underlying network
    // can change, such as when connected to a JSON-RPC backend
    detectNetwork() {
        return __awaiter(this, void 0, void 0, function*() {
            return logger.throwError("provider does not support network detection", _logger.Logger.errors.UNSUPPORTED_OPERATION, {
                operation: "provider.detectNetwork"
            });
        });
    }
    getNetwork() {
        return __awaiter(this, void 0, void 0, function*() {
            const network = yield this._ready();
            // Make sure we are still connected to the same network; this is
            // only an external call for backends which can have the underlying
            // network change spontaneously
            const currentNetwork = yield this.detectNetwork();
            if (network.chainId !== currentNetwork.chainId) {
                // We are allowing network changes, things can get complex fast;
                // make sure you know what you are doing if you use "any"
                if (this.anyNetwork) {
                    this._network = currentNetwork;
                    // Reset all internal block number guards and caches
                    this._lastBlockNumber = -2;
                    this._fastBlockNumber = null;
                    this._fastBlockNumberPromise = null;
                    this._fastQueryDate = 0;
                    this._emitted.block = -2;
                    this._maxInternalBlockNumber = -1024;
                    this._internalBlockNumber = null;
                    // The "network" event MUST happen before this method resolves
                    // so any events have a chance to unregister, so we stall an
                    // additional event loop before returning from /this/ call
                    this.emit("network", currentNetwork, network);
                    yield stall(0);
                    return this._network;
                }
                const error = logger.makeError("underlying network changed", _logger.Logger.errors.NETWORK_ERROR, {
                    event: "changed",
                    network: network,
                    detectedNetwork: currentNetwork
                });
                this.emit("error", error);
                throw error;
            }
            return network;
        });
    }
    get blockNumber() {
        this._getInternalBlockNumber(100 + this.pollingInterval / 2).then((blockNumber)=>{
            this._setFastBlockNumber(blockNumber);
        }, (error)=>{});
        return this._fastBlockNumber != null ? this._fastBlockNumber : -1;
    }
    get polling() {
        return this._poller != null;
    }
    set polling(value) {
        if (value && !this._poller) {
            this._poller = setInterval(()=>{
                this.poll();
            }, this.pollingInterval);
            if (!this._bootstrapPoll) this._bootstrapPoll = setTimeout(()=>{
                this.poll();
                // We block additional polls until the polling interval
                // is done, to prevent overwhelming the poll function
                this._bootstrapPoll = setTimeout(()=>{
                    // If polling was disabled, something may require a poke
                    // since starting the bootstrap poll and it was disabled
                    if (!this._poller) this.poll();
                    // Clear out the bootstrap so we can do another
                    this._bootstrapPoll = null;
                }, this.pollingInterval);
            }, 0);
        } else if (!value && this._poller) {
            clearInterval(this._poller);
            this._poller = null;
        }
    }
    get pollingInterval() {
        return this._pollingInterval;
    }
    set pollingInterval(value) {
        if (typeof value !== "number" || value <= 0 || parseInt(String(value)) != value) throw new Error("invalid polling interval");
        this._pollingInterval = value;
        if (this._poller) {
            clearInterval(this._poller);
            this._poller = setInterval(()=>{
                this.poll();
            }, this._pollingInterval);
        }
    }
    _getFastBlockNumber() {
        const now = getTime();
        // Stale block number, request a newer value
        if (now - this._fastQueryDate > 2 * this._pollingInterval) {
            this._fastQueryDate = now;
            this._fastBlockNumberPromise = this.getBlockNumber().then((blockNumber)=>{
                if (this._fastBlockNumber == null || blockNumber > this._fastBlockNumber) this._fastBlockNumber = blockNumber;
                return this._fastBlockNumber;
            });
        }
        return this._fastBlockNumberPromise;
    }
    _setFastBlockNumber(blockNumber) {
        // Older block, maybe a stale request
        if (this._fastBlockNumber != null && blockNumber < this._fastBlockNumber) return;
        // Update the time we updated the blocknumber
        this._fastQueryDate = getTime();
        // Newer block number, use  it
        if (this._fastBlockNumber == null || blockNumber > this._fastBlockNumber) {
            this._fastBlockNumber = blockNumber;
            this._fastBlockNumberPromise = Promise.resolve(blockNumber);
        }
    }
    waitForTransaction(transactionHash, confirmations, timeout) {
        return __awaiter(this, void 0, void 0, function*() {
            return this._waitForTransaction(transactionHash, confirmations == null ? 1 : confirmations, timeout || 0, null);
        });
    }
    _waitForTransaction(transactionHash, confirmations, timeout, replaceable) {
        return __awaiter(this, void 0, void 0, function*() {
            const receipt1 = yield this.getTransactionReceipt(transactionHash);
            // Receipt is already good
            if ((receipt1 ? receipt1.confirmations : 0) >= confirmations) return receipt1;
            // Poll until the receipt is good...
            return new Promise((resolve, reject)=>{
                const cancelFuncs = [];
                let done = false;
                const alreadyDone = function() {
                    if (done) return true;
                    done = true;
                    cancelFuncs.forEach((func)=>{
                        func();
                    });
                    return false;
                };
                const minedHandler = (receipt)=>{
                    if (receipt.confirmations < confirmations) return;
                    if (alreadyDone()) return;
                    resolve(receipt);
                };
                this.on(transactionHash, minedHandler);
                cancelFuncs.push(()=>{
                    this.removeListener(transactionHash, minedHandler);
                });
                if (replaceable) {
                    let lastBlockNumber = replaceable.startBlock;
                    let scannedBlock = null;
                    const replaceHandler = (blockNumber)=>__awaiter(this, void 0, void 0, function*() {
                            if (done) return;
                            // Wait 1 second; this is only used in the case of a fault, so
                            // we will trade off a little bit of latency for more consistent
                            // results and fewer JSON-RPC calls
                            yield stall(1000);
                            this.getTransactionCount(replaceable.from).then((nonce)=>__awaiter(this, void 0, void 0, function*() {
                                    if (done) return;
                                    if (nonce <= replaceable.nonce) lastBlockNumber = blockNumber;
                                    else {
                                        // First check if the transaction was mined
                                        {
                                            const mined = yield this.getTransaction(transactionHash);
                                            if (mined && mined.blockNumber != null) return;
                                        }
                                        // First time scanning. We start a little earlier for some
                                        // wiggle room here to handle the eventually consistent nature
                                        // of blockchain (e.g. the getTransactionCount was for a
                                        // different block)
                                        if (scannedBlock == null) {
                                            scannedBlock = lastBlockNumber - 3;
                                            if (scannedBlock < replaceable.startBlock) scannedBlock = replaceable.startBlock;
                                        }
                                        while(scannedBlock <= blockNumber){
                                            if (done) return;
                                            const block = yield this.getBlockWithTransactions(scannedBlock);
                                            for(let ti = 0; ti < block.transactions.length; ti++){
                                                const tx = block.transactions[ti];
                                                // Successfully mined!
                                                if (tx.hash === transactionHash) return;
                                                // Matches our transaction from and nonce; its a replacement
                                                if (tx.from === replaceable.from && tx.nonce === replaceable.nonce) {
                                                    if (done) return;
                                                    // Get the receipt of the replacement
                                                    const receipt = yield this.waitForTransaction(tx.hash, confirmations);
                                                    // Already resolved or rejected (prolly a timeout)
                                                    if (alreadyDone()) return;
                                                    // The reason we were replaced
                                                    let reason = "replaced";
                                                    if (tx.data === replaceable.data && tx.to === replaceable.to && tx.value.eq(replaceable.value)) reason = "repriced";
                                                    else if (tx.data === "0x" && tx.from === tx.to && tx.value.isZero()) reason = "cancelled";
                                                    // Explain why we were replaced
                                                    reject(logger.makeError("transaction was replaced", _logger.Logger.errors.TRANSACTION_REPLACED, {
                                                        cancelled: reason === "replaced" || reason === "cancelled",
                                                        reason,
                                                        replacement: this._wrapTransaction(tx),
                                                        hash: transactionHash,
                                                        receipt
                                                    }));
                                                    return;
                                                }
                                            }
                                            scannedBlock++;
                                        }
                                    }
                                    if (done) return;
                                    this.once("block", replaceHandler);
                                })
                            , (error)=>{
                                if (done) return;
                                this.once("block", replaceHandler);
                            });
                        })
                    ;
                    if (done) return;
                    this.once("block", replaceHandler);
                    cancelFuncs.push(()=>{
                        this.removeListener("block", replaceHandler);
                    });
                }
                if (typeof timeout === "number" && timeout > 0) {
                    const timer = setTimeout(()=>{
                        if (alreadyDone()) return;
                        reject(logger.makeError("timeout exceeded", _logger.Logger.errors.TIMEOUT, {
                            timeout: timeout
                        }));
                    }, timeout);
                    if (timer.unref) timer.unref();
                    cancelFuncs.push(()=>{
                        clearTimeout(timer);
                    });
                }
            });
        });
    }
    getBlockNumber() {
        return __awaiter(this, void 0, void 0, function*() {
            return this._getInternalBlockNumber(0);
        });
    }
    getGasPrice() {
        return __awaiter(this, void 0, void 0, function*() {
            yield this.getNetwork();
            const result = yield this.perform("getGasPrice", {});
            try {
                return _bignumber.BigNumber.from(result);
            } catch (error) {
                return logger.throwError("bad result from backend", _logger.Logger.errors.SERVER_ERROR, {
                    method: "getGasPrice",
                    result,
                    error
                });
            }
        });
    }
    getBalance(addressOrName, blockTag) {
        return __awaiter(this, void 0, void 0, function*() {
            yield this.getNetwork();
            const params = yield _properties.resolveProperties({
                address: this._getAddress(addressOrName),
                blockTag: this._getBlockTag(blockTag)
            });
            const result = yield this.perform("getBalance", params);
            try {
                return _bignumber.BigNumber.from(result);
            } catch (error) {
                return logger.throwError("bad result from backend", _logger.Logger.errors.SERVER_ERROR, {
                    method: "getBalance",
                    params,
                    result,
                    error
                });
            }
        });
    }
    getTransactionCount(addressOrName, blockTag) {
        return __awaiter(this, void 0, void 0, function*() {
            yield this.getNetwork();
            const params = yield _properties.resolveProperties({
                address: this._getAddress(addressOrName),
                blockTag: this._getBlockTag(blockTag)
            });
            const result = yield this.perform("getTransactionCount", params);
            try {
                return _bignumber.BigNumber.from(result).toNumber();
            } catch (error) {
                return logger.throwError("bad result from backend", _logger.Logger.errors.SERVER_ERROR, {
                    method: "getTransactionCount",
                    params,
                    result,
                    error
                });
            }
        });
    }
    getCode(addressOrName, blockTag) {
        return __awaiter(this, void 0, void 0, function*() {
            yield this.getNetwork();
            const params = yield _properties.resolveProperties({
                address: this._getAddress(addressOrName),
                blockTag: this._getBlockTag(blockTag)
            });
            const result = yield this.perform("getCode", params);
            try {
                return _bytes.hexlify(result);
            } catch (error) {
                return logger.throwError("bad result from backend", _logger.Logger.errors.SERVER_ERROR, {
                    method: "getCode",
                    params,
                    result,
                    error
                });
            }
        });
    }
    getStorageAt(addressOrName, position, blockTag) {
        return __awaiter(this, void 0, void 0, function*() {
            yield this.getNetwork();
            const params = yield _properties.resolveProperties({
                address: this._getAddress(addressOrName),
                blockTag: this._getBlockTag(blockTag),
                position: Promise.resolve(position).then((p)=>_bytes.hexValue(p)
                )
            });
            const result = yield this.perform("getStorageAt", params);
            try {
                return _bytes.hexlify(result);
            } catch (error) {
                return logger.throwError("bad result from backend", _logger.Logger.errors.SERVER_ERROR, {
                    method: "getStorageAt",
                    params,
                    result,
                    error
                });
            }
        });
    }
    // This should be called by any subclass wrapping a TransactionResponse
    _wrapTransaction(tx, hash, startBlock) {
        if (hash != null && _bytes.hexDataLength(hash) !== 32) throw new Error("invalid response - sendTransaction");
        const result = tx;
        // Check the hash we expect is the same as the hash the server reported
        if (hash != null && tx.hash !== hash) logger.throwError("Transaction hash mismatch from Provider.sendTransaction.", _logger.Logger.errors.UNKNOWN_ERROR, {
            expectedHash: tx.hash,
            returnedHash: hash
        });
        result.wait = (confirms, timeout)=>__awaiter(this, void 0, void 0, function*() {
                if (confirms == null) confirms = 1;
                if (timeout == null) timeout = 0;
                // Get the details to detect replacement
                let replacement = undefined;
                if (confirms !== 0 && startBlock != null) replacement = {
                    data: tx.data,
                    from: tx.from,
                    nonce: tx.nonce,
                    to: tx.to,
                    value: tx.value,
                    startBlock
                };
                const receipt = yield this._waitForTransaction(tx.hash, confirms, timeout, replacement);
                if (receipt == null && confirms === 0) return null;
                // No longer pending, allow the polling loop to garbage collect this
                this._emitted["t:" + tx.hash] = receipt.blockNumber;
                if (receipt.status === 0) logger.throwError("transaction failed", _logger.Logger.errors.CALL_EXCEPTION, {
                    transactionHash: tx.hash,
                    transaction: tx,
                    receipt: receipt
                });
                return receipt;
            })
        ;
        return result;
    }
    sendTransaction(signedTransaction) {
        return __awaiter(this, void 0, void 0, function*() {
            yield this.getNetwork();
            const hexTx = yield Promise.resolve(signedTransaction).then((t)=>_bytes.hexlify(t)
            );
            const tx = this.formatter.transaction(signedTransaction);
            if (tx.confirmations == null) tx.confirmations = 0;
            const blockNumber = yield this._getInternalBlockNumber(100 + 2 * this.pollingInterval);
            try {
                const hash = yield this.perform("sendTransaction", {
                    signedTransaction: hexTx
                });
                return this._wrapTransaction(tx, hash, blockNumber);
            } catch (error) {
                error.transaction = tx;
                error.transactionHash = tx.hash;
                throw error;
            }
        });
    }
    _getTransactionRequest(transaction) {
        return __awaiter(this, void 0, void 0, function*() {
            const values = yield transaction;
            const tx = {};
            [
                "from",
                "to"
            ].forEach((key)=>{
                if (values[key] == null) return;
                tx[key] = Promise.resolve(values[key]).then((v)=>v ? this._getAddress(v) : null
                );
            });
            [
                "gasLimit",
                "gasPrice",
                "maxFeePerGas",
                "maxPriorityFeePerGas",
                "value"
            ].forEach((key)=>{
                if (values[key] == null) return;
                tx[key] = Promise.resolve(values[key]).then((v)=>v ? _bignumber.BigNumber.from(v) : null
                );
            });
            [
                "type"
            ].forEach((key)=>{
                if (values[key] == null) return;
                tx[key] = Promise.resolve(values[key]).then((v)=>v != null ? v : null
                );
            });
            if (values.accessList) tx.accessList = this.formatter.accessList(values.accessList);
            [
                "data"
            ].forEach((key)=>{
                if (values[key] == null) return;
                tx[key] = Promise.resolve(values[key]).then((v)=>v ? _bytes.hexlify(v) : null
                );
            });
            return this.formatter.transactionRequest((yield _properties.resolveProperties(tx)));
        });
    }
    _getFilter(filter) {
        return __awaiter(this, void 0, void 0, function*() {
            filter = yield filter;
            const result = {};
            if (filter.address != null) result.address = this._getAddress(filter.address);
            [
                "blockHash",
                "topics"
            ].forEach((key)=>{
                if (filter[key] == null) return;
                result[key] = filter[key];
            });
            [
                "fromBlock",
                "toBlock"
            ].forEach((key)=>{
                if (filter[key] == null) return;
                result[key] = this._getBlockTag(filter[key]);
            });
            return this.formatter.filter((yield _properties.resolveProperties(result)));
        });
    }
    call(transaction, blockTag) {
        return __awaiter(this, void 0, void 0, function*() {
            yield this.getNetwork();
            const params = yield _properties.resolveProperties({
                transaction: this._getTransactionRequest(transaction),
                blockTag: this._getBlockTag(blockTag)
            });
            const result = yield this.perform("call", params);
            try {
                return _bytes.hexlify(result);
            } catch (error) {
                return logger.throwError("bad result from backend", _logger.Logger.errors.SERVER_ERROR, {
                    method: "call",
                    params,
                    result,
                    error
                });
            }
        });
    }
    estimateGas(transaction) {
        return __awaiter(this, void 0, void 0, function*() {
            yield this.getNetwork();
            const params = yield _properties.resolveProperties({
                transaction: this._getTransactionRequest(transaction)
            });
            const result = yield this.perform("estimateGas", params);
            try {
                return _bignumber.BigNumber.from(result);
            } catch (error) {
                return logger.throwError("bad result from backend", _logger.Logger.errors.SERVER_ERROR, {
                    method: "estimateGas",
                    params,
                    result,
                    error
                });
            }
        });
    }
    _getAddress(addressOrName) {
        return __awaiter(this, void 0, void 0, function*() {
            addressOrName = yield addressOrName;
            if (typeof addressOrName !== "string") logger.throwArgumentError("invalid address or ENS name", "name", addressOrName);
            const address = yield this.resolveName(addressOrName);
            if (address == null) logger.throwError("ENS name not configured", _logger.Logger.errors.UNSUPPORTED_OPERATION, {
                operation: `resolveName(${JSON.stringify(addressOrName)})`
            });
            return address;
        });
    }
    _getBlock(blockHashOrBlockTag, includeTransactions) {
        return __awaiter(this, void 0, void 0, function*() {
            yield this.getNetwork();
            blockHashOrBlockTag = yield blockHashOrBlockTag;
            // If blockTag is a number (not "latest", etc), this is the block number
            let blockNumber1 = -128;
            const params = {
                includeTransactions: !!includeTransactions
            };
            if (_bytes.isHexString(blockHashOrBlockTag, 32)) params.blockHash = blockHashOrBlockTag;
            else try {
                params.blockTag = yield this._getBlockTag(blockHashOrBlockTag);
                if (_bytes.isHexString(params.blockTag)) blockNumber1 = parseInt(params.blockTag.substring(2), 16);
            } catch (error) {
                logger.throwArgumentError("invalid block hash or block tag", "blockHashOrBlockTag", blockHashOrBlockTag);
            }
            return _web.poll(()=>__awaiter(this, void 0, void 0, function*() {
                    const block = yield this.perform("getBlock", params);
                    // Block was not found
                    if (block == null) {
                        // For blockhashes, if we didn't say it existed, that blockhash may
                        // not exist. If we did see it though, perhaps from a log, we know
                        // it exists, and this node is just not caught up yet.
                        if (params.blockHash != null) {
                            if (this._emitted["b:" + params.blockHash] == null) return null;
                        }
                        // For block tags, if we are asking for a future block, we return null
                        if (params.blockTag != null) {
                            if (blockNumber1 > this._emitted.block) return null;
                        }
                        // Retry on the next block
                        return undefined;
                    }
                    // Add transactions
                    if (includeTransactions) {
                        let blockNumber = null;
                        for(let i = 0; i < block.transactions.length; i++){
                            const tx = block.transactions[i];
                            if (tx.blockNumber == null) tx.confirmations = 0;
                            else if (tx.confirmations == null) {
                                if (blockNumber == null) blockNumber = yield this._getInternalBlockNumber(100 + 2 * this.pollingInterval);
                                // Add the confirmations using the fast block number (pessimistic)
                                let confirmations = blockNumber - tx.blockNumber + 1;
                                if (confirmations <= 0) confirmations = 1;
                                tx.confirmations = confirmations;
                            }
                        }
                        const blockWithTxs = this.formatter.blockWithTransactions(block);
                        blockWithTxs.transactions = blockWithTxs.transactions.map((tx)=>this._wrapTransaction(tx)
                        );
                        return blockWithTxs;
                    }
                    return this.formatter.block(block);
                })
            , {
                oncePoll: this
            });
        });
    }
    getBlock(blockHashOrBlockTag) {
        return this._getBlock(blockHashOrBlockTag, false);
    }
    getBlockWithTransactions(blockHashOrBlockTag) {
        return this._getBlock(blockHashOrBlockTag, true);
    }
    getTransaction(transactionHash) {
        return __awaiter(this, void 0, void 0, function*() {
            yield this.getNetwork();
            transactionHash = yield transactionHash;
            const params = {
                transactionHash: this.formatter.hash(transactionHash, true)
            };
            return _web.poll(()=>__awaiter(this, void 0, void 0, function*() {
                    const result = yield this.perform("getTransaction", params);
                    if (result == null) {
                        if (this._emitted["t:" + transactionHash] == null) return null;
                        return undefined;
                    }
                    const tx = this.formatter.transactionResponse(result);
                    if (tx.blockNumber == null) tx.confirmations = 0;
                    else if (tx.confirmations == null) {
                        const blockNumber = yield this._getInternalBlockNumber(100 + 2 * this.pollingInterval);
                        // Add the confirmations using the fast block number (pessimistic)
                        let confirmations = blockNumber - tx.blockNumber + 1;
                        if (confirmations <= 0) confirmations = 1;
                        tx.confirmations = confirmations;
                    }
                    return this._wrapTransaction(tx);
                })
            , {
                oncePoll: this
            });
        });
    }
    getTransactionReceipt(transactionHash) {
        return __awaiter(this, void 0, void 0, function*() {
            yield this.getNetwork();
            transactionHash = yield transactionHash;
            const params = {
                transactionHash: this.formatter.hash(transactionHash, true)
            };
            return _web.poll(()=>__awaiter(this, void 0, void 0, function*() {
                    const result = yield this.perform("getTransactionReceipt", params);
                    if (result == null) {
                        if (this._emitted["t:" + transactionHash] == null) return null;
                        return undefined;
                    }
                    // "geth-etc" returns receipts before they are ready
                    if (result.blockHash == null) return undefined;
                    const receipt = this.formatter.receipt(result);
                    if (receipt.blockNumber == null) receipt.confirmations = 0;
                    else if (receipt.confirmations == null) {
                        const blockNumber = yield this._getInternalBlockNumber(100 + 2 * this.pollingInterval);
                        // Add the confirmations using the fast block number (pessimistic)
                        let confirmations = blockNumber - receipt.blockNumber + 1;
                        if (confirmations <= 0) confirmations = 1;
                        receipt.confirmations = confirmations;
                    }
                    return receipt;
                })
            , {
                oncePoll: this
            });
        });
    }
    getLogs(filter) {
        return __awaiter(this, void 0, void 0, function*() {
            yield this.getNetwork();
            const params = yield _properties.resolveProperties({
                filter: this._getFilter(filter)
            });
            const logs = yield this.perform("getLogs", params);
            logs.forEach((log)=>{
                if (log.removed == null) log.removed = false;
            });
            return _formatter.Formatter.arrayOf(this.formatter.filterLog.bind(this.formatter))(logs);
        });
    }
    getEtherPrice() {
        return __awaiter(this, void 0, void 0, function*() {
            yield this.getNetwork();
            return this.perform("getEtherPrice", {});
        });
    }
    _getBlockTag(blockTag) {
        return __awaiter(this, void 0, void 0, function*() {
            blockTag = yield blockTag;
            if (typeof blockTag === "number" && blockTag < 0) {
                if (blockTag % 1) logger.throwArgumentError("invalid BlockTag", "blockTag", blockTag);
                let blockNumber = yield this._getInternalBlockNumber(100 + 2 * this.pollingInterval);
                blockNumber += blockTag;
                if (blockNumber < 0) blockNumber = 0;
                return this.formatter.blockTag(blockNumber);
            }
            return this.formatter.blockTag(blockTag);
        });
    }
    getResolver(name) {
        return __awaiter(this, void 0, void 0, function*() {
            try {
                const address = yield this._getResolver(name);
                if (address == null) return null;
                return new Resolver(this, address, name);
            } catch (error) {
                if (error.code === _logger.Logger.errors.CALL_EXCEPTION) return null;
                throw error;
            }
        });
    }
    _getResolver(name) {
        return __awaiter(this, void 0, void 0, function*() {
            // Get the resolver from the blockchain
            const network = yield this.getNetwork();
            // No ENS...
            if (!network.ensAddress) logger.throwError("network does not support ENS", _logger.Logger.errors.UNSUPPORTED_OPERATION, {
                operation: "ENS",
                network: network.name
            });
            // keccak256("resolver(bytes32)")
            const transaction = {
                to: network.ensAddress,
                data: "0x0178b8bf" + _hash.namehash(name).substring(2)
            };
            try {
                return this.formatter.callAddress((yield this.call(transaction)));
            } catch (error) {
                if (error.code === _logger.Logger.errors.CALL_EXCEPTION) return null;
                throw error;
            }
        });
    }
    resolveName(name) {
        return __awaiter(this, void 0, void 0, function*() {
            name = yield name;
            // If it is already an address, nothing to resolve
            try {
                return Promise.resolve(this.formatter.address(name));
            } catch (error) {
                // If is is a hexstring, the address is bad (See #694)
                if (_bytes.isHexString(name)) throw error;
            }
            if (typeof name !== "string") logger.throwArgumentError("invalid ENS name", "name", name);
            // Get the addr from the resovler
            const resolver = yield this.getResolver(name);
            if (!resolver) return null;
            return yield resolver.getAddress();
        });
    }
    lookupAddress(address) {
        return __awaiter(this, void 0, void 0, function*() {
            address = yield address;
            address = this.formatter.address(address);
            const reverseName = address.substring(2).toLowerCase() + ".addr.reverse";
            const resolverAddress = yield this._getResolver(reverseName);
            if (!resolverAddress) return null;
            // keccak("name(bytes32)")
            let bytes = _bytes.arrayify((yield this.call({
                to: resolverAddress,
                data: "0x691f3431" + _hash.namehash(reverseName).substring(2)
            })));
            // Strip off the dynamic string pointer (0x20)
            if (bytes.length < 32 || !_bignumber.BigNumber.from(bytes.slice(0, 32)).eq(32)) return null;
            bytes = bytes.slice(32);
            // Not a length-prefixed string
            if (bytes.length < 32) return null;
            // Get the length of the string (from the length-prefix)
            const length = _bignumber.BigNumber.from(bytes.slice(0, 32)).toNumber();
            bytes = bytes.slice(32);
            // Length longer than available data
            if (length > bytes.length) return null;
            const name = _strings.toUtf8String(bytes.slice(0, length));
            // Make sure the reverse record matches the foward record
            const addr = yield this.resolveName(name);
            if (addr != address) return null;
            return name;
        });
    }
    getAvatar(nameOrAddress) {
        return __awaiter(this, void 0, void 0, function*() {
            let resolver = null;
            if (_bytes.isHexString(nameOrAddress)) {
                // Address; reverse lookup
                const address = this.formatter.address(nameOrAddress);
                const reverseName = address.substring(2).toLowerCase() + ".addr.reverse";
                const resolverAddress = yield this._getResolver(reverseName);
                if (!resolverAddress) return null;
                resolver = new Resolver(this, resolverAddress, "_", address);
            } else {
                // ENS name; forward lookup
                resolver = yield this.getResolver(nameOrAddress);
                if (!resolver) return null;
            }
            const avatar = yield resolver.getAvatar();
            if (avatar == null) return null;
            return avatar.url;
        });
    }
    perform(method, params) {
        return logger.throwError(method + " not implemented", _logger.Logger.errors.NOT_IMPLEMENTED, {
            operation: method
        });
    }
    _startEvent(event) {
        this.polling = this._events.filter((e)=>e.pollable()
        ).length > 0;
    }
    _stopEvent(event) {
        this.polling = this._events.filter((e)=>e.pollable()
        ).length > 0;
    }
    _addEventListener(eventName, listener, once) {
        const event = new Event(getEventTag(eventName), listener, once);
        this._events.push(event);
        this._startEvent(event);
        return this;
    }
    on(eventName, listener) {
        return this._addEventListener(eventName, listener, false);
    }
    once(eventName, listener) {
        return this._addEventListener(eventName, listener, true);
    }
    emit(eventName, ...args) {
        let result = false;
        let stopped = [];
        let eventTag = getEventTag(eventName);
        this._events = this._events.filter((event)=>{
            if (event.tag !== eventTag) return true;
            setTimeout(()=>{
                event.listener.apply(this, args);
            }, 0);
            result = true;
            if (event.once) {
                stopped.push(event);
                return false;
            }
            return true;
        });
        stopped.forEach((event)=>{
            this._stopEvent(event);
        });
        return result;
    }
    listenerCount(eventName) {
        if (!eventName) return this._events.length;
        let eventTag = getEventTag(eventName);
        return this._events.filter((event)=>{
            return event.tag === eventTag;
        }).length;
    }
    listeners(eventName) {
        if (eventName == null) return this._events.map((event)=>event.listener
        );
        let eventTag = getEventTag(eventName);
        return this._events.filter((event)=>event.tag === eventTag
        ).map((event)=>event.listener
        );
    }
    off(eventName, listener) {
        if (listener == null) return this.removeAllListeners(eventName);
        const stopped = [];
        let found = false;
        let eventTag = getEventTag(eventName);
        this._events = this._events.filter((event)=>{
            if (event.tag !== eventTag || event.listener != listener) return true;
            if (found) return true;
            found = true;
            stopped.push(event);
            return false;
        });
        stopped.forEach((event)=>{
            this._stopEvent(event);
        });
        return this;
    }
    removeAllListeners(eventName) {
        let stopped = [];
        if (eventName == null) {
            stopped = this._events;
            this._events = [];
        } else {
            const eventTag = getEventTag(eventName);
            this._events = this._events.filter((event)=>{
                if (event.tag !== eventTag) return true;
                stopped.push(event);
                return false;
            });
        }
        stopped.forEach((event)=>{
            this._stopEvent(event);
        });
        return this;
    }
}

},{"@ethersproject/abstract-provider":"g1jr1","@ethersproject/basex":"dm2o4","@ethersproject/bignumber":"ckYYW","@ethersproject/bytes":"htrqZ","@ethersproject/constants":"gKbDE","@ethersproject/hash":"7JYPm","@ethersproject/networks":"6JNhW","@ethersproject/properties":"h3GJb","@ethersproject/sha2":"k4R8k","@ethersproject/strings":"5TGFZ","@ethersproject/web":"5yjI3","bech32":"2C5n6","@ethersproject/logger":"hLvB2","./_version":"hHzDi","./formatter":"81rch","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"hHzDi":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "version", ()=>version
);
const version = "providers/5.5.2";

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"81rch":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Formatter", ()=>Formatter
);
parcelHelpers.export(exports, "isCommunityResourcable", ()=>isCommunityResourcable
);
parcelHelpers.export(exports, "isCommunityResource", ()=>isCommunityResource
);
parcelHelpers.export(exports, "showThrottleMessage", ()=>showThrottleMessage
);
var _address = require("@ethersproject/address");
var _bignumber = require("@ethersproject/bignumber");
var _bytes = require("@ethersproject/bytes");
var _constants = require("@ethersproject/constants");
var _properties = require("@ethersproject/properties");
var _transactions = require("@ethersproject/transactions");
var _logger = require("@ethersproject/logger");
var _version = require("./_version");
"use strict";
const logger = new _logger.Logger(_version.version);
class Formatter {
    constructor(){
        logger.checkNew(new.target, Formatter);
        this.formats = this.getDefaultFormats();
    }
    getDefaultFormats() {
        const formats = {};
        const address = this.address.bind(this);
        const bigNumber = this.bigNumber.bind(this);
        const blockTag = this.blockTag.bind(this);
        const data = this.data.bind(this);
        const hash = this.hash.bind(this);
        const hex = this.hex.bind(this);
        const number = this.number.bind(this);
        const type = this.type.bind(this);
        const strictData = (v)=>{
            return this.data(v, true);
        };
        formats.transaction = {
            hash: hash,
            type: type,
            accessList: Formatter.allowNull(this.accessList.bind(this), null),
            blockHash: Formatter.allowNull(hash, null),
            blockNumber: Formatter.allowNull(number, null),
            transactionIndex: Formatter.allowNull(number, null),
            confirmations: Formatter.allowNull(number, null),
            from: address,
            // either (gasPrice) or (maxPriorityFeePerGas + maxFeePerGas)
            // must be set
            gasPrice: Formatter.allowNull(bigNumber),
            maxPriorityFeePerGas: Formatter.allowNull(bigNumber),
            maxFeePerGas: Formatter.allowNull(bigNumber),
            gasLimit: bigNumber,
            to: Formatter.allowNull(address, null),
            value: bigNumber,
            nonce: number,
            data: data,
            r: Formatter.allowNull(this.uint256),
            s: Formatter.allowNull(this.uint256),
            v: Formatter.allowNull(number),
            creates: Formatter.allowNull(address, null),
            raw: Formatter.allowNull(data)
        };
        formats.transactionRequest = {
            from: Formatter.allowNull(address),
            nonce: Formatter.allowNull(number),
            gasLimit: Formatter.allowNull(bigNumber),
            gasPrice: Formatter.allowNull(bigNumber),
            maxPriorityFeePerGas: Formatter.allowNull(bigNumber),
            maxFeePerGas: Formatter.allowNull(bigNumber),
            to: Formatter.allowNull(address),
            value: Formatter.allowNull(bigNumber),
            data: Formatter.allowNull(strictData),
            type: Formatter.allowNull(number),
            accessList: Formatter.allowNull(this.accessList.bind(this), null)
        };
        formats.receiptLog = {
            transactionIndex: number,
            blockNumber: number,
            transactionHash: hash,
            address: address,
            topics: Formatter.arrayOf(hash),
            data: data,
            logIndex: number,
            blockHash: hash
        };
        formats.receipt = {
            to: Formatter.allowNull(this.address, null),
            from: Formatter.allowNull(this.address, null),
            contractAddress: Formatter.allowNull(address, null),
            transactionIndex: number,
            // should be allowNull(hash), but broken-EIP-658 support is handled in receipt
            root: Formatter.allowNull(hex),
            gasUsed: bigNumber,
            logsBloom: Formatter.allowNull(data),
            blockHash: hash,
            transactionHash: hash,
            logs: Formatter.arrayOf(this.receiptLog.bind(this)),
            blockNumber: number,
            confirmations: Formatter.allowNull(number, null),
            cumulativeGasUsed: bigNumber,
            effectiveGasPrice: Formatter.allowNull(bigNumber),
            status: Formatter.allowNull(number),
            type: type
        };
        formats.block = {
            hash: hash,
            parentHash: hash,
            number: number,
            timestamp: number,
            nonce: Formatter.allowNull(hex),
            difficulty: this.difficulty.bind(this),
            gasLimit: bigNumber,
            gasUsed: bigNumber,
            miner: address,
            extraData: data,
            transactions: Formatter.allowNull(Formatter.arrayOf(hash)),
            baseFeePerGas: Formatter.allowNull(bigNumber)
        };
        formats.blockWithTransactions = _properties.shallowCopy(formats.block);
        formats.blockWithTransactions.transactions = Formatter.allowNull(Formatter.arrayOf(this.transactionResponse.bind(this)));
        formats.filter = {
            fromBlock: Formatter.allowNull(blockTag, undefined),
            toBlock: Formatter.allowNull(blockTag, undefined),
            blockHash: Formatter.allowNull(hash, undefined),
            address: Formatter.allowNull(address, undefined),
            topics: Formatter.allowNull(this.topics.bind(this), undefined)
        };
        formats.filterLog = {
            blockNumber: Formatter.allowNull(number),
            blockHash: Formatter.allowNull(hash),
            transactionIndex: number,
            removed: Formatter.allowNull(this.boolean.bind(this)),
            address: address,
            data: Formatter.allowFalsish(data, "0x"),
            topics: Formatter.arrayOf(hash),
            transactionHash: hash,
            logIndex: number
        };
        return formats;
    }
    accessList(accessList) {
        return _transactions.accessListify(accessList || []);
    }
    // Requires a BigNumberish that is within the IEEE754 safe integer range; returns a number
    // Strict! Used on input.
    number(number) {
        if (number === "0x") return 0;
        return _bignumber.BigNumber.from(number).toNumber();
    }
    type(number) {
        if (number === "0x" || number == null) return 0;
        return _bignumber.BigNumber.from(number).toNumber();
    }
    // Strict! Used on input.
    bigNumber(value) {
        return _bignumber.BigNumber.from(value);
    }
    // Requires a boolean, "true" or  "false"; returns a boolean
    boolean(value) {
        if (typeof value === "boolean") return value;
        if (typeof value === "string") {
            value = value.toLowerCase();
            if (value === "true") return true;
            if (value === "false") return false;
        }
        throw new Error("invalid boolean - " + value);
    }
    hex(value, strict) {
        if (typeof value === "string") {
            if (!strict && value.substring(0, 2) !== "0x") value = "0x" + value;
            if (_bytes.isHexString(value)) return value.toLowerCase();
        }
        return logger.throwArgumentError("invalid hash", "value", value);
    }
    data(value, strict) {
        const result = this.hex(value, strict);
        if (result.length % 2 !== 0) throw new Error("invalid data; odd-length - " + value);
        return result;
    }
    // Requires an address
    // Strict! Used on input.
    address(value) {
        return _address.getAddress(value);
    }
    callAddress(value) {
        if (!_bytes.isHexString(value, 32)) return null;
        const address = _address.getAddress(_bytes.hexDataSlice(value, 12));
        return address === _constants.AddressZero ? null : address;
    }
    contractAddress(value) {
        return _address.getContractAddress(value);
    }
    // Strict! Used on input.
    blockTag(blockTag) {
        if (blockTag == null) return "latest";
        if (blockTag === "earliest") return "0x0";
        if (blockTag === "latest" || blockTag === "pending") return blockTag;
        if (typeof blockTag === "number" || _bytes.isHexString(blockTag)) return _bytes.hexValue(blockTag);
        throw new Error("invalid blockTag");
    }
    // Requires a hash, optionally requires 0x prefix; returns prefixed lowercase hash.
    hash(value, strict) {
        const result = this.hex(value, strict);
        if (_bytes.hexDataLength(result) !== 32) return logger.throwArgumentError("invalid hash", "value", value);
        return result;
    }
    // Returns the difficulty as a number, or if too large (i.e. PoA network) null
    difficulty(value) {
        if (value == null) return null;
        const v = _bignumber.BigNumber.from(value);
        try {
            return v.toNumber();
        } catch (error) {}
        return null;
    }
    uint256(value) {
        if (!_bytes.isHexString(value)) throw new Error("invalid uint256");
        return _bytes.hexZeroPad(value, 32);
    }
    _block(value, format) {
        if (value.author != null && value.miner == null) value.miner = value.author;
        // The difficulty may need to come from _difficulty in recursed blocks
        const difficulty = value._difficulty != null ? value._difficulty : value.difficulty;
        const result = Formatter.check(format, value);
        result._difficulty = difficulty == null ? null : _bignumber.BigNumber.from(difficulty);
        return result;
    }
    block(value) {
        return this._block(value, this.formats.block);
    }
    blockWithTransactions(value) {
        return this._block(value, this.formats.blockWithTransactions);
    }
    // Strict! Used on input.
    transactionRequest(value) {
        return Formatter.check(this.formats.transactionRequest, value);
    }
    transactionResponse(transaction) {
        // Rename gas to gasLimit
        if (transaction.gas != null && transaction.gasLimit == null) transaction.gasLimit = transaction.gas;
        // Some clients (TestRPC) do strange things like return 0x0 for the
        // 0 address; correct this to be a real address
        if (transaction.to && _bignumber.BigNumber.from(transaction.to).isZero()) transaction.to = "0x0000000000000000000000000000000000000000";
        // Rename input to data
        if (transaction.input != null && transaction.data == null) transaction.data = transaction.input;
        // If to and creates are empty, populate the creates from the transaction
        if (transaction.to == null && transaction.creates == null) transaction.creates = this.contractAddress(transaction);
        if ((transaction.type === 1 || transaction.type === 2) && transaction.accessList == null) transaction.accessList = [];
        const result = Formatter.check(this.formats.transaction, transaction);
        if (transaction.chainId != null) {
            let chainId = transaction.chainId;
            if (_bytes.isHexString(chainId)) chainId = _bignumber.BigNumber.from(chainId).toNumber();
            result.chainId = chainId;
        } else {
            let chainId = transaction.networkId;
            // geth-etc returns chainId
            if (chainId == null && result.v == null) chainId = transaction.chainId;
            if (_bytes.isHexString(chainId)) chainId = _bignumber.BigNumber.from(chainId).toNumber();
            if (typeof chainId !== "number" && result.v != null) {
                chainId = (result.v - 35) / 2;
                if (chainId < 0) chainId = 0;
                chainId = parseInt(chainId);
            }
            if (typeof chainId !== "number") chainId = 0;
            result.chainId = chainId;
        }
        // 0x0000... should actually be null
        if (result.blockHash && result.blockHash.replace(/0/g, "") === "x") result.blockHash = null;
        return result;
    }
    transaction(value) {
        return _transactions.parse(value);
    }
    receiptLog(value) {
        return Formatter.check(this.formats.receiptLog, value);
    }
    receipt(value) {
        const result = Formatter.check(this.formats.receipt, value);
        // RSK incorrectly implemented EIP-658, so we munge things a bit here for it
        if (result.root != null) {
            if (result.root.length <= 4) {
                // Could be 0x00, 0x0, 0x01 or 0x1
                const value = _bignumber.BigNumber.from(result.root).toNumber();
                if (value === 0 || value === 1) {
                    // Make sure if both are specified, they match
                    if (result.status != null && result.status !== value) logger.throwArgumentError("alt-root-status/status mismatch", "value", {
                        root: result.root,
                        status: result.status
                    });
                    result.status = value;
                    delete result.root;
                } else logger.throwArgumentError("invalid alt-root-status", "value.root", result.root);
            } else if (result.root.length !== 66) // Must be a valid bytes32
            logger.throwArgumentError("invalid root hash", "value.root", result.root);
        }
        if (result.status != null) result.byzantium = true;
        return result;
    }
    topics(value) {
        if (Array.isArray(value)) return value.map((v)=>this.topics(v)
        );
        else if (value != null) return this.hash(value, true);
        return null;
    }
    filter(value) {
        return Formatter.check(this.formats.filter, value);
    }
    filterLog(value) {
        return Formatter.check(this.formats.filterLog, value);
    }
    static check(format, object) {
        const result = {};
        for(const key in format)try {
            const value = format[key](object[key]);
            if (value !== undefined) result[key] = value;
        } catch (error) {
            error.checkKey = key;
            error.checkValue = object[key];
            throw error;
        }
        return result;
    }
    // if value is null-ish, nullValue is returned
    static allowNull(format, nullValue) {
        return function(value) {
            if (value == null) return nullValue;
            return format(value);
        };
    }
    // If value is false-ish, replaceValue is returned
    static allowFalsish(format, replaceValue) {
        return function(value) {
            if (!value) return replaceValue;
            return format(value);
        };
    }
    // Requires an Array satisfying check
    static arrayOf(format) {
        return function(array) {
            if (!Array.isArray(array)) throw new Error("not an array");
            const result = [];
            array.forEach(function(value) {
                result.push(format(value));
            });
            return result;
        };
    }
}
function isCommunityResourcable(value) {
    return value && typeof value.isCommunityResource === "function";
}
function isCommunityResource(value) {
    return isCommunityResourcable(value) && value.isCommunityResource();
}
// Show the throttle message only once
let throttleMessage = false;
function showThrottleMessage() {
    if (throttleMessage) return;
    throttleMessage = true;
    console.log("========= NOTICE =========");
    console.log("Request-Rate Exceeded  (this message will not be repeated)");
    console.log("");
    console.log("The default API keys for each service are provided as a highly-throttled,");
    console.log("community resource for low-traffic projects and early prototyping.");
    console.log("");
    console.log("While your application will continue to function, we highly recommended");
    console.log("signing up for your own API keys to improve performance, increase your");
    console.log("request rate/limit and enable other perks, such as metrics and advanced APIs.");
    console.log("");
    console.log("For more details: https:/\/docs.ethers.io/api-keys/");
    console.log("==========================");
}

},{"@ethersproject/address":"ggdAz","@ethersproject/bignumber":"ckYYW","@ethersproject/bytes":"htrqZ","@ethersproject/constants":"gKbDE","@ethersproject/properties":"h3GJb","@ethersproject/transactions":"d1ust","@ethersproject/logger":"hLvB2","./_version":"hHzDi","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"3sJ87":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "AlchemyWebSocketProvider", ()=>AlchemyWebSocketProvider
);
parcelHelpers.export(exports, "AlchemyProvider", ()=>AlchemyProvider
);
var _properties = require("@ethersproject/properties");
var _formatter = require("./formatter");
var _websocketProvider = require("./websocket-provider");
var _logger = require("@ethersproject/logger");
var _version = require("./_version");
var _urlJsonRpcProvider = require("./url-json-rpc-provider");
"use strict";
const logger = new _logger.Logger(_version.version);
// This key was provided to ethers.js by Alchemy to be used by the
// default provider, but it is recommended that for your own
// production environments, that you acquire your own API key at:
//   https://dashboard.alchemyapi.io
const defaultApiKey = "_gg7wSSi0KMBsdKnGVfHDueq6xMB9EkC";
class AlchemyWebSocketProvider extends _websocketProvider.WebSocketProvider {
    constructor(network, apiKey){
        const provider = new AlchemyProvider(network, apiKey);
        const url = provider.connection.url.replace(/^http/i, "ws").replace(".alchemyapi.", ".ws.alchemyapi.");
        super(url, provider.network);
        _properties.defineReadOnly(this, "apiKey", provider.apiKey);
    }
    isCommunityResource() {
        return this.apiKey === defaultApiKey;
    }
}
class AlchemyProvider extends _urlJsonRpcProvider.UrlJsonRpcProvider {
    static getWebSocketProvider(network, apiKey) {
        return new AlchemyWebSocketProvider(network, apiKey);
    }
    static getApiKey(apiKey) {
        if (apiKey == null) return defaultApiKey;
        if (apiKey && typeof apiKey !== "string") logger.throwArgumentError("invalid apiKey", "apiKey", apiKey);
        return apiKey;
    }
    static getUrl(network, apiKey) {
        let host = null;
        switch(network.name){
            case "homestead":
                host = "eth-mainnet.alchemyapi.io/v2/";
                break;
            case "ropsten":
                host = "eth-ropsten.alchemyapi.io/v2/";
                break;
            case "rinkeby":
                host = "eth-rinkeby.alchemyapi.io/v2/";
                break;
            case "goerli":
                host = "eth-goerli.alchemyapi.io/v2/";
                break;
            case "kovan":
                host = "eth-kovan.alchemyapi.io/v2/";
                break;
            case "matic":
                host = "polygon-mainnet.g.alchemy.com/v2/";
                break;
            case "maticmum":
                host = "polygon-mumbai.g.alchemy.com/v2/";
                break;
            case "arbitrum":
                host = "arb-mainnet.g.alchemy.com/v2/";
                break;
            case "arbitrum-rinkeby":
                host = "arb-rinkeby.g.alchemy.com/v2/";
                break;
            case "optimism":
                host = "opt-mainnet.g.alchemy.com/v2/";
                break;
            case "optimism-kovan":
                host = "opt-kovan.g.alchemy.com/v2/";
                break;
            default:
                logger.throwArgumentError("unsupported network", "network", arguments[0]);
        }
        return {
            allowGzip: true,
            url: "https://" + host + apiKey,
            throttleCallback: (attempt, url)=>{
                if (apiKey === defaultApiKey) _formatter.showThrottleMessage();
                return Promise.resolve(true);
            }
        };
    }
    isCommunityResource() {
        return this.apiKey === defaultApiKey;
    }
}

},{"@ethersproject/properties":"h3GJb","./formatter":"81rch","./websocket-provider":"jrqOy","@ethersproject/logger":"hLvB2","./_version":"hHzDi","./url-json-rpc-provider":"loAiY","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"jrqOy":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
// For more info about the Real-time Event API see:
//   https://geth.ethereum.org/docs/rpc/pubsub
parcelHelpers.export(exports, "WebSocketProvider", ()=>WebSocketProvider
);
var _bignumber = require("@ethersproject/bignumber");
var _properties = require("@ethersproject/properties");
var _jsonRpcProvider = require("./json-rpc-provider");
var _ws = require("./ws");
var _logger = require("@ethersproject/logger");
var _version = require("./_version");
"use strict";
var __awaiter = undefined && undefined.__awaiter || function(thisArg, _arguments, P, generator) {
    function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
            resolve(value);
        });
    }
    return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
            try {
                step(generator.next(value));
            } catch (e) {
                reject(e);
            }
        }
        function rejected(value) {
            try {
                step(generator["throw"](value));
            } catch (e) {
                reject(e);
            }
        }
        function step(result) {
            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
const logger = new _logger.Logger(_version.version);
/**
 *  Notes:
 *
 *  This provider differs a bit from the polling providers. One main
 *  difference is how it handles consistency. The polling providers
 *  will stall responses to ensure a consistent state, while this
 *  WebSocket provider assumes the connected backend will manage this.
 *
 *  For example, if a polling provider emits an event which indicates
 *  the event occurred in blockhash XXX, a call to fetch that block by
 *  its hash XXX, if not present will retry until it is present. This
 *  can occur when querying a pool of nodes that are mildly out of sync
 *  with each other.
 */ let NextId = 1;
class WebSocketProvider extends _jsonRpcProvider.JsonRpcProvider {
    constructor(url, network){
        // This will be added in the future; please open an issue to expedite
        if (network === "any") logger.throwError("WebSocketProvider does not support 'any' network yet", _logger.Logger.errors.UNSUPPORTED_OPERATION, {
            operation: "network:any"
        });
        super(url, network);
        this._pollingInterval = -1;
        this._wsReady = false;
        _properties.defineReadOnly(this, "_websocket", new _ws.WebSocket(this.connection.url));
        _properties.defineReadOnly(this, "_requests", {});
        _properties.defineReadOnly(this, "_subs", {});
        _properties.defineReadOnly(this, "_subIds", {});
        _properties.defineReadOnly(this, "_detectNetwork", super.detectNetwork());
        // Stall sending requests until the socket is open...
        this._websocket.onopen = ()=>{
            this._wsReady = true;
            Object.keys(this._requests).forEach((id)=>{
                this._websocket.send(this._requests[id].payload);
            });
        };
        this._websocket.onmessage = (messageEvent)=>{
            const data = messageEvent.data;
            const result = JSON.parse(data);
            if (result.id != null) {
                const id = String(result.id);
                const request = this._requests[id];
                delete this._requests[id];
                if (result.result !== undefined) {
                    request.callback(null, result.result);
                    this.emit("debug", {
                        action: "response",
                        request: JSON.parse(request.payload),
                        response: result.result,
                        provider: this
                    });
                } else {
                    let error = null;
                    if (result.error) {
                        error = new Error(result.error.message || "unknown error");
                        _properties.defineReadOnly(error, "code", result.error.code || null);
                        _properties.defineReadOnly(error, "response", data);
                    } else error = new Error("unknown error");
                    request.callback(error, undefined);
                    this.emit("debug", {
                        action: "response",
                        error: error,
                        request: JSON.parse(request.payload),
                        provider: this
                    });
                }
            } else if (result.method === "eth_subscription") {
                // Subscription...
                const sub = this._subs[result.params.subscription];
                if (sub) //this.emit.apply(this,                  );
                sub.processFunc(result.params.result);
            } else console.warn("this should not happen");
        };
        // This Provider does not actually poll, but we want to trigger
        // poll events for things that depend on them (like stalling for
        // block and transaction lookups)
        const fauxPoll = setInterval(()=>{
            this.emit("poll");
        }, 1000);
        if (fauxPoll.unref) fauxPoll.unref();
    }
    detectNetwork() {
        return this._detectNetwork;
    }
    get pollingInterval() {
        return 0;
    }
    resetEventsBlock(blockNumber) {
        logger.throwError("cannot reset events block on WebSocketProvider", _logger.Logger.errors.UNSUPPORTED_OPERATION, {
            operation: "resetEventBlock"
        });
    }
    set pollingInterval(value) {
        logger.throwError("cannot set polling interval on WebSocketProvider", _logger.Logger.errors.UNSUPPORTED_OPERATION, {
            operation: "setPollingInterval"
        });
    }
    poll() {
        return __awaiter(this, void 0, void 0, function*() {
            return null;
        });
    }
    set polling(value) {
        if (!value) return;
        logger.throwError("cannot set polling on WebSocketProvider", _logger.Logger.errors.UNSUPPORTED_OPERATION, {
            operation: "setPolling"
        });
    }
    send(method, params) {
        const rid = NextId++;
        return new Promise((resolve, reject)=>{
            function callback(error, result) {
                if (error) return reject(error);
                return resolve(result);
            }
            const payload = JSON.stringify({
                method: method,
                params: params,
                id: rid,
                jsonrpc: "2.0"
            });
            this.emit("debug", {
                action: "request",
                request: JSON.parse(payload),
                provider: this
            });
            this._requests[String(rid)] = {
                callback,
                payload
            };
            if (this._wsReady) this._websocket.send(payload);
        });
    }
    static defaultUrl() {
        return "ws:/\/localhost:8546";
    }
    _subscribe(tag, param1, processFunc) {
        return __awaiter(this, void 0, void 0, function*() {
            let subIdPromise = this._subIds[tag];
            if (subIdPromise == null) {
                subIdPromise = Promise.all(param1).then((param)=>{
                    return this.send("eth_subscribe", param);
                });
                this._subIds[tag] = subIdPromise;
            }
            const subId = yield subIdPromise;
            this._subs[subId] = {
                tag,
                processFunc
            };
        });
    }
    _startEvent(event1) {
        switch(event1.type){
            case "block":
                this._subscribe("block", [
                    "newHeads"
                ], (result)=>{
                    const blockNumber = _bignumber.BigNumber.from(result.number).toNumber();
                    this._emitted.block = blockNumber;
                    this.emit("block", blockNumber);
                });
                break;
            case "pending":
                this._subscribe("pending", [
                    "newPendingTransactions"
                ], (result)=>{
                    this.emit("pending", result);
                });
                break;
            case "filter":
                this._subscribe(event1.tag, [
                    "logs",
                    this._getFilter(event1.filter)
                ], (result)=>{
                    if (result.removed == null) result.removed = false;
                    this.emit(event1.filter, this.formatter.filterLog(result));
                });
                break;
            case "tx":
                {
                    const emitReceipt = (event)=>{
                        const hash = event.hash;
                        this.getTransactionReceipt(hash).then((receipt)=>{
                            if (!receipt) return;
                            this.emit(hash, receipt);
                        });
                    };
                    // In case it is already mined
                    emitReceipt(event1);
                    // To keep things simple, we start up a single newHeads subscription
                    // to keep an eye out for transactions we are watching for.
                    // Starting a subscription for an event (i.e. "tx") that is already
                    // running is (basically) a nop.
                    this._subscribe("tx", [
                        "newHeads"
                    ], (result)=>{
                        this._events.filter((e)=>e.type === "tx"
                        ).forEach(emitReceipt);
                    });
                    break;
                }
            // Nothing is needed
            case "debug":
            case "poll":
            case "willPoll":
            case "didPoll":
            case "error":
                break;
            default:
                console.log("unhandled:", event1);
                break;
        }
    }
    _stopEvent(event) {
        let tag = event.tag;
        if (event.type === "tx") {
            // There are remaining transaction event listeners
            if (this._events.filter((e)=>e.type === "tx"
            ).length) return;
            tag = "tx";
        } else if (this.listenerCount(event.event)) // There are remaining event listeners
        return;
        const subId1 = this._subIds[tag];
        if (!subId1) return;
        delete this._subIds[tag];
        subId1.then((subId)=>{
            if (!this._subs[subId]) return;
            delete this._subs[subId];
            this.send("eth_unsubscribe", [
                subId
            ]);
        });
    }
    destroy() {
        return __awaiter(this, void 0, void 0, function*() {
            // Wait until we have connected before trying to disconnect
            if (this._websocket.readyState === _ws.WebSocket.CONNECTING) yield new Promise((resolve)=>{
                this._websocket.onopen = function() {
                    resolve(true);
                };
                this._websocket.onerror = function() {
                    resolve(false);
                };
            });
            // Hangup
            // See: https://developer.mozilla.org/en-US/docs/Web/API/CloseEvent#Status_codes
            this._websocket.close(1000);
        });
    }
}

},{"@ethersproject/bignumber":"ckYYW","@ethersproject/properties":"h3GJb","./json-rpc-provider":"8zl9s","./ws":"fhQVT","@ethersproject/logger":"hLvB2","./_version":"hHzDi","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"8zl9s":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "JsonRpcSigner", ()=>JsonRpcSigner
);
parcelHelpers.export(exports, "JsonRpcProvider", ()=>JsonRpcProvider
);
var _abstractSigner = require("@ethersproject/abstract-signer");
var _bignumber = require("@ethersproject/bignumber");
var _bytes = require("@ethersproject/bytes");
var _hash = require("@ethersproject/hash");
var _properties = require("@ethersproject/properties");
var _strings = require("@ethersproject/strings");
var _transactions = require("@ethersproject/transactions");
var _web = require("@ethersproject/web");
var _logger = require("@ethersproject/logger");
var _version = require("./_version");
var _baseProvider = require("./base-provider");
"use strict";
var __awaiter = undefined && undefined.__awaiter || function(thisArg, _arguments, P, generator) {
    function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
            resolve(value);
        });
    }
    return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
            try {
                step(generator.next(value));
            } catch (e) {
                reject(e);
            }
        }
        function rejected(value) {
            try {
                step(generator["throw"](value));
            } catch (e) {
                reject(e);
            }
        }
        function step(result) {
            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
const logger = new _logger.Logger(_version.version);
const errorGas = [
    "call",
    "estimateGas"
];
function checkError(method, error, params) {
    // Undo the "convenience" some nodes are attempting to prevent backwards
    // incompatibility; maybe for v6 consider forwarding reverts as errors
    if (method === "call" && error.code === _logger.Logger.errors.SERVER_ERROR) {
        const e = error.error;
        if (e && e.message.match("reverted") && _bytes.isHexString(e.data)) return e.data;
        logger.throwError("missing revert data in call exception", _logger.Logger.errors.CALL_EXCEPTION, {
            error,
            data: "0x"
        });
    }
    let message = error.message;
    if (error.code === _logger.Logger.errors.SERVER_ERROR && error.error && typeof error.error.message === "string") message = error.error.message;
    else if (typeof error.body === "string") message = error.body;
    else if (typeof error.responseText === "string") message = error.responseText;
    message = (message || "").toLowerCase();
    const transaction = params.transaction || params.signedTransaction;
    // "insufficient funds for gas * price + value + cost(data)"
    if (message.match(/insufficient funds|base fee exceeds gas limit/)) logger.throwError("insufficient funds for intrinsic transaction cost", _logger.Logger.errors.INSUFFICIENT_FUNDS, {
        error,
        method,
        transaction
    });
    // "nonce too low"
    if (message.match(/nonce too low/)) logger.throwError("nonce has already been used", _logger.Logger.errors.NONCE_EXPIRED, {
        error,
        method,
        transaction
    });
    // "replacement transaction underpriced"
    if (message.match(/replacement transaction underpriced/)) logger.throwError("replacement fee too low", _logger.Logger.errors.REPLACEMENT_UNDERPRICED, {
        error,
        method,
        transaction
    });
    // "replacement transaction underpriced"
    if (message.match(/only replay-protected/)) logger.throwError("legacy pre-eip-155 transactions not supported", _logger.Logger.errors.UNSUPPORTED_OPERATION, {
        error,
        method,
        transaction
    });
    if (errorGas.indexOf(method) >= 0 && message.match(/gas required exceeds allowance|always failing transaction|execution reverted/)) logger.throwError("cannot estimate gas; transaction may fail or may require manual gas limit", _logger.Logger.errors.UNPREDICTABLE_GAS_LIMIT, {
        error,
        method,
        transaction
    });
    throw error;
}
function timer(timeout) {
    return new Promise(function(resolve) {
        setTimeout(resolve, timeout);
    });
}
function getResult(payload) {
    if (payload.error) {
        // @TODO: not any
        const error = new Error(payload.error.message);
        error.code = payload.error.code;
        error.data = payload.error.data;
        throw error;
    }
    return payload.result;
}
function getLowerCase(value) {
    if (value) return value.toLowerCase();
    return value;
}
const _constructorGuard = {};
class JsonRpcSigner extends _abstractSigner.Signer {
    constructor(constructorGuard, provider, addressOrIndex){
        logger.checkNew(new.target, JsonRpcSigner);
        super();
        if (constructorGuard !== _constructorGuard) throw new Error("do not call the JsonRpcSigner constructor directly; use provider.getSigner");
        _properties.defineReadOnly(this, "provider", provider);
        if (addressOrIndex == null) addressOrIndex = 0;
        if (typeof addressOrIndex === "string") {
            _properties.defineReadOnly(this, "_address", this.provider.formatter.address(addressOrIndex));
            _properties.defineReadOnly(this, "_index", null);
        } else if (typeof addressOrIndex === "number") {
            _properties.defineReadOnly(this, "_index", addressOrIndex);
            _properties.defineReadOnly(this, "_address", null);
        } else logger.throwArgumentError("invalid address or index", "addressOrIndex", addressOrIndex);
    }
    connect(provider) {
        return logger.throwError("cannot alter JSON-RPC Signer connection", _logger.Logger.errors.UNSUPPORTED_OPERATION, {
            operation: "connect"
        });
    }
    connectUnchecked() {
        return new UncheckedJsonRpcSigner(_constructorGuard, this.provider, this._address || this._index);
    }
    getAddress() {
        if (this._address) return Promise.resolve(this._address);
        return this.provider.send("eth_accounts", []).then((accounts)=>{
            if (accounts.length <= this._index) logger.throwError("unknown account #" + this._index, _logger.Logger.errors.UNSUPPORTED_OPERATION, {
                operation: "getAddress"
            });
            return this.provider.formatter.address(accounts[this._index]);
        });
    }
    sendUncheckedTransaction(transaction) {
        transaction = _properties.shallowCopy(transaction);
        const fromAddress = this.getAddress().then((address)=>{
            if (address) address = address.toLowerCase();
            return address;
        });
        // The JSON-RPC for eth_sendTransaction uses 90000 gas; if the user
        // wishes to use this, it is easy to specify explicitly, otherwise
        // we look it up for them.
        if (transaction.gasLimit == null) {
            const estimate = _properties.shallowCopy(transaction);
            estimate.from = fromAddress;
            transaction.gasLimit = this.provider.estimateGas(estimate);
        }
        if (transaction.to != null) transaction.to = Promise.resolve(transaction.to).then((to)=>__awaiter(this, void 0, void 0, function*() {
                if (to == null) return null;
                const address = yield this.provider.resolveName(to);
                if (address == null) logger.throwArgumentError("provided ENS name resolves to null", "tx.to", to);
                return address;
            })
        );
        return _properties.resolveProperties({
            tx: _properties.resolveProperties(transaction),
            sender: fromAddress
        }).then(({ tx , sender  })=>{
            if (tx.from != null) {
                if (tx.from.toLowerCase() !== sender) logger.throwArgumentError("from address mismatch", "transaction", transaction);
            } else tx.from = sender;
            const hexTx = this.provider.constructor.hexlifyTransaction(tx, {
                from: true
            });
            return this.provider.send("eth_sendTransaction", [
                hexTx
            ]).then((hash)=>{
                return hash;
            }, (error)=>{
                return checkError("sendTransaction", error, hexTx);
            });
        });
    }
    signTransaction(transaction) {
        return logger.throwError("signing transactions is unsupported", _logger.Logger.errors.UNSUPPORTED_OPERATION, {
            operation: "signTransaction"
        });
    }
    sendTransaction(transaction) {
        return __awaiter(this, void 0, void 0, function*() {
            // This cannot be mined any earlier than any recent block
            const blockNumber = yield this.provider._getInternalBlockNumber(100 + 2 * this.provider.pollingInterval);
            // Send the transaction
            const hash = yield this.sendUncheckedTransaction(transaction);
            try {
                // Unfortunately, JSON-RPC only provides and opaque transaction hash
                // for a response, and we need the actual transaction, so we poll
                // for it; it should show up very quickly
                return yield _web.poll(()=>__awaiter(this, void 0, void 0, function*() {
                        const tx = yield this.provider.getTransaction(hash);
                        if (tx === null) return undefined;
                        return this.provider._wrapTransaction(tx, hash, blockNumber);
                    })
                , {
                    oncePoll: this.provider
                });
            } catch (error) {
                error.transactionHash = hash;
                throw error;
            }
        });
    }
    signMessage(message) {
        return __awaiter(this, void 0, void 0, function*() {
            const data = typeof message === "string" ? _strings.toUtf8Bytes(message) : message;
            const address = yield this.getAddress();
            return yield this.provider.send("personal_sign", [
                _bytes.hexlify(data),
                address.toLowerCase()
            ]);
        });
    }
    _legacySignMessage(message) {
        return __awaiter(this, void 0, void 0, function*() {
            const data = typeof message === "string" ? _strings.toUtf8Bytes(message) : message;
            const address = yield this.getAddress();
            // https://github.com/ethereum/wiki/wiki/JSON-RPC#eth_sign
            return yield this.provider.send("eth_sign", [
                address.toLowerCase(),
                _bytes.hexlify(data)
            ]);
        });
    }
    _signTypedData(domain, types, value) {
        return __awaiter(this, void 0, void 0, function*() {
            // Populate any ENS names (in-place)
            const populated = yield _hash._TypedDataEncoder.resolveNames(domain, types, value, (name)=>{
                return this.provider.resolveName(name);
            });
            const address = yield this.getAddress();
            return yield this.provider.send("eth_signTypedData_v4", [
                address.toLowerCase(),
                JSON.stringify(_hash._TypedDataEncoder.getPayload(populated.domain, types, populated.value))
            ]);
        });
    }
    unlock(password) {
        return __awaiter(this, void 0, void 0, function*() {
            const provider = this.provider;
            const address = yield this.getAddress();
            return provider.send("personal_unlockAccount", [
                address.toLowerCase(),
                password,
                null
            ]);
        });
    }
}
class UncheckedJsonRpcSigner extends JsonRpcSigner {
    sendTransaction(transaction) {
        return this.sendUncheckedTransaction(transaction).then((hash)=>{
            return {
                hash: hash,
                nonce: null,
                gasLimit: null,
                gasPrice: null,
                data: null,
                value: null,
                chainId: null,
                confirmations: 0,
                from: null,
                wait: (confirmations)=>{
                    return this.provider.waitForTransaction(hash, confirmations);
                }
            };
        });
    }
}
const allowedTransactionKeys = {
    chainId: true,
    data: true,
    gasLimit: true,
    gasPrice: true,
    nonce: true,
    to: true,
    value: true,
    type: true,
    accessList: true,
    maxFeePerGas: true,
    maxPriorityFeePerGas: true
};
class JsonRpcProvider extends _baseProvider.BaseProvider {
    constructor(url, network1){
        logger.checkNew(new.target, JsonRpcProvider);
        let networkOrReady = network1;
        // The network is unknown, query the JSON-RPC for it
        if (networkOrReady == null) networkOrReady = new Promise((resolve, reject)=>{
            setTimeout(()=>{
                this.detectNetwork().then((network)=>{
                    resolve(network);
                }, (error)=>{
                    reject(error);
                });
            }, 0);
        });
        super(networkOrReady);
        // Default URL
        if (!url) url = _properties.getStatic(this.constructor, "defaultUrl")();
        if (typeof url === "string") _properties.defineReadOnly(this, "connection", Object.freeze({
            url: url
        }));
        else _properties.defineReadOnly(this, "connection", Object.freeze(_properties.shallowCopy(url)));
        this._nextId = 42;
    }
    get _cache() {
        if (this._eventLoopCache == null) this._eventLoopCache = {};
        return this._eventLoopCache;
    }
    static defaultUrl() {
        return "http:/\/localhost:8545";
    }
    detectNetwork() {
        if (!this._cache["detectNetwork"]) {
            this._cache["detectNetwork"] = this._uncachedDetectNetwork();
            // Clear this cache at the beginning of the next event loop
            setTimeout(()=>{
                this._cache["detectNetwork"] = null;
            }, 0);
        }
        return this._cache["detectNetwork"];
    }
    _uncachedDetectNetwork() {
        return __awaiter(this, void 0, void 0, function*() {
            yield timer(0);
            let chainId = null;
            try {
                chainId = yield this.send("eth_chainId", []);
            } catch (error) {
                try {
                    chainId = yield this.send("net_version", []);
                } catch (error) {}
            }
            if (chainId != null) {
                const getNetwork = _properties.getStatic(this.constructor, "getNetwork");
                try {
                    return getNetwork(_bignumber.BigNumber.from(chainId).toNumber());
                } catch (error) {
                    return logger.throwError("could not detect network", _logger.Logger.errors.NETWORK_ERROR, {
                        chainId: chainId,
                        event: "invalidNetwork",
                        serverError: error
                    });
                }
            }
            return logger.throwError("could not detect network", _logger.Logger.errors.NETWORK_ERROR, {
                event: "noNetwork"
            });
        });
    }
    getSigner(addressOrIndex) {
        return new JsonRpcSigner(_constructorGuard, this, addressOrIndex);
    }
    getUncheckedSigner(addressOrIndex) {
        return this.getSigner(addressOrIndex).connectUnchecked();
    }
    listAccounts() {
        return this.send("eth_accounts", []).then((accounts)=>{
            return accounts.map((a)=>this.formatter.address(a)
            );
        });
    }
    send(method, params) {
        const request = {
            method: method,
            params: params,
            id: this._nextId++,
            jsonrpc: "2.0"
        };
        this.emit("debug", {
            action: "request",
            request: _properties.deepCopy(request),
            provider: this
        });
        // We can expand this in the future to any call, but for now these
        // are the biggest wins and do not require any serializing parameters.
        const cache = [
            "eth_chainId",
            "eth_blockNumber"
        ].indexOf(method) >= 0;
        if (cache && this._cache[method]) return this._cache[method];
        const result1 = _web.fetchJson(this.connection, JSON.stringify(request), getResult).then((result)=>{
            this.emit("debug", {
                action: "response",
                request: request,
                response: result,
                provider: this
            });
            return result;
        }, (error)=>{
            this.emit("debug", {
                action: "response",
                error: error,
                request: request,
                provider: this
            });
            throw error;
        });
        // Cache the fetch, but clear it on the next event loop
        if (cache) {
            this._cache[method] = result1;
            setTimeout(()=>{
                this._cache[method] = null;
            }, 0);
        }
        return result1;
    }
    prepareRequest(method, params) {
        switch(method){
            case "getBlockNumber":
                return [
                    "eth_blockNumber",
                    []
                ];
            case "getGasPrice":
                return [
                    "eth_gasPrice",
                    []
                ];
            case "getBalance":
                return [
                    "eth_getBalance",
                    [
                        getLowerCase(params.address),
                        params.blockTag
                    ]
                ];
            case "getTransactionCount":
                return [
                    "eth_getTransactionCount",
                    [
                        getLowerCase(params.address),
                        params.blockTag
                    ]
                ];
            case "getCode":
                return [
                    "eth_getCode",
                    [
                        getLowerCase(params.address),
                        params.blockTag
                    ]
                ];
            case "getStorageAt":
                return [
                    "eth_getStorageAt",
                    [
                        getLowerCase(params.address),
                        params.position,
                        params.blockTag
                    ]
                ];
            case "sendTransaction":
                return [
                    "eth_sendRawTransaction",
                    [
                        params.signedTransaction
                    ]
                ];
            case "getBlock":
                if (params.blockTag) return [
                    "eth_getBlockByNumber",
                    [
                        params.blockTag,
                        !!params.includeTransactions
                    ]
                ];
                else if (params.blockHash) return [
                    "eth_getBlockByHash",
                    [
                        params.blockHash,
                        !!params.includeTransactions
                    ]
                ];
                return null;
            case "getTransaction":
                return [
                    "eth_getTransactionByHash",
                    [
                        params.transactionHash
                    ]
                ];
            case "getTransactionReceipt":
                return [
                    "eth_getTransactionReceipt",
                    [
                        params.transactionHash
                    ]
                ];
            case "call":
                {
                    const hexlifyTransaction = _properties.getStatic(this.constructor, "hexlifyTransaction");
                    return [
                        "eth_call",
                        [
                            hexlifyTransaction(params.transaction, {
                                from: true
                            }),
                            params.blockTag
                        ]
                    ];
                }
            case "estimateGas":
                {
                    const hexlifyTransaction = _properties.getStatic(this.constructor, "hexlifyTransaction");
                    return [
                        "eth_estimateGas",
                        [
                            hexlifyTransaction(params.transaction, {
                                from: true
                            })
                        ]
                    ];
                }
            case "getLogs":
                if (params.filter && params.filter.address != null) params.filter.address = getLowerCase(params.filter.address);
                return [
                    "eth_getLogs",
                    [
                        params.filter
                    ]
                ];
            default:
                break;
        }
        return null;
    }
    perform(method, params) {
        return __awaiter(this, void 0, void 0, function*() {
            // Legacy networks do not like the type field being passed along (which
            // is fair), so we delete type if it is 0 and a non-EIP-1559 network
            if (method === "call" || method === "estimateGas") {
                const tx = params.transaction;
                if (tx && tx.type != null && _bignumber.BigNumber.from(tx.type).isZero()) // If there are no EIP-1559 properties, it might be non-EIP-a559
                {
                    if (tx.maxFeePerGas == null && tx.maxPriorityFeePerGas == null) {
                        const feeData = yield this.getFeeData();
                        if (feeData.maxFeePerGas == null && feeData.maxPriorityFeePerGas == null) {
                            // Network doesn't know about EIP-1559 (and hence type)
                            params = _properties.shallowCopy(params);
                            params.transaction = _properties.shallowCopy(tx);
                            delete params.transaction.type;
                        }
                    }
                }
            }
            const args = this.prepareRequest(method, params);
            if (args == null) logger.throwError(method + " not implemented", _logger.Logger.errors.NOT_IMPLEMENTED, {
                operation: method
            });
            try {
                return yield this.send(args[0], args[1]);
            } catch (error) {
                return checkError(method, error, params);
            }
        });
    }
    _startEvent(event) {
        if (event.tag === "pending") this._startPending();
        super._startEvent(event);
    }
    _startPending() {
        if (this._pendingFilter != null) return;
        const self = this;
        const pendingFilter = this.send("eth_newPendingTransactionFilter", []);
        this._pendingFilter = pendingFilter;
        pendingFilter.then(function(filterId) {
            function poll() {
                self.send("eth_getFilterChanges", [
                    filterId
                ]).then(function(hashes) {
                    if (self._pendingFilter != pendingFilter) return null;
                    let seq = Promise.resolve();
                    hashes.forEach(function(hash) {
                        // @TODO: This should be garbage collected at some point... How? When?
                        self._emitted["t:" + hash.toLowerCase()] = "pending";
                        seq = seq.then(function() {
                            return self.getTransaction(hash).then(function(tx) {
                                self.emit("pending", tx);
                                return null;
                            });
                        });
                    });
                    return seq.then(function() {
                        return timer(1000);
                    });
                }).then(function() {
                    if (self._pendingFilter != pendingFilter) {
                        self.send("eth_uninstallFilter", [
                            filterId
                        ]);
                        return;
                    }
                    setTimeout(function() {
                        poll();
                    }, 0);
                    return null;
                }).catch((error)=>{});
            }
            poll();
            return filterId;
        }).catch((error)=>{});
    }
    _stopEvent(event) {
        if (event.tag === "pending" && this.listenerCount("pending") === 0) this._pendingFilter = null;
        super._stopEvent(event);
    }
    // Convert an ethers.js transaction into a JSON-RPC transaction
    //  - gasLimit => gas
    //  - All values hexlified
    //  - All numeric values zero-striped
    //  - All addresses are lowercased
    // NOTE: This allows a TransactionRequest, but all values should be resolved
    //       before this is called
    // @TODO: This will likely be removed in future versions and prepareRequest
    //        will be the preferred method for this.
    static hexlifyTransaction(transaction, allowExtra) {
        // Check only allowed properties are given
        const allowed = _properties.shallowCopy(allowedTransactionKeys);
        if (allowExtra) {
            for(const key in allowExtra)if (allowExtra[key]) allowed[key] = true;
        }
        _properties.checkProperties(transaction, allowed);
        const result = {};
        // Some nodes (INFURA ropsten; INFURA mainnet is fine) do not like leading zeros.
        [
            "gasLimit",
            "gasPrice",
            "type",
            "maxFeePerGas",
            "maxPriorityFeePerGas",
            "nonce",
            "value"
        ].forEach(function(key) {
            if (transaction[key] == null) return;
            const value = _bytes.hexValue(transaction[key]);
            if (key === "gasLimit") key = "gas";
            result[key] = value;
        });
        [
            "from",
            "to",
            "data"
        ].forEach(function(key) {
            if (transaction[key] == null) return;
            result[key] = _bytes.hexlify(transaction[key]);
        });
        if (transaction.accessList) result["accessList"] = _transactions.accessListify(transaction.accessList);
        return result;
    }
}

},{"@ethersproject/abstract-signer":"g9Ey5","@ethersproject/bignumber":"ckYYW","@ethersproject/bytes":"htrqZ","@ethersproject/hash":"7JYPm","@ethersproject/properties":"h3GJb","@ethersproject/strings":"5TGFZ","@ethersproject/transactions":"d1ust","@ethersproject/web":"5yjI3","@ethersproject/logger":"hLvB2","./_version":"hHzDi","./base-provider":"8sQgN","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"fhQVT":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
//export default WS;
//module.exports = WS;
parcelHelpers.export(exports, "WebSocket", ()=>WS
);
var _logger = require("@ethersproject/logger");
var _version = require("./_version");
"use strict";
let WS = null;
try {
    WS = WebSocket;
    if (WS == null) throw new Error("inject please");
} catch (error) {
    const logger = new _logger.Logger(_version.version);
    WS = function() {
        logger.throwError("WebSockets not supported in this environment", _logger.Logger.errors.UNSUPPORTED_OPERATION, {
            operation: "new WebSocket()"
        });
    };
}

},{"@ethersproject/logger":"hLvB2","./_version":"hHzDi","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"loAiY":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
// A StaticJsonRpcProvider is useful when you *know* for certain that
// the backend will never change, as it never calls eth_chainId to
// verify its backend. However, if the backend does change, the effects
// are undefined and may include:
// - inconsistent results
// - locking up the UI
// - block skew warnings
// - wrong results
// If the network is not explicit (i.e. auto-detection is expected), the
// node MUST be running and available to respond to requests BEFORE this
// is instantiated.
parcelHelpers.export(exports, "StaticJsonRpcProvider", ()=>StaticJsonRpcProvider
);
parcelHelpers.export(exports, "UrlJsonRpcProvider", ()=>UrlJsonRpcProvider
);
var _properties = require("@ethersproject/properties");
var _logger = require("@ethersproject/logger");
var _version = require("./_version");
var _jsonRpcProvider = require("./json-rpc-provider");
"use strict";
var __awaiter = undefined && undefined.__awaiter || function(thisArg, _arguments, P, generator) {
    function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
            resolve(value);
        });
    }
    return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
            try {
                step(generator.next(value));
            } catch (e) {
                reject(e);
            }
        }
        function rejected(value) {
            try {
                step(generator["throw"](value));
            } catch (e) {
                reject(e);
            }
        }
        function step(result) {
            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
const logger = new _logger.Logger(_version.version);
class StaticJsonRpcProvider extends _jsonRpcProvider.JsonRpcProvider {
    detectNetwork() {
        const _super = Object.create(null, {
            detectNetwork: {
                get: ()=>super.detectNetwork
            }
        });
        return __awaiter(this, void 0, void 0, function*() {
            let network = this.network;
            if (network == null) {
                network = yield _super.detectNetwork.call(this);
                if (!network) logger.throwError("no network detected", _logger.Logger.errors.UNKNOWN_ERROR, {});
                // If still not set, set it
                if (this._network == null) {
                    // A static network does not support "any"
                    _properties.defineReadOnly(this, "_network", network);
                    this.emit("network", network, null);
                }
            }
            return network;
        });
    }
}
class UrlJsonRpcProvider extends StaticJsonRpcProvider {
    constructor(network, apiKey){
        logger.checkAbstract(new.target, UrlJsonRpcProvider);
        // Normalize the Network and API Key
        network = _properties.getStatic(new.target, "getNetwork")(network);
        apiKey = _properties.getStatic(new.target, "getApiKey")(apiKey);
        const connection = _properties.getStatic(new.target, "getUrl")(network, apiKey);
        super(connection, network);
        if (typeof apiKey === "string") _properties.defineReadOnly(this, "apiKey", apiKey);
        else if (apiKey != null) Object.keys(apiKey).forEach((key)=>{
            _properties.defineReadOnly(this, key, apiKey[key]);
        });
    }
    _startPending() {
        logger.warn("WARNING: API provider does not support pending filters");
    }
    isCommunityResource() {
        return false;
    }
    getSigner(address) {
        return logger.throwError("API provider does not support signing", _logger.Logger.errors.UNSUPPORTED_OPERATION, {
            operation: "getSigner"
        });
    }
    listAccounts() {
        return Promise.resolve([]);
    }
    // Return a defaultApiKey if null, otherwise validate the API key
    static getApiKey(apiKey) {
        return apiKey;
    }
    // Returns the url or connection for the given network and API key. The
    // API key will have been sanitized by the getApiKey first, so any validation
    // or transformations can be done there.
    static getUrl(network, apiKey) {
        return logger.throwError("not implemented; sub-classes must override getUrl", _logger.Logger.errors.NOT_IMPLEMENTED, {
            operation: "getUrl"
        });
    }
}

},{"@ethersproject/properties":"h3GJb","@ethersproject/logger":"hLvB2","./_version":"hHzDi","./json-rpc-provider":"8zl9s","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"9NlXX":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "CloudflareProvider", ()=>CloudflareProvider
);
var _urlJsonRpcProvider = require("./url-json-rpc-provider");
var _logger = require("@ethersproject/logger");
var _version = require("./_version");
"use strict";
var __awaiter = undefined && undefined.__awaiter || function(thisArg, _arguments, P, generator) {
    function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
            resolve(value);
        });
    }
    return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
            try {
                step(generator.next(value));
            } catch (e) {
                reject(e);
            }
        }
        function rejected(value) {
            try {
                step(generator["throw"](value));
            } catch (e) {
                reject(e);
            }
        }
        function step(result) {
            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
const logger = new _logger.Logger(_version.version);
class CloudflareProvider extends _urlJsonRpcProvider.UrlJsonRpcProvider {
    static getApiKey(apiKey) {
        if (apiKey != null) logger.throwArgumentError("apiKey not supported for cloudflare", "apiKey", apiKey);
        return null;
    }
    static getUrl(network, apiKey) {
        let host = null;
        switch(network.name){
            case "homestead":
                host = "https://cloudflare-eth.com/";
                break;
            default:
                logger.throwArgumentError("unsupported network", "network", arguments[0]);
        }
        return host;
    }
    perform(method, params) {
        const _super = Object.create(null, {
            perform: {
                get: ()=>super.perform
            }
        });
        return __awaiter(this, void 0, void 0, function*() {
            // The Cloudflare provider does not support eth_blockNumber,
            // so we get the latest block and pull it from that
            if (method === "getBlockNumber") {
                const block = yield _super.perform.call(this, "getBlock", {
                    blockTag: "latest"
                });
                return block.number;
            }
            return _super.perform.call(this, method, params);
        });
    }
}

},{"./url-json-rpc-provider":"loAiY","@ethersproject/logger":"hLvB2","./_version":"hHzDi","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"dapuE":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "EtherscanProvider", ()=>EtherscanProvider
);
var _bytes = require("@ethersproject/bytes");
var _properties = require("@ethersproject/properties");
var _transactions = require("@ethersproject/transactions");
var _web = require("@ethersproject/web");
var _formatter = require("./formatter");
var _logger = require("@ethersproject/logger");
var _version = require("./_version");
var _baseProvider = require("./base-provider");
"use strict";
var __awaiter = undefined && undefined.__awaiter || function(thisArg, _arguments, P, generator) {
    function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
            resolve(value);
        });
    }
    return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
            try {
                step(generator.next(value));
            } catch (e) {
                reject(e);
            }
        }
        function rejected(value) {
            try {
                step(generator["throw"](value));
            } catch (e) {
                reject(e);
            }
        }
        function step(result) {
            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
const logger = new _logger.Logger(_version.version);
// The transaction has already been sanitized by the calls in Provider
function getTransactionPostData(transaction) {
    const result = {};
    for(let key in transaction){
        if (transaction[key] == null) continue;
        let value = transaction[key];
        if (key === "type" && value === 0) continue;
        // Quantity-types require no leading zero, unless 0
        if (({
            type: true,
            gasLimit: true,
            gasPrice: true,
            maxFeePerGs: true,
            maxPriorityFeePerGas: true,
            nonce: true,
            value: true
        })[key]) value = _bytes.hexValue(_bytes.hexlify(value));
        else if (key === "accessList") value = "[" + _transactions.accessListify(value).map((set)=>{
            return `{address:"${set.address}",storageKeys:["${set.storageKeys.join('","')}"]}`;
        }).join(",") + "]";
        else value = _bytes.hexlify(value);
        result[key] = value;
    }
    return result;
}
function getResult(result) {
    // getLogs, getHistory have weird success responses
    if (result.status == 0 && (result.message === "No records found" || result.message === "No transactions found")) return result.result;
    if (result.status != 1 || result.message != "OK") {
        const error = new Error("invalid response");
        error.result = JSON.stringify(result);
        if ((result.result || "").toLowerCase().indexOf("rate limit") >= 0) error.throttleRetry = true;
        throw error;
    }
    return result.result;
}
function getJsonResult(result) {
    // This response indicates we are being throttled
    if (result && result.status == 0 && result.message == "NOTOK" && (result.result || "").toLowerCase().indexOf("rate limit") >= 0) {
        const error = new Error("throttled response");
        error.result = JSON.stringify(result);
        error.throttleRetry = true;
        throw error;
    }
    if (result.jsonrpc != "2.0") {
        // @TODO: not any
        const error = new Error("invalid response");
        error.result = JSON.stringify(result);
        throw error;
    }
    if (result.error) {
        // @TODO: not any
        const error = new Error(result.error.message || "unknown error");
        if (result.error.code) error.code = result.error.code;
        if (result.error.data) error.data = result.error.data;
        throw error;
    }
    return result.result;
}
// The blockTag was normalized as a string by the Provider pre-perform operations
function checkLogTag(blockTag) {
    if (blockTag === "pending") throw new Error("pending not supported");
    if (blockTag === "latest") return blockTag;
    return parseInt(blockTag.substring(2), 16);
}
const defaultApiKey = "9D13ZE7XSBTJ94N9BNJ2MA33VMAY2YPIRB";
function checkError(method, error, transaction) {
    // Undo the "convenience" some nodes are attempting to prevent backwards
    // incompatibility; maybe for v6 consider forwarding reverts as errors
    if (method === "call" && error.code === _logger.Logger.errors.SERVER_ERROR) {
        const e = error.error;
        // Etherscan keeps changing their string
        if (e && (e.message.match(/reverted/i) || e.message.match(/VM execution error/i))) {
            // Etherscan prefixes the data like "Reverted 0x1234"
            let data = e.data;
            if (data) data = "0x" + data.replace(/^.*0x/i, "");
            if (_bytes.isHexString(data)) return data;
            logger.throwError("missing revert data in call exception", _logger.Logger.errors.CALL_EXCEPTION, {
                error,
                data: "0x"
            });
        }
    }
    // Get the message from any nested error structure
    let message = error.message;
    if (error.code === _logger.Logger.errors.SERVER_ERROR) {
        if (error.error && typeof error.error.message === "string") message = error.error.message;
        else if (typeof error.body === "string") message = error.body;
        else if (typeof error.responseText === "string") message = error.responseText;
    }
    message = (message || "").toLowerCase();
    // "Insufficient funds. The account you tried to send transaction from does not have enough funds. Required 21464000000000 and got: 0"
    if (message.match(/insufficient funds/)) logger.throwError("insufficient funds for intrinsic transaction cost", _logger.Logger.errors.INSUFFICIENT_FUNDS, {
        error,
        method,
        transaction
    });
    // "Transaction with the same hash was already imported."
    if (message.match(/same hash was already imported|transaction nonce is too low|nonce too low/)) logger.throwError("nonce has already been used", _logger.Logger.errors.NONCE_EXPIRED, {
        error,
        method,
        transaction
    });
    // "Transaction gas price is too low. There is another transaction with same nonce in the queue. Try increasing the gas price or incrementing the nonce."
    if (message.match(/another transaction with same nonce/)) logger.throwError("replacement fee too low", _logger.Logger.errors.REPLACEMENT_UNDERPRICED, {
        error,
        method,
        transaction
    });
    if (message.match(/execution failed due to an exception|execution reverted/)) logger.throwError("cannot estimate gas; transaction may fail or may require manual gas limit", _logger.Logger.errors.UNPREDICTABLE_GAS_LIMIT, {
        error,
        method,
        transaction
    });
    throw error;
}
class EtherscanProvider extends _baseProvider.BaseProvider {
    constructor(network, apiKey){
        logger.checkNew(new.target, EtherscanProvider);
        super(network);
        _properties.defineReadOnly(this, "baseUrl", this.getBaseUrl());
        _properties.defineReadOnly(this, "apiKey", apiKey || defaultApiKey);
    }
    getBaseUrl() {
        switch(this.network ? this.network.name : "invalid"){
            case "homestead":
                return "https:/\/api.etherscan.io";
            case "ropsten":
                return "https:/\/api-ropsten.etherscan.io";
            case "rinkeby":
                return "https:/\/api-rinkeby.etherscan.io";
            case "kovan":
                return "https:/\/api-kovan.etherscan.io";
            case "goerli":
                return "https:/\/api-goerli.etherscan.io";
            default:
        }
        return logger.throwArgumentError("unsupported network", "network", name);
    }
    getUrl(module, params) {
        const query = Object.keys(params).reduce((accum, key)=>{
            const value = params[key];
            if (value != null) accum += `&${key}=${value}`;
            return accum;
        }, "");
        const apiKey = this.apiKey ? `&apikey=${this.apiKey}` : "";
        return `${this.baseUrl}/api?module=${module}${query}${apiKey}`;
    }
    getPostUrl() {
        return `${this.baseUrl}/api`;
    }
    getPostData(module, params) {
        params.module = module;
        params.apikey = this.apiKey;
        return params;
    }
    fetch(module, params, post) {
        return __awaiter(this, void 0, void 0, function*() {
            const url = post ? this.getPostUrl() : this.getUrl(module, params);
            const payload = post ? this.getPostData(module, params) : null;
            const procFunc = module === "proxy" ? getJsonResult : getResult;
            this.emit("debug", {
                action: "request",
                request: url,
                provider: this
            });
            const connection = {
                url: url,
                throttleSlotInterval: 1000,
                throttleCallback: (attempt, url)=>{
                    if (this.isCommunityResource()) _formatter.showThrottleMessage();
                    return Promise.resolve(true);
                }
            };
            let payloadStr = null;
            if (payload) {
                connection.headers = {
                    "content-type": "application/x-www-form-urlencoded; charset=UTF-8"
                };
                payloadStr = Object.keys(payload).map((key)=>{
                    return `${key}=${payload[key]}`;
                }).join("&");
            }
            const result = yield _web.fetchJson(connection, payloadStr, procFunc || getJsonResult);
            this.emit("debug", {
                action: "response",
                request: url,
                response: _properties.deepCopy(result),
                provider: this
            });
            return result;
        });
    }
    detectNetwork() {
        return __awaiter(this, void 0, void 0, function*() {
            return this.network;
        });
    }
    perform(method, params) {
        const _super = Object.create(null, {
            perform: {
                get: ()=>super.perform
            }
        });
        return __awaiter(this, void 0, void 0, function*() {
            switch(method){
                case "getBlockNumber":
                    return this.fetch("proxy", {
                        action: "eth_blockNumber"
                    });
                case "getGasPrice":
                    return this.fetch("proxy", {
                        action: "eth_gasPrice"
                    });
                case "getBalance":
                    // Returns base-10 result
                    return this.fetch("account", {
                        action: "balance",
                        address: params.address,
                        tag: params.blockTag
                    });
                case "getTransactionCount":
                    return this.fetch("proxy", {
                        action: "eth_getTransactionCount",
                        address: params.address,
                        tag: params.blockTag
                    });
                case "getCode":
                    return this.fetch("proxy", {
                        action: "eth_getCode",
                        address: params.address,
                        tag: params.blockTag
                    });
                case "getStorageAt":
                    return this.fetch("proxy", {
                        action: "eth_getStorageAt",
                        address: params.address,
                        position: params.position,
                        tag: params.blockTag
                    });
                case "sendTransaction":
                    return this.fetch("proxy", {
                        action: "eth_sendRawTransaction",
                        hex: params.signedTransaction
                    }, true).catch((error)=>{
                        return checkError("sendTransaction", error, params.signedTransaction);
                    });
                case "getBlock":
                    if (params.blockTag) return this.fetch("proxy", {
                        action: "eth_getBlockByNumber",
                        tag: params.blockTag,
                        boolean: params.includeTransactions ? "true" : "false"
                    });
                    throw new Error("getBlock by blockHash not implemented");
                case "getTransaction":
                    return this.fetch("proxy", {
                        action: "eth_getTransactionByHash",
                        txhash: params.transactionHash
                    });
                case "getTransactionReceipt":
                    return this.fetch("proxy", {
                        action: "eth_getTransactionReceipt",
                        txhash: params.transactionHash
                    });
                case "call":
                    {
                        if (params.blockTag !== "latest") throw new Error("EtherscanProvider does not support blockTag for call");
                        const postData = getTransactionPostData(params.transaction);
                        postData.module = "proxy";
                        postData.action = "eth_call";
                        try {
                            return yield this.fetch("proxy", postData, true);
                        } catch (error) {
                            return checkError("call", error, params.transaction);
                        }
                    }
                case "estimateGas":
                    {
                        const postData = getTransactionPostData(params.transaction);
                        postData.module = "proxy";
                        postData.action = "eth_estimateGas";
                        try {
                            return yield this.fetch("proxy", postData, true);
                        } catch (error) {
                            return checkError("estimateGas", error, params.transaction);
                        }
                    }
                case "getLogs":
                    {
                        const args = {
                            action: "getLogs"
                        };
                        if (params.filter.fromBlock) args.fromBlock = checkLogTag(params.filter.fromBlock);
                        if (params.filter.toBlock) args.toBlock = checkLogTag(params.filter.toBlock);
                        if (params.filter.address) args.address = params.filter.address;
                        // @TODO: We can handle slightly more complicated logs using the logs API
                        if (params.filter.topics && params.filter.topics.length > 0) {
                            if (params.filter.topics.length > 1) logger.throwError("unsupported topic count", _logger.Logger.errors.UNSUPPORTED_OPERATION, {
                                topics: params.filter.topics
                            });
                            if (params.filter.topics.length === 1) {
                                const topic0 = params.filter.topics[0];
                                if (typeof topic0 !== "string" || topic0.length !== 66) logger.throwError("unsupported topic format", _logger.Logger.errors.UNSUPPORTED_OPERATION, {
                                    topic0: topic0
                                });
                                args.topic0 = topic0;
                            }
                        }
                        const logs = yield this.fetch("logs", args);
                        // Cache txHash => blockHash
                        let blocks = {};
                        // Add any missing blockHash to the logs
                        for(let i = 0; i < logs.length; i++){
                            const log = logs[i];
                            if (log.blockHash != null) continue;
                            if (blocks[log.blockNumber] == null) {
                                const block = yield this.getBlock(log.blockNumber);
                                if (block) blocks[log.blockNumber] = block.hash;
                            }
                            log.blockHash = blocks[log.blockNumber];
                        }
                        return logs;
                    }
                case "getEtherPrice":
                    if (this.network.name !== "homestead") return 0.0;
                    return parseFloat((yield this.fetch("stats", {
                        action: "ethprice"
                    })).ethusd);
                default:
                    break;
            }
            return _super.perform.call(this, method, params);
        });
    }
    // Note: The `page` page parameter only allows pagination within the
    //       10,000 window available without a page and offset parameter
    //       Error: Result window is too large, PageNo x Offset size must
    //              be less than or equal to 10000
    getHistory(addressOrName, startBlock, endBlock) {
        return __awaiter(this, void 0, void 0, function*() {
            const params = {
                action: "txlist",
                address: yield this.resolveName(addressOrName),
                startblock: startBlock == null ? 0 : startBlock,
                endblock: endBlock == null ? 99999999 : endBlock,
                sort: "asc"
            };
            const result = yield this.fetch("account", params);
            return result.map((tx)=>{
                [
                    "contractAddress",
                    "to"
                ].forEach(function(key) {
                    if (tx[key] == "") delete tx[key];
                });
                if (tx.creates == null && tx.contractAddress != null) tx.creates = tx.contractAddress;
                const item = this.formatter.transactionResponse(tx);
                if (tx.timeStamp) item.timestamp = parseInt(tx.timeStamp);
                return item;
            });
        });
    }
    isCommunityResource() {
        return this.apiKey === defaultApiKey;
    }
}

},{"@ethersproject/bytes":"htrqZ","@ethersproject/properties":"h3GJb","@ethersproject/transactions":"d1ust","@ethersproject/web":"5yjI3","./formatter":"81rch","@ethersproject/logger":"hLvB2","./_version":"hHzDi","./base-provider":"8sQgN","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"hP3GB":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "FallbackProvider", ()=>FallbackProvider
);
var _abstractProvider = require("@ethersproject/abstract-provider");
var _bignumber = require("@ethersproject/bignumber");
var _bytes = require("@ethersproject/bytes");
var _properties = require("@ethersproject/properties");
var _random = require("@ethersproject/random");
var _web = require("@ethersproject/web");
var _baseProvider = require("./base-provider");
var _formatter = require("./formatter");
var _logger = require("@ethersproject/logger");
var _version = require("./_version");
"use strict";
var __awaiter = undefined && undefined.__awaiter || function(thisArg, _arguments, P, generator) {
    function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
            resolve(value);
        });
    }
    return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
            try {
                step(generator.next(value));
            } catch (e) {
                reject(e);
            }
        }
        function rejected(value) {
            try {
                step(generator["throw"](value));
            } catch (e) {
                reject(e);
            }
        }
        function step(result) {
            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
const logger = new _logger.Logger(_version.version);
function now() {
    return new Date().getTime();
}
// Returns to network as long as all agree, or null if any is null.
// Throws an error if any two networks do not match.
function checkNetworks(networks) {
    let result = null;
    for(let i = 0; i < networks.length; i++){
        const network = networks[i];
        // Null! We do not know our network; bail.
        if (network == null) return null;
        if (result) // Make sure the network matches the previous networks
        {
            if (!(result.name === network.name && result.chainId === network.chainId && (result.ensAddress === network.ensAddress || result.ensAddress == null && network.ensAddress == null))) logger.throwArgumentError("provider mismatch", "networks", networks);
        } else result = network;
    }
    return result;
}
function median(values, maxDelta) {
    values = values.slice().sort();
    const middle = Math.floor(values.length / 2);
    // Odd length; take the middle
    if (values.length % 2) return values[middle];
    // Even length; take the average of the two middle
    const a = values[middle - 1], b = values[middle];
    if (maxDelta != null && Math.abs(a - b) > maxDelta) return null;
    return (a + b) / 2;
}
function serialize(value) {
    if (value === null) return "null";
    else if (typeof value === "number" || typeof value === "boolean") return JSON.stringify(value);
    else if (typeof value === "string") return value;
    else if (_bignumber.BigNumber.isBigNumber(value)) return value.toString();
    else if (Array.isArray(value)) return JSON.stringify(value.map((i)=>serialize(i)
    ));
    else if (typeof value === "object") {
        const keys = Object.keys(value);
        keys.sort();
        return "{" + keys.map((key)=>{
            let v = value[key];
            if (typeof v === "function") v = "[function]";
            else v = serialize(v);
            return JSON.stringify(key) + ":" + v;
        }).join(",") + "}";
    }
    throw new Error("unknown value type: " + typeof value);
}
// Next request ID to use for emitting debug info
let nextRid = 1;
function stall(duration) {
    let cancel = null;
    let timer = null;
    let promise = new Promise((resolve)=>{
        cancel = function() {
            if (timer) {
                clearTimeout(timer);
                timer = null;
            }
            resolve();
        };
        timer = setTimeout(cancel, duration);
    });
    const wait = (func)=>{
        promise = promise.then(func);
        return promise;
    };
    function getPromise() {
        return promise;
    }
    return {
        cancel,
        getPromise,
        wait
    };
}
const ForwardErrors = [
    _logger.Logger.errors.CALL_EXCEPTION,
    _logger.Logger.errors.INSUFFICIENT_FUNDS,
    _logger.Logger.errors.NONCE_EXPIRED,
    _logger.Logger.errors.REPLACEMENT_UNDERPRICED,
    _logger.Logger.errors.UNPREDICTABLE_GAS_LIMIT
];
const ForwardProperties = [
    "address",
    "args",
    "errorArgs",
    "errorSignature",
    "method",
    "transaction", 
];
function exposeDebugConfig(config, now1) {
    const result = {
        weight: config.weight
    };
    Object.defineProperty(result, "provider", {
        get: ()=>config.provider
    });
    if (config.start) result.start = config.start;
    if (now1) result.duration = now1 - config.start;
    if (config.done) {
        if (config.error) result.error = config.error;
        else result.result = config.result || null;
    }
    return result;
}
function normalizedTally(normalize, quorum) {
    return function(configs) {
        // Count the votes for each result
        const tally = {};
        configs.forEach((c)=>{
            const value = normalize(c.result);
            if (!tally[value]) tally[value] = {
                count: 0,
                result: c.result
            };
            tally[value].count++;
        });
        // Check for a quorum on any given result
        const keys = Object.keys(tally);
        for(let i = 0; i < keys.length; i++){
            const check = tally[keys[i]];
            if (check.count >= quorum) return check.result;
        }
        // No quroum
        return undefined;
    };
}
function getProcessFunc(provider, method, params) {
    let normalize = serialize;
    switch(method){
        case "getBlockNumber":
            // Return the median value, unless there is (median + 1) is also
            // present, in which case that is probably true and the median
            // is going to be stale soon. In the event of a malicious node,
            // the lie will be true soon enough.
            return function(configs) {
                const values = configs.map((c)=>c.result
                );
                // Get the median block number
                let blockNumber = median(configs.map((c)=>c.result
                ), 2);
                if (blockNumber == null) return undefined;
                blockNumber = Math.ceil(blockNumber);
                // If the next block height is present, its prolly safe to use
                if (values.indexOf(blockNumber + 1) >= 0) blockNumber++;
                // Don't ever roll back the blockNumber
                if (blockNumber >= provider._highestBlockNumber) provider._highestBlockNumber = blockNumber;
                return provider._highestBlockNumber;
            };
        case "getGasPrice":
            // Return the middle (round index up) value, similar to median
            // but do not average even entries and choose the higher.
            // Malicious actors must compromise 50% of the nodes to lie.
            return function(configs) {
                const values = configs.map((c)=>c.result
                );
                values.sort();
                return values[Math.floor(values.length / 2)];
            };
        case "getEtherPrice":
            // Returns the median price. Malicious actors must compromise at
            // least 50% of the nodes to lie (in a meaningful way).
            return function(configs) {
                return median(configs.map((c)=>c.result
                ));
            };
        // No additional normalizing required; serialize is enough
        case "getBalance":
        case "getTransactionCount":
        case "getCode":
        case "getStorageAt":
        case "call":
        case "estimateGas":
        case "getLogs":
            break;
        // We drop the confirmations from transactions as it is approximate
        case "getTransaction":
        case "getTransactionReceipt":
            normalize = function(tx) {
                if (tx == null) return null;
                tx = _properties.shallowCopy(tx);
                tx.confirmations = -1;
                return serialize(tx);
            };
            break;
        // We drop the confirmations from transactions as it is approximate
        case "getBlock":
            // We drop the confirmations from transactions as it is approximate
            if (params.includeTransactions) normalize = function(block) {
                if (block == null) return null;
                block = _properties.shallowCopy(block);
                block.transactions = block.transactions.map((tx)=>{
                    tx = _properties.shallowCopy(tx);
                    tx.confirmations = -1;
                    return tx;
                });
                return serialize(block);
            };
            else normalize = function(block) {
                if (block == null) return null;
                return serialize(block);
            };
            break;
        default:
            throw new Error("unknown method: " + method);
    }
    // Return the result if and only if the expected quorum is
    // satisfied and agreed upon for the final result.
    return normalizedTally(normalize, provider.quorum);
}
// If we are doing a blockTag query, we need to make sure the backend is
// caught up to the FallbackProvider, before sending a request to it.
function waitForSync(config, blockNumber) {
    return __awaiter(this, void 0, void 0, function*() {
        const provider = config.provider;
        if (provider.blockNumber != null && provider.blockNumber >= blockNumber || blockNumber === -1) return provider;
        return _web.poll(()=>{
            return new Promise((resolve, reject)=>{
                setTimeout(function() {
                    // We are synced
                    if (provider.blockNumber >= blockNumber) return resolve(provider);
                    // We're done; just quit
                    if (config.cancelled) return resolve(null);
                    // Try again, next block
                    return resolve(undefined);
                }, 0);
            });
        }, {
            oncePoll: provider
        });
    });
}
function getRunner(config, currentBlockNumber, method, params) {
    return __awaiter(this, void 0, void 0, function*() {
        let provider = config.provider;
        switch(method){
            case "getBlockNumber":
            case "getGasPrice":
                return provider[method]();
            case "getEtherPrice":
                if (provider.getEtherPrice) return provider.getEtherPrice();
                break;
            case "getBalance":
            case "getTransactionCount":
            case "getCode":
                if (params.blockTag && _bytes.isHexString(params.blockTag)) provider = yield waitForSync(config, currentBlockNumber);
                return provider[method](params.address, params.blockTag || "latest");
            case "getStorageAt":
                if (params.blockTag && _bytes.isHexString(params.blockTag)) provider = yield waitForSync(config, currentBlockNumber);
                return provider.getStorageAt(params.address, params.position, params.blockTag || "latest");
            case "getBlock":
                if (params.blockTag && _bytes.isHexString(params.blockTag)) provider = yield waitForSync(config, currentBlockNumber);
                return provider[params.includeTransactions ? "getBlockWithTransactions" : "getBlock"](params.blockTag || params.blockHash);
            case "call":
            case "estimateGas":
                if (params.blockTag && _bytes.isHexString(params.blockTag)) provider = yield waitForSync(config, currentBlockNumber);
                return provider[method](params.transaction);
            case "getTransaction":
            case "getTransactionReceipt":
                return provider[method](params.transactionHash);
            case "getLogs":
                {
                    let filter = params.filter;
                    if (filter.fromBlock && _bytes.isHexString(filter.fromBlock) || filter.toBlock && _bytes.isHexString(filter.toBlock)) provider = yield waitForSync(config, currentBlockNumber);
                    return provider.getLogs(filter);
                }
        }
        return logger.throwError("unknown method error", _logger.Logger.errors.UNKNOWN_ERROR, {
            method: method,
            params: params
        });
    });
}
class FallbackProvider extends _baseProvider.BaseProvider {
    constructor(providers, quorum){
        logger.checkNew(new.target, FallbackProvider);
        if (providers.length === 0) logger.throwArgumentError("missing providers", "providers", providers);
        const providerConfigs = providers.map((configOrProvider, index)=>{
            if (_abstractProvider.Provider.isProvider(configOrProvider)) {
                const stallTimeout = _formatter.isCommunityResource(configOrProvider) ? 2000 : 750;
                const priority = 1;
                return Object.freeze({
                    provider: configOrProvider,
                    weight: 1,
                    stallTimeout,
                    priority
                });
            }
            const config = _properties.shallowCopy(configOrProvider);
            if (config.priority == null) config.priority = 1;
            if (config.stallTimeout == null) config.stallTimeout = _formatter.isCommunityResource(configOrProvider) ? 2000 : 750;
            if (config.weight == null) config.weight = 1;
            const weight = config.weight;
            if (weight % 1 || weight > 512 || weight < 1) logger.throwArgumentError("invalid weight; must be integer in [1, 512]", `providers[${index}].weight`, weight);
            return Object.freeze(config);
        });
        const total = providerConfigs.reduce((accum, c)=>accum + c.weight
        , 0);
        if (quorum == null) quorum = total / 2;
        else if (quorum > total) logger.throwArgumentError("quorum will always fail; larger than total weight", "quorum", quorum);
        // Are all providers' networks are known
        let networkOrReady = checkNetworks(providerConfigs.map((c)=>c.provider.network
        ));
        // Not all networks are known; we must stall
        if (networkOrReady == null) networkOrReady = new Promise((resolve, reject)=>{
            setTimeout(()=>{
                this.detectNetwork().then(resolve, reject);
            }, 0);
        });
        super(networkOrReady);
        // Preserve a copy, so we do not get mutated
        _properties.defineReadOnly(this, "providerConfigs", Object.freeze(providerConfigs));
        _properties.defineReadOnly(this, "quorum", quorum);
        this._highestBlockNumber = -1;
    }
    detectNetwork() {
        return __awaiter(this, void 0, void 0, function*() {
            const networks = yield Promise.all(this.providerConfigs.map((c)=>c.provider.getNetwork()
            ));
            return checkNetworks(networks);
        });
    }
    perform(method, params) {
        return __awaiter(this, void 0, void 0, function*() {
            // Sending transactions is special; always broadcast it to all backends
            if (method === "sendTransaction") {
                const results = yield Promise.all(this.providerConfigs.map((c)=>{
                    return c.provider.sendTransaction(params.signedTransaction).then((result)=>{
                        return result.hash;
                    }, (error)=>{
                        return error;
                    });
                }));
                // Any success is good enough (other errors are likely "already seen" errors
                for(let i = 0; i < results.length; i++){
                    const result = results[i];
                    if (typeof result === "string") return result;
                }
                // They were all an error; pick the first error
                throw results[0];
            }
            // We need to make sure we are in sync with our backends, so we need
            // to know this before we can make a lot of calls
            if (this._highestBlockNumber === -1 && method !== "getBlockNumber") yield this.getBlockNumber();
            const processFunc = getProcessFunc(this, method, params);
            // Shuffle the providers and then sort them by their priority; we
            // shallowCopy them since we will store the result in them too
            const configs = _random.shuffled(this.providerConfigs.map(_properties.shallowCopy));
            configs.sort((a, b)=>a.priority - b.priority
            );
            const currentBlockNumber = this._highestBlockNumber;
            let i = 0;
            let first = true;
            while(true){
                const t0 = now();
                // Compute the inflight weight (exclude anything past)
                let inflightWeight = configs.filter((c)=>c.runner && t0 - c.start < c.stallTimeout
                ).reduce((accum, c)=>accum + c.weight
                , 0);
                // Start running enough to meet quorum
                while(inflightWeight < this.quorum && i < configs.length){
                    const config = configs[i++];
                    const rid = nextRid++;
                    config.start = now();
                    config.staller = stall(config.stallTimeout);
                    config.staller.wait(()=>{
                        config.staller = null;
                    });
                    config.runner = getRunner(config, currentBlockNumber, method, params).then((result)=>{
                        config.done = true;
                        config.result = result;
                        if (this.listenerCount("debug")) this.emit("debug", {
                            action: "request",
                            rid: rid,
                            backend: exposeDebugConfig(config, now()),
                            request: {
                                method: method,
                                params: _properties.deepCopy(params)
                            },
                            provider: this
                        });
                    }, (error)=>{
                        config.done = true;
                        config.error = error;
                        if (this.listenerCount("debug")) this.emit("debug", {
                            action: "request",
                            rid: rid,
                            backend: exposeDebugConfig(config, now()),
                            request: {
                                method: method,
                                params: _properties.deepCopy(params)
                            },
                            provider: this
                        });
                    });
                    if (this.listenerCount("debug")) this.emit("debug", {
                        action: "request",
                        rid: rid,
                        backend: exposeDebugConfig(config, null),
                        request: {
                            method: method,
                            params: _properties.deepCopy(params)
                        },
                        provider: this
                    });
                    inflightWeight += config.weight;
                }
                // Wait for anything meaningful to finish or stall out
                const waiting = [];
                configs.forEach((c)=>{
                    if (c.done || !c.runner) return;
                    waiting.push(c.runner);
                    if (c.staller) waiting.push(c.staller.getPromise());
                });
                if (waiting.length) yield Promise.race(waiting);
                // Check the quorum and process the results; the process function
                // may additionally decide the quorum is not met
                const results = configs.filter((c)=>c.done && c.error == null
                );
                if (results.length >= this.quorum) {
                    const result = processFunc(results);
                    if (result !== undefined) {
                        // Shut down any stallers
                        configs.forEach((c)=>{
                            if (c.staller) c.staller.cancel();
                            c.cancelled = true;
                        });
                        return result;
                    }
                    if (!first) yield stall(100).getPromise();
                    first = false;
                }
                // No result, check for errors that should be forwarded
                const errors = configs.reduce((accum, c)=>{
                    if (!c.done || c.error == null) return accum;
                    const code = c.error.code;
                    if (ForwardErrors.indexOf(code) >= 0) {
                        if (!accum[code]) accum[code] = {
                            error: c.error,
                            weight: 0
                        };
                        accum[code].weight += c.weight;
                    }
                    return accum;
                }, {});
                Object.keys(errors).forEach((errorCode)=>{
                    const tally = errors[errorCode];
                    if (tally.weight < this.quorum) return;
                    // Shut down any stallers
                    configs.forEach((c)=>{
                        if (c.staller) c.staller.cancel();
                        c.cancelled = true;
                    });
                    const e = tally.error;
                    const props = {};
                    ForwardProperties.forEach((name)=>{
                        if (e[name] == null) return;
                        props[name] = e[name];
                    });
                    logger.throwError(e.reason || e.message, errorCode, props);
                });
                // All configs have run to completion; we will never get more data
                if (configs.filter((c)=>!c.done
                ).length === 0) break;
            }
            // Shut down any stallers; shouldn't be any
            configs.forEach((c)=>{
                if (c.staller) c.staller.cancel();
                c.cancelled = true;
            });
            return logger.throwError("failed to meet quorum", _logger.Logger.errors.SERVER_ERROR, {
                method: method,
                params: params,
                //results: configs.map((c) => c.result),
                //errors: configs.map((c) => c.error),
                results: configs.map((c)=>exposeDebugConfig(c)
                ),
                provider: this
            });
        });
    }
}

},{"@ethersproject/abstract-provider":"g1jr1","@ethersproject/bignumber":"ckYYW","@ethersproject/bytes":"htrqZ","@ethersproject/properties":"h3GJb","@ethersproject/random":"7myQM","@ethersproject/web":"5yjI3","./base-provider":"8sQgN","./formatter":"81rch","@ethersproject/logger":"hLvB2","./_version":"hHzDi","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"6veja":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "IpcProvider", ()=>IpcProvider
);
"use strict";
const IpcProvider = null;

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"5hX8Y":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "InfuraWebSocketProvider", ()=>InfuraWebSocketProvider
);
parcelHelpers.export(exports, "InfuraProvider", ()=>InfuraProvider
);
var _properties = require("@ethersproject/properties");
var _websocketProvider = require("./websocket-provider");
var _formatter = require("./formatter");
var _logger = require("@ethersproject/logger");
var _version = require("./_version");
var _urlJsonRpcProvider = require("./url-json-rpc-provider");
"use strict";
const logger = new _logger.Logger(_version.version);
const defaultProjectId = "84842078b09946638c03157f83405213";
class InfuraWebSocketProvider extends _websocketProvider.WebSocketProvider {
    constructor(network, apiKey){
        const provider = new InfuraProvider(network, apiKey);
        const connection = provider.connection;
        if (connection.password) logger.throwError("INFURA WebSocket project secrets unsupported", _logger.Logger.errors.UNSUPPORTED_OPERATION, {
            operation: "InfuraProvider.getWebSocketProvider()"
        });
        const url = connection.url.replace(/^http/i, "ws").replace("/v3/", "/ws/v3/");
        super(url, network);
        _properties.defineReadOnly(this, "apiKey", provider.projectId);
        _properties.defineReadOnly(this, "projectId", provider.projectId);
        _properties.defineReadOnly(this, "projectSecret", provider.projectSecret);
    }
    isCommunityResource() {
        return this.projectId === defaultProjectId;
    }
}
class InfuraProvider extends _urlJsonRpcProvider.UrlJsonRpcProvider {
    static getWebSocketProvider(network, apiKey) {
        return new InfuraWebSocketProvider(network, apiKey);
    }
    static getApiKey(apiKey) {
        const apiKeyObj = {
            apiKey: defaultProjectId,
            projectId: defaultProjectId,
            projectSecret: null
        };
        if (apiKey == null) return apiKeyObj;
        if (typeof apiKey === "string") apiKeyObj.projectId = apiKey;
        else if (apiKey.projectSecret != null) {
            logger.assertArgument(typeof apiKey.projectId === "string", "projectSecret requires a projectId", "projectId", apiKey.projectId);
            logger.assertArgument(typeof apiKey.projectSecret === "string", "invalid projectSecret", "projectSecret", "[REDACTED]");
            apiKeyObj.projectId = apiKey.projectId;
            apiKeyObj.projectSecret = apiKey.projectSecret;
        } else if (apiKey.projectId) apiKeyObj.projectId = apiKey.projectId;
        apiKeyObj.apiKey = apiKeyObj.projectId;
        return apiKeyObj;
    }
    static getUrl(network, apiKey) {
        let host = null;
        switch(network ? network.name : "unknown"){
            case "homestead":
                host = "mainnet.infura.io";
                break;
            case "ropsten":
                host = "ropsten.infura.io";
                break;
            case "rinkeby":
                host = "rinkeby.infura.io";
                break;
            case "kovan":
                host = "kovan.infura.io";
                break;
            case "goerli":
                host = "goerli.infura.io";
                break;
            case "matic":
                host = "polygon-mainnet.infura.io";
                break;
            case "maticmum":
                host = "polygon-mumbai.infura.io";
                break;
            case "optimism":
                host = "optimism-mainnet.infura.io";
                break;
            case "optimism-kovan":
                host = "optimism-kovan.infura.io";
                break;
            case "arbitrum":
                host = "arbitrum-mainnet.infura.io";
                break;
            case "arbitrum-rinkeby":
                host = "arbitrum-rinkeby.infura.io";
                break;
            default:
                logger.throwError("unsupported network", _logger.Logger.errors.INVALID_ARGUMENT, {
                    argument: "network",
                    value: network
                });
        }
        const connection = {
            allowGzip: true,
            url: "https://" + host + "/v3/" + apiKey.projectId,
            throttleCallback: (attempt, url)=>{
                if (apiKey.projectId === defaultProjectId) _formatter.showThrottleMessage();
                return Promise.resolve(true);
            }
        };
        if (apiKey.projectSecret != null) {
            connection.user = "";
            connection.password = apiKey.projectSecret;
        }
        return connection;
    }
    isCommunityResource() {
        return this.projectId === defaultProjectId;
    }
}

},{"@ethersproject/properties":"h3GJb","./websocket-provider":"jrqOy","./formatter":"81rch","@ethersproject/logger":"hLvB2","./_version":"hHzDi","./url-json-rpc-provider":"loAiY","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"9SG2e":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
// Experimental
parcelHelpers.export(exports, "JsonRpcBatchProvider", ()=>JsonRpcBatchProvider
);
var _properties = require("@ethersproject/properties");
var _web = require("@ethersproject/web");
var _jsonRpcProvider = require("./json-rpc-provider");
class JsonRpcBatchProvider extends _jsonRpcProvider.JsonRpcProvider {
    send(method, params) {
        const request1 = {
            method: method,
            params: params,
            id: this._nextId++,
            jsonrpc: "2.0"
        };
        if (this._pendingBatch == null) this._pendingBatch = [];
        const inflightRequest1 = {
            request: request1,
            resolve: null,
            reject: null
        };
        const promise = new Promise((resolve, reject)=>{
            inflightRequest1.resolve = resolve;
            inflightRequest1.reject = reject;
        });
        this._pendingBatch.push(inflightRequest1);
        if (!this._pendingBatchAggregator) // Schedule batch for next event loop + short duration
        this._pendingBatchAggregator = setTimeout(()=>{
            // Get teh current batch and clear it, so new requests
            // go into the next batch
            const batch = this._pendingBatch;
            this._pendingBatch = null;
            this._pendingBatchAggregator = null;
            // Get the request as an array of requests
            const request = batch.map((inflight)=>inflight.request
            );
            this.emit("debug", {
                action: "requestBatch",
                request: _properties.deepCopy(request),
                provider: this
            });
            return _web.fetchJson(this.connection, JSON.stringify(request)).then((result)=>{
                this.emit("debug", {
                    action: "response",
                    request: request,
                    response: result,
                    provider: this
                });
                // For each result, feed it to the correct Promise, depending
                // on whether it was a success or error
                batch.forEach((inflightRequest, index)=>{
                    const payload = result[index];
                    if (payload.error) {
                        const error = new Error(payload.error.message);
                        error.code = payload.error.code;
                        error.data = payload.error.data;
                        inflightRequest.reject(error);
                    } else inflightRequest.resolve(payload.result);
                });
            }, (error)=>{
                this.emit("debug", {
                    action: "response",
                    error: error,
                    request: request,
                    provider: this
                });
                batch.forEach((inflightRequest)=>{
                    inflightRequest.reject(error);
                });
            });
        }, 10);
        return promise;
    }
}

},{"@ethersproject/properties":"h3GJb","@ethersproject/web":"5yjI3","./json-rpc-provider":"8zl9s","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"6XCXZ":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "NodesmithProvider", ()=>NodesmithProvider
);
var _urlJsonRpcProvider = require("./url-json-rpc-provider");
var _logger = require("@ethersproject/logger");
var _version = require("./_version");
/* istanbul ignore file */ "use strict";
const logger = new _logger.Logger(_version.version);
// Special API key provided by Nodesmith for ethers.js
const defaultApiKey = "ETHERS_JS_SHARED";
class NodesmithProvider extends _urlJsonRpcProvider.UrlJsonRpcProvider {
    static getApiKey(apiKey) {
        if (apiKey && typeof apiKey !== "string") logger.throwArgumentError("invalid apiKey", "apiKey", apiKey);
        return apiKey || defaultApiKey;
    }
    static getUrl(network, apiKey) {
        logger.warn("NodeSmith will be discontinued on 2019-12-20; please migrate to another platform.");
        let host = null;
        switch(network.name){
            case "homestead":
                host = "https://ethereum.api.nodesmith.io/v1/mainnet/jsonrpc";
                break;
            case "ropsten":
                host = "https://ethereum.api.nodesmith.io/v1/ropsten/jsonrpc";
                break;
            case "rinkeby":
                host = "https://ethereum.api.nodesmith.io/v1/rinkeby/jsonrpc";
                break;
            case "goerli":
                host = "https://ethereum.api.nodesmith.io/v1/goerli/jsonrpc";
                break;
            case "kovan":
                host = "https://ethereum.api.nodesmith.io/v1/kovan/jsonrpc";
                break;
            default:
                logger.throwArgumentError("unsupported network", "network", arguments[0]);
        }
        return host + "?apiKey=" + apiKey;
    }
}

},{"./url-json-rpc-provider":"loAiY","@ethersproject/logger":"hLvB2","./_version":"hHzDi","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"bzrCr":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "PocketProvider", ()=>PocketProvider
);
var _properties = require("@ethersproject/properties");
var _logger = require("@ethersproject/logger");
var _version = require("./_version");
var _urlJsonRpcProvider = require("./url-json-rpc-provider");
"use strict";
const logger = new _logger.Logger(_version.version);
// These are load-balancer-based application IDs
const defaultApplicationIds = {
    homestead: "6004bcd10040261633ade990",
    ropsten: "6004bd4d0040261633ade991",
    rinkeby: "6004bda20040261633ade994",
    goerli: "6004bd860040261633ade992"
};
class PocketProvider extends _urlJsonRpcProvider.UrlJsonRpcProvider {
    constructor(network, apiKey){
        // We need a bit of creativity in the constructor because
        // Pocket uses different default API keys based on the network
        if (apiKey == null) {
            const n = _properties.getStatic(new.target, "getNetwork")(network);
            if (n) {
                const applicationId = defaultApplicationIds[n.name];
                if (applicationId) apiKey = {
                    applicationId: applicationId,
                    loadBalancer: true
                };
            }
            // If there was any issue above, we don't know this network
            if (apiKey == null) logger.throwError("unsupported network", _logger.Logger.errors.INVALID_ARGUMENT, {
                argument: "network",
                value: network
            });
        }
        super(network, apiKey);
    }
    static getApiKey(apiKey) {
        // Most API Providers allow null to get the default configuration, but
        // Pocket requires the network to decide the default provider, so we
        // rely on hijacking the constructor to add a sensible default for us
        if (apiKey == null) logger.throwArgumentError("PocketProvider.getApiKey does not support null apiKey", "apiKey", apiKey);
        const apiKeyObj = {
            applicationId: null,
            loadBalancer: false,
            applicationSecretKey: null
        };
        // Parse applicationId and applicationSecretKey
        if (typeof apiKey === "string") apiKeyObj.applicationId = apiKey;
        else if (apiKey.applicationSecretKey != null) {
            logger.assertArgument(typeof apiKey.applicationId === "string", "applicationSecretKey requires an applicationId", "applicationId", apiKey.applicationId);
            logger.assertArgument(typeof apiKey.applicationSecretKey === "string", "invalid applicationSecretKey", "applicationSecretKey", "[REDACTED]");
            apiKeyObj.applicationId = apiKey.applicationId;
            apiKeyObj.applicationSecretKey = apiKey.applicationSecretKey;
            apiKeyObj.loadBalancer = !!apiKey.loadBalancer;
        } else if (apiKey.applicationId) {
            logger.assertArgument(typeof apiKey.applicationId === "string", "apiKey.applicationId must be a string", "apiKey.applicationId", apiKey.applicationId);
            apiKeyObj.applicationId = apiKey.applicationId;
            apiKeyObj.loadBalancer = !!apiKey.loadBalancer;
        } else logger.throwArgumentError("unsupported PocketProvider apiKey", "apiKey", apiKey);
        return apiKeyObj;
    }
    static getUrl(network, apiKey) {
        let host = null;
        switch(network ? network.name : "unknown"){
            case "homestead":
                host = "eth-mainnet.gateway.pokt.network";
                break;
            case "ropsten":
                host = "eth-ropsten.gateway.pokt.network";
                break;
            case "rinkeby":
                host = "eth-rinkeby.gateway.pokt.network";
                break;
            case "goerli":
                host = "eth-goerli.gateway.pokt.network";
                break;
            default:
                logger.throwError("unsupported network", _logger.Logger.errors.INVALID_ARGUMENT, {
                    argument: "network",
                    value: network
                });
        }
        let url = null;
        if (apiKey.loadBalancer) url = `https:/\/${host}/v1/lb/${apiKey.applicationId}`;
        else url = `https:/\/${host}/v1/${apiKey.applicationId}`;
        const connection = {
            url
        };
        // Initialize empty headers
        connection.headers = {};
        // Apply application secret key
        if (apiKey.applicationSecretKey != null) {
            connection.user = "";
            connection.password = apiKey.applicationSecretKey;
        }
        return connection;
    }
    isCommunityResource() {
        return this.applicationId === defaultApplicationIds[this.network.name];
    }
}

},{"@ethersproject/properties":"h3GJb","@ethersproject/logger":"hLvB2","./_version":"hHzDi","./url-json-rpc-provider":"loAiY","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"kJEcS":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Web3Provider", ()=>Web3Provider
);
var _properties = require("@ethersproject/properties");
var _logger = require("@ethersproject/logger");
var _version = require("./_version");
var _jsonRpcProvider = require("./json-rpc-provider");
"use strict";
const logger = new _logger.Logger(_version.version);
let _nextId = 1;
function buildWeb3LegacyFetcher(provider, sendFunc) {
    const fetcher = "Web3LegacyFetcher";
    return function(method, params) {
        const request = {
            method: method,
            params: params,
            id: _nextId++,
            jsonrpc: "2.0"
        };
        return new Promise((resolve, reject)=>{
            this.emit("debug", {
                action: "request",
                fetcher,
                request: _properties.deepCopy(request),
                provider: this
            });
            sendFunc(request, (error, response)=>{
                if (error) {
                    this.emit("debug", {
                        action: "response",
                        fetcher,
                        error,
                        request,
                        provider: this
                    });
                    return reject(error);
                }
                this.emit("debug", {
                    action: "response",
                    fetcher,
                    request,
                    response,
                    provider: this
                });
                if (response.error) {
                    const error = new Error(response.error.message);
                    error.code = response.error.code;
                    error.data = response.error.data;
                    return reject(error);
                }
                resolve(response.result);
            });
        });
    };
}
function buildEip1193Fetcher(provider) {
    return function(method, params) {
        if (params == null) params = [];
        const request = {
            method,
            params
        };
        this.emit("debug", {
            action: "request",
            fetcher: "Eip1193Fetcher",
            request: _properties.deepCopy(request),
            provider: this
        });
        return provider.request(request).then((response)=>{
            this.emit("debug", {
                action: "response",
                fetcher: "Eip1193Fetcher",
                request,
                response,
                provider: this
            });
            return response;
        }, (error)=>{
            this.emit("debug", {
                action: "response",
                fetcher: "Eip1193Fetcher",
                request,
                error,
                provider: this
            });
            throw error;
        });
    };
}
class Web3Provider extends _jsonRpcProvider.JsonRpcProvider {
    constructor(provider, network){
        logger.checkNew(new.target, Web3Provider);
        if (provider == null) logger.throwArgumentError("missing provider", "provider", provider);
        let path = null;
        let jsonRpcFetchFunc = null;
        let subprovider = null;
        if (typeof provider === "function") {
            path = "unknown:";
            jsonRpcFetchFunc = provider;
        } else {
            path = provider.host || provider.path || "";
            if (!path && provider.isMetaMask) path = "metamask";
            subprovider = provider;
            if (provider.request) {
                if (path === "") path = "eip-1193:";
                jsonRpcFetchFunc = buildEip1193Fetcher(provider);
            } else if (provider.sendAsync) jsonRpcFetchFunc = buildWeb3LegacyFetcher(provider, provider.sendAsync.bind(provider));
            else if (provider.send) jsonRpcFetchFunc = buildWeb3LegacyFetcher(provider, provider.send.bind(provider));
            else logger.throwArgumentError("unsupported provider", "provider", provider);
            if (!path) path = "unknown:";
        }
        super(path, network);
        _properties.defineReadOnly(this, "jsonRpcFetchFunc", jsonRpcFetchFunc);
        _properties.defineReadOnly(this, "provider", subprovider);
    }
    send(method, params) {
        return this.jsonRpcFetchFunc(method, params);
    }
}

},{"@ethersproject/properties":"h3GJb","@ethersproject/logger":"hLvB2","./_version":"hHzDi","./json-rpc-provider":"8zl9s","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"irDag":[function(require,module,exports) {
"use strict";
var __createBinding = this && this.__createBinding || (Object.create ? function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, {
        enumerable: true,
        get: function() {
            return m[k];
        }
    });
} : function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
});
var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function(o, v) {
    Object.defineProperty(o, "default", {
        enumerable: true,
        value: v
    });
} : function(o, v) {
    o["default"] = v;
});
var __importStar = this && this.__importStar || function(mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) {
        for(var k in mod)if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    }
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = this && this.__importDefault || function(mod) {
    return mod && mod.__esModule ? mod : {
        "default": mod
    };
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.getGatewayUrl = exports.getCachedUrl = void 0;
const contracts_1 = require("@ethersproject/contracts");
const bn_js_1 = __importDefault(require("bn.js"));
const react_1 = __importStar(require("react"));
const Blockies_1 = __importDefault(require("./Blockies"));
const Jazzicon_1 = __importDefault(require("./Jazzicon"));
// 24 hour TTL
const CACHE_TTL = 86400000;
const erc721Abi = [
    'function ownerOf(uint256 tokenId) view returns (address)',
    'function tokenURI(uint256 _tokenId) external view returns (string)', 
];
const erc1155Abi = [
    'function balanceOf(address _owner, uint256 _id) view returns (uint256)',
    'function uri(uint256 _id) view returns (string)', 
];
const getCachedUrl = (key)=>{
    const normalizedKey = key.toLowerCase();
    const cachedItem = window.localStorage.getItem(`davatar/${normalizedKey}`);
    if (cachedItem) {
        const item = JSON.parse(cachedItem);
        if (new Date(item.expiresAt) > new Date()) return (0, exports.getGatewayUrl)(item.url);
    }
    return null;
};
exports.getCachedUrl = getCachedUrl;
const getGatewayUrl = (uri, tokenId)=>{
    const match = new RegExp(/([a-z]+)(?::\/\/|\/)(.*)/).exec(uri);
    if (!match || match.length < 3) return uri;
    const id = match[2];
    let url = uri;
    switch(match[1]){
        case 'ar':
            url = `https://arweave.net/${id}`;
            break;
        case 'ipfs':
            if (id.includes('ipfs') || id.includes('ipns')) url = `https://gateway.ipfs.io/${id}`;
            else url = `https://gateway.ipfs.io/ipfs/${id}`;
            break;
        case 'ipns':
            if (id.includes('ipfs') || id.includes('ipns')) url = `https://gateway.ipfs.io/${id}`;
            else url = `https://gateway.ipfs.io/ipns/${id}`;
            break;
        case 'http':
        case 'https':
            break;
    }
    return tokenId ? url.replaceAll('{id}', tokenId) : url;
};
exports.getGatewayUrl = getGatewayUrl;
function Avatar({ uri , style , className , size , address , provider , generatedAvatarType , defaultComponent ,  }) {
    const [url, setUrl] = (0, react_1.useState)(null);
    const [loaded, setLoaded] = (0, react_1.useState)(false);
    (0, react_1.useEffect)(()=>{
        if (!uri && address) {
            const cachedUrl = (0, exports.getCachedUrl)(address.toLowerCase());
            if (cachedUrl) setUrl(cachedUrl);
        }
        if (!uri) return;
        if (uri && address) {
            const cachedUrl = (0, exports.getCachedUrl)(`${address.toLowerCase()}/${uri}`);
            if (cachedUrl) setUrl(cachedUrl);
        }
        const match = new RegExp(/([a-z]+):\/\/(.*)/).exec(uri);
        const match721 = new RegExp(/eip155:1\/erc721:(\w+)\/(\w+)/).exec(uri);
        const match1155 = new RegExp(/eip155:1\/erc1155:(\w+)\/(\w+)/).exec(uri);
        if (match && match.length === 3) {
            const protocol = match[1];
            const id = match[2];
            switch(protocol){
                case 'ar':
                    {
                        const baseUrl = 'https://arweave.net';
                        fetch(`${baseUrl}/graphql`, {
                            method: 'POST',
                            headers: {
                                'content-type': 'application/json;charset=UTF-8'
                            },
                            body: JSON.stringify({
                                query: `
              {
                transactions(ids: ["${id}"]) {
                  edges {
                    node {
                      id
                      owner {
                        address
                      }
                    }
                  }
                }
              }
              `
                            })
                        }).then((d)=>d.json()
                        ).then((res)=>res.data.transactions.edges[0].node
                        ).then((tx)=>fetch(`${baseUrl}/graphql`, {
                                method: 'POST',
                                headers: {
                                    'content-type': 'application/json;charset=UTF-8'
                                },
                                body: JSON.stringify({
                                    query: `
                {
                  transactions(owners: ["${tx.owner.address}"], tags: { name: "Origin", values: ["${tx.id}"] }, sort: HEIGHT_DESC) {
                    edges {
                      node {
                        id
                      }
                    }
                  }
                }
                `
                                })
                            })
                        ).then((res)=>res.json()
                        ).then((res)=>{
                            if (res.data && res.data.transactions.edges.length > 0) setUrl(`${baseUrl}/${res.data.transactions.edges[0].node.id}`);
                            else setUrl(`${baseUrl}/${id}`);
                        }).catch((e)=>console.error(e)
                        ); // eslint-disable-line
                        break;
                    }
                case 'ipfs':
                    setUrl(`https://gateway.ipfs.io/ipfs/${id}`);
                    break;
                case 'ipns':
                    setUrl(`https://gateway.ipfs.io/ipns/${id}`);
                    break;
                case 'http':
                case 'https':
                    setUrl(uri);
                    break;
                default:
                    setUrl(uri);
                    break;
            }
        } else if (address && match721 && match721.length === 3) {
            const contractId = match721[1].toLowerCase();
            const tokenId = match721[2];
            const normalizedAddress = address.toLowerCase();
            if (provider) {
                const erc721Contract = new contracts_1.Contract(contractId, erc721Abi, provider);
                erc721Contract.ownerOf(tokenId).then((owner)=>{
                    if (!owner || owner.toLowerCase() !== normalizedAddress) throw new Error('ERC721 token not owned by address');
                    return erc721Contract.tokenURI(tokenId);
                }).then((tokenURI)=>fetch((0, exports.getGatewayUrl)(tokenURI, new bn_js_1.default(tokenId).toString(16)))
                ).then((res)=>res.json()
                ).then((data)=>setUrl((0, exports.getGatewayUrl)(data.image))
                ).catch((e)=>console.error(e)
                ); // eslint-disable-line
            }
        } else if (address && match1155 && match1155.length === 3) {
            const contractId = match1155[1].toLowerCase();
            const tokenId = match1155[2];
            if (provider) {
                const erc1155Contract = new contracts_1.Contract(contractId, erc1155Abi, provider);
                erc1155Contract.balanceOf(address, tokenId).then((balance)=>{
                    if (balance.isZero()) throw new Error('ERC1155 token not owned by address');
                    return erc1155Contract.uri(tokenId);
                }).then((tokenURI)=>fetch((0, exports.getGatewayUrl)(tokenURI, new bn_js_1.default(tokenId).toString(16)))
                ).then((res)=>res.json()
                ).then((data)=>setUrl((0, exports.getGatewayUrl)(data.image))
                ).catch((e)=>console.error(e)
                ); // eslint-disable-line
            }
        } else setUrl((0, exports.getGatewayUrl)(uri));
    }, [
        uri,
        address,
        provider
    ]);
    const onLoad = (0, react_1.useCallback)(()=>{
        setLoaded(true);
        if (address) {
            const normalizedAddress = address.toLowerCase();
            const cachedItem = window.localStorage.getItem(normalizedAddress);
            const item = cachedItem && JSON.parse(cachedItem);
            if (!item || new Date(item.expiresAt) > new Date()) {
                const expireDate = new Date(new Date().getTime() + CACHE_TTL);
                window.localStorage.setItem(`davatar/${normalizedAddress}`, JSON.stringify({
                    url,
                    expiresAt: expireDate
                }));
                window.localStorage.setItem(`davatar/${normalizedAddress}/${uri}`, JSON.stringify({
                    url,
                    expiresAt: expireDate
                }));
            }
        }
    }, [
        address,
        url,
        uri
    ]);
    let avatarImg = null;
    const cssStyle = Object.assign({
        display: loaded ? undefined : 'none',
        width: `${size}px`,
        height: `${size}px`,
        borderRadius: `${size}px`
    }, style || {});
    if (url) avatarImg = react_1.default.createElement("img", {
        alt: "avatar",
        style: cssStyle,
        className: className,
        src: url,
        onLoad: onLoad
    });
    const defaultAvatar = (!url || !loaded) && address && (defaultComponent || (generatedAvatarType === 'blockies' ? react_1.default.createElement(Blockies_1.default, {
        address: address,
        size: size
    }) : react_1.default.createElement(Jazzicon_1.default, {
        address: address,
        size: size
    })));
    return react_1.default.createElement(react_1.default.Fragment, null, defaultAvatar, avatarImg);
}
exports.default = Avatar;

},{"@ethersproject/contracts":"97okZ","bn.js":"hd4qD","react":"21dqq","./Blockies":"3rAQQ","./Jazzicon":"jc5In"}],"hd4qD":[function(require,module,exports) {
(function(module, exports) {
    // Utils
    function assert(val, msg) {
        if (!val) throw new Error(msg || 'Assertion failed');
    }
    // Could use `inherits` module, but don't want to move from single file
    // architecture yet.
    function inherits(ctor, superCtor) {
        ctor.super_ = superCtor;
        var TempCtor = function() {};
        TempCtor.prototype = superCtor.prototype;
        ctor.prototype = new TempCtor();
        ctor.prototype.constructor = ctor;
    }
    // BN
    function BN(number, base, endian) {
        if (BN.isBN(number)) return number;
        this.negative = 0;
        this.words = null;
        this.length = 0;
        // Reduction context
        this.red = null;
        if (number !== null) {
            if (base === 'le' || base === 'be') {
                endian = base;
                base = 10;
            }
            this._init(number || 0, base || 10, endian || 'be');
        }
    }
    if (typeof module === 'object') module.exports = BN;
    else exports.BN = BN;
    BN.BN = BN;
    BN.wordSize = 26;
    var Buffer;
    try {
        if (typeof window !== 'undefined' && typeof window.Buffer !== 'undefined') Buffer = window.Buffer;
        else Buffer = require('buffer').Buffer;
    } catch (e) {}
    BN.isBN = function isBN(num) {
        if (num instanceof BN) return true;
        return num !== null && typeof num === 'object' && num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);
    };
    BN.max = function max(left, right) {
        if (left.cmp(right) > 0) return left;
        return right;
    };
    BN.min = function min(left, right) {
        if (left.cmp(right) < 0) return left;
        return right;
    };
    BN.prototype._init = function init(number, base, endian) {
        if (typeof number === 'number') return this._initNumber(number, base, endian);
        if (typeof number === 'object') return this._initArray(number, base, endian);
        if (base === 'hex') base = 16;
        assert(base === (base | 0) && base >= 2 && base <= 36);
        number = number.toString().replace(/\s+/g, '');
        var start = 0;
        if (number[0] === '-') {
            start++;
            this.negative = 1;
        }
        if (start < number.length) {
            if (base === 16) this._parseHex(number, start, endian);
            else {
                this._parseBase(number, base, start);
                if (endian === 'le') this._initArray(this.toArray(), base, endian);
            }
        }
    };
    BN.prototype._initNumber = function _initNumber(number, base, endian) {
        if (number < 0) {
            this.negative = 1;
            number = -number;
        }
        if (number < 0x4000000) {
            this.words = [
                number & 0x3ffffff
            ];
            this.length = 1;
        } else if (number < 0x10000000000000) {
            this.words = [
                number & 0x3ffffff,
                number / 0x4000000 & 0x3ffffff
            ];
            this.length = 2;
        } else {
            assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)
            this.words = [
                number & 0x3ffffff,
                number / 0x4000000 & 0x3ffffff,
                1
            ];
            this.length = 3;
        }
        if (endian !== 'le') return;
        // Reverse the bytes
        this._initArray(this.toArray(), base, endian);
    };
    BN.prototype._initArray = function _initArray(number, base, endian) {
        // Perhaps a Uint8Array
        assert(typeof number.length === 'number');
        if (number.length <= 0) {
            this.words = [
                0
            ];
            this.length = 1;
            return this;
        }
        this.length = Math.ceil(number.length / 3);
        this.words = new Array(this.length);
        for(var i = 0; i < this.length; i++)this.words[i] = 0;
        var j, w;
        var off = 0;
        if (endian === 'be') for(i = number.length - 1, j = 0; i >= 0; i -= 3){
            w = number[i] | number[i - 1] << 8 | number[i - 2] << 16;
            this.words[j] |= w << off & 0x3ffffff;
            this.words[j + 1] = w >>> 26 - off & 0x3ffffff;
            off += 24;
            if (off >= 26) {
                off -= 26;
                j++;
            }
        }
        else if (endian === 'le') for(i = 0, j = 0; i < number.length; i += 3){
            w = number[i] | number[i + 1] << 8 | number[i + 2] << 16;
            this.words[j] |= w << off & 0x3ffffff;
            this.words[j + 1] = w >>> 26 - off & 0x3ffffff;
            off += 24;
            if (off >= 26) {
                off -= 26;
                j++;
            }
        }
        return this._strip();
    };
    function parseHex4Bits(string, index) {
        var c = string.charCodeAt(index);
        // '0' - '9'
        if (c >= 48 && c <= 57) return c - 48;
        else if (c >= 65 && c <= 70) return c - 55;
        else if (c >= 97 && c <= 102) return c - 87;
        else assert(false, 'Invalid character in ' + string);
    }
    function parseHexByte(string, lowerBound, index) {
        var r = parseHex4Bits(string, index);
        if (index - 1 >= lowerBound) r |= parseHex4Bits(string, index - 1) << 4;
        return r;
    }
    BN.prototype._parseHex = function _parseHex(number, start, endian) {
        // Create possibly bigger array to ensure that it fits the number
        this.length = Math.ceil((number.length - start) / 6);
        this.words = new Array(this.length);
        for(var i = 0; i < this.length; i++)this.words[i] = 0;
        // 24-bits chunks
        var off = 0;
        var j = 0;
        var w;
        if (endian === 'be') for(i = number.length - 1; i >= start; i -= 2){
            w = parseHexByte(number, start, i) << off;
            this.words[j] |= w & 0x3ffffff;
            if (off >= 18) {
                off -= 18;
                j += 1;
                this.words[j] |= w >>> 26;
            } else off += 8;
        }
        else {
            var parseLength = number.length - start;
            for(i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2){
                w = parseHexByte(number, start, i) << off;
                this.words[j] |= w & 0x3ffffff;
                if (off >= 18) {
                    off -= 18;
                    j += 1;
                    this.words[j] |= w >>> 26;
                } else off += 8;
            }
        }
        this._strip();
    };
    function parseBase(str, start, end, mul) {
        var r = 0;
        var b = 0;
        var len = Math.min(str.length, end);
        for(var i = start; i < len; i++){
            var c = str.charCodeAt(i) - 48;
            r *= mul;
            // 'a'
            if (c >= 49) b = c - 49 + 0xa;
            else if (c >= 17) b = c - 17 + 0xa;
            else b = c;
            assert(c >= 0 && b < mul, 'Invalid character');
            r += b;
        }
        return r;
    }
    BN.prototype._parseBase = function _parseBase(number, base, start) {
        // Initialize as zero
        this.words = [
            0
        ];
        this.length = 1;
        // Find length of limb in base
        for(var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base)limbLen++;
        limbLen--;
        limbPow = limbPow / base | 0;
        var total = number.length - start;
        var mod = total % limbLen;
        var end = Math.min(total, total - mod) + start;
        var word = 0;
        for(var i = start; i < end; i += limbLen){
            word = parseBase(number, i, i + limbLen, base);
            this.imuln(limbPow);
            if (this.words[0] + word < 0x4000000) this.words[0] += word;
            else this._iaddn(word);
        }
        if (mod !== 0) {
            var pow = 1;
            word = parseBase(number, i, number.length, base);
            for(i = 0; i < mod; i++)pow *= base;
            this.imuln(pow);
            if (this.words[0] + word < 0x4000000) this.words[0] += word;
            else this._iaddn(word);
        }
        this._strip();
    };
    BN.prototype.copy = function copy(dest) {
        dest.words = new Array(this.length);
        for(var i = 0; i < this.length; i++)dest.words[i] = this.words[i];
        dest.length = this.length;
        dest.negative = this.negative;
        dest.red = this.red;
    };
    function move(dest, src) {
        dest.words = src.words;
        dest.length = src.length;
        dest.negative = src.negative;
        dest.red = src.red;
    }
    BN.prototype._move = function _move(dest) {
        move(dest, this);
    };
    BN.prototype.clone = function clone() {
        var r = new BN(null);
        this.copy(r);
        return r;
    };
    BN.prototype._expand = function _expand(size) {
        while(this.length < size)this.words[this.length++] = 0;
        return this;
    };
    // Remove leading `0` from `this`
    BN.prototype._strip = function strip() {
        while(this.length > 1 && this.words[this.length - 1] === 0)this.length--;
        return this._normSign();
    };
    BN.prototype._normSign = function _normSign() {
        // -0 = 0
        if (this.length === 1 && this.words[0] === 0) this.negative = 0;
        return this;
    };
    // Check Symbol.for because not everywhere where Symbol defined
    // See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol#Browser_compatibility
    if (typeof Symbol !== 'undefined' && typeof Symbol.for === 'function') try {
        BN.prototype[Symbol.for('nodejs.util.inspect.custom')] = inspect;
    } catch (e1) {
        BN.prototype.inspect = inspect;
    }
    else BN.prototype.inspect = inspect;
    function inspect() {
        return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';
    }
    /*

  var zeros = [];
  var groupSizes = [];
  var groupBases = [];

  var s = '';
  var i = -1;
  while (++i < BN.wordSize) {
    zeros[i] = s;
    s += '0';
  }
  groupSizes[0] = 0;
  groupSizes[1] = 0;
  groupBases[0] = 0;
  groupBases[1] = 0;
  var base = 2 - 1;
  while (++base < 36 + 1) {
    var groupSize = 0;
    var groupBase = 1;
    while (groupBase < (1 << BN.wordSize) / base) {
      groupBase *= base;
      groupSize += 1;
    }
    groupSizes[base] = groupSize;
    groupBases[base] = groupBase;
  }

  */ var zeros = [
        '',
        '0',
        '00',
        '000',
        '0000',
        '00000',
        '000000',
        '0000000',
        '00000000',
        '000000000',
        '0000000000',
        '00000000000',
        '000000000000',
        '0000000000000',
        '00000000000000',
        '000000000000000',
        '0000000000000000',
        '00000000000000000',
        '000000000000000000',
        '0000000000000000000',
        '00000000000000000000',
        '000000000000000000000',
        '0000000000000000000000',
        '00000000000000000000000',
        '000000000000000000000000',
        '0000000000000000000000000'
    ];
    var groupSizes = [
        0,
        0,
        25,
        16,
        12,
        11,
        10,
        9,
        8,
        8,
        7,
        7,
        7,
        7,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5
    ];
    var groupBases = [
        0,
        0,
        33554432,
        43046721,
        16777216,
        48828125,
        60466176,
        40353607,
        16777216,
        43046721,
        10000000,
        19487171,
        35831808,
        62748517,
        7529536,
        11390625,
        16777216,
        24137569,
        34012224,
        47045881,
        64000000,
        4084101,
        5153632,
        6436343,
        7962624,
        9765625,
        11881376,
        14348907,
        17210368,
        20511149,
        24300000,
        28629151,
        33554432,
        39135393,
        45435424,
        52521875,
        60466176
    ];
    BN.prototype.toString = function toString(base, padding) {
        base = base || 10;
        padding = padding | 0 || 1;
        var out;
        if (base === 16 || base === 'hex') {
            out = '';
            var off = 0;
            var carry = 0;
            for(var i = 0; i < this.length; i++){
                var w = this.words[i];
                var word = ((w << off | carry) & 0xffffff).toString(16);
                carry = w >>> 24 - off & 0xffffff;
                if (carry !== 0 || i !== this.length - 1) out = zeros[6 - word.length] + word + out;
                else out = word + out;
                off += 2;
                if (off >= 26) {
                    off -= 26;
                    i--;
                }
            }
            if (carry !== 0) out = carry.toString(16) + out;
            while(out.length % padding !== 0)out = '0' + out;
            if (this.negative !== 0) out = '-' + out;
            return out;
        }
        if (base === (base | 0) && base >= 2 && base <= 36) {
            // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));
            var groupSize = groupSizes[base];
            // var groupBase = Math.pow(base, groupSize);
            var groupBase = groupBases[base];
            out = '';
            var c = this.clone();
            c.negative = 0;
            while(!c.isZero()){
                var r = c.modrn(groupBase).toString(base);
                c = c.idivn(groupBase);
                if (!c.isZero()) out = zeros[groupSize - r.length] + r + out;
                else out = r + out;
            }
            if (this.isZero()) out = '0' + out;
            while(out.length % padding !== 0)out = '0' + out;
            if (this.negative !== 0) out = '-' + out;
            return out;
        }
        assert(false, 'Base should be between 2 and 36');
    };
    BN.prototype.toNumber = function toNumber() {
        var ret = this.words[0];
        if (this.length === 2) ret += this.words[1] * 0x4000000;
        else if (this.length === 3 && this.words[2] === 0x01) // NOTE: at this stage it is known that the top bit is set
        ret += 0x10000000000000 + this.words[1] * 0x4000000;
        else if (this.length > 2) assert(false, 'Number can only safely store up to 53 bits');
        return this.negative !== 0 ? -ret : ret;
    };
    BN.prototype.toJSON = function toJSON() {
        return this.toString(16, 2);
    };
    if (Buffer) BN.prototype.toBuffer = function toBuffer(endian, length) {
        return this.toArrayLike(Buffer, endian, length);
    };
    BN.prototype.toArray = function toArray(endian, length) {
        return this.toArrayLike(Array, endian, length);
    };
    var allocate = function allocate(ArrayType, size) {
        if (ArrayType.allocUnsafe) return ArrayType.allocUnsafe(size);
        return new ArrayType(size);
    };
    BN.prototype.toArrayLike = function toArrayLike(ArrayType, endian, length) {
        this._strip();
        var byteLength = this.byteLength();
        var reqLength = length || Math.max(1, byteLength);
        assert(byteLength <= reqLength, 'byte array longer than desired length');
        assert(reqLength > 0, 'Requested array length <= 0');
        var res = allocate(ArrayType, reqLength);
        var postfix = endian === 'le' ? 'LE' : 'BE';
        this['_toArrayLike' + postfix](res, byteLength);
        return res;
    };
    BN.prototype._toArrayLikeLE = function _toArrayLikeLE(res, byteLength) {
        var position = 0;
        var carry = 0;
        for(var i = 0, shift = 0; i < this.length; i++){
            var word = this.words[i] << shift | carry;
            res[position++] = word & 0xff;
            if (position < res.length) res[position++] = word >> 8 & 0xff;
            if (position < res.length) res[position++] = word >> 16 & 0xff;
            if (shift === 6) {
                if (position < res.length) res[position++] = word >> 24 & 0xff;
                carry = 0;
                shift = 0;
            } else {
                carry = word >>> 24;
                shift += 2;
            }
        }
        if (position < res.length) {
            res[position++] = carry;
            while(position < res.length)res[position++] = 0;
        }
    };
    BN.prototype._toArrayLikeBE = function _toArrayLikeBE(res, byteLength) {
        var position = res.length - 1;
        var carry = 0;
        for(var i = 0, shift = 0; i < this.length; i++){
            var word = this.words[i] << shift | carry;
            res[position--] = word & 0xff;
            if (position >= 0) res[position--] = word >> 8 & 0xff;
            if (position >= 0) res[position--] = word >> 16 & 0xff;
            if (shift === 6) {
                if (position >= 0) res[position--] = word >> 24 & 0xff;
                carry = 0;
                shift = 0;
            } else {
                carry = word >>> 24;
                shift += 2;
            }
        }
        if (position >= 0) {
            res[position--] = carry;
            while(position >= 0)res[position--] = 0;
        }
    };
    if (Math.clz32) BN.prototype._countBits = function _countBits(w) {
        return 32 - Math.clz32(w);
    };
    else BN.prototype._countBits = function _countBits(w) {
        var t = w;
        var r = 0;
        if (t >= 0x1000) {
            r += 13;
            t >>>= 13;
        }
        if (t >= 0x40) {
            r += 7;
            t >>>= 7;
        }
        if (t >= 0x8) {
            r += 4;
            t >>>= 4;
        }
        if (t >= 0x02) {
            r += 2;
            t >>>= 2;
        }
        return r + t;
    };
    BN.prototype._zeroBits = function _zeroBits(w) {
        // Short-cut
        if (w === 0) return 26;
        var t = w;
        var r = 0;
        if ((t & 0x1fff) === 0) {
            r += 13;
            t >>>= 13;
        }
        if ((t & 0x7f) === 0) {
            r += 7;
            t >>>= 7;
        }
        if ((t & 0xf) === 0) {
            r += 4;
            t >>>= 4;
        }
        if ((t & 0x3) === 0) {
            r += 2;
            t >>>= 2;
        }
        if ((t & 0x1) === 0) r++;
        return r;
    };
    // Return number of used bits in a BN
    BN.prototype.bitLength = function bitLength() {
        var w = this.words[this.length - 1];
        var hi = this._countBits(w);
        return (this.length - 1) * 26 + hi;
    };
    function toBitArray(num) {
        var w = new Array(num.bitLength());
        for(var bit = 0; bit < w.length; bit++){
            var off = bit / 26 | 0;
            var wbit = bit % 26;
            w[bit] = num.words[off] >>> wbit & 0x01;
        }
        return w;
    }
    // Number of trailing zero bits
    BN.prototype.zeroBits = function zeroBits() {
        if (this.isZero()) return 0;
        var r = 0;
        for(var i = 0; i < this.length; i++){
            var b = this._zeroBits(this.words[i]);
            r += b;
            if (b !== 26) break;
        }
        return r;
    };
    BN.prototype.byteLength = function byteLength() {
        return Math.ceil(this.bitLength() / 8);
    };
    BN.prototype.toTwos = function toTwos(width) {
        if (this.negative !== 0) return this.abs().inotn(width).iaddn(1);
        return this.clone();
    };
    BN.prototype.fromTwos = function fromTwos(width) {
        if (this.testn(width - 1)) return this.notn(width).iaddn(1).ineg();
        return this.clone();
    };
    BN.prototype.isNeg = function isNeg() {
        return this.negative !== 0;
    };
    // Return negative clone of `this`
    BN.prototype.neg = function neg() {
        return this.clone().ineg();
    };
    BN.prototype.ineg = function ineg() {
        if (!this.isZero()) this.negative ^= 1;
        return this;
    };
    // Or `num` with `this` in-place
    BN.prototype.iuor = function iuor(num) {
        while(this.length < num.length)this.words[this.length++] = 0;
        for(var i = 0; i < num.length; i++)this.words[i] = this.words[i] | num.words[i];
        return this._strip();
    };
    BN.prototype.ior = function ior(num) {
        assert((this.negative | num.negative) === 0);
        return this.iuor(num);
    };
    // Or `num` with `this`
    BN.prototype.or = function or(num) {
        if (this.length > num.length) return this.clone().ior(num);
        return num.clone().ior(this);
    };
    BN.prototype.uor = function uor(num) {
        if (this.length > num.length) return this.clone().iuor(num);
        return num.clone().iuor(this);
    };
    // And `num` with `this` in-place
    BN.prototype.iuand = function iuand(num) {
        // b = min-length(num, this)
        var b;
        if (this.length > num.length) b = num;
        else b = this;
        for(var i = 0; i < b.length; i++)this.words[i] = this.words[i] & num.words[i];
        this.length = b.length;
        return this._strip();
    };
    BN.prototype.iand = function iand(num) {
        assert((this.negative | num.negative) === 0);
        return this.iuand(num);
    };
    // And `num` with `this`
    BN.prototype.and = function and(num) {
        if (this.length > num.length) return this.clone().iand(num);
        return num.clone().iand(this);
    };
    BN.prototype.uand = function uand(num) {
        if (this.length > num.length) return this.clone().iuand(num);
        return num.clone().iuand(this);
    };
    // Xor `num` with `this` in-place
    BN.prototype.iuxor = function iuxor(num) {
        // a.length > b.length
        var a;
        var b;
        if (this.length > num.length) {
            a = this;
            b = num;
        } else {
            a = num;
            b = this;
        }
        for(var i = 0; i < b.length; i++)this.words[i] = a.words[i] ^ b.words[i];
        if (this !== a) for(; i < a.length; i++)this.words[i] = a.words[i];
        this.length = a.length;
        return this._strip();
    };
    BN.prototype.ixor = function ixor(num) {
        assert((this.negative | num.negative) === 0);
        return this.iuxor(num);
    };
    // Xor `num` with `this`
    BN.prototype.xor = function xor(num) {
        if (this.length > num.length) return this.clone().ixor(num);
        return num.clone().ixor(this);
    };
    BN.prototype.uxor = function uxor(num) {
        if (this.length > num.length) return this.clone().iuxor(num);
        return num.clone().iuxor(this);
    };
    // Not ``this`` with ``width`` bitwidth
    BN.prototype.inotn = function inotn(width) {
        assert(typeof width === 'number' && width >= 0);
        var bytesNeeded = Math.ceil(width / 26) | 0;
        var bitsLeft = width % 26;
        // Extend the buffer with leading zeroes
        this._expand(bytesNeeded);
        if (bitsLeft > 0) bytesNeeded--;
        // Handle complete words
        for(var i = 0; i < bytesNeeded; i++)this.words[i] = ~this.words[i] & 0x3ffffff;
        // Handle the residue
        if (bitsLeft > 0) this.words[i] = ~this.words[i] & 0x3ffffff >> 26 - bitsLeft;
        // And remove leading zeroes
        return this._strip();
    };
    BN.prototype.notn = function notn(width) {
        return this.clone().inotn(width);
    };
    // Set `bit` of `this`
    BN.prototype.setn = function setn(bit, val) {
        assert(typeof bit === 'number' && bit >= 0);
        var off = bit / 26 | 0;
        var wbit = bit % 26;
        this._expand(off + 1);
        if (val) this.words[off] = this.words[off] | 1 << wbit;
        else this.words[off] = this.words[off] & ~(1 << wbit);
        return this._strip();
    };
    // Add `num` to `this` in-place
    BN.prototype.iadd = function iadd(num) {
        var r;
        // negative + positive
        if (this.negative !== 0 && num.negative === 0) {
            this.negative = 0;
            r = this.isub(num);
            this.negative ^= 1;
            return this._normSign();
        // positive + negative
        } else if (this.negative === 0 && num.negative !== 0) {
            num.negative = 0;
            r = this.isub(num);
            num.negative = 1;
            return r._normSign();
        }
        // a.length > b.length
        var a, b;
        if (this.length > num.length) {
            a = this;
            b = num;
        } else {
            a = num;
            b = this;
        }
        var carry = 0;
        for(var i = 0; i < b.length; i++){
            r = (a.words[i] | 0) + (b.words[i] | 0) + carry;
            this.words[i] = r & 0x3ffffff;
            carry = r >>> 26;
        }
        for(; carry !== 0 && i < a.length; i++){
            r = (a.words[i] | 0) + carry;
            this.words[i] = r & 0x3ffffff;
            carry = r >>> 26;
        }
        this.length = a.length;
        if (carry !== 0) {
            this.words[this.length] = carry;
            this.length++;
        // Copy the rest of the words
        } else if (a !== this) for(; i < a.length; i++)this.words[i] = a.words[i];
        return this;
    };
    // Add `num` to `this`
    BN.prototype.add = function add(num) {
        var res;
        if (num.negative !== 0 && this.negative === 0) {
            num.negative = 0;
            res = this.sub(num);
            num.negative ^= 1;
            return res;
        } else if (num.negative === 0 && this.negative !== 0) {
            this.negative = 0;
            res = num.sub(this);
            this.negative = 1;
            return res;
        }
        if (this.length > num.length) return this.clone().iadd(num);
        return num.clone().iadd(this);
    };
    // Subtract `num` from `this` in-place
    BN.prototype.isub = function isub(num) {
        // this - (-num) = this + num
        if (num.negative !== 0) {
            num.negative = 0;
            var r = this.iadd(num);
            num.negative = 1;
            return r._normSign();
        // -this - num = -(this + num)
        } else if (this.negative !== 0) {
            this.negative = 0;
            this.iadd(num);
            this.negative = 1;
            return this._normSign();
        }
        // At this point both numbers are positive
        var cmp = this.cmp(num);
        // Optimization - zeroify
        if (cmp === 0) {
            this.negative = 0;
            this.length = 1;
            this.words[0] = 0;
            return this;
        }
        // a > b
        var a, b;
        if (cmp > 0) {
            a = this;
            b = num;
        } else {
            a = num;
            b = this;
        }
        var carry = 0;
        for(var i = 0; i < b.length; i++){
            r = (a.words[i] | 0) - (b.words[i] | 0) + carry;
            carry = r >> 26;
            this.words[i] = r & 0x3ffffff;
        }
        for(; carry !== 0 && i < a.length; i++){
            r = (a.words[i] | 0) + carry;
            carry = r >> 26;
            this.words[i] = r & 0x3ffffff;
        }
        // Copy rest of the words
        if (carry === 0 && i < a.length && a !== this) for(; i < a.length; i++)this.words[i] = a.words[i];
        this.length = Math.max(this.length, i);
        if (a !== this) this.negative = 1;
        return this._strip();
    };
    // Subtract `num` from `this`
    BN.prototype.sub = function sub(num) {
        return this.clone().isub(num);
    };
    function smallMulTo(self, num, out) {
        out.negative = num.negative ^ self.negative;
        var len = self.length + num.length | 0;
        out.length = len;
        len = len - 1 | 0;
        // Peel one iteration (compiler can't do it, because of code complexity)
        var a = self.words[0] | 0;
        var b = num.words[0] | 0;
        var r = a * b;
        var lo = r & 0x3ffffff;
        var carry = r / 0x4000000 | 0;
        out.words[0] = lo;
        for(var k = 1; k < len; k++){
            // Sum all words with the same `i + j = k` and accumulate `ncarry`,
            // note that ncarry could be >= 0x3ffffff
            var ncarry = carry >>> 26;
            var rword = carry & 0x3ffffff;
            var maxJ = Math.min(k, num.length - 1);
            for(var j = Math.max(0, k - self.length + 1); j <= maxJ; j++){
                var i = k - j | 0;
                a = self.words[i] | 0;
                b = num.words[j] | 0;
                r = a * b + rword;
                ncarry += r / 0x4000000 | 0;
                rword = r & 0x3ffffff;
            }
            out.words[k] = rword | 0;
            carry = ncarry | 0;
        }
        if (carry !== 0) out.words[k] = carry | 0;
        else out.length--;
        return out._strip();
    }
    // TODO(indutny): it may be reasonable to omit it for users who don't need
    // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit
    // multiplication (like elliptic secp256k1).
    var comb10MulTo = function comb10MulTo(self, num, out) {
        var a = self.words;
        var b = num.words;
        var o = out.words;
        var c = 0;
        var lo;
        var mid;
        var hi;
        var a0 = a[0] | 0;
        var al0 = a0 & 0x1fff;
        var ah0 = a0 >>> 13;
        var a1 = a[1] | 0;
        var al1 = a1 & 0x1fff;
        var ah1 = a1 >>> 13;
        var a2 = a[2] | 0;
        var al2 = a2 & 0x1fff;
        var ah2 = a2 >>> 13;
        var a3 = a[3] | 0;
        var al3 = a3 & 0x1fff;
        var ah3 = a3 >>> 13;
        var a4 = a[4] | 0;
        var al4 = a4 & 0x1fff;
        var ah4 = a4 >>> 13;
        var a5 = a[5] | 0;
        var al5 = a5 & 0x1fff;
        var ah5 = a5 >>> 13;
        var a6 = a[6] | 0;
        var al6 = a6 & 0x1fff;
        var ah6 = a6 >>> 13;
        var a7 = a[7] | 0;
        var al7 = a7 & 0x1fff;
        var ah7 = a7 >>> 13;
        var a8 = a[8] | 0;
        var al8 = a8 & 0x1fff;
        var ah8 = a8 >>> 13;
        var a9 = a[9] | 0;
        var al9 = a9 & 0x1fff;
        var ah9 = a9 >>> 13;
        var b0 = b[0] | 0;
        var bl0 = b0 & 0x1fff;
        var bh0 = b0 >>> 13;
        var b1 = b[1] | 0;
        var bl1 = b1 & 0x1fff;
        var bh1 = b1 >>> 13;
        var b2 = b[2] | 0;
        var bl2 = b2 & 0x1fff;
        var bh2 = b2 >>> 13;
        var b3 = b[3] | 0;
        var bl3 = b3 & 0x1fff;
        var bh3 = b3 >>> 13;
        var b4 = b[4] | 0;
        var bl4 = b4 & 0x1fff;
        var bh4 = b4 >>> 13;
        var b5 = b[5] | 0;
        var bl5 = b5 & 0x1fff;
        var bh5 = b5 >>> 13;
        var b6 = b[6] | 0;
        var bl6 = b6 & 0x1fff;
        var bh6 = b6 >>> 13;
        var b7 = b[7] | 0;
        var bl7 = b7 & 0x1fff;
        var bh7 = b7 >>> 13;
        var b8 = b[8] | 0;
        var bl8 = b8 & 0x1fff;
        var bh8 = b8 >>> 13;
        var b9 = b[9] | 0;
        var bl9 = b9 & 0x1fff;
        var bh9 = b9 >>> 13;
        out.negative = self.negative ^ num.negative;
        out.length = 19;
        /* k = 0 */ lo = Math.imul(al0, bl0);
        mid = Math.imul(al0, bh0);
        mid = mid + Math.imul(ah0, bl0) | 0;
        hi = Math.imul(ah0, bh0);
        var w0 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w0 >>> 26) | 0;
        w0 &= 0x3ffffff;
        /* k = 1 */ lo = Math.imul(al1, bl0);
        mid = Math.imul(al1, bh0);
        mid = mid + Math.imul(ah1, bl0) | 0;
        hi = Math.imul(ah1, bh0);
        lo = lo + Math.imul(al0, bl1) | 0;
        mid = mid + Math.imul(al0, bh1) | 0;
        mid = mid + Math.imul(ah0, bl1) | 0;
        hi = hi + Math.imul(ah0, bh1) | 0;
        var w1 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w1 >>> 26) | 0;
        w1 &= 0x3ffffff;
        /* k = 2 */ lo = Math.imul(al2, bl0);
        mid = Math.imul(al2, bh0);
        mid = mid + Math.imul(ah2, bl0) | 0;
        hi = Math.imul(ah2, bh0);
        lo = lo + Math.imul(al1, bl1) | 0;
        mid = mid + Math.imul(al1, bh1) | 0;
        mid = mid + Math.imul(ah1, bl1) | 0;
        hi = hi + Math.imul(ah1, bh1) | 0;
        lo = lo + Math.imul(al0, bl2) | 0;
        mid = mid + Math.imul(al0, bh2) | 0;
        mid = mid + Math.imul(ah0, bl2) | 0;
        hi = hi + Math.imul(ah0, bh2) | 0;
        var w2 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w2 >>> 26) | 0;
        w2 &= 0x3ffffff;
        /* k = 3 */ lo = Math.imul(al3, bl0);
        mid = Math.imul(al3, bh0);
        mid = mid + Math.imul(ah3, bl0) | 0;
        hi = Math.imul(ah3, bh0);
        lo = lo + Math.imul(al2, bl1) | 0;
        mid = mid + Math.imul(al2, bh1) | 0;
        mid = mid + Math.imul(ah2, bl1) | 0;
        hi = hi + Math.imul(ah2, bh1) | 0;
        lo = lo + Math.imul(al1, bl2) | 0;
        mid = mid + Math.imul(al1, bh2) | 0;
        mid = mid + Math.imul(ah1, bl2) | 0;
        hi = hi + Math.imul(ah1, bh2) | 0;
        lo = lo + Math.imul(al0, bl3) | 0;
        mid = mid + Math.imul(al0, bh3) | 0;
        mid = mid + Math.imul(ah0, bl3) | 0;
        hi = hi + Math.imul(ah0, bh3) | 0;
        var w3 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w3 >>> 26) | 0;
        w3 &= 0x3ffffff;
        /* k = 4 */ lo = Math.imul(al4, bl0);
        mid = Math.imul(al4, bh0);
        mid = mid + Math.imul(ah4, bl0) | 0;
        hi = Math.imul(ah4, bh0);
        lo = lo + Math.imul(al3, bl1) | 0;
        mid = mid + Math.imul(al3, bh1) | 0;
        mid = mid + Math.imul(ah3, bl1) | 0;
        hi = hi + Math.imul(ah3, bh1) | 0;
        lo = lo + Math.imul(al2, bl2) | 0;
        mid = mid + Math.imul(al2, bh2) | 0;
        mid = mid + Math.imul(ah2, bl2) | 0;
        hi = hi + Math.imul(ah2, bh2) | 0;
        lo = lo + Math.imul(al1, bl3) | 0;
        mid = mid + Math.imul(al1, bh3) | 0;
        mid = mid + Math.imul(ah1, bl3) | 0;
        hi = hi + Math.imul(ah1, bh3) | 0;
        lo = lo + Math.imul(al0, bl4) | 0;
        mid = mid + Math.imul(al0, bh4) | 0;
        mid = mid + Math.imul(ah0, bl4) | 0;
        hi = hi + Math.imul(ah0, bh4) | 0;
        var w4 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w4 >>> 26) | 0;
        w4 &= 0x3ffffff;
        /* k = 5 */ lo = Math.imul(al5, bl0);
        mid = Math.imul(al5, bh0);
        mid = mid + Math.imul(ah5, bl0) | 0;
        hi = Math.imul(ah5, bh0);
        lo = lo + Math.imul(al4, bl1) | 0;
        mid = mid + Math.imul(al4, bh1) | 0;
        mid = mid + Math.imul(ah4, bl1) | 0;
        hi = hi + Math.imul(ah4, bh1) | 0;
        lo = lo + Math.imul(al3, bl2) | 0;
        mid = mid + Math.imul(al3, bh2) | 0;
        mid = mid + Math.imul(ah3, bl2) | 0;
        hi = hi + Math.imul(ah3, bh2) | 0;
        lo = lo + Math.imul(al2, bl3) | 0;
        mid = mid + Math.imul(al2, bh3) | 0;
        mid = mid + Math.imul(ah2, bl3) | 0;
        hi = hi + Math.imul(ah2, bh3) | 0;
        lo = lo + Math.imul(al1, bl4) | 0;
        mid = mid + Math.imul(al1, bh4) | 0;
        mid = mid + Math.imul(ah1, bl4) | 0;
        hi = hi + Math.imul(ah1, bh4) | 0;
        lo = lo + Math.imul(al0, bl5) | 0;
        mid = mid + Math.imul(al0, bh5) | 0;
        mid = mid + Math.imul(ah0, bl5) | 0;
        hi = hi + Math.imul(ah0, bh5) | 0;
        var w5 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w5 >>> 26) | 0;
        w5 &= 0x3ffffff;
        /* k = 6 */ lo = Math.imul(al6, bl0);
        mid = Math.imul(al6, bh0);
        mid = mid + Math.imul(ah6, bl0) | 0;
        hi = Math.imul(ah6, bh0);
        lo = lo + Math.imul(al5, bl1) | 0;
        mid = mid + Math.imul(al5, bh1) | 0;
        mid = mid + Math.imul(ah5, bl1) | 0;
        hi = hi + Math.imul(ah5, bh1) | 0;
        lo = lo + Math.imul(al4, bl2) | 0;
        mid = mid + Math.imul(al4, bh2) | 0;
        mid = mid + Math.imul(ah4, bl2) | 0;
        hi = hi + Math.imul(ah4, bh2) | 0;
        lo = lo + Math.imul(al3, bl3) | 0;
        mid = mid + Math.imul(al3, bh3) | 0;
        mid = mid + Math.imul(ah3, bl3) | 0;
        hi = hi + Math.imul(ah3, bh3) | 0;
        lo = lo + Math.imul(al2, bl4) | 0;
        mid = mid + Math.imul(al2, bh4) | 0;
        mid = mid + Math.imul(ah2, bl4) | 0;
        hi = hi + Math.imul(ah2, bh4) | 0;
        lo = lo + Math.imul(al1, bl5) | 0;
        mid = mid + Math.imul(al1, bh5) | 0;
        mid = mid + Math.imul(ah1, bl5) | 0;
        hi = hi + Math.imul(ah1, bh5) | 0;
        lo = lo + Math.imul(al0, bl6) | 0;
        mid = mid + Math.imul(al0, bh6) | 0;
        mid = mid + Math.imul(ah0, bl6) | 0;
        hi = hi + Math.imul(ah0, bh6) | 0;
        var w6 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w6 >>> 26) | 0;
        w6 &= 0x3ffffff;
        /* k = 7 */ lo = Math.imul(al7, bl0);
        mid = Math.imul(al7, bh0);
        mid = mid + Math.imul(ah7, bl0) | 0;
        hi = Math.imul(ah7, bh0);
        lo = lo + Math.imul(al6, bl1) | 0;
        mid = mid + Math.imul(al6, bh1) | 0;
        mid = mid + Math.imul(ah6, bl1) | 0;
        hi = hi + Math.imul(ah6, bh1) | 0;
        lo = lo + Math.imul(al5, bl2) | 0;
        mid = mid + Math.imul(al5, bh2) | 0;
        mid = mid + Math.imul(ah5, bl2) | 0;
        hi = hi + Math.imul(ah5, bh2) | 0;
        lo = lo + Math.imul(al4, bl3) | 0;
        mid = mid + Math.imul(al4, bh3) | 0;
        mid = mid + Math.imul(ah4, bl3) | 0;
        hi = hi + Math.imul(ah4, bh3) | 0;
        lo = lo + Math.imul(al3, bl4) | 0;
        mid = mid + Math.imul(al3, bh4) | 0;
        mid = mid + Math.imul(ah3, bl4) | 0;
        hi = hi + Math.imul(ah3, bh4) | 0;
        lo = lo + Math.imul(al2, bl5) | 0;
        mid = mid + Math.imul(al2, bh5) | 0;
        mid = mid + Math.imul(ah2, bl5) | 0;
        hi = hi + Math.imul(ah2, bh5) | 0;
        lo = lo + Math.imul(al1, bl6) | 0;
        mid = mid + Math.imul(al1, bh6) | 0;
        mid = mid + Math.imul(ah1, bl6) | 0;
        hi = hi + Math.imul(ah1, bh6) | 0;
        lo = lo + Math.imul(al0, bl7) | 0;
        mid = mid + Math.imul(al0, bh7) | 0;
        mid = mid + Math.imul(ah0, bl7) | 0;
        hi = hi + Math.imul(ah0, bh7) | 0;
        var w7 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w7 >>> 26) | 0;
        w7 &= 0x3ffffff;
        /* k = 8 */ lo = Math.imul(al8, bl0);
        mid = Math.imul(al8, bh0);
        mid = mid + Math.imul(ah8, bl0) | 0;
        hi = Math.imul(ah8, bh0);
        lo = lo + Math.imul(al7, bl1) | 0;
        mid = mid + Math.imul(al7, bh1) | 0;
        mid = mid + Math.imul(ah7, bl1) | 0;
        hi = hi + Math.imul(ah7, bh1) | 0;
        lo = lo + Math.imul(al6, bl2) | 0;
        mid = mid + Math.imul(al6, bh2) | 0;
        mid = mid + Math.imul(ah6, bl2) | 0;
        hi = hi + Math.imul(ah6, bh2) | 0;
        lo = lo + Math.imul(al5, bl3) | 0;
        mid = mid + Math.imul(al5, bh3) | 0;
        mid = mid + Math.imul(ah5, bl3) | 0;
        hi = hi + Math.imul(ah5, bh3) | 0;
        lo = lo + Math.imul(al4, bl4) | 0;
        mid = mid + Math.imul(al4, bh4) | 0;
        mid = mid + Math.imul(ah4, bl4) | 0;
        hi = hi + Math.imul(ah4, bh4) | 0;
        lo = lo + Math.imul(al3, bl5) | 0;
        mid = mid + Math.imul(al3, bh5) | 0;
        mid = mid + Math.imul(ah3, bl5) | 0;
        hi = hi + Math.imul(ah3, bh5) | 0;
        lo = lo + Math.imul(al2, bl6) | 0;
        mid = mid + Math.imul(al2, bh6) | 0;
        mid = mid + Math.imul(ah2, bl6) | 0;
        hi = hi + Math.imul(ah2, bh6) | 0;
        lo = lo + Math.imul(al1, bl7) | 0;
        mid = mid + Math.imul(al1, bh7) | 0;
        mid = mid + Math.imul(ah1, bl7) | 0;
        hi = hi + Math.imul(ah1, bh7) | 0;
        lo = lo + Math.imul(al0, bl8) | 0;
        mid = mid + Math.imul(al0, bh8) | 0;
        mid = mid + Math.imul(ah0, bl8) | 0;
        hi = hi + Math.imul(ah0, bh8) | 0;
        var w8 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w8 >>> 26) | 0;
        w8 &= 0x3ffffff;
        /* k = 9 */ lo = Math.imul(al9, bl0);
        mid = Math.imul(al9, bh0);
        mid = mid + Math.imul(ah9, bl0) | 0;
        hi = Math.imul(ah9, bh0);
        lo = lo + Math.imul(al8, bl1) | 0;
        mid = mid + Math.imul(al8, bh1) | 0;
        mid = mid + Math.imul(ah8, bl1) | 0;
        hi = hi + Math.imul(ah8, bh1) | 0;
        lo = lo + Math.imul(al7, bl2) | 0;
        mid = mid + Math.imul(al7, bh2) | 0;
        mid = mid + Math.imul(ah7, bl2) | 0;
        hi = hi + Math.imul(ah7, bh2) | 0;
        lo = lo + Math.imul(al6, bl3) | 0;
        mid = mid + Math.imul(al6, bh3) | 0;
        mid = mid + Math.imul(ah6, bl3) | 0;
        hi = hi + Math.imul(ah6, bh3) | 0;
        lo = lo + Math.imul(al5, bl4) | 0;
        mid = mid + Math.imul(al5, bh4) | 0;
        mid = mid + Math.imul(ah5, bl4) | 0;
        hi = hi + Math.imul(ah5, bh4) | 0;
        lo = lo + Math.imul(al4, bl5) | 0;
        mid = mid + Math.imul(al4, bh5) | 0;
        mid = mid + Math.imul(ah4, bl5) | 0;
        hi = hi + Math.imul(ah4, bh5) | 0;
        lo = lo + Math.imul(al3, bl6) | 0;
        mid = mid + Math.imul(al3, bh6) | 0;
        mid = mid + Math.imul(ah3, bl6) | 0;
        hi = hi + Math.imul(ah3, bh6) | 0;
        lo = lo + Math.imul(al2, bl7) | 0;
        mid = mid + Math.imul(al2, bh7) | 0;
        mid = mid + Math.imul(ah2, bl7) | 0;
        hi = hi + Math.imul(ah2, bh7) | 0;
        lo = lo + Math.imul(al1, bl8) | 0;
        mid = mid + Math.imul(al1, bh8) | 0;
        mid = mid + Math.imul(ah1, bl8) | 0;
        hi = hi + Math.imul(ah1, bh8) | 0;
        lo = lo + Math.imul(al0, bl9) | 0;
        mid = mid + Math.imul(al0, bh9) | 0;
        mid = mid + Math.imul(ah0, bl9) | 0;
        hi = hi + Math.imul(ah0, bh9) | 0;
        var w9 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w9 >>> 26) | 0;
        w9 &= 0x3ffffff;
        /* k = 10 */ lo = Math.imul(al9, bl1);
        mid = Math.imul(al9, bh1);
        mid = mid + Math.imul(ah9, bl1) | 0;
        hi = Math.imul(ah9, bh1);
        lo = lo + Math.imul(al8, bl2) | 0;
        mid = mid + Math.imul(al8, bh2) | 0;
        mid = mid + Math.imul(ah8, bl2) | 0;
        hi = hi + Math.imul(ah8, bh2) | 0;
        lo = lo + Math.imul(al7, bl3) | 0;
        mid = mid + Math.imul(al7, bh3) | 0;
        mid = mid + Math.imul(ah7, bl3) | 0;
        hi = hi + Math.imul(ah7, bh3) | 0;
        lo = lo + Math.imul(al6, bl4) | 0;
        mid = mid + Math.imul(al6, bh4) | 0;
        mid = mid + Math.imul(ah6, bl4) | 0;
        hi = hi + Math.imul(ah6, bh4) | 0;
        lo = lo + Math.imul(al5, bl5) | 0;
        mid = mid + Math.imul(al5, bh5) | 0;
        mid = mid + Math.imul(ah5, bl5) | 0;
        hi = hi + Math.imul(ah5, bh5) | 0;
        lo = lo + Math.imul(al4, bl6) | 0;
        mid = mid + Math.imul(al4, bh6) | 0;
        mid = mid + Math.imul(ah4, bl6) | 0;
        hi = hi + Math.imul(ah4, bh6) | 0;
        lo = lo + Math.imul(al3, bl7) | 0;
        mid = mid + Math.imul(al3, bh7) | 0;
        mid = mid + Math.imul(ah3, bl7) | 0;
        hi = hi + Math.imul(ah3, bh7) | 0;
        lo = lo + Math.imul(al2, bl8) | 0;
        mid = mid + Math.imul(al2, bh8) | 0;
        mid = mid + Math.imul(ah2, bl8) | 0;
        hi = hi + Math.imul(ah2, bh8) | 0;
        lo = lo + Math.imul(al1, bl9) | 0;
        mid = mid + Math.imul(al1, bh9) | 0;
        mid = mid + Math.imul(ah1, bl9) | 0;
        hi = hi + Math.imul(ah1, bh9) | 0;
        var w10 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w10 >>> 26) | 0;
        w10 &= 0x3ffffff;
        /* k = 11 */ lo = Math.imul(al9, bl2);
        mid = Math.imul(al9, bh2);
        mid = mid + Math.imul(ah9, bl2) | 0;
        hi = Math.imul(ah9, bh2);
        lo = lo + Math.imul(al8, bl3) | 0;
        mid = mid + Math.imul(al8, bh3) | 0;
        mid = mid + Math.imul(ah8, bl3) | 0;
        hi = hi + Math.imul(ah8, bh3) | 0;
        lo = lo + Math.imul(al7, bl4) | 0;
        mid = mid + Math.imul(al7, bh4) | 0;
        mid = mid + Math.imul(ah7, bl4) | 0;
        hi = hi + Math.imul(ah7, bh4) | 0;
        lo = lo + Math.imul(al6, bl5) | 0;
        mid = mid + Math.imul(al6, bh5) | 0;
        mid = mid + Math.imul(ah6, bl5) | 0;
        hi = hi + Math.imul(ah6, bh5) | 0;
        lo = lo + Math.imul(al5, bl6) | 0;
        mid = mid + Math.imul(al5, bh6) | 0;
        mid = mid + Math.imul(ah5, bl6) | 0;
        hi = hi + Math.imul(ah5, bh6) | 0;
        lo = lo + Math.imul(al4, bl7) | 0;
        mid = mid + Math.imul(al4, bh7) | 0;
        mid = mid + Math.imul(ah4, bl7) | 0;
        hi = hi + Math.imul(ah4, bh7) | 0;
        lo = lo + Math.imul(al3, bl8) | 0;
        mid = mid + Math.imul(al3, bh8) | 0;
        mid = mid + Math.imul(ah3, bl8) | 0;
        hi = hi + Math.imul(ah3, bh8) | 0;
        lo = lo + Math.imul(al2, bl9) | 0;
        mid = mid + Math.imul(al2, bh9) | 0;
        mid = mid + Math.imul(ah2, bl9) | 0;
        hi = hi + Math.imul(ah2, bh9) | 0;
        var w11 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w11 >>> 26) | 0;
        w11 &= 0x3ffffff;
        /* k = 12 */ lo = Math.imul(al9, bl3);
        mid = Math.imul(al9, bh3);
        mid = mid + Math.imul(ah9, bl3) | 0;
        hi = Math.imul(ah9, bh3);
        lo = lo + Math.imul(al8, bl4) | 0;
        mid = mid + Math.imul(al8, bh4) | 0;
        mid = mid + Math.imul(ah8, bl4) | 0;
        hi = hi + Math.imul(ah8, bh4) | 0;
        lo = lo + Math.imul(al7, bl5) | 0;
        mid = mid + Math.imul(al7, bh5) | 0;
        mid = mid + Math.imul(ah7, bl5) | 0;
        hi = hi + Math.imul(ah7, bh5) | 0;
        lo = lo + Math.imul(al6, bl6) | 0;
        mid = mid + Math.imul(al6, bh6) | 0;
        mid = mid + Math.imul(ah6, bl6) | 0;
        hi = hi + Math.imul(ah6, bh6) | 0;
        lo = lo + Math.imul(al5, bl7) | 0;
        mid = mid + Math.imul(al5, bh7) | 0;
        mid = mid + Math.imul(ah5, bl7) | 0;
        hi = hi + Math.imul(ah5, bh7) | 0;
        lo = lo + Math.imul(al4, bl8) | 0;
        mid = mid + Math.imul(al4, bh8) | 0;
        mid = mid + Math.imul(ah4, bl8) | 0;
        hi = hi + Math.imul(ah4, bh8) | 0;
        lo = lo + Math.imul(al3, bl9) | 0;
        mid = mid + Math.imul(al3, bh9) | 0;
        mid = mid + Math.imul(ah3, bl9) | 0;
        hi = hi + Math.imul(ah3, bh9) | 0;
        var w12 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w12 >>> 26) | 0;
        w12 &= 0x3ffffff;
        /* k = 13 */ lo = Math.imul(al9, bl4);
        mid = Math.imul(al9, bh4);
        mid = mid + Math.imul(ah9, bl4) | 0;
        hi = Math.imul(ah9, bh4);
        lo = lo + Math.imul(al8, bl5) | 0;
        mid = mid + Math.imul(al8, bh5) | 0;
        mid = mid + Math.imul(ah8, bl5) | 0;
        hi = hi + Math.imul(ah8, bh5) | 0;
        lo = lo + Math.imul(al7, bl6) | 0;
        mid = mid + Math.imul(al7, bh6) | 0;
        mid = mid + Math.imul(ah7, bl6) | 0;
        hi = hi + Math.imul(ah7, bh6) | 0;
        lo = lo + Math.imul(al6, bl7) | 0;
        mid = mid + Math.imul(al6, bh7) | 0;
        mid = mid + Math.imul(ah6, bl7) | 0;
        hi = hi + Math.imul(ah6, bh7) | 0;
        lo = lo + Math.imul(al5, bl8) | 0;
        mid = mid + Math.imul(al5, bh8) | 0;
        mid = mid + Math.imul(ah5, bl8) | 0;
        hi = hi + Math.imul(ah5, bh8) | 0;
        lo = lo + Math.imul(al4, bl9) | 0;
        mid = mid + Math.imul(al4, bh9) | 0;
        mid = mid + Math.imul(ah4, bl9) | 0;
        hi = hi + Math.imul(ah4, bh9) | 0;
        var w13 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w13 >>> 26) | 0;
        w13 &= 0x3ffffff;
        /* k = 14 */ lo = Math.imul(al9, bl5);
        mid = Math.imul(al9, bh5);
        mid = mid + Math.imul(ah9, bl5) | 0;
        hi = Math.imul(ah9, bh5);
        lo = lo + Math.imul(al8, bl6) | 0;
        mid = mid + Math.imul(al8, bh6) | 0;
        mid = mid + Math.imul(ah8, bl6) | 0;
        hi = hi + Math.imul(ah8, bh6) | 0;
        lo = lo + Math.imul(al7, bl7) | 0;
        mid = mid + Math.imul(al7, bh7) | 0;
        mid = mid + Math.imul(ah7, bl7) | 0;
        hi = hi + Math.imul(ah7, bh7) | 0;
        lo = lo + Math.imul(al6, bl8) | 0;
        mid = mid + Math.imul(al6, bh8) | 0;
        mid = mid + Math.imul(ah6, bl8) | 0;
        hi = hi + Math.imul(ah6, bh8) | 0;
        lo = lo + Math.imul(al5, bl9) | 0;
        mid = mid + Math.imul(al5, bh9) | 0;
        mid = mid + Math.imul(ah5, bl9) | 0;
        hi = hi + Math.imul(ah5, bh9) | 0;
        var w14 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w14 >>> 26) | 0;
        w14 &= 0x3ffffff;
        /* k = 15 */ lo = Math.imul(al9, bl6);
        mid = Math.imul(al9, bh6);
        mid = mid + Math.imul(ah9, bl6) | 0;
        hi = Math.imul(ah9, bh6);
        lo = lo + Math.imul(al8, bl7) | 0;
        mid = mid + Math.imul(al8, bh7) | 0;
        mid = mid + Math.imul(ah8, bl7) | 0;
        hi = hi + Math.imul(ah8, bh7) | 0;
        lo = lo + Math.imul(al7, bl8) | 0;
        mid = mid + Math.imul(al7, bh8) | 0;
        mid = mid + Math.imul(ah7, bl8) | 0;
        hi = hi + Math.imul(ah7, bh8) | 0;
        lo = lo + Math.imul(al6, bl9) | 0;
        mid = mid + Math.imul(al6, bh9) | 0;
        mid = mid + Math.imul(ah6, bl9) | 0;
        hi = hi + Math.imul(ah6, bh9) | 0;
        var w15 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w15 >>> 26) | 0;
        w15 &= 0x3ffffff;
        /* k = 16 */ lo = Math.imul(al9, bl7);
        mid = Math.imul(al9, bh7);
        mid = mid + Math.imul(ah9, bl7) | 0;
        hi = Math.imul(ah9, bh7);
        lo = lo + Math.imul(al8, bl8) | 0;
        mid = mid + Math.imul(al8, bh8) | 0;
        mid = mid + Math.imul(ah8, bl8) | 0;
        hi = hi + Math.imul(ah8, bh8) | 0;
        lo = lo + Math.imul(al7, bl9) | 0;
        mid = mid + Math.imul(al7, bh9) | 0;
        mid = mid + Math.imul(ah7, bl9) | 0;
        hi = hi + Math.imul(ah7, bh9) | 0;
        var w16 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w16 >>> 26) | 0;
        w16 &= 0x3ffffff;
        /* k = 17 */ lo = Math.imul(al9, bl8);
        mid = Math.imul(al9, bh8);
        mid = mid + Math.imul(ah9, bl8) | 0;
        hi = Math.imul(ah9, bh8);
        lo = lo + Math.imul(al8, bl9) | 0;
        mid = mid + Math.imul(al8, bh9) | 0;
        mid = mid + Math.imul(ah8, bl9) | 0;
        hi = hi + Math.imul(ah8, bh9) | 0;
        var w17 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w17 >>> 26) | 0;
        w17 &= 0x3ffffff;
        /* k = 18 */ lo = Math.imul(al9, bl9);
        mid = Math.imul(al9, bh9);
        mid = mid + Math.imul(ah9, bl9) | 0;
        hi = Math.imul(ah9, bh9);
        var w18 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w18 >>> 26) | 0;
        w18 &= 0x3ffffff;
        o[0] = w0;
        o[1] = w1;
        o[2] = w2;
        o[3] = w3;
        o[4] = w4;
        o[5] = w5;
        o[6] = w6;
        o[7] = w7;
        o[8] = w8;
        o[9] = w9;
        o[10] = w10;
        o[11] = w11;
        o[12] = w12;
        o[13] = w13;
        o[14] = w14;
        o[15] = w15;
        o[16] = w16;
        o[17] = w17;
        o[18] = w18;
        if (c !== 0) {
            o[19] = c;
            out.length++;
        }
        return out;
    };
    // Polyfill comb
    if (!Math.imul) comb10MulTo = smallMulTo;
    function bigMulTo(self, num, out) {
        out.negative = num.negative ^ self.negative;
        out.length = self.length + num.length;
        var carry = 0;
        var hncarry = 0;
        for(var k = 0; k < out.length - 1; k++){
            // Sum all words with the same `i + j = k` and accumulate `ncarry`,
            // note that ncarry could be >= 0x3ffffff
            var ncarry = hncarry;
            hncarry = 0;
            var rword = carry & 0x3ffffff;
            var maxJ = Math.min(k, num.length - 1);
            for(var j = Math.max(0, k - self.length + 1); j <= maxJ; j++){
                var i = k - j;
                var a = self.words[i] | 0;
                var b = num.words[j] | 0;
                var r = a * b;
                var lo = r & 0x3ffffff;
                ncarry = ncarry + (r / 0x4000000 | 0) | 0;
                lo = lo + rword | 0;
                rword = lo & 0x3ffffff;
                ncarry = ncarry + (lo >>> 26) | 0;
                hncarry += ncarry >>> 26;
                ncarry &= 0x3ffffff;
            }
            out.words[k] = rword;
            carry = ncarry;
            ncarry = hncarry;
        }
        if (carry !== 0) out.words[k] = carry;
        else out.length--;
        return out._strip();
    }
    function jumboMulTo(self, num, out) {
        // Temporary disable, see https://github.com/indutny/bn.js/issues/211
        // var fftm = new FFTM();
        // return fftm.mulp(self, num, out);
        return bigMulTo(self, num, out);
    }
    BN.prototype.mulTo = function mulTo(num, out) {
        var res;
        var len = this.length + num.length;
        if (this.length === 10 && num.length === 10) res = comb10MulTo(this, num, out);
        else if (len < 63) res = smallMulTo(this, num, out);
        else if (len < 1024) res = bigMulTo(this, num, out);
        else res = jumboMulTo(this, num, out);
        return res;
    };
    // Cooley-Tukey algorithm for FFT
    // slightly revisited to rely on looping instead of recursion
    function FFTM(x, y) {
        this.x = x;
        this.y = y;
    }
    FFTM.prototype.makeRBT = function makeRBT(N) {
        var t = new Array(N);
        var l = BN.prototype._countBits(N) - 1;
        for(var i = 0; i < N; i++)t[i] = this.revBin(i, l, N);
        return t;
    };
    // Returns binary-reversed representation of `x`
    FFTM.prototype.revBin = function revBin(x, l, N) {
        if (x === 0 || x === N - 1) return x;
        var rb = 0;
        for(var i = 0; i < l; i++){
            rb |= (x & 1) << l - i - 1;
            x >>= 1;
        }
        return rb;
    };
    // Performs "tweedling" phase, therefore 'emulating'
    // behaviour of the recursive algorithm
    FFTM.prototype.permute = function permute(rbt, rws, iws, rtws, itws, N) {
        for(var i = 0; i < N; i++){
            rtws[i] = rws[rbt[i]];
            itws[i] = iws[rbt[i]];
        }
    };
    FFTM.prototype.transform = function transform(rws, iws, rtws, itws, N, rbt) {
        this.permute(rbt, rws, iws, rtws, itws, N);
        for(var s = 1; s < N; s <<= 1){
            var l = s << 1;
            var rtwdf = Math.cos(2 * Math.PI / l);
            var itwdf = Math.sin(2 * Math.PI / l);
            for(var p = 0; p < N; p += l){
                var rtwdf_ = rtwdf;
                var itwdf_ = itwdf;
                for(var j = 0; j < s; j++){
                    var re = rtws[p + j];
                    var ie = itws[p + j];
                    var ro = rtws[p + j + s];
                    var io = itws[p + j + s];
                    var rx = rtwdf_ * ro - itwdf_ * io;
                    io = rtwdf_ * io + itwdf_ * ro;
                    ro = rx;
                    rtws[p + j] = re + ro;
                    itws[p + j] = ie + io;
                    rtws[p + j + s] = re - ro;
                    itws[p + j + s] = ie - io;
                    /* jshint maxdepth : false */ if (j !== l) {
                        rx = rtwdf * rtwdf_ - itwdf * itwdf_;
                        itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;
                        rtwdf_ = rx;
                    }
                }
            }
        }
    };
    FFTM.prototype.guessLen13b = function guessLen13b(n, m) {
        var N = Math.max(m, n) | 1;
        var odd = N & 1;
        var i = 0;
        for(N = N / 2 | 0; N; N = N >>> 1)i++;
        return 1 << i + 1 + odd;
    };
    FFTM.prototype.conjugate = function conjugate(rws, iws, N) {
        if (N <= 1) return;
        for(var i = 0; i < N / 2; i++){
            var t = rws[i];
            rws[i] = rws[N - i - 1];
            rws[N - i - 1] = t;
            t = iws[i];
            iws[i] = -iws[N - i - 1];
            iws[N - i - 1] = -t;
        }
    };
    FFTM.prototype.normalize13b = function normalize13b(ws, N) {
        var carry = 0;
        for(var i = 0; i < N / 2; i++){
            var w = Math.round(ws[2 * i + 1] / N) * 0x2000 + Math.round(ws[2 * i] / N) + carry;
            ws[i] = w & 0x3ffffff;
            if (w < 0x4000000) carry = 0;
            else carry = w / 0x4000000 | 0;
        }
        return ws;
    };
    FFTM.prototype.convert13b = function convert13b(ws, len, rws, N) {
        var carry = 0;
        for(var i = 0; i < len; i++){
            carry = carry + (ws[i] | 0);
            rws[2 * i] = carry & 0x1fff;
            carry = carry >>> 13;
            rws[2 * i + 1] = carry & 0x1fff;
            carry = carry >>> 13;
        }
        // Pad with zeroes
        for(i = 2 * len; i < N; ++i)rws[i] = 0;
        assert(carry === 0);
        assert((carry & -8192) === 0);
    };
    FFTM.prototype.stub = function stub(N) {
        var ph = new Array(N);
        for(var i = 0; i < N; i++)ph[i] = 0;
        return ph;
    };
    FFTM.prototype.mulp = function mulp(x, y, out) {
        var N = 2 * this.guessLen13b(x.length, y.length);
        var rbt = this.makeRBT(N);
        var _ = this.stub(N);
        var rws = new Array(N);
        var rwst = new Array(N);
        var iwst = new Array(N);
        var nrws = new Array(N);
        var nrwst = new Array(N);
        var niwst = new Array(N);
        var rmws = out.words;
        rmws.length = N;
        this.convert13b(x.words, x.length, rws, N);
        this.convert13b(y.words, y.length, nrws, N);
        this.transform(rws, _, rwst, iwst, N, rbt);
        this.transform(nrws, _, nrwst, niwst, N, rbt);
        for(var i = 0; i < N; i++){
            var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];
            iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];
            rwst[i] = rx;
        }
        this.conjugate(rwst, iwst, N);
        this.transform(rwst, iwst, rmws, _, N, rbt);
        this.conjugate(rmws, _, N);
        this.normalize13b(rmws, N);
        out.negative = x.negative ^ y.negative;
        out.length = x.length + y.length;
        return out._strip();
    };
    // Multiply `this` by `num`
    BN.prototype.mul = function mul(num) {
        var out = new BN(null);
        out.words = new Array(this.length + num.length);
        return this.mulTo(num, out);
    };
    // Multiply employing FFT
    BN.prototype.mulf = function mulf(num) {
        var out = new BN(null);
        out.words = new Array(this.length + num.length);
        return jumboMulTo(this, num, out);
    };
    // In-place Multiplication
    BN.prototype.imul = function imul(num) {
        return this.clone().mulTo(num, this);
    };
    BN.prototype.imuln = function imuln(num) {
        var isNegNum = num < 0;
        if (isNegNum) num = -num;
        assert(typeof num === 'number');
        assert(num < 0x4000000);
        // Carry
        var carry = 0;
        for(var i = 0; i < this.length; i++){
            var w = (this.words[i] | 0) * num;
            var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);
            carry >>= 26;
            carry += w / 0x4000000 | 0;
            // NOTE: lo is 27bit maximum
            carry += lo >>> 26;
            this.words[i] = lo & 0x3ffffff;
        }
        if (carry !== 0) {
            this.words[i] = carry;
            this.length++;
        }
        return isNegNum ? this.ineg() : this;
    };
    BN.prototype.muln = function muln(num) {
        return this.clone().imuln(num);
    };
    // `this` * `this`
    BN.prototype.sqr = function sqr() {
        return this.mul(this);
    };
    // `this` * `this` in-place
    BN.prototype.isqr = function isqr() {
        return this.imul(this.clone());
    };
    // Math.pow(`this`, `num`)
    BN.prototype.pow = function pow(num) {
        var w = toBitArray(num);
        if (w.length === 0) return new BN(1);
        // Skip leading zeroes
        var res = this;
        for(var i = 0; i < w.length; i++, res = res.sqr()){
            if (w[i] !== 0) break;
        }
        if (++i < w.length) for(var q = res.sqr(); i < w.length; i++, q = q.sqr()){
            if (w[i] === 0) continue;
            res = res.mul(q);
        }
        return res;
    };
    // Shift-left in-place
    BN.prototype.iushln = function iushln(bits) {
        assert(typeof bits === 'number' && bits >= 0);
        var r = bits % 26;
        var s = (bits - r) / 26;
        var carryMask = 0x3ffffff >>> 26 - r << 26 - r;
        var i;
        if (r !== 0) {
            var carry = 0;
            for(i = 0; i < this.length; i++){
                var newCarry = this.words[i] & carryMask;
                var c = (this.words[i] | 0) - newCarry << r;
                this.words[i] = c | carry;
                carry = newCarry >>> 26 - r;
            }
            if (carry) {
                this.words[i] = carry;
                this.length++;
            }
        }
        if (s !== 0) {
            for(i = this.length - 1; i >= 0; i--)this.words[i + s] = this.words[i];
            for(i = 0; i < s; i++)this.words[i] = 0;
            this.length += s;
        }
        return this._strip();
    };
    BN.prototype.ishln = function ishln(bits) {
        // TODO(indutny): implement me
        assert(this.negative === 0);
        return this.iushln(bits);
    };
    // Shift-right in-place
    // NOTE: `hint` is a lowest bit before trailing zeroes
    // NOTE: if `extended` is present - it will be filled with destroyed bits
    BN.prototype.iushrn = function iushrn(bits, hint, extended) {
        assert(typeof bits === 'number' && bits >= 0);
        var h;
        if (hint) h = (hint - hint % 26) / 26;
        else h = 0;
        var r = bits % 26;
        var s = Math.min((bits - r) / 26, this.length);
        var mask = 0x3ffffff ^ 0x3ffffff >>> r << r;
        var maskedWords = extended;
        h -= s;
        h = Math.max(0, h);
        // Extended mode, copy masked part
        if (maskedWords) {
            for(var i = 0; i < s; i++)maskedWords.words[i] = this.words[i];
            maskedWords.length = s;
        }
        if (s === 0) ;
        else if (this.length > s) {
            this.length -= s;
            for(i = 0; i < this.length; i++)this.words[i] = this.words[i + s];
        } else {
            this.words[0] = 0;
            this.length = 1;
        }
        var carry = 0;
        for(i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--){
            var word = this.words[i] | 0;
            this.words[i] = carry << 26 - r | word >>> r;
            carry = word & mask;
        }
        // Push carried bits as a mask
        if (maskedWords && carry !== 0) maskedWords.words[maskedWords.length++] = carry;
        if (this.length === 0) {
            this.words[0] = 0;
            this.length = 1;
        }
        return this._strip();
    };
    BN.prototype.ishrn = function ishrn(bits, hint, extended) {
        // TODO(indutny): implement me
        assert(this.negative === 0);
        return this.iushrn(bits, hint, extended);
    };
    // Shift-left
    BN.prototype.shln = function shln(bits) {
        return this.clone().ishln(bits);
    };
    BN.prototype.ushln = function ushln(bits) {
        return this.clone().iushln(bits);
    };
    // Shift-right
    BN.prototype.shrn = function shrn(bits) {
        return this.clone().ishrn(bits);
    };
    BN.prototype.ushrn = function ushrn(bits) {
        return this.clone().iushrn(bits);
    };
    // Test if n bit is set
    BN.prototype.testn = function testn(bit) {
        assert(typeof bit === 'number' && bit >= 0);
        var r = bit % 26;
        var s = (bit - r) / 26;
        var q = 1 << r;
        // Fast case: bit is much higher than all existing words
        if (this.length <= s) return false;
        // Check bit and return
        var w = this.words[s];
        return !!(w & q);
    };
    // Return only lowers bits of number (in-place)
    BN.prototype.imaskn = function imaskn(bits) {
        assert(typeof bits === 'number' && bits >= 0);
        var r = bits % 26;
        var s = (bits - r) / 26;
        assert(this.negative === 0, 'imaskn works only with positive numbers');
        if (this.length <= s) return this;
        if (r !== 0) s++;
        this.length = Math.min(s, this.length);
        if (r !== 0) {
            var mask = 0x3ffffff ^ 0x3ffffff >>> r << r;
            this.words[this.length - 1] &= mask;
        }
        return this._strip();
    };
    // Return only lowers bits of number
    BN.prototype.maskn = function maskn(bits) {
        return this.clone().imaskn(bits);
    };
    // Add plain number `num` to `this`
    BN.prototype.iaddn = function iaddn(num) {
        assert(typeof num === 'number');
        assert(num < 0x4000000);
        if (num < 0) return this.isubn(-num);
        // Possible sign change
        if (this.negative !== 0) {
            if (this.length === 1 && (this.words[0] | 0) <= num) {
                this.words[0] = num - (this.words[0] | 0);
                this.negative = 0;
                return this;
            }
            this.negative = 0;
            this.isubn(num);
            this.negative = 1;
            return this;
        }
        // Add without checks
        return this._iaddn(num);
    };
    BN.prototype._iaddn = function _iaddn(num) {
        this.words[0] += num;
        // Carry
        for(var i = 0; i < this.length && this.words[i] >= 0x4000000; i++){
            this.words[i] -= 0x4000000;
            if (i === this.length - 1) this.words[i + 1] = 1;
            else this.words[i + 1]++;
        }
        this.length = Math.max(this.length, i + 1);
        return this;
    };
    // Subtract plain number `num` from `this`
    BN.prototype.isubn = function isubn(num) {
        assert(typeof num === 'number');
        assert(num < 0x4000000);
        if (num < 0) return this.iaddn(-num);
        if (this.negative !== 0) {
            this.negative = 0;
            this.iaddn(num);
            this.negative = 1;
            return this;
        }
        this.words[0] -= num;
        if (this.length === 1 && this.words[0] < 0) {
            this.words[0] = -this.words[0];
            this.negative = 1;
        } else // Carry
        for(var i = 0; i < this.length && this.words[i] < 0; i++){
            this.words[i] += 0x4000000;
            this.words[i + 1] -= 1;
        }
        return this._strip();
    };
    BN.prototype.addn = function addn(num) {
        return this.clone().iaddn(num);
    };
    BN.prototype.subn = function subn(num) {
        return this.clone().isubn(num);
    };
    BN.prototype.iabs = function iabs() {
        this.negative = 0;
        return this;
    };
    BN.prototype.abs = function abs() {
        return this.clone().iabs();
    };
    BN.prototype._ishlnsubmul = function _ishlnsubmul(num, mul, shift) {
        var len = num.length + shift;
        var i;
        this._expand(len);
        var w;
        var carry = 0;
        for(i = 0; i < num.length; i++){
            w = (this.words[i + shift] | 0) + carry;
            var right = (num.words[i] | 0) * mul;
            w -= right & 0x3ffffff;
            carry = (w >> 26) - (right / 0x4000000 | 0);
            this.words[i + shift] = w & 0x3ffffff;
        }
        for(; i < this.length - shift; i++){
            w = (this.words[i + shift] | 0) + carry;
            carry = w >> 26;
            this.words[i + shift] = w & 0x3ffffff;
        }
        if (carry === 0) return this._strip();
        // Subtraction overflow
        assert(carry === -1);
        carry = 0;
        for(i = 0; i < this.length; i++){
            w = -(this.words[i] | 0) + carry;
            carry = w >> 26;
            this.words[i] = w & 0x3ffffff;
        }
        this.negative = 1;
        return this._strip();
    };
    BN.prototype._wordDiv = function _wordDiv(num, mode) {
        var shift = this.length - num.length;
        var a = this.clone();
        var b = num;
        // Normalize
        var bhi = b.words[b.length - 1] | 0;
        var bhiBits = this._countBits(bhi);
        shift = 26 - bhiBits;
        if (shift !== 0) {
            b = b.ushln(shift);
            a.iushln(shift);
            bhi = b.words[b.length - 1] | 0;
        }
        // Initialize quotient
        var m = a.length - b.length;
        var q;
        if (mode !== 'mod') {
            q = new BN(null);
            q.length = m + 1;
            q.words = new Array(q.length);
            for(var i = 0; i < q.length; i++)q.words[i] = 0;
        }
        var diff = a.clone()._ishlnsubmul(b, 1, m);
        if (diff.negative === 0) {
            a = diff;
            if (q) q.words[m] = 1;
        }
        for(var j = m - 1; j >= 0; j--){
            var qj = (a.words[b.length + j] | 0) * 0x4000000 + (a.words[b.length + j - 1] | 0);
            // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max
            // (0x7ffffff)
            qj = Math.min(qj / bhi | 0, 0x3ffffff);
            a._ishlnsubmul(b, qj, j);
            while(a.negative !== 0){
                qj--;
                a.negative = 0;
                a._ishlnsubmul(b, 1, j);
                if (!a.isZero()) a.negative ^= 1;
            }
            if (q) q.words[j] = qj;
        }
        if (q) q._strip();
        a._strip();
        // Denormalize
        if (mode !== 'div' && shift !== 0) a.iushrn(shift);
        return {
            div: q || null,
            mod: a
        };
    };
    // NOTE: 1) `mode` can be set to `mod` to request mod only,
    //       to `div` to request div only, or be absent to
    //       request both div & mod
    //       2) `positive` is true if unsigned mod is requested
    BN.prototype.divmod = function divmod(num, mode, positive) {
        assert(!num.isZero());
        if (this.isZero()) return {
            div: new BN(0),
            mod: new BN(0)
        };
        var div, mod, res;
        if (this.negative !== 0 && num.negative === 0) {
            res = this.neg().divmod(num, mode);
            if (mode !== 'mod') div = res.div.neg();
            if (mode !== 'div') {
                mod = res.mod.neg();
                if (positive && mod.negative !== 0) mod.iadd(num);
            }
            return {
                div: div,
                mod: mod
            };
        }
        if (this.negative === 0 && num.negative !== 0) {
            res = this.divmod(num.neg(), mode);
            if (mode !== 'mod') div = res.div.neg();
            return {
                div: div,
                mod: res.mod
            };
        }
        if ((this.negative & num.negative) !== 0) {
            res = this.neg().divmod(num.neg(), mode);
            if (mode !== 'div') {
                mod = res.mod.neg();
                if (positive && mod.negative !== 0) mod.isub(num);
            }
            return {
                div: res.div,
                mod: mod
            };
        }
        // Both numbers are positive at this point
        // Strip both numbers to approximate shift value
        if (num.length > this.length || this.cmp(num) < 0) return {
            div: new BN(0),
            mod: this
        };
        // Very short reduction
        if (num.length === 1) {
            if (mode === 'div') return {
                div: this.divn(num.words[0]),
                mod: null
            };
            if (mode === 'mod') return {
                div: null,
                mod: new BN(this.modrn(num.words[0]))
            };
            return {
                div: this.divn(num.words[0]),
                mod: new BN(this.modrn(num.words[0]))
            };
        }
        return this._wordDiv(num, mode);
    };
    // Find `this` / `num`
    BN.prototype.div = function div(num) {
        return this.divmod(num, 'div', false).div;
    };
    // Find `this` % `num`
    BN.prototype.mod = function mod(num) {
        return this.divmod(num, 'mod', false).mod;
    };
    BN.prototype.umod = function umod(num) {
        return this.divmod(num, 'mod', true).mod;
    };
    // Find Round(`this` / `num`)
    BN.prototype.divRound = function divRound(num) {
        var dm = this.divmod(num);
        // Fast case - exact division
        if (dm.mod.isZero()) return dm.div;
        var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;
        var half = num.ushrn(1);
        var r2 = num.andln(1);
        var cmp = mod.cmp(half);
        // Round down
        if (cmp < 0 || r2 === 1 && cmp === 0) return dm.div;
        // Round up
        return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);
    };
    BN.prototype.modrn = function modrn(num) {
        var isNegNum = num < 0;
        if (isNegNum) num = -num;
        assert(num <= 0x3ffffff);
        var p = 67108864 % num;
        var acc = 0;
        for(var i = this.length - 1; i >= 0; i--)acc = (p * acc + (this.words[i] | 0)) % num;
        return isNegNum ? -acc : acc;
    };
    // WARNING: DEPRECATED
    BN.prototype.modn = function modn(num) {
        return this.modrn(num);
    };
    // In-place division by number
    BN.prototype.idivn = function idivn(num) {
        var isNegNum = num < 0;
        if (isNegNum) num = -num;
        assert(num <= 0x3ffffff);
        var carry = 0;
        for(var i = this.length - 1; i >= 0; i--){
            var w = (this.words[i] | 0) + carry * 0x4000000;
            this.words[i] = w / num | 0;
            carry = w % num;
        }
        this._strip();
        return isNegNum ? this.ineg() : this;
    };
    BN.prototype.divn = function divn(num) {
        return this.clone().idivn(num);
    };
    BN.prototype.egcd = function egcd(p) {
        assert(p.negative === 0);
        assert(!p.isZero());
        var x = this;
        var y = p.clone();
        if (x.negative !== 0) x = x.umod(p);
        else x = x.clone();
        // A * x + B * y = x
        var A = new BN(1);
        var B = new BN(0);
        // C * x + D * y = y
        var C = new BN(0);
        var D = new BN(1);
        var g = 0;
        while(x.isEven() && y.isEven()){
            x.iushrn(1);
            y.iushrn(1);
            ++g;
        }
        var yp = y.clone();
        var xp = x.clone();
        while(!x.isZero()){
            for(var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);
            if (i > 0) {
                x.iushrn(i);
                while(i-- > 0){
                    if (A.isOdd() || B.isOdd()) {
                        A.iadd(yp);
                        B.isub(xp);
                    }
                    A.iushrn(1);
                    B.iushrn(1);
                }
            }
            for(var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);
            if (j > 0) {
                y.iushrn(j);
                while(j-- > 0){
                    if (C.isOdd() || D.isOdd()) {
                        C.iadd(yp);
                        D.isub(xp);
                    }
                    C.iushrn(1);
                    D.iushrn(1);
                }
            }
            if (x.cmp(y) >= 0) {
                x.isub(y);
                A.isub(C);
                B.isub(D);
            } else {
                y.isub(x);
                C.isub(A);
                D.isub(B);
            }
        }
        return {
            a: C,
            b: D,
            gcd: y.iushln(g)
        };
    };
    // This is reduced incarnation of the binary EEA
    // above, designated to invert members of the
    // _prime_ fields F(p) at a maximal speed
    BN.prototype._invmp = function _invmp(p) {
        assert(p.negative === 0);
        assert(!p.isZero());
        var a = this;
        var b = p.clone();
        if (a.negative !== 0) a = a.umod(p);
        else a = a.clone();
        var x1 = new BN(1);
        var x2 = new BN(0);
        var delta = b.clone();
        while(a.cmpn(1) > 0 && b.cmpn(1) > 0){
            for(var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);
            if (i > 0) {
                a.iushrn(i);
                while(i-- > 0){
                    if (x1.isOdd()) x1.iadd(delta);
                    x1.iushrn(1);
                }
            }
            for(var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);
            if (j > 0) {
                b.iushrn(j);
                while(j-- > 0){
                    if (x2.isOdd()) x2.iadd(delta);
                    x2.iushrn(1);
                }
            }
            if (a.cmp(b) >= 0) {
                a.isub(b);
                x1.isub(x2);
            } else {
                b.isub(a);
                x2.isub(x1);
            }
        }
        var res;
        if (a.cmpn(1) === 0) res = x1;
        else res = x2;
        if (res.cmpn(0) < 0) res.iadd(p);
        return res;
    };
    BN.prototype.gcd = function gcd(num) {
        if (this.isZero()) return num.abs();
        if (num.isZero()) return this.abs();
        var a = this.clone();
        var b = num.clone();
        a.negative = 0;
        b.negative = 0;
        // Remove common factor of two
        for(var shift = 0; a.isEven() && b.isEven(); shift++){
            a.iushrn(1);
            b.iushrn(1);
        }
        do {
            while(a.isEven())a.iushrn(1);
            while(b.isEven())b.iushrn(1);
            var r = a.cmp(b);
            if (r < 0) {
                // Swap `a` and `b` to make `a` always bigger than `b`
                var t = a;
                a = b;
                b = t;
            } else if (r === 0 || b.cmpn(1) === 0) break;
            a.isub(b);
        }while (true)
        return b.iushln(shift);
    };
    // Invert number in the field F(num)
    BN.prototype.invm = function invm(num) {
        return this.egcd(num).a.umod(num);
    };
    BN.prototype.isEven = function isEven() {
        return (this.words[0] & 1) === 0;
    };
    BN.prototype.isOdd = function isOdd() {
        return (this.words[0] & 1) === 1;
    };
    // And first word and num
    BN.prototype.andln = function andln(num) {
        return this.words[0] & num;
    };
    // Increment at the bit position in-line
    BN.prototype.bincn = function bincn(bit) {
        assert(typeof bit === 'number');
        var r = bit % 26;
        var s = (bit - r) / 26;
        var q = 1 << r;
        // Fast case: bit is much higher than all existing words
        if (this.length <= s) {
            this._expand(s + 1);
            this.words[s] |= q;
            return this;
        }
        // Add bit and propagate, if needed
        var carry = q;
        for(var i = s; carry !== 0 && i < this.length; i++){
            var w = this.words[i] | 0;
            w += carry;
            carry = w >>> 26;
            w &= 0x3ffffff;
            this.words[i] = w;
        }
        if (carry !== 0) {
            this.words[i] = carry;
            this.length++;
        }
        return this;
    };
    BN.prototype.isZero = function isZero() {
        return this.length === 1 && this.words[0] === 0;
    };
    BN.prototype.cmpn = function cmpn(num) {
        var negative = num < 0;
        if (this.negative !== 0 && !negative) return -1;
        if (this.negative === 0 && negative) return 1;
        this._strip();
        var res;
        if (this.length > 1) res = 1;
        else {
            if (negative) num = -num;
            assert(num <= 0x3ffffff, 'Number is too big');
            var w = this.words[0] | 0;
            res = w === num ? 0 : w < num ? -1 : 1;
        }
        if (this.negative !== 0) return -res | 0;
        return res;
    };
    // Compare two numbers and return:
    // 1 - if `this` > `num`
    // 0 - if `this` == `num`
    // -1 - if `this` < `num`
    BN.prototype.cmp = function cmp(num) {
        if (this.negative !== 0 && num.negative === 0) return -1;
        if (this.negative === 0 && num.negative !== 0) return 1;
        var res = this.ucmp(num);
        if (this.negative !== 0) return -res | 0;
        return res;
    };
    // Unsigned comparison
    BN.prototype.ucmp = function ucmp(num) {
        // At this point both numbers have the same sign
        if (this.length > num.length) return 1;
        if (this.length < num.length) return -1;
        var res = 0;
        for(var i = this.length - 1; i >= 0; i--){
            var a = this.words[i] | 0;
            var b = num.words[i] | 0;
            if (a === b) continue;
            if (a < b) res = -1;
            else if (a > b) res = 1;
            break;
        }
        return res;
    };
    BN.prototype.gtn = function gtn(num) {
        return this.cmpn(num) === 1;
    };
    BN.prototype.gt = function gt(num) {
        return this.cmp(num) === 1;
    };
    BN.prototype.gten = function gten(num) {
        return this.cmpn(num) >= 0;
    };
    BN.prototype.gte = function gte(num) {
        return this.cmp(num) >= 0;
    };
    BN.prototype.ltn = function ltn(num) {
        return this.cmpn(num) === -1;
    };
    BN.prototype.lt = function lt(num) {
        return this.cmp(num) === -1;
    };
    BN.prototype.lten = function lten(num) {
        return this.cmpn(num) <= 0;
    };
    BN.prototype.lte = function lte(num) {
        return this.cmp(num) <= 0;
    };
    BN.prototype.eqn = function eqn(num) {
        return this.cmpn(num) === 0;
    };
    BN.prototype.eq = function eq(num) {
        return this.cmp(num) === 0;
    };
    //
    // A reduce context, could be using montgomery or something better, depending
    // on the `m` itself.
    //
    BN.red = function red(num) {
        return new Red(num);
    };
    BN.prototype.toRed = function toRed(ctx) {
        assert(!this.red, 'Already a number in reduction context');
        assert(this.negative === 0, 'red works only with positives');
        return ctx.convertTo(this)._forceRed(ctx);
    };
    BN.prototype.fromRed = function fromRed() {
        assert(this.red, 'fromRed works only with numbers in reduction context');
        return this.red.convertFrom(this);
    };
    BN.prototype._forceRed = function _forceRed(ctx) {
        this.red = ctx;
        return this;
    };
    BN.prototype.forceRed = function forceRed(ctx) {
        assert(!this.red, 'Already a number in reduction context');
        return this._forceRed(ctx);
    };
    BN.prototype.redAdd = function redAdd(num) {
        assert(this.red, 'redAdd works only with red numbers');
        return this.red.add(this, num);
    };
    BN.prototype.redIAdd = function redIAdd(num) {
        assert(this.red, 'redIAdd works only with red numbers');
        return this.red.iadd(this, num);
    };
    BN.prototype.redSub = function redSub(num) {
        assert(this.red, 'redSub works only with red numbers');
        return this.red.sub(this, num);
    };
    BN.prototype.redISub = function redISub(num) {
        assert(this.red, 'redISub works only with red numbers');
        return this.red.isub(this, num);
    };
    BN.prototype.redShl = function redShl(num) {
        assert(this.red, 'redShl works only with red numbers');
        return this.red.shl(this, num);
    };
    BN.prototype.redMul = function redMul(num) {
        assert(this.red, 'redMul works only with red numbers');
        this.red._verify2(this, num);
        return this.red.mul(this, num);
    };
    BN.prototype.redIMul = function redIMul(num) {
        assert(this.red, 'redMul works only with red numbers');
        this.red._verify2(this, num);
        return this.red.imul(this, num);
    };
    BN.prototype.redSqr = function redSqr() {
        assert(this.red, 'redSqr works only with red numbers');
        this.red._verify1(this);
        return this.red.sqr(this);
    };
    BN.prototype.redISqr = function redISqr() {
        assert(this.red, 'redISqr works only with red numbers');
        this.red._verify1(this);
        return this.red.isqr(this);
    };
    // Square root over p
    BN.prototype.redSqrt = function redSqrt() {
        assert(this.red, 'redSqrt works only with red numbers');
        this.red._verify1(this);
        return this.red.sqrt(this);
    };
    BN.prototype.redInvm = function redInvm() {
        assert(this.red, 'redInvm works only with red numbers');
        this.red._verify1(this);
        return this.red.invm(this);
    };
    // Return negative clone of `this` % `red modulo`
    BN.prototype.redNeg = function redNeg() {
        assert(this.red, 'redNeg works only with red numbers');
        this.red._verify1(this);
        return this.red.neg(this);
    };
    BN.prototype.redPow = function redPow(num) {
        assert(this.red && !num.red, 'redPow(normalNum)');
        this.red._verify1(this);
        return this.red.pow(this, num);
    };
    // Prime numbers with efficient reduction
    var primes = {
        k256: null,
        p224: null,
        p192: null,
        p25519: null
    };
    // Pseudo-Mersenne prime
    function MPrime(name, p) {
        // P = 2 ^ N - K
        this.name = name;
        this.p = new BN(p, 16);
        this.n = this.p.bitLength();
        this.k = new BN(1).iushln(this.n).isub(this.p);
        this.tmp = this._tmp();
    }
    MPrime.prototype._tmp = function _tmp() {
        var tmp = new BN(null);
        tmp.words = new Array(Math.ceil(this.n / 13));
        return tmp;
    };
    MPrime.prototype.ireduce = function ireduce(num) {
        // Assumes that `num` is less than `P^2`
        // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)
        var r = num;
        var rlen;
        do {
            this.split(r, this.tmp);
            r = this.imulK(r);
            r = r.iadd(this.tmp);
            rlen = r.bitLength();
        }while (rlen > this.n)
        var cmp = rlen < this.n ? -1 : r.ucmp(this.p);
        if (cmp === 0) {
            r.words[0] = 0;
            r.length = 1;
        } else if (cmp > 0) r.isub(this.p);
        else if (r.strip !== undefined) // r is a BN v4 instance
        r.strip();
        else // r is a BN v5 instance
        r._strip();
        return r;
    };
    MPrime.prototype.split = function split(input, out) {
        input.iushrn(this.n, 0, out);
    };
    MPrime.prototype.imulK = function imulK(num) {
        return num.imul(this.k);
    };
    function K256() {
        MPrime.call(this, 'k256', 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');
    }
    inherits(K256, MPrime);
    K256.prototype.split = function split(input, output) {
        // 256 = 9 * 26 + 22
        var mask = 0x3fffff;
        var outLen = Math.min(input.length, 9);
        for(var i = 0; i < outLen; i++)output.words[i] = input.words[i];
        output.length = outLen;
        if (input.length <= 9) {
            input.words[0] = 0;
            input.length = 1;
            return;
        }
        // Shift by 9 limbs
        var prev = input.words[9];
        output.words[output.length++] = prev & mask;
        for(i = 10; i < input.length; i++){
            var next = input.words[i] | 0;
            input.words[i - 10] = (next & mask) << 4 | prev >>> 22;
            prev = next;
        }
        prev >>>= 22;
        input.words[i - 10] = prev;
        if (prev === 0 && input.length > 10) input.length -= 10;
        else input.length -= 9;
    };
    K256.prototype.imulK = function imulK(num) {
        // K = 0x1000003d1 = [ 0x40, 0x3d1 ]
        num.words[num.length] = 0;
        num.words[num.length + 1] = 0;
        num.length += 2;
        // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390
        var lo = 0;
        for(var i = 0; i < num.length; i++){
            var w = num.words[i] | 0;
            lo += w * 0x3d1;
            num.words[i] = lo & 0x3ffffff;
            lo = w * 0x40 + (lo / 0x4000000 | 0);
        }
        // Fast length reduction
        if (num.words[num.length - 1] === 0) {
            num.length--;
            if (num.words[num.length - 1] === 0) num.length--;
        }
        return num;
    };
    function P224() {
        MPrime.call(this, 'p224', 'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');
    }
    inherits(P224, MPrime);
    function P192() {
        MPrime.call(this, 'p192', 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');
    }
    inherits(P192, MPrime);
    function P25519() {
        // 2 ^ 255 - 19
        MPrime.call(this, '25519', '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');
    }
    inherits(P25519, MPrime);
    P25519.prototype.imulK = function imulK(num) {
        // K = 0x13
        var carry = 0;
        for(var i = 0; i < num.length; i++){
            var hi = (num.words[i] | 0) * 0x13 + carry;
            var lo = hi & 0x3ffffff;
            hi >>>= 26;
            num.words[i] = lo;
            carry = hi;
        }
        if (carry !== 0) num.words[num.length++] = carry;
        return num;
    };
    // Exported mostly for testing purposes, use plain name instead
    BN._prime = function prime(name) {
        // Cached version of prime
        if (primes[name]) return primes[name];
        var prime;
        if (name === 'k256') prime = new K256();
        else if (name === 'p224') prime = new P224();
        else if (name === 'p192') prime = new P192();
        else if (name === 'p25519') prime = new P25519();
        else throw new Error('Unknown prime ' + name);
        primes[name] = prime;
        return prime;
    };
    //
    // Base reduction engine
    //
    function Red(m) {
        if (typeof m === 'string') {
            var prime = BN._prime(m);
            this.m = prime.p;
            this.prime = prime;
        } else {
            assert(m.gtn(1), 'modulus must be greater than 1');
            this.m = m;
            this.prime = null;
        }
    }
    Red.prototype._verify1 = function _verify1(a) {
        assert(a.negative === 0, 'red works only with positives');
        assert(a.red, 'red works only with red numbers');
    };
    Red.prototype._verify2 = function _verify2(a, b) {
        assert((a.negative | b.negative) === 0, 'red works only with positives');
        assert(a.red && a.red === b.red, 'red works only with red numbers');
    };
    Red.prototype.imod = function imod(a) {
        if (this.prime) return this.prime.ireduce(a)._forceRed(this);
        move(a, a.umod(this.m)._forceRed(this));
        return a;
    };
    Red.prototype.neg = function neg(a) {
        if (a.isZero()) return a.clone();
        return this.m.sub(a)._forceRed(this);
    };
    Red.prototype.add = function add(a, b) {
        this._verify2(a, b);
        var res = a.add(b);
        if (res.cmp(this.m) >= 0) res.isub(this.m);
        return res._forceRed(this);
    };
    Red.prototype.iadd = function iadd(a, b) {
        this._verify2(a, b);
        var res = a.iadd(b);
        if (res.cmp(this.m) >= 0) res.isub(this.m);
        return res;
    };
    Red.prototype.sub = function sub(a, b) {
        this._verify2(a, b);
        var res = a.sub(b);
        if (res.cmpn(0) < 0) res.iadd(this.m);
        return res._forceRed(this);
    };
    Red.prototype.isub = function isub(a, b) {
        this._verify2(a, b);
        var res = a.isub(b);
        if (res.cmpn(0) < 0) res.iadd(this.m);
        return res;
    };
    Red.prototype.shl = function shl(a, num) {
        this._verify1(a);
        return this.imod(a.ushln(num));
    };
    Red.prototype.imul = function imul(a, b) {
        this._verify2(a, b);
        return this.imod(a.imul(b));
    };
    Red.prototype.mul = function mul(a, b) {
        this._verify2(a, b);
        return this.imod(a.mul(b));
    };
    Red.prototype.isqr = function isqr(a) {
        return this.imul(a, a.clone());
    };
    Red.prototype.sqr = function sqr(a) {
        return this.mul(a, a);
    };
    Red.prototype.sqrt = function sqrt(a) {
        if (a.isZero()) return a.clone();
        var mod3 = this.m.andln(3);
        assert(mod3 % 2 === 1);
        // Fast case
        if (mod3 === 3) {
            var pow = this.m.add(new BN(1)).iushrn(2);
            return this.pow(a, pow);
        }
        // Tonelli-Shanks algorithm (Totally unoptimized and slow)
        //
        // Find Q and S, that Q * 2 ^ S = (P - 1)
        var q = this.m.subn(1);
        var s = 0;
        while(!q.isZero() && q.andln(1) === 0){
            s++;
            q.iushrn(1);
        }
        assert(!q.isZero());
        var one = new BN(1).toRed(this);
        var nOne = one.redNeg();
        // Find quadratic non-residue
        // NOTE: Max is such because of generalized Riemann hypothesis.
        var lpow = this.m.subn(1).iushrn(1);
        var z = this.m.bitLength();
        z = new BN(2 * z * z).toRed(this);
        while(this.pow(z, lpow).cmp(nOne) !== 0)z.redIAdd(nOne);
        var c = this.pow(z, q);
        var r = this.pow(a, q.addn(1).iushrn(1));
        var t = this.pow(a, q);
        var m = s;
        while(t.cmp(one) !== 0){
            var tmp = t;
            for(var i = 0; tmp.cmp(one) !== 0; i++)tmp = tmp.redSqr();
            assert(i < m);
            var b = this.pow(c, new BN(1).iushln(m - i - 1));
            r = r.redMul(b);
            c = b.redSqr();
            t = t.redMul(c);
            m = i;
        }
        return r;
    };
    Red.prototype.invm = function invm(a) {
        var inv = a._invmp(this.m);
        if (inv.negative !== 0) {
            inv.negative = 0;
            return this.imod(inv).redNeg();
        } else return this.imod(inv);
    };
    Red.prototype.pow = function pow(a, num) {
        if (num.isZero()) return new BN(1).toRed(this);
        if (num.cmpn(1) === 0) return a.clone();
        var windowSize = 4;
        var wnd = new Array(1 << windowSize);
        wnd[0] = new BN(1).toRed(this);
        wnd[1] = a;
        for(var i = 2; i < wnd.length; i++)wnd[i] = this.mul(wnd[i - 1], a);
        var res = wnd[0];
        var current = 0;
        var currentLen = 0;
        var start = num.bitLength() % 26;
        if (start === 0) start = 26;
        for(i = num.length - 1; i >= 0; i--){
            var word = num.words[i];
            for(var j = start - 1; j >= 0; j--){
                var bit = word >> j & 1;
                if (res !== wnd[0]) res = this.sqr(res);
                if (bit === 0 && current === 0) {
                    currentLen = 0;
                    continue;
                }
                current <<= 1;
                current |= bit;
                currentLen++;
                if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;
                res = this.mul(res, wnd[current]);
                currentLen = 0;
                current = 0;
            }
            start = 26;
        }
        return res;
    };
    Red.prototype.convertTo = function convertTo(num) {
        var r = num.umod(this.m);
        return r === num ? r.clone() : r;
    };
    Red.prototype.convertFrom = function convertFrom(num) {
        var res = num.clone();
        res.red = null;
        return res;
    };
    //
    // Montgomery method engine
    //
    BN.mont = function mont(num) {
        return new Mont(num);
    };
    function Mont(m) {
        Red.call(this, m);
        this.shift = this.m.bitLength();
        if (this.shift % 26 !== 0) this.shift += 26 - this.shift % 26;
        this.r = new BN(1).iushln(this.shift);
        this.r2 = this.imod(this.r.sqr());
        this.rinv = this.r._invmp(this.m);
        this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);
        this.minv = this.minv.umod(this.r);
        this.minv = this.r.sub(this.minv);
    }
    inherits(Mont, Red);
    Mont.prototype.convertTo = function convertTo(num) {
        return this.imod(num.ushln(this.shift));
    };
    Mont.prototype.convertFrom = function convertFrom(num) {
        var r = this.imod(num.mul(this.rinv));
        r.red = null;
        return r;
    };
    Mont.prototype.imul = function imul(a, b) {
        if (a.isZero() || b.isZero()) {
            a.words[0] = 0;
            a.length = 1;
            return a;
        }
        var t = a.imul(b);
        var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);
        var u = t.isub(c).iushrn(this.shift);
        var res = u;
        if (u.cmp(this.m) >= 0) res = u.isub(this.m);
        else if (u.cmpn(0) < 0) res = u.iadd(this.m);
        return res._forceRed(this);
    };
    Mont.prototype.mul = function mul(a, b) {
        if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);
        var t = a.mul(b);
        var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);
        var u = t.isub(c).iushrn(this.shift);
        var res = u;
        if (u.cmp(this.m) >= 0) res = u.isub(this.m);
        else if (u.cmpn(0) < 0) res = u.iadd(this.m);
        return res._forceRed(this);
    };
    Mont.prototype.invm = function invm(a) {
        // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R
        var res = this.imod(a._invmp(this.m).mul(this.r2));
        return res._forceRed(this);
    };
})(module, this);

},{"buffer":"jhUEF"}],"3rAQQ":[function(require,module,exports) {
"use strict";
var __importDefault = this && this.__importDefault || function(mod) {
    return mod && mod.__esModule ? mod : {
        "default": mod
    };
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
const react_1 = __importDefault(require("react"));
const react_blockies_1 = __importDefault(require("react-blockies"));
const styles = {
    container: {
        overflow: 'hidden'
    }
};
function Blockies({ address , size  }) {
    return react_1.default.createElement("div", {
        style: Object.assign(Object.assign({}, styles.container), {
            width: size,
            height: size,
            borderRadius: size / 2
        })
    }, react_1.default.createElement(react_blockies_1.default, {
        size: 8,
        seed: address,
        scale: size ? size / 7 : 4
    }));
}
exports.default = Blockies;

},{"react":"21dqq","react-blockies":"24Yrg"}],"24Yrg":[function(require,module,exports) {
'use strict';
Object.defineProperty(exports, "__esModule", {
    value: true
});
var _extends = Object.assign || function(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i];
        for(var key in source)if (Object.prototype.hasOwnProperty.call(source, key)) target[key] = source[key];
    }
    return target;
};
var _createClass = function() {
    function defineProperties(target, props) {
        for(var i = 0; i < props.length; i++){
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ("value" in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
        }
    }
    return function(Constructor, protoProps, staticProps) {
        if (protoProps) defineProperties(Constructor.prototype, protoProps);
        if (staticProps) defineProperties(Constructor, staticProps);
        return Constructor;
    };
}();
var _react = require('react');
var _react2 = _interopRequireDefault(_react);
var _propTypes = require('prop-types');
var _propTypes2 = _interopRequireDefault(_propTypes);
function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) throw new TypeError("Cannot call a class as a function");
}
function _possibleConstructorReturn(self, call) {
    if (!self) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    return call && (typeof call === "object" || typeof call === "function") ? call : self;
}
function _inherits(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
    subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true
        }
    });
    if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
}
var Identicon = function(_Component) {
    _inherits(Identicon1, _Component);
    function Identicon1(props) {
        _classCallCheck(this, Identicon1);
        var _this = _possibleConstructorReturn(this, (Identicon1.__proto__ || Object.getPrototypeOf(Identicon1)).call(this, props));
        _this.generateIdenticon = _this.generateIdenticon.bind(_this);
        return _this;
    }
    _createClass(Identicon1, [
        {
            key: 'componentDidMount',
            value: function componentDidMount() {
                this.generateIdenticon(_extends({}, this.props));
            }
        },
        {
            key: 'componentWillUpdate',
            value: function componentWillUpdate(nextProps) {
                if (!this.isEquivalent(this.props, nextProps)) this.generateIdenticon(_extends({}, nextProps));
            }
        },
        {
            key: 'isEquivalent',
            value: function isEquivalent(prevProps, nextProps) {
                var aProps = Object.getOwnPropertyNames(prevProps);
                var bProps = Object.getOwnPropertyNames(nextProps);
                if (aProps.length != bProps.length) return false;
                for(var i = 0; i < aProps.length; i++){
                    var propName = aProps[i];
                    if (prevProps[propName] !== nextProps[propName]) return false;
                }
                return true;
            }
        },
        {
            key: 'generateIdenticon',
            value: function generateIdenticon(options) {
                // NOTE --  Majority of this code is referenced from: https://github.com/alexvandesande/blockies
                //          Mostly to ensure congruence to Ethereum Mist's Identicons
                // The random number is a js implementation of the Xorshift PRNG
                var randseed = new Array(4); // Xorshift: [x, y, z, w] 32 bit values
                function seedrand(seed) {
                    for(var i = 0; i < randseed.length; i++)randseed[i] = 0;
                    for(var _i = 0; _i < seed.length; _i++)randseed[_i % 4] = (randseed[_i % 4] << 5) - randseed[_i % 4] + seed.charCodeAt(_i);
                }
                function rand() {
                    // based on Java's String.hashCode(), expanded to 4 32bit values
                    var t = randseed[0] ^ randseed[0] << 11;
                    randseed[0] = randseed[1];
                    randseed[1] = randseed[2];
                    randseed[2] = randseed[3];
                    randseed[3] = randseed[3] ^ randseed[3] >> 19 ^ t ^ t >> 8;
                    return (randseed[3] >>> 0) / 2147483648;
                }
                function createColor() {
                    // saturation is the whole color spectrum
                    var h = Math.floor(rand() * 360);
                    // saturation goes from 40 to 100, it avoids greyish colors
                    var s = rand() * 60 + 40 + '%';
                    // lightness can be anything from 0 to 100, but probabilities are a bell curve around 50%
                    var l = (rand() + rand() + rand() + rand()) * 25 + '%';
                    var color = 'hsl(' + h + ',' + s + ',' + l + ')';
                    return color;
                }
                function createImageData(size) {
                    var width = size; // Only support square icons for now
                    var height = size;
                    var dataWidth = Math.ceil(width / 2);
                    var mirrorWidth = width - dataWidth;
                    var data = [];
                    for(var y = 0; y < height; y++){
                        var row = [];
                        for(var x = 0; x < dataWidth; x++)// this makes foreground and background color to have a 43% (1/2.3) probability
                        // spot color has 13% chance
                        row[x] = Math.floor(rand() * 2.3);
                        var r = row.slice(0, mirrorWidth);
                        r.reverse();
                        row = row.concat(r);
                        for(var i = 0; i < row.length; i++)data.push(row[i]);
                    }
                    return data;
                }
                function setCanvas(identicon, imageData, color, scale, bgcolor, spotcolor) {
                    var width = Math.sqrt(imageData.length);
                    var size = width * scale;
                    identicon.width = size;
                    identicon.style.width = size + 'px';
                    identicon.height = size;
                    identicon.style.height = size + 'px';
                    var cc = identicon.getContext('2d');
                    cc.fillStyle = bgcolor;
                    cc.fillRect(0, 0, identicon.width, identicon.height);
                    cc.fillStyle = color;
                    for(var i = 0; i < imageData.length; i++){
                        // if data is 2, choose spot color, if 1 choose foreground
                        cc.fillStyle = imageData[i] === 1 ? color : spotcolor;
                        // if data is 0, leave the background
                        if (imageData[i]) {
                            var row = Math.floor(i / width);
                            var col = i % width;
                            cc.fillRect(col * scale, row * scale, scale, scale);
                        }
                    }
                }
                var opts = options || {};
                var size1 = opts.size || 8;
                var scale1 = opts.scale || 4;
                var seed1 = opts.seed || Math.floor(Math.random() * Math.pow(10, 16)).toString(16);
                seedrand(seed1);
                var color1 = opts.color || createColor();
                var bgcolor1 = opts.bgColor || createColor();
                var spotcolor1 = opts.spotColor || createColor();
                var imageData1 = createImageData(size1);
                var canvas = setCanvas(this.identicon, imageData1, color1, scale1, bgcolor1, spotcolor1);
                return canvas;
            }
        },
        {
            key: 'render',
            value: function render() {
                var _this2 = this;
                return _react2.default.createElement('canvas', {
                    ref: function ref(identicon) {
                        _this2.identicon = identicon;
                    },
                    className: this.props.className
                });
            }
        }
    ]);
    return Identicon1;
}(_react.Component);
exports.default = Identicon;
Identicon.defaultProps = {
    className: 'identicon'
};
Identicon.propTypes = {
    seed: _propTypes2.default.string.isRequired,
    size: _propTypes2.default.number,
    scale: _propTypes2.default.number,
    color: _propTypes2.default.string,
    bgColor: _propTypes2.default.string,
    spotColor: _propTypes2.default.string
};

},{"react":"21dqq","prop-types":"bJHAP"}],"bJHAP":[function(require,module,exports) {
var ReactIs = require('react-is');
// By explicitly using `prop-types` you are opting into new development behavior.
// http://fb.me/prop-types-in-prod
var throwOnDirectAccess = true;
module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);

},{"react-is":"7EuwB","./factoryWithTypeCheckers":"h0txC"}],"h0txC":[function(require,module,exports) {
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ 'use strict';
var ReactIs = require('react-is');
var assign = require('object-assign');
var ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');
var has = require('./lib/has');
var checkPropTypes = require('./checkPropTypes');
var printWarning = function() {};
printWarning = function(text) {
    var message = 'Warning: ' + text;
    if (typeof console !== 'undefined') console.error(message);
    try {
        // --- Welcome to debugging React ---
        // This error was thrown as a convenience so that you can use this stack
        // to find the callsite that caused this warning to fire.
        throw new Error(message);
    } catch (x) {}
};
function emptyFunctionThatReturnsNull() {
    return null;
}
module.exports = function(isValidElement, throwOnDirectAccess) {
    /* global Symbol */ var ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;
    var FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.
    /**
   * Returns the iterator method function contained on the iterable object.
   *
   * Be sure to invoke the function with the iterable as context:
   *
   *     var iteratorFn = getIteratorFn(myIterable);
   *     if (iteratorFn) {
   *       var iterator = iteratorFn.call(myIterable);
   *       ...
   *     }
   *
   * @param {?object} maybeIterable
   * @return {?function}
   */ function getIteratorFn(maybeIterable) {
        var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);
        if (typeof iteratorFn === 'function') return iteratorFn;
    }
    /**
   * Collection of methods that allow declaration and validation of props that are
   * supplied to React components. Example usage:
   *
   *   var Props = require('ReactPropTypes');
   *   var MyArticle = React.createClass({
   *     propTypes: {
   *       // An optional string prop named "description".
   *       description: Props.string,
   *
   *       // A required enum prop named "category".
   *       category: Props.oneOf(['News','Photos']).isRequired,
   *
   *       // A prop named "dialog" that requires an instance of Dialog.
   *       dialog: Props.instanceOf(Dialog).isRequired
   *     },
   *     render: function() { ... }
   *   });
   *
   * A more formal specification of how these methods are used:
   *
   *   type := array|bool|func|object|number|string|oneOf([...])|instanceOf(...)
   *   decl := ReactPropTypes.{type}(.isRequired)?
   *
   * Each and every declaration produces a function with the same signature. This
   * allows the creation of custom validation functions. For example:
   *
   *  var MyLink = React.createClass({
   *    propTypes: {
   *      // An optional string or URI prop named "href".
   *      href: function(props, propName, componentName) {
   *        var propValue = props[propName];
   *        if (propValue != null && typeof propValue !== 'string' &&
   *            !(propValue instanceof URI)) {
   *          return new Error(
   *            'Expected a string or an URI for ' + propName + ' in ' +
   *            componentName
   *          );
   *        }
   *      }
   *    },
   *    render: function() {...}
   *  });
   *
   * @internal
   */ var ANONYMOUS = '<<anonymous>>';
    // Important!
    // Keep this list in sync with production version in `./factoryWithThrowingShims.js`.
    var ReactPropTypes = {
        array: createPrimitiveTypeChecker('array'),
        bigint: createPrimitiveTypeChecker('bigint'),
        bool: createPrimitiveTypeChecker('boolean'),
        func: createPrimitiveTypeChecker('function'),
        number: createPrimitiveTypeChecker('number'),
        object: createPrimitiveTypeChecker('object'),
        string: createPrimitiveTypeChecker('string'),
        symbol: createPrimitiveTypeChecker('symbol'),
        any: createAnyTypeChecker(),
        arrayOf: createArrayOfTypeChecker,
        element: createElementTypeChecker(),
        elementType: createElementTypeTypeChecker(),
        instanceOf: createInstanceTypeChecker,
        node: createNodeChecker(),
        objectOf: createObjectOfTypeChecker,
        oneOf: createEnumTypeChecker,
        oneOfType: createUnionTypeChecker,
        shape: createShapeTypeChecker,
        exact: createStrictShapeTypeChecker
    };
    /**
   * inlined Object.is polyfill to avoid requiring consumers ship their own
   * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is
   */ /*eslint-disable no-self-compare*/ function is(x, y) {
        // SameValue algorithm
        if (x === y) // Steps 1-5, 7-10
        // Steps 6.b-6.e: +0 != -0
        return x !== 0 || 1 / x === 1 / y;
        else // Step 6.a: NaN == NaN
        return x !== x && y !== y;
    }
    /*eslint-enable no-self-compare*/ /**
   * We use an Error-like object for backward compatibility as people may call
   * PropTypes directly and inspect their output. However, we don't use real
   * Errors anymore. We don't inspect their stack anyway, and creating them
   * is prohibitively expensive if they are created too often, such as what
   * happens in oneOfType() for any type before the one that matched.
   */ function PropTypeError(message, data) {
        this.message = message;
        this.data = data && typeof data === 'object' ? data : {};
        this.stack = '';
    }
    // Make `instanceof Error` still work for returned errors.
    PropTypeError.prototype = Error.prototype;
    function createChainableTypeChecker(validate) {
        var manualPropTypeCallCache = {};
        var manualPropTypeWarningCount = 0;
        function checkType(isRequired, props, propName, componentName, location, propFullName, secret) {
            componentName = componentName || ANONYMOUS;
            propFullName = propFullName || propName;
            if (secret !== ReactPropTypesSecret) {
                if (throwOnDirectAccess) {
                    // New behavior only for users of `prop-types` package
                    var err = new Error("Calling PropTypes validators directly is not supported by the `prop-types` package. Use `PropTypes.checkPropTypes()` to call them. Read more at http://fb.me/use-check-prop-types");
                    err.name = 'Invariant Violation';
                    throw err;
                } else if (typeof console !== 'undefined') {
                    // Old behavior for people using React.PropTypes
                    var cacheKey = componentName + ':' + propName;
                    if (!manualPropTypeCallCache[cacheKey] && // Avoid spamming the console because they are often not actionable except for lib authors
                    manualPropTypeWarningCount < 3) {
                        printWarning("You are manually calling a React.PropTypes validation function for the `" + propFullName + '` prop on `' + componentName + '`. This is deprecated ' + 'and will throw in the standalone `prop-types` package. ' + 'You may be seeing this warning due to a third-party PropTypes ' + 'library. See https://fb.me/react-warning-dont-call-proptypes ' + 'for details.');
                        manualPropTypeCallCache[cacheKey] = true;
                        manualPropTypeWarningCount++;
                    }
                }
            }
            if (props[propName] == null) {
                if (isRequired) {
                    if (props[propName] === null) return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required ' + ('in `' + componentName + '`, but its value is `null`.'));
                    return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required in ' + ('`' + componentName + '`, but its value is `undefined`.'));
                }
                return null;
            } else return validate(props, propName, componentName, location, propFullName);
        }
        var chainedCheckType = checkType.bind(null, false);
        chainedCheckType.isRequired = checkType.bind(null, true);
        return chainedCheckType;
    }
    function createPrimitiveTypeChecker(expectedType) {
        function validate(props, propName, componentName, location, propFullName, secret) {
            var propValue = props[propName];
            var propType = getPropType(propValue);
            if (propType !== expectedType) {
                // `propValue` being instance of, say, date/regexp, pass the 'object'
                // check, but we can offer a more precise error message here rather than
                // 'of type `object`'.
                var preciseType = getPreciseType(propValue);
                return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + preciseType + '` supplied to `' + componentName + '`, expected ') + ('`' + expectedType + '`.'), {
                    expectedType: expectedType
                });
            }
            return null;
        }
        return createChainableTypeChecker(validate);
    }
    function createAnyTypeChecker() {
        return createChainableTypeChecker(emptyFunctionThatReturnsNull);
    }
    function createArrayOfTypeChecker(typeChecker) {
        function validate(props, propName, componentName, location, propFullName) {
            if (typeof typeChecker !== 'function') return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside arrayOf.');
            var propValue = props[propName];
            if (!Array.isArray(propValue)) {
                var propType = getPropType(propValue);
                return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an array.'));
            }
            for(var i = 0; i < propValue.length; i++){
                var error = typeChecker(propValue, i, componentName, location, propFullName + '[' + i + ']', ReactPropTypesSecret);
                if (error instanceof Error) return error;
            }
            return null;
        }
        return createChainableTypeChecker(validate);
    }
    function createElementTypeChecker() {
        function validate(props, propName, componentName, location, propFullName) {
            var propValue = props[propName];
            if (!isValidElement(propValue)) {
                var propType = getPropType(propValue);
                return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement.'));
            }
            return null;
        }
        return createChainableTypeChecker(validate);
    }
    function createElementTypeTypeChecker() {
        function validate(props, propName, componentName, location, propFullName) {
            var propValue = props[propName];
            if (!ReactIs.isValidElementType(propValue)) {
                var propType = getPropType(propValue);
                return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement type.'));
            }
            return null;
        }
        return createChainableTypeChecker(validate);
    }
    function createInstanceTypeChecker(expectedClass) {
        function validate(props, propName, componentName, location, propFullName) {
            if (!(props[propName] instanceof expectedClass)) {
                var expectedClassName = expectedClass.name || ANONYMOUS;
                var actualClassName = getClassName(props[propName]);
                return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + actualClassName + '` supplied to `' + componentName + '`, expected ') + ('instance of `' + expectedClassName + '`.'));
            }
            return null;
        }
        return createChainableTypeChecker(validate);
    }
    function createEnumTypeChecker(expectedValues) {
        if (!Array.isArray(expectedValues)) {
            {
                if (arguments.length > 1) printWarning('Invalid arguments supplied to oneOf, expected an array, got ' + arguments.length + ' arguments. ' + 'A common mistake is to write oneOf(x, y, z) instead of oneOf([x, y, z]).');
                else printWarning('Invalid argument supplied to oneOf, expected an array.');
            }
            return emptyFunctionThatReturnsNull;
        }
        function validate(props, propName, componentName, location, propFullName) {
            var propValue = props[propName];
            for(var i = 0; i < expectedValues.length; i++){
                if (is(propValue, expectedValues[i])) return null;
            }
            var valuesString = JSON.stringify(expectedValues, function replacer(key, value) {
                var type = getPreciseType(value);
                if (type === 'symbol') return String(value);
                return value;
            });
            return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of value `' + String(propValue) + '` ' + ('supplied to `' + componentName + '`, expected one of ' + valuesString + '.'));
        }
        return createChainableTypeChecker(validate);
    }
    function createObjectOfTypeChecker(typeChecker) {
        function validate(props, propName, componentName, location, propFullName) {
            if (typeof typeChecker !== 'function') return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside objectOf.');
            var propValue = props[propName];
            var propType = getPropType(propValue);
            if (propType !== 'object') return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an object.'));
            for(var key in propValue)if (has(propValue, key)) {
                var error = typeChecker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);
                if (error instanceof Error) return error;
            }
            return null;
        }
        return createChainableTypeChecker(validate);
    }
    function createUnionTypeChecker(arrayOfTypeCheckers) {
        if (!Array.isArray(arrayOfTypeCheckers)) {
            printWarning('Invalid argument supplied to oneOfType, expected an instance of array.');
            return emptyFunctionThatReturnsNull;
        }
        for(var i1 = 0; i1 < arrayOfTypeCheckers.length; i1++){
            var checker = arrayOfTypeCheckers[i1];
            if (typeof checker !== 'function') {
                printWarning("Invalid argument supplied to oneOfType. Expected an array of check functions, but received " + getPostfixForTypeWarning(checker) + ' at index ' + i1 + '.');
                return emptyFunctionThatReturnsNull;
            }
        }
        function validate(props, propName, componentName, location, propFullName) {
            var expectedTypes = [];
            for(var i = 0; i < arrayOfTypeCheckers.length; i++){
                var checker = arrayOfTypeCheckers[i];
                var checkerResult = checker(props, propName, componentName, location, propFullName, ReactPropTypesSecret);
                if (checkerResult == null) return null;
                if (checkerResult.data && has(checkerResult.data, 'expectedType')) expectedTypes.push(checkerResult.data.expectedType);
            }
            var expectedTypesMessage = expectedTypes.length > 0 ? ', expected one of type [' + expectedTypes.join(', ') + ']' : '';
            return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`' + expectedTypesMessage + '.'));
        }
        return createChainableTypeChecker(validate);
    }
    function createNodeChecker() {
        function validate(props, propName, componentName, location, propFullName) {
            if (!isNode(props[propName])) return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`, expected a ReactNode.'));
            return null;
        }
        return createChainableTypeChecker(validate);
    }
    function invalidValidatorError(componentName, location, propFullName, key, type) {
        return new PropTypeError((componentName || 'React class') + ': ' + location + ' type `' + propFullName + '.' + key + '` is invalid; ' + 'it must be a function, usually from the `prop-types` package, but received `' + type + '`.');
    }
    function createShapeTypeChecker(shapeTypes) {
        function validate(props, propName, componentName, location, propFullName) {
            var propValue = props[propName];
            var propType = getPropType(propValue);
            if (propType !== 'object') return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));
            for(var key in shapeTypes){
                var checker = shapeTypes[key];
                if (typeof checker !== 'function') return invalidValidatorError(componentName, location, propFullName, key, getPreciseType(checker));
                var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);
                if (error) return error;
            }
            return null;
        }
        return createChainableTypeChecker(validate);
    }
    function createStrictShapeTypeChecker(shapeTypes) {
        function validate(props, propName, componentName, location, propFullName) {
            var propValue = props[propName];
            var propType = getPropType(propValue);
            if (propType !== 'object') return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));
            // We need to check all keys in case some are required but missing from props.
            var allKeys = assign({}, props[propName], shapeTypes);
            for(var key in allKeys){
                var checker = shapeTypes[key];
                if (has(shapeTypes, key) && typeof checker !== 'function') return invalidValidatorError(componentName, location, propFullName, key, getPreciseType(checker));
                if (!checker) return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` key `' + key + '` supplied to `' + componentName + '`.' + '\nBad object: ' + JSON.stringify(props[propName], null, '  ') + '\nValid keys: ' + JSON.stringify(Object.keys(shapeTypes), null, '  '));
                var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);
                if (error) return error;
            }
            return null;
        }
        return createChainableTypeChecker(validate);
    }
    function isNode(propValue) {
        switch(typeof propValue){
            case 'number':
            case 'string':
            case 'undefined':
                return true;
            case 'boolean':
                return !propValue;
            case 'object':
                if (Array.isArray(propValue)) return propValue.every(isNode);
                if (propValue === null || isValidElement(propValue)) return true;
                var iteratorFn = getIteratorFn(propValue);
                if (iteratorFn) {
                    var iterator = iteratorFn.call(propValue);
                    var step;
                    if (iteratorFn !== propValue.entries) while(!(step = iterator.next()).done){
                        if (!isNode(step.value)) return false;
                    }
                    else // Iterator will provide entry [k,v] tuples rather than values.
                    while(!(step = iterator.next()).done){
                        var entry = step.value;
                        if (entry) {
                            if (!isNode(entry[1])) return false;
                        }
                    }
                } else return false;
                return true;
            default:
                return false;
        }
    }
    function isSymbol(propType, propValue) {
        // Native Symbol.
        if (propType === 'symbol') return true;
        // falsy value can't be a Symbol
        if (!propValue) return false;
        // 19.4.3.5 Symbol.prototype[@@toStringTag] === 'Symbol'
        if (propValue['@@toStringTag'] === 'Symbol') return true;
        // Fallback for non-spec compliant Symbols which are polyfilled.
        if (typeof Symbol === 'function' && propValue instanceof Symbol) return true;
        return false;
    }
    // Equivalent of `typeof` but with special handling for array and regexp.
    function getPropType(propValue) {
        var propType = typeof propValue;
        if (Array.isArray(propValue)) return 'array';
        if (propValue instanceof RegExp) // Old webkits (at least until Android 4.0) return 'function' rather than
        // 'object' for typeof a RegExp. We'll normalize this here so that /bla/
        // passes PropTypes.object.
        return 'object';
        if (isSymbol(propType, propValue)) return 'symbol';
        return propType;
    }
    // This handles more types than `getPropType`. Only used for error messages.
    // See `createPrimitiveTypeChecker`.
    function getPreciseType(propValue) {
        if (typeof propValue === 'undefined' || propValue === null) return '' + propValue;
        var propType = getPropType(propValue);
        if (propType === 'object') {
            if (propValue instanceof Date) return 'date';
            else if (propValue instanceof RegExp) return 'regexp';
        }
        return propType;
    }
    // Returns a string that is postfixed to a warning about an invalid type.
    // For example, "undefined" or "of type array"
    function getPostfixForTypeWarning(value) {
        var type = getPreciseType(value);
        switch(type){
            case 'array':
            case 'object':
                return 'an ' + type;
            case 'boolean':
            case 'date':
            case 'regexp':
                return 'a ' + type;
            default:
                return type;
        }
    }
    // Returns class name of the object, if any.
    function getClassName(propValue) {
        if (!propValue.constructor || !propValue.constructor.name) return ANONYMOUS;
        return propValue.constructor.name;
    }
    ReactPropTypes.checkPropTypes = checkPropTypes;
    ReactPropTypes.resetWarningCache = checkPropTypes.resetWarningCache;
    ReactPropTypes.PropTypes = ReactPropTypes;
    return ReactPropTypes;
};

},{"react-is":"7EuwB","object-assign":"7OXxh","./lib/ReactPropTypesSecret":"9r67q","./lib/has":"k0f9L","./checkPropTypes":"93Sn8"}],"9r67q":[function(require,module,exports) {
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ 'use strict';
var ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';
module.exports = ReactPropTypesSecret;

},{}],"k0f9L":[function(require,module,exports) {
module.exports = Function.call.bind(Object.prototype.hasOwnProperty);

},{}],"93Sn8":[function(require,module,exports) {
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ 'use strict';
var printWarning = function() {};
var ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');
var loggedTypeFailures = {};
var has = require('./lib/has');
printWarning = function(text) {
    var message = 'Warning: ' + text;
    if (typeof console !== 'undefined') console.error(message);
    try {
        // --- Welcome to debugging React ---
        // This error was thrown as a convenience so that you can use this stack
        // to find the callsite that caused this warning to fire.
        throw new Error(message);
    } catch (x) {}
};
/**
 * Assert that the values match with the type specs.
 * Error messages are memorized and will only be shown once.
 *
 * @param {object} typeSpecs Map of name to a ReactPropType
 * @param {object} values Runtime values that need to be type-checked
 * @param {string} location e.g. "prop", "context", "child context"
 * @param {string} componentName Name of the component for error messages.
 * @param {?Function} getStack Returns the component stack.
 * @private
 */ function checkPropTypes(typeSpecs, values, location, componentName, getStack) {
    for(var typeSpecName in typeSpecs)if (has(typeSpecs, typeSpecName)) {
        var error;
        // Prop type validation may throw. In case they do, we don't want to
        // fail the render phase where it didn't fail before. So we log it.
        // After these have been cleaned up, we'll let them throw.
        try {
            // This is intentionally an invariant that gets caught. It's the same
            // behavior as without this statement except with a better message.
            if (typeof typeSpecs[typeSpecName] !== 'function') {
                var err = Error((componentName || 'React class') + ': ' + location + ' type `' + typeSpecName + '` is invalid; ' + 'it must be a function, usually from the `prop-types` package, but received `' + typeof typeSpecs[typeSpecName] + '`.' + 'This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.');
                err.name = 'Invariant Violation';
                throw err;
            }
            error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret);
        } catch (ex) {
            error = ex;
        }
        if (error && !(error instanceof Error)) printWarning((componentName || 'React class') + ': type specification of ' + location + ' `' + typeSpecName + '` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a ' + typeof error + '. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).');
        if (error instanceof Error && !(error.message in loggedTypeFailures)) {
            // Only monitor this failure once because there tends to be a lot of the
            // same error.
            loggedTypeFailures[error.message] = true;
            var stack = getStack ? getStack() : '';
            printWarning('Failed ' + location + ' type: ' + error.message + (stack != null ? stack : ''));
        }
    }
}
/**
 * Resets warning cache when testing.
 *
 * @private
 */ checkPropTypes.resetWarningCache = function() {
    loggedTypeFailures = {};
};
module.exports = checkPropTypes;

},{"./lib/ReactPropTypesSecret":"9r67q","./lib/has":"k0f9L"}],"jc5In":[function(require,module,exports) {
"use strict";
var __importDefault = this && this.__importDefault || function(mod) {
    return mod && mod.__esModule ? mod : {
        "default": mod
    };
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
const color_1 = __importDefault(require("color"));
const mersenne_twister_1 = __importDefault(require("mersenne-twister"));
const react_1 = __importDefault(require("react"));
const colors = [
    '#01888C',
    '#FC7500',
    '#034F5D',
    '#F73F01',
    '#FC1960',
    '#C7144C',
    '#F3C100',
    '#1598F2',
    '#2465E1',
    '#F19E02'
];
const wobble = 30;
const shapeCount = 3;
const styles = {
    container: {
        overflow: 'hidden'
    }
};
function Jazzicon({ address , size  }) {
    const seed = parseInt(address.slice(2, 10), 16);
    const generator = new mersenne_twister_1.default(seed);
    const amount = generator.random() * 30 - wobble / 2;
    const localColors = colors.map((hex)=>new color_1.default(hex).rotate(amount).hex()
    );
    const randomColor = ()=>{
        // carlos: This is necessary because the @metamask/jazzicon implementation includes
        // this mistake, which affects determinism.
        const _rand = generator.random();
        const idx = Math.floor(localColors.length * generator.random());
        return localColors.splice(idx, 1)[0];
    };
    const backgroundColor = randomColor();
    const shapes = Array(shapeCount).fill(0).map((_, index)=>{
        const center = size / 2;
        const firstRot = generator.random();
        const angle = Math.PI * 2 * firstRot;
        const velocity = size / shapeCount * generator.random() + index * size / shapeCount;
        const tx = Math.cos(angle) * velocity;
        const ty = Math.sin(angle) * velocity;
        const secondRot = generator.random();
        const rot = firstRot * 360 + secondRot * 180;
        const fill = randomColor();
        return react_1.default.createElement("rect", {
            key: `shape_${index}`,
            x: 0,
            y: 0,
            width: size,
            height: size,
            fill: fill,
            transform: `translate(${tx} ${ty}) rotate(${rot.toFixed(1)} ${center} ${center})`
        });
    });
    return react_1.default.createElement("div", {
        style: Object.assign(Object.assign({}, styles.container), {
            width: size,
            height: size,
            backgroundColor,
            borderRadius: size / 2
        })
    }, react_1.default.createElement("svg", {
        width: `${size}px`,
        height: `${size}px`
    }, shapes));
}
exports.default = Jazzicon;

},{"color":"gW2oi","mersenne-twister":"5yLHH","react":"21dqq"}],"gW2oi":[function(require,module,exports) {
'use strict';
var colorString = require('color-string');
var convert = require('color-convert');
var _slice = [].slice;
var skippedModels = [
    // to be honest, I don't really feel like keyword belongs in color convert, but eh.
    'keyword',
    // gray conflicts with some method names, and has its own method defined.
    'gray',
    // shouldn't really be in color-convert either...
    'hex'
];
var hashedModelKeys = {};
Object.keys(convert).forEach(function(model) {
    hashedModelKeys[_slice.call(convert[model].labels).sort().join('')] = model;
});
var limiters = {};
function Color(obj, model) {
    if (!(this instanceof Color)) return new Color(obj, model);
    if (model && model in skippedModels) model = null;
    if (model && !(model in convert)) throw new Error('Unknown model: ' + model);
    var i;
    var channels;
    if (obj == null) {
        this.model = 'rgb';
        this.color = [
            0,
            0,
            0
        ];
        this.valpha = 1;
    } else if (obj instanceof Color) {
        this.model = obj.model;
        this.color = obj.color.slice();
        this.valpha = obj.valpha;
    } else if (typeof obj === 'string') {
        var result = colorString.get(obj);
        if (result === null) throw new Error('Unable to parse color from string: ' + obj);
        this.model = result.model;
        channels = convert[this.model].channels;
        this.color = result.value.slice(0, channels);
        this.valpha = typeof result.value[channels] === 'number' ? result.value[channels] : 1;
    } else if (obj.length) {
        this.model = model || 'rgb';
        channels = convert[this.model].channels;
        var newArr = _slice.call(obj, 0, channels);
        this.color = zeroArray(newArr, channels);
        this.valpha = typeof obj[channels] === 'number' ? obj[channels] : 1;
    } else if (typeof obj === 'number') {
        // this is always RGB - can be converted later on.
        obj &= 0xFFFFFF;
        this.model = 'rgb';
        this.color = [
            obj >> 16 & 0xFF,
            obj >> 8 & 0xFF,
            obj & 0xFF
        ];
        this.valpha = 1;
    } else {
        this.valpha = 1;
        var keys = Object.keys(obj);
        if ('alpha' in obj) {
            keys.splice(keys.indexOf('alpha'), 1);
            this.valpha = typeof obj.alpha === 'number' ? obj.alpha : 0;
        }
        var hashedKeys = keys.sort().join('');
        if (!(hashedKeys in hashedModelKeys)) throw new Error('Unable to parse color from object: ' + JSON.stringify(obj));
        this.model = hashedModelKeys[hashedKeys];
        var labels = convert[this.model].labels;
        var color = [];
        for(i = 0; i < labels.length; i++)color.push(obj[labels[i]]);
        this.color = zeroArray(color);
    }
    // perform limitations (clamping, etc.)
    if (limiters[this.model]) {
        channels = convert[this.model].channels;
        for(i = 0; i < channels; i++){
            var limit = limiters[this.model][i];
            if (limit) this.color[i] = limit(this.color[i]);
        }
    }
    this.valpha = Math.max(0, Math.min(1, this.valpha));
    if (Object.freeze) Object.freeze(this);
}
Color.prototype = {
    toString: function() {
        return this.string();
    },
    toJSON: function() {
        return this[this.model]();
    },
    string: function(places) {
        var self = this.model in colorString.to ? this : this.rgb();
        self = self.round(typeof places === 'number' ? places : 1);
        var args = self.valpha === 1 ? self.color : self.color.concat(this.valpha);
        return colorString.to[self.model](args);
    },
    percentString: function(places) {
        var self = this.rgb().round(typeof places === 'number' ? places : 1);
        var args = self.valpha === 1 ? self.color : self.color.concat(this.valpha);
        return colorString.to.rgb.percent(args);
    },
    array: function() {
        return this.valpha === 1 ? this.color.slice() : this.color.concat(this.valpha);
    },
    object: function() {
        var result = {};
        var channels = convert[this.model].channels;
        var labels = convert[this.model].labels;
        for(var i = 0; i < channels; i++)result[labels[i]] = this.color[i];
        if (this.valpha !== 1) result.alpha = this.valpha;
        return result;
    },
    unitArray: function() {
        var rgb = this.rgb().color;
        rgb[0] /= 255;
        rgb[1] /= 255;
        rgb[2] /= 255;
        if (this.valpha !== 1) rgb.push(this.valpha);
        return rgb;
    },
    unitObject: function() {
        var rgb = this.rgb().object();
        rgb.r /= 255;
        rgb.g /= 255;
        rgb.b /= 255;
        if (this.valpha !== 1) rgb.alpha = this.valpha;
        return rgb;
    },
    round: function(places) {
        places = Math.max(places || 0, 0);
        return new Color(this.color.map(roundToPlace(places)).concat(this.valpha), this.model);
    },
    alpha: function(val) {
        if (arguments.length) return new Color(this.color.concat(Math.max(0, Math.min(1, val))), this.model);
        return this.valpha;
    },
    // rgb
    red: getset('rgb', 0, maxfn(255)),
    green: getset('rgb', 1, maxfn(255)),
    blue: getset('rgb', 2, maxfn(255)),
    hue: getset([
        'hsl',
        'hsv',
        'hsl',
        'hwb',
        'hcg'
    ], 0, function(val) {
        return (val % 360 + 360) % 360;
    }),
    saturationl: getset('hsl', 1, maxfn(100)),
    lightness: getset('hsl', 2, maxfn(100)),
    saturationv: getset('hsv', 1, maxfn(100)),
    value: getset('hsv', 2, maxfn(100)),
    chroma: getset('hcg', 1, maxfn(100)),
    gray: getset('hcg', 2, maxfn(100)),
    white: getset('hwb', 1, maxfn(100)),
    wblack: getset('hwb', 2, maxfn(100)),
    cyan: getset('cmyk', 0, maxfn(100)),
    magenta: getset('cmyk', 1, maxfn(100)),
    yellow: getset('cmyk', 2, maxfn(100)),
    black: getset('cmyk', 3, maxfn(100)),
    x: getset('xyz', 0, maxfn(100)),
    y: getset('xyz', 1, maxfn(100)),
    z: getset('xyz', 2, maxfn(100)),
    l: getset('lab', 0, maxfn(100)),
    a: getset('lab', 1),
    b: getset('lab', 2),
    keyword: function(val) {
        if (arguments.length) return new Color(val);
        return convert[this.model].keyword(this.color);
    },
    hex: function(val) {
        if (arguments.length) return new Color(val);
        return colorString.to.hex(this.rgb().round().color);
    },
    rgbNumber: function() {
        var rgb = this.rgb().color;
        return (rgb[0] & 0xFF) << 16 | (rgb[1] & 0xFF) << 8 | rgb[2] & 0xFF;
    },
    luminosity: function() {
        // http://www.w3.org/TR/WCAG20/#relativeluminancedef
        var rgb = this.rgb().color;
        var lum = [];
        for(var i = 0; i < rgb.length; i++){
            var chan = rgb[i] / 255;
            lum[i] = chan <= 0.03928 ? chan / 12.92 : Math.pow((chan + 0.055) / 1.055, 2.4);
        }
        return 0.2126 * lum[0] + 0.7152 * lum[1] + 0.0722 * lum[2];
    },
    contrast: function(color2) {
        // http://www.w3.org/TR/WCAG20/#contrast-ratiodef
        var lum1 = this.luminosity();
        var lum2 = color2.luminosity();
        if (lum1 > lum2) return (lum1 + 0.05) / (lum2 + 0.05);
        return (lum2 + 0.05) / (lum1 + 0.05);
    },
    level: function(color2) {
        var contrastRatio = this.contrast(color2);
        if (contrastRatio >= 7.1) return 'AAA';
        return contrastRatio >= 4.5 ? 'AA' : '';
    },
    isDark: function() {
        // YIQ equation from http://24ways.org/2010/calculating-color-contrast
        var rgb = this.rgb().color;
        var yiq = (rgb[0] * 299 + rgb[1] * 587 + rgb[2] * 114) / 1000;
        return yiq < 128;
    },
    isLight: function() {
        return !this.isDark();
    },
    negate: function() {
        var rgb = this.rgb();
        for(var i = 0; i < 3; i++)rgb.color[i] = 255 - rgb.color[i];
        return rgb;
    },
    lighten: function(ratio) {
        var hsl = this.hsl();
        hsl.color[2] += hsl.color[2] * ratio;
        return hsl;
    },
    darken: function(ratio) {
        var hsl = this.hsl();
        hsl.color[2] -= hsl.color[2] * ratio;
        return hsl;
    },
    saturate: function(ratio) {
        var hsl = this.hsl();
        hsl.color[1] += hsl.color[1] * ratio;
        return hsl;
    },
    desaturate: function(ratio) {
        var hsl = this.hsl();
        hsl.color[1] -= hsl.color[1] * ratio;
        return hsl;
    },
    whiten: function(ratio) {
        var hwb = this.hwb();
        hwb.color[1] += hwb.color[1] * ratio;
        return hwb;
    },
    blacken: function(ratio) {
        var hwb = this.hwb();
        hwb.color[2] += hwb.color[2] * ratio;
        return hwb;
    },
    grayscale: function() {
        // http://en.wikipedia.org/wiki/Grayscale#Converting_color_to_grayscale
        var rgb = this.rgb().color;
        var val = rgb[0] * 0.3 + rgb[1] * 0.59 + rgb[2] * 0.11;
        return Color.rgb(val, val, val);
    },
    fade: function(ratio) {
        return this.alpha(this.valpha - this.valpha * ratio);
    },
    opaquer: function(ratio) {
        return this.alpha(this.valpha + this.valpha * ratio);
    },
    rotate: function(degrees) {
        var hsl = this.hsl();
        var hue = hsl.color[0];
        hue = (hue + degrees) % 360;
        hue = hue < 0 ? 360 + hue : hue;
        hsl.color[0] = hue;
        return hsl;
    },
    mix: function(mixinColor, weight) {
        // ported from sass implementation in C
        // https://github.com/sass/libsass/blob/0e6b4a2850092356aa3ece07c6b249f0221caced/functions.cpp#L209
        if (!mixinColor || !mixinColor.rgb) throw new Error('Argument to "mix" was not a Color instance, but rather an instance of ' + typeof mixinColor);
        var color1 = mixinColor.rgb();
        var color2 = this.rgb();
        var p = weight === undefined ? 0.5 : weight;
        var w = 2 * p - 1;
        var a = color1.alpha() - color2.alpha();
        var w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;
        var w2 = 1 - w1;
        return Color.rgb(w1 * color1.red() + w2 * color2.red(), w1 * color1.green() + w2 * color2.green(), w1 * color1.blue() + w2 * color2.blue(), color1.alpha() * p + color2.alpha() * (1 - p));
    }
};
// model conversion methods and static constructors
Object.keys(convert).forEach(function(model) {
    if (skippedModels.indexOf(model) !== -1) return;
    var channels = convert[model].channels;
    // conversion methods
    Color.prototype[model] = function() {
        if (this.model === model) return new Color(this);
        if (arguments.length) return new Color(arguments, model);
        var newAlpha = typeof arguments[channels] === 'number' ? channels : this.valpha;
        return new Color(assertArray(convert[this.model][model].raw(this.color)).concat(newAlpha), model);
    };
    // 'static' construction methods
    Color[model] = function(color) {
        if (typeof color === 'number') color = zeroArray(_slice.call(arguments), channels);
        return new Color(color, model);
    };
});
function roundTo(num, places) {
    return Number(num.toFixed(places));
}
function roundToPlace(places) {
    return function(num) {
        return roundTo(num, places);
    };
}
function getset(model, channel, modifier) {
    model = Array.isArray(model) ? model : [
        model
    ];
    model.forEach(function(m) {
        (limiters[m] || (limiters[m] = []))[channel] = modifier;
    });
    model = model[0];
    return function(val) {
        var result;
        if (arguments.length) {
            if (modifier) val = modifier(val);
            result = this[model]();
            result.color[channel] = val;
            return result;
        }
        result = this[model]().color[channel];
        if (modifier) result = modifier(result);
        return result;
    };
}
function maxfn(max) {
    return function(v) {
        return Math.max(0, Math.min(max, v));
    };
}
function assertArray(val) {
    return Array.isArray(val) ? val : [
        val
    ];
}
function zeroArray(arr, length) {
    for(var i = 0; i < length; i++)if (typeof arr[i] !== 'number') arr[i] = 0;
    return arr;
}
module.exports = Color;

},{"color-string":"d9oJb","color-convert":"bvUlS"}],"d9oJb":[function(require,module,exports) {
/* MIT license */ var colorNames = require('color-name');
var swizzle = require('simple-swizzle');
var hasOwnProperty = Object.hasOwnProperty;
var reverseNames = {};
// create a list of reverse color names
for(var name in colorNames)if (hasOwnProperty.call(colorNames, name)) reverseNames[colorNames[name]] = name;
var cs = module.exports = {
    to: {},
    get: {}
};
cs.get = function(string) {
    var prefix = string.substring(0, 3).toLowerCase();
    var val;
    var model;
    switch(prefix){
        case 'hsl':
            val = cs.get.hsl(string);
            model = 'hsl';
            break;
        case 'hwb':
            val = cs.get.hwb(string);
            model = 'hwb';
            break;
        default:
            val = cs.get.rgb(string);
            model = 'rgb';
            break;
    }
    if (!val) return null;
    return {
        model: model,
        value: val
    };
};
cs.get.rgb = function(string) {
    if (!string) return null;
    var abbr = /^#([a-f0-9]{3,4})$/i;
    var hex = /^#([a-f0-9]{6})([a-f0-9]{2})?$/i;
    var rgba = /^rgba?\(\s*([+-]?\d+)(?=[\s,])\s*(?:,\s*)?([+-]?\d+)(?=[\s,])\s*(?:,\s*)?([+-]?\d+)\s*(?:[,|\/]\s*([+-]?[\d\.]+)(%?)\s*)?\)$/;
    var per = /^rgba?\(\s*([+-]?[\d\.]+)\%\s*,?\s*([+-]?[\d\.]+)\%\s*,?\s*([+-]?[\d\.]+)\%\s*(?:[,|\/]\s*([+-]?[\d\.]+)(%?)\s*)?\)$/;
    var keyword = /^(\w+)$/;
    var rgb = [
        0,
        0,
        0,
        1
    ];
    var match;
    var i;
    var hexAlpha;
    if (match = string.match(hex)) {
        hexAlpha = match[2];
        match = match[1];
        for(i = 0; i < 3; i++){
            // https://jsperf.com/slice-vs-substr-vs-substring-methods-long-string/19
            var i2 = i * 2;
            rgb[i] = parseInt(match.slice(i2, i2 + 2), 16);
        }
        if (hexAlpha) rgb[3] = parseInt(hexAlpha, 16) / 255;
    } else if (match = string.match(abbr)) {
        match = match[1];
        hexAlpha = match[3];
        for(i = 0; i < 3; i++)rgb[i] = parseInt(match[i] + match[i], 16);
        if (hexAlpha) rgb[3] = parseInt(hexAlpha + hexAlpha, 16) / 255;
    } else if (match = string.match(rgba)) {
        for(i = 0; i < 3; i++)rgb[i] = parseInt(match[i + 1], 0);
        if (match[4]) {
            if (match[5]) rgb[3] = parseFloat(match[4]) * 0.01;
            else rgb[3] = parseFloat(match[4]);
        }
    } else if (match = string.match(per)) {
        for(i = 0; i < 3; i++)rgb[i] = Math.round(parseFloat(match[i + 1]) * 2.55);
        if (match[4]) {
            if (match[5]) rgb[3] = parseFloat(match[4]) * 0.01;
            else rgb[3] = parseFloat(match[4]);
        }
    } else if (match = string.match(keyword)) {
        if (match[1] === 'transparent') return [
            0,
            0,
            0,
            0
        ];
        if (!hasOwnProperty.call(colorNames, match[1])) return null;
        rgb = colorNames[match[1]];
        rgb[3] = 1;
        return rgb;
    } else return null;
    for(i = 0; i < 3; i++)rgb[i] = clamp(rgb[i], 0, 255);
    rgb[3] = clamp(rgb[3], 0, 1);
    return rgb;
};
cs.get.hsl = function(string) {
    if (!string) return null;
    var hsl = /^hsla?\(\s*([+-]?(?:\d{0,3}\.)?\d+)(?:deg)?\s*,?\s*([+-]?[\d\.]+)%\s*,?\s*([+-]?[\d\.]+)%\s*(?:[,|\/]\s*([+-]?(?=\.\d|\d)(?:0|[1-9]\d*)?(?:\.\d*)?(?:[eE][+-]?\d+)?)\s*)?\)$/;
    var match = string.match(hsl);
    if (match) {
        var alpha = parseFloat(match[4]);
        var h = (parseFloat(match[1]) % 360 + 360) % 360;
        var s = clamp(parseFloat(match[2]), 0, 100);
        var l = clamp(parseFloat(match[3]), 0, 100);
        var a = clamp(isNaN(alpha) ? 1 : alpha, 0, 1);
        return [
            h,
            s,
            l,
            a
        ];
    }
    return null;
};
cs.get.hwb = function(string) {
    if (!string) return null;
    var hwb = /^hwb\(\s*([+-]?\d{0,3}(?:\.\d+)?)(?:deg)?\s*,\s*([+-]?[\d\.]+)%\s*,\s*([+-]?[\d\.]+)%\s*(?:,\s*([+-]?(?=\.\d|\d)(?:0|[1-9]\d*)?(?:\.\d*)?(?:[eE][+-]?\d+)?)\s*)?\)$/;
    var match = string.match(hwb);
    if (match) {
        var alpha = parseFloat(match[4]);
        var h = (parseFloat(match[1]) % 360 + 360) % 360;
        var w = clamp(parseFloat(match[2]), 0, 100);
        var b = clamp(parseFloat(match[3]), 0, 100);
        var a = clamp(isNaN(alpha) ? 1 : alpha, 0, 1);
        return [
            h,
            w,
            b,
            a
        ];
    }
    return null;
};
cs.to.hex = function() {
    var rgba = swizzle(arguments);
    return '#' + hexDouble(rgba[0]) + hexDouble(rgba[1]) + hexDouble(rgba[2]) + (rgba[3] < 1 ? hexDouble(Math.round(rgba[3] * 255)) : '');
};
cs.to.rgb = function() {
    var rgba = swizzle(arguments);
    return rgba.length < 4 || rgba[3] === 1 ? 'rgb(' + Math.round(rgba[0]) + ', ' + Math.round(rgba[1]) + ', ' + Math.round(rgba[2]) + ')' : 'rgba(' + Math.round(rgba[0]) + ', ' + Math.round(rgba[1]) + ', ' + Math.round(rgba[2]) + ', ' + rgba[3] + ')';
};
cs.to.rgb.percent = function() {
    var rgba = swizzle(arguments);
    var r = Math.round(rgba[0] / 255 * 100);
    var g = Math.round(rgba[1] / 255 * 100);
    var b = Math.round(rgba[2] / 255 * 100);
    return rgba.length < 4 || rgba[3] === 1 ? 'rgb(' + r + '%, ' + g + '%, ' + b + '%)' : 'rgba(' + r + '%, ' + g + '%, ' + b + '%, ' + rgba[3] + ')';
};
cs.to.hsl = function() {
    var hsla = swizzle(arguments);
    return hsla.length < 4 || hsla[3] === 1 ? 'hsl(' + hsla[0] + ', ' + hsla[1] + '%, ' + hsla[2] + '%)' : 'hsla(' + hsla[0] + ', ' + hsla[1] + '%, ' + hsla[2] + '%, ' + hsla[3] + ')';
};
// hwb is a bit different than rgb(a) & hsl(a) since there is no alpha specific syntax
// (hwb have alpha optional & 1 is default value)
cs.to.hwb = function() {
    var hwba = swizzle(arguments);
    var a = '';
    if (hwba.length >= 4 && hwba[3] !== 1) a = ', ' + hwba[3];
    return 'hwb(' + hwba[0] + ', ' + hwba[1] + '%, ' + hwba[2] + '%' + a + ')';
};
cs.to.keyword = function(rgb) {
    return reverseNames[rgb.slice(0, 3)];
};
// helpers
function clamp(num, min, max) {
    return Math.min(Math.max(min, num), max);
}
function hexDouble(num) {
    var str = Math.round(num).toString(16).toUpperCase();
    return str.length < 2 ? '0' + str : str;
}

},{"color-name":"8NNt4","simple-swizzle":"1jxJ4"}],"8NNt4":[function(require,module,exports) {
'use strict';
module.exports = {
    "aliceblue": [
        240,
        248,
        255
    ],
    "antiquewhite": [
        250,
        235,
        215
    ],
    "aqua": [
        0,
        255,
        255
    ],
    "aquamarine": [
        127,
        255,
        212
    ],
    "azure": [
        240,
        255,
        255
    ],
    "beige": [
        245,
        245,
        220
    ],
    "bisque": [
        255,
        228,
        196
    ],
    "black": [
        0,
        0,
        0
    ],
    "blanchedalmond": [
        255,
        235,
        205
    ],
    "blue": [
        0,
        0,
        255
    ],
    "blueviolet": [
        138,
        43,
        226
    ],
    "brown": [
        165,
        42,
        42
    ],
    "burlywood": [
        222,
        184,
        135
    ],
    "cadetblue": [
        95,
        158,
        160
    ],
    "chartreuse": [
        127,
        255,
        0
    ],
    "chocolate": [
        210,
        105,
        30
    ],
    "coral": [
        255,
        127,
        80
    ],
    "cornflowerblue": [
        100,
        149,
        237
    ],
    "cornsilk": [
        255,
        248,
        220
    ],
    "crimson": [
        220,
        20,
        60
    ],
    "cyan": [
        0,
        255,
        255
    ],
    "darkblue": [
        0,
        0,
        139
    ],
    "darkcyan": [
        0,
        139,
        139
    ],
    "darkgoldenrod": [
        184,
        134,
        11
    ],
    "darkgray": [
        169,
        169,
        169
    ],
    "darkgreen": [
        0,
        100,
        0
    ],
    "darkgrey": [
        169,
        169,
        169
    ],
    "darkkhaki": [
        189,
        183,
        107
    ],
    "darkmagenta": [
        139,
        0,
        139
    ],
    "darkolivegreen": [
        85,
        107,
        47
    ],
    "darkorange": [
        255,
        140,
        0
    ],
    "darkorchid": [
        153,
        50,
        204
    ],
    "darkred": [
        139,
        0,
        0
    ],
    "darksalmon": [
        233,
        150,
        122
    ],
    "darkseagreen": [
        143,
        188,
        143
    ],
    "darkslateblue": [
        72,
        61,
        139
    ],
    "darkslategray": [
        47,
        79,
        79
    ],
    "darkslategrey": [
        47,
        79,
        79
    ],
    "darkturquoise": [
        0,
        206,
        209
    ],
    "darkviolet": [
        148,
        0,
        211
    ],
    "deeppink": [
        255,
        20,
        147
    ],
    "deepskyblue": [
        0,
        191,
        255
    ],
    "dimgray": [
        105,
        105,
        105
    ],
    "dimgrey": [
        105,
        105,
        105
    ],
    "dodgerblue": [
        30,
        144,
        255
    ],
    "firebrick": [
        178,
        34,
        34
    ],
    "floralwhite": [
        255,
        250,
        240
    ],
    "forestgreen": [
        34,
        139,
        34
    ],
    "fuchsia": [
        255,
        0,
        255
    ],
    "gainsboro": [
        220,
        220,
        220
    ],
    "ghostwhite": [
        248,
        248,
        255
    ],
    "gold": [
        255,
        215,
        0
    ],
    "goldenrod": [
        218,
        165,
        32
    ],
    "gray": [
        128,
        128,
        128
    ],
    "green": [
        0,
        128,
        0
    ],
    "greenyellow": [
        173,
        255,
        47
    ],
    "grey": [
        128,
        128,
        128
    ],
    "honeydew": [
        240,
        255,
        240
    ],
    "hotpink": [
        255,
        105,
        180
    ],
    "indianred": [
        205,
        92,
        92
    ],
    "indigo": [
        75,
        0,
        130
    ],
    "ivory": [
        255,
        255,
        240
    ],
    "khaki": [
        240,
        230,
        140
    ],
    "lavender": [
        230,
        230,
        250
    ],
    "lavenderblush": [
        255,
        240,
        245
    ],
    "lawngreen": [
        124,
        252,
        0
    ],
    "lemonchiffon": [
        255,
        250,
        205
    ],
    "lightblue": [
        173,
        216,
        230
    ],
    "lightcoral": [
        240,
        128,
        128
    ],
    "lightcyan": [
        224,
        255,
        255
    ],
    "lightgoldenrodyellow": [
        250,
        250,
        210
    ],
    "lightgray": [
        211,
        211,
        211
    ],
    "lightgreen": [
        144,
        238,
        144
    ],
    "lightgrey": [
        211,
        211,
        211
    ],
    "lightpink": [
        255,
        182,
        193
    ],
    "lightsalmon": [
        255,
        160,
        122
    ],
    "lightseagreen": [
        32,
        178,
        170
    ],
    "lightskyblue": [
        135,
        206,
        250
    ],
    "lightslategray": [
        119,
        136,
        153
    ],
    "lightslategrey": [
        119,
        136,
        153
    ],
    "lightsteelblue": [
        176,
        196,
        222
    ],
    "lightyellow": [
        255,
        255,
        224
    ],
    "lime": [
        0,
        255,
        0
    ],
    "limegreen": [
        50,
        205,
        50
    ],
    "linen": [
        250,
        240,
        230
    ],
    "magenta": [
        255,
        0,
        255
    ],
    "maroon": [
        128,
        0,
        0
    ],
    "mediumaquamarine": [
        102,
        205,
        170
    ],
    "mediumblue": [
        0,
        0,
        205
    ],
    "mediumorchid": [
        186,
        85,
        211
    ],
    "mediumpurple": [
        147,
        112,
        219
    ],
    "mediumseagreen": [
        60,
        179,
        113
    ],
    "mediumslateblue": [
        123,
        104,
        238
    ],
    "mediumspringgreen": [
        0,
        250,
        154
    ],
    "mediumturquoise": [
        72,
        209,
        204
    ],
    "mediumvioletred": [
        199,
        21,
        133
    ],
    "midnightblue": [
        25,
        25,
        112
    ],
    "mintcream": [
        245,
        255,
        250
    ],
    "mistyrose": [
        255,
        228,
        225
    ],
    "moccasin": [
        255,
        228,
        181
    ],
    "navajowhite": [
        255,
        222,
        173
    ],
    "navy": [
        0,
        0,
        128
    ],
    "oldlace": [
        253,
        245,
        230
    ],
    "olive": [
        128,
        128,
        0
    ],
    "olivedrab": [
        107,
        142,
        35
    ],
    "orange": [
        255,
        165,
        0
    ],
    "orangered": [
        255,
        69,
        0
    ],
    "orchid": [
        218,
        112,
        214
    ],
    "palegoldenrod": [
        238,
        232,
        170
    ],
    "palegreen": [
        152,
        251,
        152
    ],
    "paleturquoise": [
        175,
        238,
        238
    ],
    "palevioletred": [
        219,
        112,
        147
    ],
    "papayawhip": [
        255,
        239,
        213
    ],
    "peachpuff": [
        255,
        218,
        185
    ],
    "peru": [
        205,
        133,
        63
    ],
    "pink": [
        255,
        192,
        203
    ],
    "plum": [
        221,
        160,
        221
    ],
    "powderblue": [
        176,
        224,
        230
    ],
    "purple": [
        128,
        0,
        128
    ],
    "rebeccapurple": [
        102,
        51,
        153
    ],
    "red": [
        255,
        0,
        0
    ],
    "rosybrown": [
        188,
        143,
        143
    ],
    "royalblue": [
        65,
        105,
        225
    ],
    "saddlebrown": [
        139,
        69,
        19
    ],
    "salmon": [
        250,
        128,
        114
    ],
    "sandybrown": [
        244,
        164,
        96
    ],
    "seagreen": [
        46,
        139,
        87
    ],
    "seashell": [
        255,
        245,
        238
    ],
    "sienna": [
        160,
        82,
        45
    ],
    "silver": [
        192,
        192,
        192
    ],
    "skyblue": [
        135,
        206,
        235
    ],
    "slateblue": [
        106,
        90,
        205
    ],
    "slategray": [
        112,
        128,
        144
    ],
    "slategrey": [
        112,
        128,
        144
    ],
    "snow": [
        255,
        250,
        250
    ],
    "springgreen": [
        0,
        255,
        127
    ],
    "steelblue": [
        70,
        130,
        180
    ],
    "tan": [
        210,
        180,
        140
    ],
    "teal": [
        0,
        128,
        128
    ],
    "thistle": [
        216,
        191,
        216
    ],
    "tomato": [
        255,
        99,
        71
    ],
    "turquoise": [
        64,
        224,
        208
    ],
    "violet": [
        238,
        130,
        238
    ],
    "wheat": [
        245,
        222,
        179
    ],
    "white": [
        255,
        255,
        255
    ],
    "whitesmoke": [
        245,
        245,
        245
    ],
    "yellow": [
        255,
        255,
        0
    ],
    "yellowgreen": [
        154,
        205,
        50
    ]
};

},{}],"1jxJ4":[function(require,module,exports) {
'use strict';
var isArrayish = require('is-arrayish');
var concat = Array.prototype.concat;
var slice = Array.prototype.slice;
var swizzle = module.exports = function swizzle(args) {
    var results = [];
    for(var i = 0, len = args.length; i < len; i++){
        var arg = args[i];
        if (isArrayish(arg)) // http://jsperf.com/javascript-array-concat-vs-push/98
        results = concat.call(results, slice.call(arg));
        else results.push(arg);
    }
    return results;
};
swizzle.wrap = function(fn) {
    return function() {
        return fn(swizzle(arguments));
    };
};

},{"is-arrayish":"ll30o"}],"ll30o":[function(require,module,exports) {
module.exports = function isArrayish(obj) {
    if (!obj || typeof obj === 'string') return false;
    return obj instanceof Array || Array.isArray(obj) || obj.length >= 0 && (obj.splice instanceof Function || Object.getOwnPropertyDescriptor(obj, obj.length - 1) && obj.constructor.name !== 'String');
};

},{}],"bvUlS":[function(require,module,exports) {
var conversions = require('./conversions');
var route = require('./route');
var convert = {};
var models = Object.keys(conversions);
function wrapRaw(fn) {
    var wrappedFn = function(args) {
        if (args === undefined || args === null) return args;
        if (arguments.length > 1) args = Array.prototype.slice.call(arguments);
        return fn(args);
    };
    // preserve .conversion property if there is one
    if ('conversion' in fn) wrappedFn.conversion = fn.conversion;
    return wrappedFn;
}
function wrapRounded(fn) {
    var wrappedFn = function(args) {
        if (args === undefined || args === null) return args;
        if (arguments.length > 1) args = Array.prototype.slice.call(arguments);
        var result = fn(args);
        // we're assuming the result is an array here.
        // see notice in conversions.js; don't use box types
        // in conversion functions.
        if (typeof result === 'object') for(var len = result.length, i = 0; i < len; i++)result[i] = Math.round(result[i]);
        return result;
    };
    // preserve .conversion property if there is one
    if ('conversion' in fn) wrappedFn.conversion = fn.conversion;
    return wrappedFn;
}
models.forEach(function(fromModel) {
    convert[fromModel] = {};
    Object.defineProperty(convert[fromModel], 'channels', {
        value: conversions[fromModel].channels
    });
    Object.defineProperty(convert[fromModel], 'labels', {
        value: conversions[fromModel].labels
    });
    var routes = route(fromModel);
    var routeModels = Object.keys(routes);
    routeModels.forEach(function(toModel) {
        var fn = routes[toModel];
        convert[fromModel][toModel] = wrapRounded(fn);
        convert[fromModel][toModel].raw = wrapRaw(fn);
    });
});
module.exports = convert;

},{"./conversions":"C4O54","./route":"iJmBL"}],"C4O54":[function(require,module,exports) {
/* MIT license */ var cssKeywords = require('color-name');
// NOTE: conversions should only return primitive values (i.e. arrays, or
//       values that give correct `typeof` results).
//       do not use box values types (i.e. Number(), String(), etc.)
var reverseKeywords = {};
for(var key in cssKeywords)if (cssKeywords.hasOwnProperty(key)) reverseKeywords[cssKeywords[key]] = key;
var convert = module.exports = {
    rgb: {
        channels: 3,
        labels: 'rgb'
    },
    hsl: {
        channels: 3,
        labels: 'hsl'
    },
    hsv: {
        channels: 3,
        labels: 'hsv'
    },
    hwb: {
        channels: 3,
        labels: 'hwb'
    },
    cmyk: {
        channels: 4,
        labels: 'cmyk'
    },
    xyz: {
        channels: 3,
        labels: 'xyz'
    },
    lab: {
        channels: 3,
        labels: 'lab'
    },
    lch: {
        channels: 3,
        labels: 'lch'
    },
    hex: {
        channels: 1,
        labels: [
            'hex'
        ]
    },
    keyword: {
        channels: 1,
        labels: [
            'keyword'
        ]
    },
    ansi16: {
        channels: 1,
        labels: [
            'ansi16'
        ]
    },
    ansi256: {
        channels: 1,
        labels: [
            'ansi256'
        ]
    },
    hcg: {
        channels: 3,
        labels: [
            'h',
            'c',
            'g'
        ]
    },
    apple: {
        channels: 3,
        labels: [
            'r16',
            'g16',
            'b16'
        ]
    },
    gray: {
        channels: 1,
        labels: [
            'gray'
        ]
    }
};
// hide .channels and .labels properties
for(var model in convert)if (convert.hasOwnProperty(model)) {
    if (!('channels' in convert[model])) throw new Error('missing channels property: ' + model);
    if (!('labels' in convert[model])) throw new Error('missing channel labels property: ' + model);
    if (convert[model].labels.length !== convert[model].channels) throw new Error('channel and label counts mismatch: ' + model);
    var channels = convert[model].channels;
    var labels = convert[model].labels;
    delete convert[model].channels;
    delete convert[model].labels;
    Object.defineProperty(convert[model], 'channels', {
        value: channels
    });
    Object.defineProperty(convert[model], 'labels', {
        value: labels
    });
}
convert.rgb.hsl = function(rgb) {
    var r = rgb[0] / 255;
    var g = rgb[1] / 255;
    var b = rgb[2] / 255;
    var min = Math.min(r, g, b);
    var max = Math.max(r, g, b);
    var delta = max - min;
    var h;
    var s;
    var l;
    if (max === min) h = 0;
    else if (r === max) h = (g - b) / delta;
    else if (g === max) h = 2 + (b - r) / delta;
    else if (b === max) h = 4 + (r - g) / delta;
    h = Math.min(h * 60, 360);
    if (h < 0) h += 360;
    l = (min + max) / 2;
    if (max === min) s = 0;
    else if (l <= 0.5) s = delta / (max + min);
    else s = delta / (2 - max - min);
    return [
        h,
        s * 100,
        l * 100
    ];
};
convert.rgb.hsv = function(rgb) {
    var rdif;
    var gdif;
    var bdif;
    var h;
    var s;
    var r = rgb[0] / 255;
    var g = rgb[1] / 255;
    var b = rgb[2] / 255;
    var v = Math.max(r, g, b);
    var diff = v - Math.min(r, g, b);
    var diffc = function(c) {
        return (v - c) / 6 / diff + 0.5;
    };
    if (diff === 0) h = s = 0;
    else {
        s = diff / v;
        rdif = diffc(r);
        gdif = diffc(g);
        bdif = diffc(b);
        if (r === v) h = bdif - gdif;
        else if (g === v) h = 1 / 3 + rdif - bdif;
        else if (b === v) h = 2 / 3 + gdif - rdif;
        if (h < 0) h += 1;
        else if (h > 1) h -= 1;
    }
    return [
        h * 360,
        s * 100,
        v * 100
    ];
};
convert.rgb.hwb = function(rgb) {
    var r = rgb[0];
    var g = rgb[1];
    var b = rgb[2];
    var h = convert.rgb.hsl(rgb)[0];
    var w = 1 / 255 * Math.min(r, Math.min(g, b));
    b = 1 - 1 / 255 * Math.max(r, Math.max(g, b));
    return [
        h,
        w * 100,
        b * 100
    ];
};
convert.rgb.cmyk = function(rgb) {
    var r = rgb[0] / 255;
    var g = rgb[1] / 255;
    var b = rgb[2] / 255;
    var c;
    var m;
    var y;
    var k;
    k = Math.min(1 - r, 1 - g, 1 - b);
    c = (1 - r - k) / (1 - k) || 0;
    m = (1 - g - k) / (1 - k) || 0;
    y = (1 - b - k) / (1 - k) || 0;
    return [
        c * 100,
        m * 100,
        y * 100,
        k * 100
    ];
};
/**
 * See https://en.m.wikipedia.org/wiki/Euclidean_distance#Squared_Euclidean_distance
 * */ function comparativeDistance(x, y) {
    return Math.pow(x[0] - y[0], 2) + Math.pow(x[1] - y[1], 2) + Math.pow(x[2] - y[2], 2);
}
convert.rgb.keyword = function(rgb) {
    var reversed = reverseKeywords[rgb];
    if (reversed) return reversed;
    var currentClosestDistance = Infinity;
    var currentClosestKeyword;
    for(var keyword in cssKeywords)if (cssKeywords.hasOwnProperty(keyword)) {
        var value = cssKeywords[keyword];
        // Compute comparative distance
        var distance = comparativeDistance(rgb, value);
        // Check if its less, if so set as closest
        if (distance < currentClosestDistance) {
            currentClosestDistance = distance;
            currentClosestKeyword = keyword;
        }
    }
    return currentClosestKeyword;
};
convert.keyword.rgb = function(keyword) {
    return cssKeywords[keyword];
};
convert.rgb.xyz = function(rgb) {
    var r = rgb[0] / 255;
    var g = rgb[1] / 255;
    var b = rgb[2] / 255;
    // assume sRGB
    r = r > 0.04045 ? Math.pow((r + 0.055) / 1.055, 2.4) : r / 12.92;
    g = g > 0.04045 ? Math.pow((g + 0.055) / 1.055, 2.4) : g / 12.92;
    b = b > 0.04045 ? Math.pow((b + 0.055) / 1.055, 2.4) : b / 12.92;
    var x = r * 0.4124 + g * 0.3576 + b * 0.1805;
    var y = r * 0.2126 + g * 0.7152 + b * 0.0722;
    var z = r * 0.0193 + g * 0.1192 + b * 0.9505;
    return [
        x * 100,
        y * 100,
        z * 100
    ];
};
convert.rgb.lab = function(rgb) {
    var xyz = convert.rgb.xyz(rgb);
    var x = xyz[0];
    var y = xyz[1];
    var z = xyz[2];
    var l;
    var a;
    var b;
    x /= 95.047;
    y /= 100;
    z /= 108.883;
    x = x > 0.008856 ? Math.pow(x, 1 / 3) : 7.787 * x + 16 / 116;
    y = y > 0.008856 ? Math.pow(y, 1 / 3) : 7.787 * y + 16 / 116;
    z = z > 0.008856 ? Math.pow(z, 1 / 3) : 7.787 * z + 16 / 116;
    l = 116 * y - 16;
    a = 500 * (x - y);
    b = 200 * (y - z);
    return [
        l,
        a,
        b
    ];
};
convert.hsl.rgb = function(hsl) {
    var h = hsl[0] / 360;
    var s = hsl[1] / 100;
    var l = hsl[2] / 100;
    var t1;
    var t2;
    var t3;
    var rgb;
    var val;
    if (s === 0) {
        val = l * 255;
        return [
            val,
            val,
            val
        ];
    }
    if (l < 0.5) t2 = l * (1 + s);
    else t2 = l + s - l * s;
    t1 = 2 * l - t2;
    rgb = [
        0,
        0,
        0
    ];
    for(var i = 0; i < 3; i++){
        t3 = h + 1 / 3 * -(i - 1);
        if (t3 < 0) t3++;
        if (t3 > 1) t3--;
        if (6 * t3 < 1) val = t1 + (t2 - t1) * 6 * t3;
        else if (2 * t3 < 1) val = t2;
        else if (3 * t3 < 2) val = t1 + (t2 - t1) * (2 / 3 - t3) * 6;
        else val = t1;
        rgb[i] = val * 255;
    }
    return rgb;
};
convert.hsl.hsv = function(hsl) {
    var h = hsl[0];
    var s = hsl[1] / 100;
    var l = hsl[2] / 100;
    var smin = s;
    var lmin = Math.max(l, 0.01);
    var sv;
    var v;
    l *= 2;
    s *= l <= 1 ? l : 2 - l;
    smin *= lmin <= 1 ? lmin : 2 - lmin;
    v = (l + s) / 2;
    sv = l === 0 ? 2 * smin / (lmin + smin) : 2 * s / (l + s);
    return [
        h,
        sv * 100,
        v * 100
    ];
};
convert.hsv.rgb = function(hsv) {
    var h = hsv[0] / 60;
    var s = hsv[1] / 100;
    var v = hsv[2] / 100;
    var hi = Math.floor(h) % 6;
    var f = h - Math.floor(h);
    var p = 255 * v * (1 - s);
    var q = 255 * v * (1 - s * f);
    var t = 255 * v * (1 - s * (1 - f));
    v *= 255;
    switch(hi){
        case 0:
            return [
                v,
                t,
                p
            ];
        case 1:
            return [
                q,
                v,
                p
            ];
        case 2:
            return [
                p,
                v,
                t
            ];
        case 3:
            return [
                p,
                q,
                v
            ];
        case 4:
            return [
                t,
                p,
                v
            ];
        case 5:
            return [
                v,
                p,
                q
            ];
    }
};
convert.hsv.hsl = function(hsv) {
    var h = hsv[0];
    var s = hsv[1] / 100;
    var v = hsv[2] / 100;
    var vmin = Math.max(v, 0.01);
    var lmin;
    var sl;
    var l;
    l = (2 - s) * v;
    lmin = (2 - s) * vmin;
    sl = s * vmin;
    sl /= lmin <= 1 ? lmin : 2 - lmin;
    sl = sl || 0;
    l /= 2;
    return [
        h,
        sl * 100,
        l * 100
    ];
};
// http://dev.w3.org/csswg/css-color/#hwb-to-rgb
convert.hwb.rgb = function(hwb) {
    var h = hwb[0] / 360;
    var wh = hwb[1] / 100;
    var bl = hwb[2] / 100;
    var ratio = wh + bl;
    var i;
    var v;
    var f;
    var n;
    // wh + bl cant be > 1
    if (ratio > 1) {
        wh /= ratio;
        bl /= ratio;
    }
    i = Math.floor(6 * h);
    v = 1 - bl;
    f = 6 * h - i;
    if ((i & 0x01) !== 0) f = 1 - f;
    n = wh + f * (v - wh); // linear interpolation
    var r;
    var g;
    var b;
    switch(i){
        default:
        case 6:
        case 0:
            r = v;
            g = n;
            b = wh;
            break;
        case 1:
            r = n;
            g = v;
            b = wh;
            break;
        case 2:
            r = wh;
            g = v;
            b = n;
            break;
        case 3:
            r = wh;
            g = n;
            b = v;
            break;
        case 4:
            r = n;
            g = wh;
            b = v;
            break;
        case 5:
            r = v;
            g = wh;
            b = n;
            break;
    }
    return [
        r * 255,
        g * 255,
        b * 255
    ];
};
convert.cmyk.rgb = function(cmyk) {
    var c = cmyk[0] / 100;
    var m = cmyk[1] / 100;
    var y = cmyk[2] / 100;
    var k = cmyk[3] / 100;
    var r;
    var g;
    var b;
    r = 1 - Math.min(1, c * (1 - k) + k);
    g = 1 - Math.min(1, m * (1 - k) + k);
    b = 1 - Math.min(1, y * (1 - k) + k);
    return [
        r * 255,
        g * 255,
        b * 255
    ];
};
convert.xyz.rgb = function(xyz) {
    var x = xyz[0] / 100;
    var y = xyz[1] / 100;
    var z = xyz[2] / 100;
    var r;
    var g;
    var b;
    r = x * 3.2406 + y * -1.5372 + z * -0.4986;
    g = x * -0.9689 + y * 1.8758 + z * 0.0415;
    b = x * 0.0557 + y * -0.204 + z * 1.0570;
    // assume sRGB
    r = r > 0.0031308 ? 1.055 * Math.pow(r, 1.0 / 2.4) - 0.055 : r * 12.92;
    g = g > 0.0031308 ? 1.055 * Math.pow(g, 1.0 / 2.4) - 0.055 : g * 12.92;
    b = b > 0.0031308 ? 1.055 * Math.pow(b, 1.0 / 2.4) - 0.055 : b * 12.92;
    r = Math.min(Math.max(0, r), 1);
    g = Math.min(Math.max(0, g), 1);
    b = Math.min(Math.max(0, b), 1);
    return [
        r * 255,
        g * 255,
        b * 255
    ];
};
convert.xyz.lab = function(xyz) {
    var x = xyz[0];
    var y = xyz[1];
    var z = xyz[2];
    var l;
    var a;
    var b;
    x /= 95.047;
    y /= 100;
    z /= 108.883;
    x = x > 0.008856 ? Math.pow(x, 1 / 3) : 7.787 * x + 16 / 116;
    y = y > 0.008856 ? Math.pow(y, 1 / 3) : 7.787 * y + 16 / 116;
    z = z > 0.008856 ? Math.pow(z, 1 / 3) : 7.787 * z + 16 / 116;
    l = 116 * y - 16;
    a = 500 * (x - y);
    b = 200 * (y - z);
    return [
        l,
        a,
        b
    ];
};
convert.lab.xyz = function(lab) {
    var l = lab[0];
    var a = lab[1];
    var b = lab[2];
    var x;
    var y;
    var z;
    y = (l + 16) / 116;
    x = a / 500 + y;
    z = y - b / 200;
    var y2 = Math.pow(y, 3);
    var x2 = Math.pow(x, 3);
    var z2 = Math.pow(z, 3);
    y = y2 > 0.008856 ? y2 : (y - 16 / 116) / 7.787;
    x = x2 > 0.008856 ? x2 : (x - 16 / 116) / 7.787;
    z = z2 > 0.008856 ? z2 : (z - 16 / 116) / 7.787;
    x *= 95.047;
    y *= 100;
    z *= 108.883;
    return [
        x,
        y,
        z
    ];
};
convert.lab.lch = function(lab) {
    var l = lab[0];
    var a = lab[1];
    var b = lab[2];
    var hr;
    var h;
    var c;
    hr = Math.atan2(b, a);
    h = hr * 360 / 2 / Math.PI;
    if (h < 0) h += 360;
    c = Math.sqrt(a * a + b * b);
    return [
        l,
        c,
        h
    ];
};
convert.lch.lab = function(lch) {
    var l = lch[0];
    var c = lch[1];
    var h = lch[2];
    var a;
    var b;
    var hr;
    hr = h / 360 * 2 * Math.PI;
    a = c * Math.cos(hr);
    b = c * Math.sin(hr);
    return [
        l,
        a,
        b
    ];
};
convert.rgb.ansi16 = function(args) {
    var r = args[0];
    var g = args[1];
    var b = args[2];
    var value = 1 in arguments ? arguments[1] : convert.rgb.hsv(args)[2]; // hsv -> ansi16 optimization
    value = Math.round(value / 50);
    if (value === 0) return 30;
    var ansi = 30 + (Math.round(b / 255) << 2 | Math.round(g / 255) << 1 | Math.round(r / 255));
    if (value === 2) ansi += 60;
    return ansi;
};
convert.hsv.ansi16 = function(args) {
    // optimization here; we already know the value and don't need to get
    // it converted for us.
    return convert.rgb.ansi16(convert.hsv.rgb(args), args[2]);
};
convert.rgb.ansi256 = function(args) {
    var r = args[0];
    var g = args[1];
    var b = args[2];
    // we use the extended greyscale palette here, with the exception of
    // black and white. normal palette only has 4 greyscale shades.
    if (r === g && g === b) {
        if (r < 8) return 16;
        if (r > 248) return 231;
        return Math.round((r - 8) / 247 * 24) + 232;
    }
    var ansi = 16 + 36 * Math.round(r / 255 * 5) + 6 * Math.round(g / 255 * 5) + Math.round(b / 255 * 5);
    return ansi;
};
convert.ansi16.rgb = function(args) {
    var color = args % 10;
    // handle greyscale
    if (color === 0 || color === 7) {
        if (args > 50) color += 3.5;
        color = color / 10.5 * 255;
        return [
            color,
            color,
            color
        ];
    }
    var mult = (~~(args > 50) + 1) * 0.5;
    var r = (color & 1) * mult * 255;
    var g = (color >> 1 & 1) * mult * 255;
    var b = (color >> 2 & 1) * mult * 255;
    return [
        r,
        g,
        b
    ];
};
convert.ansi256.rgb = function(args) {
    // handle greyscale
    if (args >= 232) {
        var c = (args - 232) * 10 + 8;
        return [
            c,
            c,
            c
        ];
    }
    args -= 16;
    var rem;
    var r = Math.floor(args / 36) / 5 * 255;
    var g = Math.floor((rem = args % 36) / 6) / 5 * 255;
    var b = rem % 6 / 5 * 255;
    return [
        r,
        g,
        b
    ];
};
convert.rgb.hex = function(args) {
    var integer = ((Math.round(args[0]) & 0xFF) << 16) + ((Math.round(args[1]) & 0xFF) << 8) + (Math.round(args[2]) & 0xFF);
    var string = integer.toString(16).toUpperCase();
    return '000000'.substring(string.length) + string;
};
convert.hex.rgb = function(args) {
    var match = args.toString(16).match(/[a-f0-9]{6}|[a-f0-9]{3}/i);
    if (!match) return [
        0,
        0,
        0
    ];
    var colorString = match[0];
    if (match[0].length === 3) colorString = colorString.split('').map(function(char) {
        return char + char;
    }).join('');
    var integer = parseInt(colorString, 16);
    var r = integer >> 16 & 0xFF;
    var g = integer >> 8 & 0xFF;
    var b = integer & 0xFF;
    return [
        r,
        g,
        b
    ];
};
convert.rgb.hcg = function(rgb) {
    var r = rgb[0] / 255;
    var g = rgb[1] / 255;
    var b = rgb[2] / 255;
    var max = Math.max(Math.max(r, g), b);
    var min = Math.min(Math.min(r, g), b);
    var chroma = max - min;
    var grayscale;
    var hue;
    if (chroma < 1) grayscale = min / (1 - chroma);
    else grayscale = 0;
    if (chroma <= 0) hue = 0;
    else if (max === r) hue = (g - b) / chroma % 6;
    else if (max === g) hue = 2 + (b - r) / chroma;
    else hue = 4 + (r - g) / chroma + 4;
    hue /= 6;
    hue %= 1;
    return [
        hue * 360,
        chroma * 100,
        grayscale * 100
    ];
};
convert.hsl.hcg = function(hsl) {
    var s = hsl[1] / 100;
    var l = hsl[2] / 100;
    var c = 1;
    var f = 0;
    if (l < 0.5) c = 2.0 * s * l;
    else c = 2.0 * s * (1.0 - l);
    if (c < 1.0) f = (l - 0.5 * c) / (1.0 - c);
    return [
        hsl[0],
        c * 100,
        f * 100
    ];
};
convert.hsv.hcg = function(hsv) {
    var s = hsv[1] / 100;
    var v = hsv[2] / 100;
    var c = s * v;
    var f = 0;
    if (c < 1.0) f = (v - c) / (1 - c);
    return [
        hsv[0],
        c * 100,
        f * 100
    ];
};
convert.hcg.rgb = function(hcg) {
    var h = hcg[0] / 360;
    var c = hcg[1] / 100;
    var g = hcg[2] / 100;
    if (c === 0.0) return [
        g * 255,
        g * 255,
        g * 255
    ];
    var pure = [
        0,
        0,
        0
    ];
    var hi = h % 1 * 6;
    var v = hi % 1;
    var w = 1 - v;
    var mg = 0;
    switch(Math.floor(hi)){
        case 0:
            pure[0] = 1;
            pure[1] = v;
            pure[2] = 0;
            break;
        case 1:
            pure[0] = w;
            pure[1] = 1;
            pure[2] = 0;
            break;
        case 2:
            pure[0] = 0;
            pure[1] = 1;
            pure[2] = v;
            break;
        case 3:
            pure[0] = 0;
            pure[1] = w;
            pure[2] = 1;
            break;
        case 4:
            pure[0] = v;
            pure[1] = 0;
            pure[2] = 1;
            break;
        default:
            pure[0] = 1;
            pure[1] = 0;
            pure[2] = w;
    }
    mg = (1.0 - c) * g;
    return [
        (c * pure[0] + mg) * 255,
        (c * pure[1] + mg) * 255,
        (c * pure[2] + mg) * 255
    ];
};
convert.hcg.hsv = function(hcg) {
    var c = hcg[1] / 100;
    var g = hcg[2] / 100;
    var v = c + g * (1.0 - c);
    var f = 0;
    if (v > 0.0) f = c / v;
    return [
        hcg[0],
        f * 100,
        v * 100
    ];
};
convert.hcg.hsl = function(hcg) {
    var c = hcg[1] / 100;
    var g = hcg[2] / 100;
    var l = g * (1.0 - c) + 0.5 * c;
    var s = 0;
    if (l > 0.0 && l < 0.5) s = c / (2 * l);
    else if (l >= 0.5 && l < 1.0) s = c / (2 * (1 - l));
    return [
        hcg[0],
        s * 100,
        l * 100
    ];
};
convert.hcg.hwb = function(hcg) {
    var c = hcg[1] / 100;
    var g = hcg[2] / 100;
    var v = c + g * (1.0 - c);
    return [
        hcg[0],
        (v - c) * 100,
        (1 - v) * 100
    ];
};
convert.hwb.hcg = function(hwb) {
    var w = hwb[1] / 100;
    var b = hwb[2] / 100;
    var v = 1 - b;
    var c = v - w;
    var g = 0;
    if (c < 1) g = (v - c) / (1 - c);
    return [
        hwb[0],
        c * 100,
        g * 100
    ];
};
convert.apple.rgb = function(apple) {
    return [
        apple[0] / 65535 * 255,
        apple[1] / 65535 * 255,
        apple[2] / 65535 * 255
    ];
};
convert.rgb.apple = function(rgb) {
    return [
        rgb[0] / 255 * 65535,
        rgb[1] / 255 * 65535,
        rgb[2] / 255 * 65535
    ];
};
convert.gray.rgb = function(args) {
    return [
        args[0] / 100 * 255,
        args[0] / 100 * 255,
        args[0] / 100 * 255
    ];
};
convert.gray.hsl = convert.gray.hsv = function(args) {
    return [
        0,
        0,
        args[0]
    ];
};
convert.gray.hwb = function(gray) {
    return [
        0,
        100,
        gray[0]
    ];
};
convert.gray.cmyk = function(gray) {
    return [
        0,
        0,
        0,
        gray[0]
    ];
};
convert.gray.lab = function(gray) {
    return [
        gray[0],
        0,
        0
    ];
};
convert.gray.hex = function(gray) {
    var val = Math.round(gray[0] / 100 * 255) & 0xFF;
    var integer = (val << 16) + (val << 8) + val;
    var string = integer.toString(16).toUpperCase();
    return '000000'.substring(string.length) + string;
};
convert.rgb.gray = function(rgb) {
    var val = (rgb[0] + rgb[1] + rgb[2]) / 3;
    return [
        val / 255 * 100
    ];
};

},{"color-name":"js5TI"}],"js5TI":[function(require,module,exports) {
'use strict';
module.exports = {
    "aliceblue": [
        240,
        248,
        255
    ],
    "antiquewhite": [
        250,
        235,
        215
    ],
    "aqua": [
        0,
        255,
        255
    ],
    "aquamarine": [
        127,
        255,
        212
    ],
    "azure": [
        240,
        255,
        255
    ],
    "beige": [
        245,
        245,
        220
    ],
    "bisque": [
        255,
        228,
        196
    ],
    "black": [
        0,
        0,
        0
    ],
    "blanchedalmond": [
        255,
        235,
        205
    ],
    "blue": [
        0,
        0,
        255
    ],
    "blueviolet": [
        138,
        43,
        226
    ],
    "brown": [
        165,
        42,
        42
    ],
    "burlywood": [
        222,
        184,
        135
    ],
    "cadetblue": [
        95,
        158,
        160
    ],
    "chartreuse": [
        127,
        255,
        0
    ],
    "chocolate": [
        210,
        105,
        30
    ],
    "coral": [
        255,
        127,
        80
    ],
    "cornflowerblue": [
        100,
        149,
        237
    ],
    "cornsilk": [
        255,
        248,
        220
    ],
    "crimson": [
        220,
        20,
        60
    ],
    "cyan": [
        0,
        255,
        255
    ],
    "darkblue": [
        0,
        0,
        139
    ],
    "darkcyan": [
        0,
        139,
        139
    ],
    "darkgoldenrod": [
        184,
        134,
        11
    ],
    "darkgray": [
        169,
        169,
        169
    ],
    "darkgreen": [
        0,
        100,
        0
    ],
    "darkgrey": [
        169,
        169,
        169
    ],
    "darkkhaki": [
        189,
        183,
        107
    ],
    "darkmagenta": [
        139,
        0,
        139
    ],
    "darkolivegreen": [
        85,
        107,
        47
    ],
    "darkorange": [
        255,
        140,
        0
    ],
    "darkorchid": [
        153,
        50,
        204
    ],
    "darkred": [
        139,
        0,
        0
    ],
    "darksalmon": [
        233,
        150,
        122
    ],
    "darkseagreen": [
        143,
        188,
        143
    ],
    "darkslateblue": [
        72,
        61,
        139
    ],
    "darkslategray": [
        47,
        79,
        79
    ],
    "darkslategrey": [
        47,
        79,
        79
    ],
    "darkturquoise": [
        0,
        206,
        209
    ],
    "darkviolet": [
        148,
        0,
        211
    ],
    "deeppink": [
        255,
        20,
        147
    ],
    "deepskyblue": [
        0,
        191,
        255
    ],
    "dimgray": [
        105,
        105,
        105
    ],
    "dimgrey": [
        105,
        105,
        105
    ],
    "dodgerblue": [
        30,
        144,
        255
    ],
    "firebrick": [
        178,
        34,
        34
    ],
    "floralwhite": [
        255,
        250,
        240
    ],
    "forestgreen": [
        34,
        139,
        34
    ],
    "fuchsia": [
        255,
        0,
        255
    ],
    "gainsboro": [
        220,
        220,
        220
    ],
    "ghostwhite": [
        248,
        248,
        255
    ],
    "gold": [
        255,
        215,
        0
    ],
    "goldenrod": [
        218,
        165,
        32
    ],
    "gray": [
        128,
        128,
        128
    ],
    "green": [
        0,
        128,
        0
    ],
    "greenyellow": [
        173,
        255,
        47
    ],
    "grey": [
        128,
        128,
        128
    ],
    "honeydew": [
        240,
        255,
        240
    ],
    "hotpink": [
        255,
        105,
        180
    ],
    "indianred": [
        205,
        92,
        92
    ],
    "indigo": [
        75,
        0,
        130
    ],
    "ivory": [
        255,
        255,
        240
    ],
    "khaki": [
        240,
        230,
        140
    ],
    "lavender": [
        230,
        230,
        250
    ],
    "lavenderblush": [
        255,
        240,
        245
    ],
    "lawngreen": [
        124,
        252,
        0
    ],
    "lemonchiffon": [
        255,
        250,
        205
    ],
    "lightblue": [
        173,
        216,
        230
    ],
    "lightcoral": [
        240,
        128,
        128
    ],
    "lightcyan": [
        224,
        255,
        255
    ],
    "lightgoldenrodyellow": [
        250,
        250,
        210
    ],
    "lightgray": [
        211,
        211,
        211
    ],
    "lightgreen": [
        144,
        238,
        144
    ],
    "lightgrey": [
        211,
        211,
        211
    ],
    "lightpink": [
        255,
        182,
        193
    ],
    "lightsalmon": [
        255,
        160,
        122
    ],
    "lightseagreen": [
        32,
        178,
        170
    ],
    "lightskyblue": [
        135,
        206,
        250
    ],
    "lightslategray": [
        119,
        136,
        153
    ],
    "lightslategrey": [
        119,
        136,
        153
    ],
    "lightsteelblue": [
        176,
        196,
        222
    ],
    "lightyellow": [
        255,
        255,
        224
    ],
    "lime": [
        0,
        255,
        0
    ],
    "limegreen": [
        50,
        205,
        50
    ],
    "linen": [
        250,
        240,
        230
    ],
    "magenta": [
        255,
        0,
        255
    ],
    "maroon": [
        128,
        0,
        0
    ],
    "mediumaquamarine": [
        102,
        205,
        170
    ],
    "mediumblue": [
        0,
        0,
        205
    ],
    "mediumorchid": [
        186,
        85,
        211
    ],
    "mediumpurple": [
        147,
        112,
        219
    ],
    "mediumseagreen": [
        60,
        179,
        113
    ],
    "mediumslateblue": [
        123,
        104,
        238
    ],
    "mediumspringgreen": [
        0,
        250,
        154
    ],
    "mediumturquoise": [
        72,
        209,
        204
    ],
    "mediumvioletred": [
        199,
        21,
        133
    ],
    "midnightblue": [
        25,
        25,
        112
    ],
    "mintcream": [
        245,
        255,
        250
    ],
    "mistyrose": [
        255,
        228,
        225
    ],
    "moccasin": [
        255,
        228,
        181
    ],
    "navajowhite": [
        255,
        222,
        173
    ],
    "navy": [
        0,
        0,
        128
    ],
    "oldlace": [
        253,
        245,
        230
    ],
    "olive": [
        128,
        128,
        0
    ],
    "olivedrab": [
        107,
        142,
        35
    ],
    "orange": [
        255,
        165,
        0
    ],
    "orangered": [
        255,
        69,
        0
    ],
    "orchid": [
        218,
        112,
        214
    ],
    "palegoldenrod": [
        238,
        232,
        170
    ],
    "palegreen": [
        152,
        251,
        152
    ],
    "paleturquoise": [
        175,
        238,
        238
    ],
    "palevioletred": [
        219,
        112,
        147
    ],
    "papayawhip": [
        255,
        239,
        213
    ],
    "peachpuff": [
        255,
        218,
        185
    ],
    "peru": [
        205,
        133,
        63
    ],
    "pink": [
        255,
        192,
        203
    ],
    "plum": [
        221,
        160,
        221
    ],
    "powderblue": [
        176,
        224,
        230
    ],
    "purple": [
        128,
        0,
        128
    ],
    "rebeccapurple": [
        102,
        51,
        153
    ],
    "red": [
        255,
        0,
        0
    ],
    "rosybrown": [
        188,
        143,
        143
    ],
    "royalblue": [
        65,
        105,
        225
    ],
    "saddlebrown": [
        139,
        69,
        19
    ],
    "salmon": [
        250,
        128,
        114
    ],
    "sandybrown": [
        244,
        164,
        96
    ],
    "seagreen": [
        46,
        139,
        87
    ],
    "seashell": [
        255,
        245,
        238
    ],
    "sienna": [
        160,
        82,
        45
    ],
    "silver": [
        192,
        192,
        192
    ],
    "skyblue": [
        135,
        206,
        235
    ],
    "slateblue": [
        106,
        90,
        205
    ],
    "slategray": [
        112,
        128,
        144
    ],
    "slategrey": [
        112,
        128,
        144
    ],
    "snow": [
        255,
        250,
        250
    ],
    "springgreen": [
        0,
        255,
        127
    ],
    "steelblue": [
        70,
        130,
        180
    ],
    "tan": [
        210,
        180,
        140
    ],
    "teal": [
        0,
        128,
        128
    ],
    "thistle": [
        216,
        191,
        216
    ],
    "tomato": [
        255,
        99,
        71
    ],
    "turquoise": [
        64,
        224,
        208
    ],
    "violet": [
        238,
        130,
        238
    ],
    "wheat": [
        245,
        222,
        179
    ],
    "white": [
        255,
        255,
        255
    ],
    "whitesmoke": [
        245,
        245,
        245
    ],
    "yellow": [
        255,
        255,
        0
    ],
    "yellowgreen": [
        154,
        205,
        50
    ]
};

},{}],"iJmBL":[function(require,module,exports) {
var conversions = require('./conversions');
/*
	this function routes a model to all other models.

	all functions that are routed have a property `.conversion` attached
	to the returned synthetic function. This property is an array
	of strings, each with the steps in between the 'from' and 'to'
	color models (inclusive).

	conversions that are not possible simply are not included.
*/ function buildGraph() {
    var graph = {};
    // https://jsperf.com/object-keys-vs-for-in-with-closure/3
    var models = Object.keys(conversions);
    for(var len = models.length, i = 0; i < len; i++)graph[models[i]] = {
        // http://jsperf.com/1-vs-infinity
        // micro-opt, but this is simple.
        distance: -1,
        parent: null
    };
    return graph;
}
// https://en.wikipedia.org/wiki/Breadth-first_search
function deriveBFS(fromModel) {
    var graph = buildGraph();
    var queue = [
        fromModel
    ]; // unshift -> queue -> pop
    graph[fromModel].distance = 0;
    while(queue.length){
        var current = queue.pop();
        var adjacents = Object.keys(conversions[current]);
        for(var len = adjacents.length, i = 0; i < len; i++){
            var adjacent = adjacents[i];
            var node = graph[adjacent];
            if (node.distance === -1) {
                node.distance = graph[current].distance + 1;
                node.parent = current;
                queue.unshift(adjacent);
            }
        }
    }
    return graph;
}
function link(from, to) {
    return function(args) {
        return to(from(args));
    };
}
function wrapConversion(toModel, graph) {
    var path = [
        graph[toModel].parent,
        toModel
    ];
    var fn = conversions[graph[toModel].parent][toModel];
    var cur = graph[toModel].parent;
    while(graph[cur].parent){
        path.unshift(graph[cur].parent);
        fn = link(conversions[graph[cur].parent][cur], fn);
        cur = graph[cur].parent;
    }
    fn.conversion = path;
    return fn;
}
module.exports = function(fromModel) {
    var graph = deriveBFS(fromModel);
    var conversion = {};
    var models = Object.keys(graph);
    for(var len = models.length, i = 0; i < len; i++){
        var toModel = models[i];
        var node = graph[toModel];
        if (node.parent === null) continue;
        conversion[toModel] = wrapConversion(toModel, graph);
    }
    return conversion;
};

},{"./conversions":"C4O54"}],"5yLHH":[function(require,module,exports) {
/*
  https://github.com/banksean wrapped Makoto Matsumoto and Takuji Nishimura's code in a namespace
  so it's better encapsulated. Now you can have multiple random number generators
  and they won't stomp all over eachother's state.

  If you want to use this as a substitute for Math.random(), use the random()
  method like so:

  var m = new MersenneTwister();
  var randomNumber = m.random();

  You can also call the other genrand_{foo}() methods on the instance.

  If you want to use a specific seed in order to get a repeatable random
  sequence, pass an integer into the constructor:

  var m = new MersenneTwister(123);

  and that will always produce the same random sequence.

  Sean McCullough (banksean@gmail.com)
*/ /*
   A C-program for MT19937, with initialization improved 2002/1/26.
   Coded by Takuji Nishimura and Makoto Matsumoto.

   Before using, initialize the state by using init_seed(seed)
   or init_by_array(init_key, key_length).

   Copyright (C) 1997 - 2002, Makoto Matsumoto and Takuji Nishimura,
   All rights reserved.

   Redistribution and use in source and binary forms, with or without
   modification, are permitted provided that the following conditions
   are met:

     1. Redistributions of source code must retain the above copyright
        notice, this list of conditions and the following disclaimer.

     2. Redistributions in binary form must reproduce the above copyright
        notice, this list of conditions and the following disclaimer in the
        documentation and/or other materials provided with the distribution.

     3. The names of its contributors may not be used to endorse or promote
        products derived from this software without specific prior written
        permission.

   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
   "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
   LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
   A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR
   CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
   EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
   PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
   PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
   LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
   NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
   SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.


   Any feedback is very welcome.
   http://www.math.sci.hiroshima-u.ac.jp/~m-mat/MT/emt.html
   email: m-mat @ math.sci.hiroshima-u.ac.jp (remove space)
*/ var MersenneTwister = function(seed) {
    if (seed == undefined) seed = new Date().getTime();
    /* Period parameters */ this.N = 624;
    this.M = 397;
    this.MATRIX_A = 0x9908b0df; /* constant vector a */ 
    this.UPPER_MASK = 0x80000000; /* most significant w-r bits */ 
    this.LOWER_MASK = 0x7fffffff; /* least significant r bits */ 
    this.mt = new Array(this.N); /* the array for the state vector */ 
    this.mti = this.N + 1; /* mti==N+1 means mt[N] is not initialized */ 
    if (seed.constructor == Array) this.init_by_array(seed, seed.length);
    else this.init_seed(seed);
};
/* initializes mt[N] with a seed */ /* origin name init_genrand */ MersenneTwister.prototype.init_seed = function(s) {
    this.mt[0] = s >>> 0;
    for(this.mti = 1; this.mti < this.N; this.mti++){
        var s = this.mt[this.mti - 1] ^ this.mt[this.mti - 1] >>> 30;
        this.mt[this.mti] = (((s & 0xffff0000) >>> 16) * 1812433253 << 16) + (s & 0x0000ffff) * 1812433253 + this.mti;
        /* See Knuth TAOCP Vol2. 3rd Ed. P.106 for multiplier. */ /* In the previous versions, MSBs of the seed affect   */ /* only MSBs of the array mt[].                        */ /* 2002/01/09 modified by Makoto Matsumoto             */ this.mt[this.mti] >>>= 0;
    /* for >32 bit machines */ }
};
/* initialize by an array with array-length */ /* init_key is the array for initializing keys */ /* key_length is its length */ /* slight change for C++, 2004/2/26 */ MersenneTwister.prototype.init_by_array = function(init_key, key_length) {
    var i, j, k;
    this.init_seed(19650218);
    i = 1;
    j = 0;
    k = this.N > key_length ? this.N : key_length;
    for(; k; k--){
        var s = this.mt[i - 1] ^ this.mt[i - 1] >>> 30;
        this.mt[i] = (this.mt[i] ^ (((s & 0xffff0000) >>> 16) * 1664525 << 16) + (s & 0x0000ffff) * 1664525) + init_key[j] + j; /* non linear */ 
        this.mt[i] >>>= 0; /* for WORDSIZE > 32 machines */ 
        i++;
        j++;
        if (i >= this.N) {
            this.mt[0] = this.mt[this.N - 1];
            i = 1;
        }
        if (j >= key_length) j = 0;
    }
    for(k = this.N - 1; k; k--){
        var s = this.mt[i - 1] ^ this.mt[i - 1] >>> 30;
        this.mt[i] = (this.mt[i] ^ (((s & 0xffff0000) >>> 16) * 1566083941 << 16) + (s & 0x0000ffff) * 1566083941) - i; /* non linear */ 
        this.mt[i] >>>= 0; /* for WORDSIZE > 32 machines */ 
        i++;
        if (i >= this.N) {
            this.mt[0] = this.mt[this.N - 1];
            i = 1;
        }
    }
    this.mt[0] = 0x80000000; /* MSB is 1; assuring non-zero initial array */ 
};
/* generates a random number on [0,0xffffffff]-interval */ /* origin name genrand_int32 */ MersenneTwister.prototype.random_int = function() {
    var y;
    var mag01 = new Array(0x0, this.MATRIX_A);
    /* mag01[x] = x * MATRIX_A  for x=0,1 */ if (this.mti >= this.N) {
        var kk;
        if (this.mti == this.N + 1) /* if init_seed() has not been called, */ this.init_seed(5489); /* a default initial seed is used */ 
        for(kk = 0; kk < this.N - this.M; kk++){
            y = this.mt[kk] & this.UPPER_MASK | this.mt[kk + 1] & this.LOWER_MASK;
            this.mt[kk] = this.mt[kk + this.M] ^ y >>> 1 ^ mag01[y & 0x1];
        }
        for(; kk < this.N - 1; kk++){
            y = this.mt[kk] & this.UPPER_MASK | this.mt[kk + 1] & this.LOWER_MASK;
            this.mt[kk] = this.mt[kk + (this.M - this.N)] ^ y >>> 1 ^ mag01[y & 0x1];
        }
        y = this.mt[this.N - 1] & this.UPPER_MASK | this.mt[0] & this.LOWER_MASK;
        this.mt[this.N - 1] = this.mt[this.M - 1] ^ y >>> 1 ^ mag01[y & 0x1];
        this.mti = 0;
    }
    y = this.mt[this.mti++];
    /* Tempering */ y ^= y >>> 11;
    y ^= y << 7 & 0x9d2c5680;
    y ^= y << 15 & 0xefc60000;
    y ^= y >>> 18;
    return y >>> 0;
};
/* generates a random number on [0,0x7fffffff]-interval */ /* origin name genrand_int31 */ MersenneTwister.prototype.random_int31 = function() {
    return this.random_int() >>> 1;
};
/* generates a random number on [0,1]-real-interval */ /* origin name genrand_real1 */ MersenneTwister.prototype.random_incl = function() {
    return this.random_int() * (1.0 / 4294967295.0);
/* divided by 2^32-1 */ };
/* generates a random number on [0,1)-real-interval */ MersenneTwister.prototype.random = function() {
    return this.random_int() * (1.0 / 4294967296.0);
/* divided by 2^32 */ };
/* generates a random number on (0,1)-real-interval */ /* origin name genrand_real3 */ MersenneTwister.prototype.random_excl = function() {
    return (this.random_int() + 0.5) * (1.0 / 4294967296.0);
/* divided by 2^32 */ };
/* generates a random number on [0,1) with 53-bit resolution*/ /* origin name genrand_res53 */ MersenneTwister.prototype.random_long = function() {
    var a = this.random_int() >>> 5, b = this.random_int() >>> 6;
    return (a * 67108864.0 + b) * (1.0 / 9007199254740992.0);
};
/* These real versions are due to Isaku Wada, 2002/01/09 added */ module.exports = MersenneTwister;

},{}],"5M5gG":[function(require,module,exports) {
module.exports = require('./helpers/bundle-url').getBundleURL('5NaRA') + "logo1.fd73cc85.png" + "?" + Date.now();

},{"./helpers/bundle-url":"lgJ39"}],"1Wevq":[function(require,module,exports) {
var $parcel$ReactRefreshHelpers$2365 = require("@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
$parcel$ReactRefreshHelpers$2365.prelude(module);

try {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _react = require("react");
var _useGrapeFinance = require("./useGrapeFinance");
var _useGrapeFinanceDefault = parcelHelpers.interopDefault(_useGrapeFinance);
var _useRefresh = require("./useRefresh");
var _useRefreshDefault = parcelHelpers.interopDefault(_useRefresh);
const useBondStats = ()=>{
    const [stat, setStat] = _react.useState();
    const { slowRefresh  } = _useRefreshDefault.default();
    const grapeFinance = _useGrapeFinanceDefault.default();
    _react.useEffect(()=>{
        async function fetchBondPrice() {
            try {
                setStat(await grapeFinance.getBondStat());
            } catch (err) {
                console.error(err);
            }
        }
        fetchBondPrice();
    }, [
        setStat,
        grapeFinance,
        slowRefresh
    ]);
    return stat;
};
exports.default = useBondStats;

  $parcel$ReactRefreshHelpers$2365.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
},{"react":"21dqq","./useGrapeFinance":"i97FZ","./useRefresh":"kpz6f","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3","@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js":"km3Ru"}],"kpz6f":[function(require,module,exports) {
var $parcel$ReactRefreshHelpers$3d30 = require("@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
$parcel$ReactRefreshHelpers$3d30.prelude(module);

try {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _react = require("react");
var _refreshContext = require("../contexts/RefreshContext");
const useRefresh = ()=>{
    const { fast , slow  } = _react.useContext(_refreshContext.RefreshContext);
    return {
        fastRefresh: fast,
        slowRefresh: slow
    };
};
exports.default = useRefresh;

  $parcel$ReactRefreshHelpers$3d30.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
},{"react":"21dqq","../contexts/RefreshContext":"hEm4k","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3","@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js":"km3Ru"}],"9SfHf":[function(require,module,exports) {
var $parcel$ReactRefreshHelpers$9636 = require("@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
$parcel$ReactRefreshHelpers$9636.prelude(module);

try {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _react = require("react");
var _useGrapeFinance = require("./useGrapeFinance");
var _useGrapeFinanceDefault = parcelHelpers.interopDefault(_useGrapeFinance);
var _useRefresh = require("./useRefresh");
var _useRefreshDefault = parcelHelpers.interopDefault(_useRefresh);
const useGrapeStats = ()=>{
    const [stat, setStat] = _react.useState();
    const { fastRefresh  } = _useRefreshDefault.default();
    const grapeFinance = _useGrapeFinanceDefault.default();
    _react.useEffect(()=>{
        async function fetchGrapePrice() {
            try {
                setStat(await grapeFinance.getGrapeStat());
            } catch (err) {
                console.error(err);
            }
        }
        fetchGrapePrice();
    }, [
        setStat,
        grapeFinance,
        fastRefresh
    ]);
    return stat;
};
exports.default = useGrapeStats;

  $parcel$ReactRefreshHelpers$9636.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
},{"react":"21dqq","./useGrapeFinance":"i97FZ","./useRefresh":"kpz6f","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3","@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js":"km3Ru"}],"fs2OV":[function(require,module,exports) {
var $parcel$ReactRefreshHelpers$e404 = require("@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
$parcel$ReactRefreshHelpers$e404.prelude(module);

try {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _react = require("react");
var _useGrapeFinance = require("./useGrapeFinance");
var _useGrapeFinanceDefault = parcelHelpers.interopDefault(_useGrapeFinance);
var _config = require("../config");
var _configDefault = parcelHelpers.interopDefault(_config);
var _ethers = require("ethers");
const useCashPriceInLastTWAP = ()=>{
    const [price, setPrice] = _react.useState(_ethers.BigNumber.from(0));
    const grapeFinance = _useGrapeFinanceDefault.default();
    const fetchCashPrice = _react.useCallback(async ()=>{
        setPrice(await grapeFinance.getGrapePriceInLastTWAP());
    }, [
        grapeFinance
    ]);
    _react.useEffect(()=>{
        fetchCashPrice().catch((err)=>console.error(`Failed to fetch GRAPE price: ${err.stack}`)
        );
        const refreshInterval = setInterval(fetchCashPrice, _configDefault.default.refreshInterval);
        return ()=>clearInterval(refreshInterval)
        ;
    }, [
        setPrice,
        grapeFinance,
        fetchCashPrice
    ]);
    return price;
};
exports.default = useCashPriceInLastTWAP;

  $parcel$ReactRefreshHelpers$e404.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
},{"react":"21dqq","./useGrapeFinance":"i97FZ","../config":"gTux2","ethers":"hdHML","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3","@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js":"km3Ru"}],"998y6":[function(require,module,exports) {
var $parcel$ReactRefreshHelpers$b836 = require("@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
$parcel$ReactRefreshHelpers$b836.prelude(module);

try {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
// helper that can take a ethers library transaction response and add it to the list of transactions
parcelHelpers.export(exports, "useTransactionAdder", ()=>useTransactionAdder
);
// returns all the transactions for the current chain
parcelHelpers.export(exports, "useAllTransactions", ()=>useAllTransactions
);
parcelHelpers.export(exports, "useIsTransactionPending", ()=>useIsTransactionPending
);
/**
 * Returns whether a transaction happened in the last day (86400 seconds * 1000 milliseconds / second)
 * @param tx to check for recency
 */ parcelHelpers.export(exports, "isTransactionRecent", ()=>isTransactionRecent
);
// returns whether a token has a pending approval transaction
parcelHelpers.export(exports, "useHasPendingApproval", ()=>useHasPendingApproval
);
parcelHelpers.export(exports, "useClearAllTransactions", ()=>useClearAllTransactions
);
var _react = require("react");
var _reactRedux = require("react-redux");
var _useWallet = require("use-wallet");
var _actions = require("./actions");
var _s = $RefreshSig$(), _s1 = $RefreshSig$(), _s2 = $RefreshSig$(), _s3 = $RefreshSig$(), _s4 = $RefreshSig$();
function useTransactionAdder() {
    _s();
    const { chainId , account  } = _useWallet.useWallet();
    const dispatch = _reactRedux.useDispatch();
    return _react.useCallback((response, { summary , approval  } = {})=>{
        if (!account) return;
        if (!chainId) return;
        const { hash  } = response;
        if (!hash) throw Error('No transaction hash found.');
        dispatch(_actions.addTransaction({
            hash,
            from: account,
            chainId,
            approval,
            summary
        }));
    }, [
        dispatch,
        chainId,
        account
    ]);
}
_s(useTransactionAdder, "ae6W4h234qXwUS0H4PKY2UOGtI0=", false, function() {
    return [
        _useWallet.useWallet,
        _reactRedux.useDispatch
    ];
});
function useAllTransactions() {
    _s1();
    const { chainId  } = _useWallet.useWallet();
    const state1 = _reactRedux.useSelector((state)=>state.transactions
    );
    return chainId ? state1[chainId] ?? {} : {};
}
_s1(useAllTransactions, "BiBfLbU1A8Zd8cQ7/48l9e5FIp4=", false, function() {
    return [
        _useWallet.useWallet,
        _reactRedux.useSelector
    ];
});
function useIsTransactionPending(transactionHash) {
    _s2();
    const transactions = useAllTransactions();
    if (!transactionHash || !transactions[transactionHash]) return false;
    return !transactions[transactionHash].receipt;
}
_s2(useIsTransactionPending, "hqz1TRfIl9I1+vK9TqtScGR9Kdg=", false, function() {
    return [
        useAllTransactions
    ];
});
function isTransactionRecent(tx) {
    return new Date().getTime() - tx.addedTime < 86_400_000;
}
function useHasPendingApproval(tokenAddress, spender) {
    _s3();
    const allTransactions = useAllTransactions();
    return _react.useMemo(()=>typeof tokenAddress === 'string' && typeof spender === 'string' && Object.keys(allTransactions).some((hash)=>{
            const tx = allTransactions[hash];
            if (!tx) return false;
            if (tx.receipt) return false;
            else {
                const approval = tx.approval;
                if (!approval) return false;
                return approval.spender === spender && approval.tokenAddress === tokenAddress && isTransactionRecent(tx);
            }
        })
    , [
        allTransactions,
        spender,
        tokenAddress
    ]);
}
_s3(useHasPendingApproval, "VezVe/KwFqNDaRAkqywKb3KU5lg=", false, function() {
    return [
        useAllTransactions
    ];
});
function useClearAllTransactions() {
    _s4();
    const { chainId  } = _useWallet.useWallet();
    const dispatch = _reactRedux.useDispatch();
    return {
        clearAllTransactions: _react.useCallback(()=>dispatch(_actions.clearAllTransactions({
                chainId
            }))
        , [
            dispatch,
            chainId
        ])
    };
}
_s4(useClearAllTransactions, "XjvwHG9Ke1EDglz30hlKfDAH044=", false, function() {
    return [
        _useWallet.useWallet,
        _reactRedux.useDispatch
    ];
});

  $parcel$ReactRefreshHelpers$b836.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
},{"react":"21dqq","react-redux":"bdVon","use-wallet":"7RAr5","./actions":"l7CuG","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3","@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js":"km3Ru"}],"iwSdP":[function(require,module,exports) {
var $parcel$ReactRefreshHelpers$96cf = require("@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
$parcel$ReactRefreshHelpers$96cf.prelude(module);

try {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _react = require("react");
var _ethers = require("ethers");
var _useGrapeFinance = require("./useGrapeFinance");
var _useGrapeFinanceDefault = parcelHelpers.interopDefault(_useGrapeFinance);
const useBondsPurchasable = ()=>{
    const [balance, setBalance] = _react.useState(_ethers.BigNumber.from(0));
    const grapeFinance = _useGrapeFinanceDefault.default();
    _react.useEffect(()=>{
        async function fetchBondsPurchasable() {
            try {
                setBalance(await grapeFinance.getBondsPurchasable());
            } catch (err) {
                console.error(err);
            }
        }
        fetchBondsPurchasable();
    }, [
        setBalance,
        grapeFinance
    ]);
    return balance;
};
exports.default = useBondsPurchasable;

  $parcel$ReactRefreshHelpers$96cf.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
},{"react":"21dqq","ethers":"hdHML","./useGrapeFinance":"i97FZ","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3","@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js":"km3Ru"}],"8PMyA":[function(require,module,exports) {
module.exports = require('./helpers/bundle-url').getBundleURL('5NaRA') + "background.f232e87d.jpg" + "?" + Date.now();

},{"./helpers/bundle-url":"lgJ39"}]},["kn9T2","1A0F0"], null, "parcelRequiredb79")

//# sourceMappingURL=Roadmap.f0bac714.js.map
